//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace Gsafety.PTMS.ServiceReference.MessageService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompleteAlarm", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class CompleteAlarm : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime AlarmTimeField;
        
        private System.DateTime CompleteTimeField;
        
        private bool IsRealAlarmField;
        
        private string MdvrCoreIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AlarmTime {
            get {
                return this.AlarmTimeField;
            }
            set {
                if ((this.AlarmTimeField.Equals(value) != true)) {
                    this.AlarmTimeField = value;
                    this.RaisePropertyChanged("AlarmTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CompleteTime {
            get {
                return this.CompleteTimeField;
            }
            set {
                if ((this.CompleteTimeField.Equals(value) != true)) {
                    this.CompleteTimeField = value;
                    this.RaisePropertyChanged("CompleteTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRealAlarm {
            get {
                return this.IsRealAlarmField;
            }
            set {
                if ((this.IsRealAlarmField.Equals(value) != true)) {
                    this.IsRealAlarmField = value;
                    this.RaisePropertyChanged("IsRealAlarm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrCoreId {
            get {
                return this.MdvrCoreIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrCoreIdField, value) != true)) {
                    this.MdvrCoreIdField = value;
                    this.RaisePropertyChanged("MdvrCoreId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChangeGroupVehicle", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class ChangeGroupVehicle : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CreateUserField;
        
        private string MdvrCoreIdField;
        
        private string TargetGroupIdField;
        
        private string VehicleIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreateUser {
            get {
                return this.CreateUserField;
            }
            set {
                if ((object.ReferenceEquals(this.CreateUserField, value) != true)) {
                    this.CreateUserField = value;
                    this.RaisePropertyChanged("CreateUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrCoreId {
            get {
                return this.MdvrCoreIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrCoreIdField, value) != true)) {
                    this.MdvrCoreIdField = value;
                    this.RaisePropertyChanged("MdvrCoreId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TargetGroupId {
            get {
                return this.TargetGroupIdField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetGroupIdField, value) != true)) {
                    this.TargetGroupIdField = value;
                    this.RaisePropertyChanged("TargetGroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleId {
            get {
                return this.VehicleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleIdField, value) != true)) {
                    this.VehicleIdField = value;
                    this.RaisePropertyChanged("VehicleId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChangeGroup", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class ChangeGroup : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CreatUserField;
        
        private System.Collections.ObjectModel.ObservableCollection<string> GroupIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatUser {
            get {
                return this.CreatUserField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatUserField, value) != true)) {
                    this.CreatUserField = value;
                    this.RaisePropertyChanged("CreatUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> GroupId {
            get {
                return this.GroupIdField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupIdField, value) != true)) {
                    this.GroupIdField = value;
                    this.RaisePropertyChanged("GroupId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceInstall", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class DeviceInstall : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime InstallCompleteTimeField;
        
        private string MdvrCoreIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InstallCompleteTime {
            get {
                return this.InstallCompleteTimeField;
            }
            set {
                if ((this.InstallCompleteTimeField.Equals(value) != true)) {
                    this.InstallCompleteTimeField = value;
                    this.RaisePropertyChanged("InstallCompleteTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrCoreId {
            get {
                return this.MdvrCoreIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrCoreIdField, value) != true)) {
                    this.MdvrCoreIdField = value;
                    this.RaisePropertyChanged("MdvrCoreId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceMaintain", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class DeviceMaintain : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime MaintainTimeField;
        
        private string MdvrCoreIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime MaintainTime {
            get {
                return this.MaintainTimeField;
            }
            set {
                if ((this.MaintainTimeField.Equals(value) != true)) {
                    this.MaintainTimeField = value;
                    this.RaisePropertyChanged("MaintainTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrCoreId {
            get {
                return this.MdvrCoreIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrCoreIdField, value) != true)) {
                    this.MdvrCoreIdField = value;
                    this.RaisePropertyChanged("MdvrCoreId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HandingAlert", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class HandingAlert : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime AlertTimeField;
        
        private string MdvrCoreIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AlertTime {
            get {
                return this.AlertTimeField;
            }
            set {
                if ((this.AlertTimeField.Equals(value) != true)) {
                    this.AlertTimeField = value;
                    this.RaisePropertyChanged("AlertTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrCoreId {
            get {
                return this.MdvrCoreIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrCoreIdField, value) != true)) {
                    this.MdvrCoreIdField = value;
                    this.RaisePropertyChanged("MdvrCoreId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompleteAlert", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class CompleteAlert : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime AlertTimeField;
        
        private int AlertTypeField;
        
        private System.DateTime CompleteTimeField;
        
        private string MdvrCoreIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AlertTime {
            get {
                return this.AlertTimeField;
            }
            set {
                if ((this.AlertTimeField.Equals(value) != true)) {
                    this.AlertTimeField = value;
                    this.RaisePropertyChanged("AlertTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlertType {
            get {
                return this.AlertTypeField;
            }
            set {
                if ((this.AlertTypeField.Equals(value) != true)) {
                    this.AlertTypeField = value;
                    this.RaisePropertyChanged("AlertType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CompleteTime {
            get {
                return this.CompleteTimeField;
            }
            set {
                if ((this.CompleteTimeField.Equals(value) != true)) {
                    this.CompleteTimeField = value;
                    this.RaisePropertyChanged("CompleteTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrCoreId {
            get {
                return this.MdvrCoreIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrCoreIdField, value) != true)) {
                    this.MdvrCoreIdField = value;
                    this.RaisePropertyChanged("MdvrCoreId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StartInstall", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class StartInstall : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string MdvrCoreIdField;
        
        private System.DateTime StartInstallTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrCoreId {
            get {
                return this.MdvrCoreIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrCoreIdField, value) != true)) {
                    this.MdvrCoreIdField = value;
                    this.RaisePropertyChanged("MdvrCoreId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartInstallTime {
            get {
                return this.StartInstallTimeField;
            }
            set {
                if ((this.StartInstallTimeField.Equals(value) != true)) {
                    this.StartInstallTimeField = value;
                    this.RaisePropertyChanged("StartInstallTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeleteInstall", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class DeleteInstall : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime DeleteInstallTimeField;
        
        private string MdvrCoreIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DeleteInstallTime {
            get {
                return this.DeleteInstallTimeField;
            }
            set {
                if ((this.DeleteInstallTimeField.Equals(value) != true)) {
                    this.DeleteInstallTimeField = value;
                    this.RaisePropertyChanged("DeleteInstallTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrCoreId {
            get {
                return this.MdvrCoreIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrCoreIdField, value) != true)) {
                    this.MdvrCoreIdField = value;
                    this.RaisePropertyChanged("MdvrCoreId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeleteUser", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class DeleteUser : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime DeleteTimeField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DeleteTime {
            get {
                return this.DeleteTimeField;
            }
            set {
                if ((this.DeleteTimeField.Equals(value) != true)) {
                    this.DeleteTimeField = value;
                    this.RaisePropertyChanged("DeleteTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChangeUser", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class ChangeUser : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime ChangeTimeField;
        
        private int TypeField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ChangeTime {
            get {
                return this.ChangeTimeField;
            }
            set {
                if ((this.ChangeTimeField.Equals(value) != true)) {
                    this.ChangeTimeField = value;
                    this.RaisePropertyChanged("ChangeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DownwardBase", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.UpgradeCMD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.ElectricFenceCMD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.SettingGpsSendUpCMD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.UpgradeStatusCMD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.SettingOverSpeedCMD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.SettingAbnormalDoorCMD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.SettingTemperatureCMD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.SettingDelayAlarmCMD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.SettingOneKeyAlarmCMD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.SendInfomationCMD))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.RouteCMD))]
    public partial class DownwardBase : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CmTypeField;
        
        private string DvIdField;
        
        private System.DateTime GpsTimeField;
        
        private string MsgIdField;
        
        private string RuleNameField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CmType {
            get {
                return this.CmTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CmTypeField, value) != true)) {
                    this.CmTypeField = value;
                    this.RaisePropertyChanged("CmType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DvId {
            get {
                return this.DvIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DvIdField, value) != true)) {
                    this.DvIdField = value;
                    this.RaisePropertyChanged("DvId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime GpsTime {
            get {
                return this.GpsTimeField;
            }
            set {
                if ((this.GpsTimeField.Equals(value) != true)) {
                    this.GpsTimeField = value;
                    this.RaisePropertyChanged("GpsTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MsgId {
            get {
                return this.MsgIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MsgIdField, value) != true)) {
                    this.MsgIdField = value;
                    this.RaisePropertyChanged("MsgId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RuleName {
            get {
                return this.RuleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RuleNameField, value) != true)) {
                    this.RuleNameField = value;
                    this.RaisePropertyChanged("RuleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpgradeCMD", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class UpgradeCMD : Gsafety.PTMS.ServiceReference.MessageService.DownwardBase {
        
        private string ContextField;
        
        private int DataPacketCountField;
        
        private string FTPAddressField;
        
        private string FileNameField;
        
        private string MD5CodeField;
        
        private string OperatorField;
        
        private string PasswordField;
        
        private string PortField;
        
        private System.DateTime SendTimeField;
        
        private string SuiteUpgradeRecordIdField;
        
        private string UUIdField;
        
        private string UserName1Field;
        
        private string VersionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Context {
            get {
                return this.ContextField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextField, value) != true)) {
                    this.ContextField = value;
                    this.RaisePropertyChanged("Context");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DataPacketCount {
            get {
                return this.DataPacketCountField;
            }
            set {
                if ((this.DataPacketCountField.Equals(value) != true)) {
                    this.DataPacketCountField = value;
                    this.RaisePropertyChanged("DataPacketCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FTPAddress {
            get {
                return this.FTPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.FTPAddressField, value) != true)) {
                    this.FTPAddressField = value;
                    this.RaisePropertyChanged("FTPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MD5Code {
            get {
                return this.MD5CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.MD5CodeField, value) != true)) {
                    this.MD5CodeField = value;
                    this.RaisePropertyChanged("MD5Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operator {
            get {
                return this.OperatorField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorField, value) != true)) {
                    this.OperatorField = value;
                    this.RaisePropertyChanged("Operator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Port {
            get {
                return this.PortField;
            }
            set {
                if ((object.ReferenceEquals(this.PortField, value) != true)) {
                    this.PortField = value;
                    this.RaisePropertyChanged("Port");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SendTime {
            get {
                return this.SendTimeField;
            }
            set {
                if ((this.SendTimeField.Equals(value) != true)) {
                    this.SendTimeField = value;
                    this.RaisePropertyChanged("SendTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuiteUpgradeRecordId {
            get {
                return this.SuiteUpgradeRecordIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SuiteUpgradeRecordIdField, value) != true)) {
                    this.SuiteUpgradeRecordIdField = value;
                    this.RaisePropertyChanged("SuiteUpgradeRecordId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UUId {
            get {
                return this.UUIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UUIdField, value) != true)) {
                    this.UUIdField = value;
                    this.RaisePropertyChanged("UUId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="UserName")]
        public string UserName1 {
            get {
                return this.UserName1Field;
            }
            set {
                if ((object.ReferenceEquals(this.UserName1Field, value) != true)) {
                    this.UserName1Field = value;
                    this.RaisePropertyChanged("UserName1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectricFenceCMD", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class ElectricFenceCMD : Gsafety.PTMS.ServiceReference.MessageService.DownwardBase {
        
        private int ActionField;
        
        private Gsafety.PTMS.ServiceReference.MessageService.AreaType AreaTypeField;
        
        private string ContextField;
        
        private string FenceField;
        
        private int FenceIdField;
        
        private string FenceNameField;
        
        private int OperTypeField;
        
        private int PacketIDField;
        
        private int PacketSeqField;
        
        private int PacketTotalField;
        
        private System.DateTime SendTimeField;
        
        private string SpeedField;
        
        private string ValidTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Action {
            get {
                return this.ActionField;
            }
            set {
                if ((this.ActionField.Equals(value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.MessageService.AreaType AreaType {
            get {
                return this.AreaTypeField;
            }
            set {
                if ((this.AreaTypeField.Equals(value) != true)) {
                    this.AreaTypeField = value;
                    this.RaisePropertyChanged("AreaType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Context {
            get {
                return this.ContextField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextField, value) != true)) {
                    this.ContextField = value;
                    this.RaisePropertyChanged("Context");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fence {
            get {
                return this.FenceField;
            }
            set {
                if ((object.ReferenceEquals(this.FenceField, value) != true)) {
                    this.FenceField = value;
                    this.RaisePropertyChanged("Fence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FenceId {
            get {
                return this.FenceIdField;
            }
            set {
                if ((this.FenceIdField.Equals(value) != true)) {
                    this.FenceIdField = value;
                    this.RaisePropertyChanged("FenceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FenceName {
            get {
                return this.FenceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FenceNameField, value) != true)) {
                    this.FenceNameField = value;
                    this.RaisePropertyChanged("FenceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OperType {
            get {
                return this.OperTypeField;
            }
            set {
                if ((this.OperTypeField.Equals(value) != true)) {
                    this.OperTypeField = value;
                    this.RaisePropertyChanged("OperType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PacketID {
            get {
                return this.PacketIDField;
            }
            set {
                if ((this.PacketIDField.Equals(value) != true)) {
                    this.PacketIDField = value;
                    this.RaisePropertyChanged("PacketID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PacketSeq {
            get {
                return this.PacketSeqField;
            }
            set {
                if ((this.PacketSeqField.Equals(value) != true)) {
                    this.PacketSeqField = value;
                    this.RaisePropertyChanged("PacketSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PacketTotal {
            get {
                return this.PacketTotalField;
            }
            set {
                if ((this.PacketTotalField.Equals(value) != true)) {
                    this.PacketTotalField = value;
                    this.RaisePropertyChanged("PacketTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SendTime {
            get {
                return this.SendTimeField;
            }
            set {
                if ((this.SendTimeField.Equals(value) != true)) {
                    this.SendTimeField = value;
                    this.RaisePropertyChanged("SendTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((object.ReferenceEquals(this.SpeedField, value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidTime {
            get {
                return this.ValidTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidTimeField, value) != true)) {
                    this.ValidTimeField = value;
                    this.RaisePropertyChanged("ValidTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SettingGpsSendUpCMD", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class SettingGpsSendUpCMD : Gsafety.PTMS.ServiceReference.MessageService.DownwardBase {
        
        private System.Nullable<int> DistanceValueField;
        
        private int IsUsingField;
        
        private System.Nullable<int> SendNumField;
        
        private System.DateTime SendTimeField;
        
        private Gsafety.PTMS.ServiceReference.MessageService.GpsSendType SendTypeField;
        
        private System.Nullable<int> TimeValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DistanceValue {
            get {
                return this.DistanceValueField;
            }
            set {
                if ((this.DistanceValueField.Equals(value) != true)) {
                    this.DistanceValueField = value;
                    this.RaisePropertyChanged("DistanceValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsUsing {
            get {
                return this.IsUsingField;
            }
            set {
                if ((this.IsUsingField.Equals(value) != true)) {
                    this.IsUsingField = value;
                    this.RaisePropertyChanged("IsUsing");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SendNum {
            get {
                return this.SendNumField;
            }
            set {
                if ((this.SendNumField.Equals(value) != true)) {
                    this.SendNumField = value;
                    this.RaisePropertyChanged("SendNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SendTime {
            get {
                return this.SendTimeField;
            }
            set {
                if ((this.SendTimeField.Equals(value) != true)) {
                    this.SendTimeField = value;
                    this.RaisePropertyChanged("SendTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.MessageService.GpsSendType SendType {
            get {
                return this.SendTypeField;
            }
            set {
                if ((this.SendTypeField.Equals(value) != true)) {
                    this.SendTypeField = value;
                    this.RaisePropertyChanged("SendType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TimeValue {
            get {
                return this.TimeValueField;
            }
            set {
                if ((this.TimeValueField.Equals(value) != true)) {
                    this.TimeValueField = value;
                    this.RaisePropertyChanged("TimeValue");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpgradeStatusCMD", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class UpgradeStatusCMD : Gsafety.PTMS.ServiceReference.MessageService.DownwardBase {
        
        private System.DateTime SendTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SendTime {
            get {
                return this.SendTimeField;
            }
            set {
                if ((this.SendTimeField.Equals(value) != true)) {
                    this.SendTimeField = value;
                    this.RaisePropertyChanged("SendTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SettingOverSpeedCMD", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class SettingOverSpeedCMD : Gsafety.PTMS.ServiceReference.MessageService.DownwardBase {
        
        private string DurationField;
        
        private string MaxSpeedField;
        
        private string MinSpeedField;
        
        private int OperTypeField;
        
        private string OverSpeedIDField;
        
        private System.DateTime SendTimeField;
        
        private string ValidTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationField, value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaxSpeed {
            get {
                return this.MaxSpeedField;
            }
            set {
                if ((object.ReferenceEquals(this.MaxSpeedField, value) != true)) {
                    this.MaxSpeedField = value;
                    this.RaisePropertyChanged("MaxSpeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MinSpeed {
            get {
                return this.MinSpeedField;
            }
            set {
                if ((object.ReferenceEquals(this.MinSpeedField, value) != true)) {
                    this.MinSpeedField = value;
                    this.RaisePropertyChanged("MinSpeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OperType {
            get {
                return this.OperTypeField;
            }
            set {
                if ((this.OperTypeField.Equals(value) != true)) {
                    this.OperTypeField = value;
                    this.RaisePropertyChanged("OperType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OverSpeedID {
            get {
                return this.OverSpeedIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OverSpeedIDField, value) != true)) {
                    this.OverSpeedIDField = value;
                    this.RaisePropertyChanged("OverSpeedID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SendTime {
            get {
                return this.SendTimeField;
            }
            set {
                if ((this.SendTimeField.Equals(value) != true)) {
                    this.SendTimeField = value;
                    this.RaisePropertyChanged("SendTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidTime {
            get {
                return this.ValidTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidTimeField, value) != true)) {
                    this.ValidTimeField = value;
                    this.RaisePropertyChanged("ValidTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SettingAbnormalDoorCMD", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class SettingAbnormalDoorCMD : Gsafety.PTMS.ServiceReference.MessageService.DownwardBase {
        
        private System.DateTime SendTimeField;
        
        private string SendValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SendTime {
            get {
                return this.SendTimeField;
            }
            set {
                if ((this.SendTimeField.Equals(value) != true)) {
                    this.SendTimeField = value;
                    this.RaisePropertyChanged("SendTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SendValue {
            get {
                return this.SendValueField;
            }
            set {
                if ((object.ReferenceEquals(this.SendValueField, value) != true)) {
                    this.SendValueField = value;
                    this.RaisePropertyChanged("SendValue");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SettingTemperatureCMD", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class SettingTemperatureCMD : Gsafety.PTMS.ServiceReference.MessageService.DownwardBase {
        
        private System.Nullable<decimal> MaxValueField;
        
        private System.Nullable<decimal> MinValueField;
        
        private System.Nullable<decimal> SecondField;
        
        private System.DateTime SendTimeField;
        
        private Gsafety.PTMS.ServiceReference.MessageService.TemperatureMarkType SendTypeField;
        
        private System.Nullable<int> TemperatureTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MaxValue {
            get {
                return this.MaxValueField;
            }
            set {
                if ((this.MaxValueField.Equals(value) != true)) {
                    this.MaxValueField = value;
                    this.RaisePropertyChanged("MaxValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> MinValue {
            get {
                return this.MinValueField;
            }
            set {
                if ((this.MinValueField.Equals(value) != true)) {
                    this.MinValueField = value;
                    this.RaisePropertyChanged("MinValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Second {
            get {
                return this.SecondField;
            }
            set {
                if ((this.SecondField.Equals(value) != true)) {
                    this.SecondField = value;
                    this.RaisePropertyChanged("Second");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SendTime {
            get {
                return this.SendTimeField;
            }
            set {
                if ((this.SendTimeField.Equals(value) != true)) {
                    this.SendTimeField = value;
                    this.RaisePropertyChanged("SendTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.MessageService.TemperatureMarkType SendType {
            get {
                return this.SendTypeField;
            }
            set {
                if ((this.SendTypeField.Equals(value) != true)) {
                    this.SendTypeField = value;
                    this.RaisePropertyChanged("SendType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TemperatureType {
            get {
                return this.TemperatureTypeField;
            }
            set {
                if ((this.TemperatureTypeField.Equals(value) != true)) {
                    this.TemperatureTypeField = value;
                    this.RaisePropertyChanged("TemperatureType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SettingDelayAlarmCMD", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class SettingDelayAlarmCMD : Gsafety.PTMS.ServiceReference.MessageService.DownwardBase {
        
        private int OneKeyDelayTimeField;
        
        private int OverSpeedTimeField;
        
        private string RuleIDField;
        
        private System.DateTime SendTimeField;
        
        private int SendValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OneKeyDelayTime {
            get {
                return this.OneKeyDelayTimeField;
            }
            set {
                if ((this.OneKeyDelayTimeField.Equals(value) != true)) {
                    this.OneKeyDelayTimeField = value;
                    this.RaisePropertyChanged("OneKeyDelayTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OverSpeedTime {
            get {
                return this.OverSpeedTimeField;
            }
            set {
                if ((this.OverSpeedTimeField.Equals(value) != true)) {
                    this.OverSpeedTimeField = value;
                    this.RaisePropertyChanged("OverSpeedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RuleID {
            get {
                return this.RuleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RuleIDField, value) != true)) {
                    this.RuleIDField = value;
                    this.RaisePropertyChanged("RuleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SendTime {
            get {
                return this.SendTimeField;
            }
            set {
                if ((this.SendTimeField.Equals(value) != true)) {
                    this.SendTimeField = value;
                    this.RaisePropertyChanged("SendTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SendValue {
            get {
                return this.SendValueField;
            }
            set {
                if ((this.SendValueField.Equals(value) != true)) {
                    this.SendValueField = value;
                    this.RaisePropertyChanged("SendValue");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SettingOneKeyAlarmCMD", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class SettingOneKeyAlarmCMD : Gsafety.PTMS.ServiceReference.MessageService.DownwardBase {
        
        private System.DateTime SendTimeField;
        
        private int SendValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SendTime {
            get {
                return this.SendTimeField;
            }
            set {
                if ((this.SendTimeField.Equals(value) != true)) {
                    this.SendTimeField = value;
                    this.RaisePropertyChanged("SendTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SendValue {
            get {
                return this.SendValueField;
            }
            set {
                if ((this.SendValueField.Equals(value) != true)) {
                    this.SendValueField = value;
                    this.RaisePropertyChanged("SendValue");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SendInfomationCMD", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data.Comman" +
        "dManage")]
    public partial class SendInfomationCMD : Gsafety.PTMS.ServiceReference.MessageService.DownwardBase {
        
        private Gsafety.PTMS.ServiceReference.MessageService.SendInfomationType DispatchTypeField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.DisplayPositionType> DisplayPositionField;
        
        private int DisplayTimeField;
        
        private bool ManualControlField;
        
        private string SendContentField;
        
        private System.DateTime SendTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.MessageService.SendInfomationType DispatchType {
            get {
                return this.DispatchTypeField;
            }
            set {
                if ((this.DispatchTypeField.Equals(value) != true)) {
                    this.DispatchTypeField = value;
                    this.RaisePropertyChanged("DispatchType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.DisplayPositionType> DisplayPosition {
            get {
                return this.DisplayPositionField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayPositionField, value) != true)) {
                    this.DisplayPositionField = value;
                    this.RaisePropertyChanged("DisplayPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DisplayTime {
            get {
                return this.DisplayTimeField;
            }
            set {
                if ((this.DisplayTimeField.Equals(value) != true)) {
                    this.DisplayTimeField = value;
                    this.RaisePropertyChanged("DisplayTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ManualControl {
            get {
                return this.ManualControlField;
            }
            set {
                if ((this.ManualControlField.Equals(value) != true)) {
                    this.ManualControlField = value;
                    this.RaisePropertyChanged("ManualControl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SendContent {
            get {
                return this.SendContentField;
            }
            set {
                if ((object.ReferenceEquals(this.SendContentField, value) != true)) {
                    this.SendContentField = value;
                    this.RaisePropertyChanged("SendContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SendTime {
            get {
                return this.SendTimeField;
            }
            set {
                if ((this.SendTimeField.Equals(value) != true)) {
                    this.SendTimeField = value;
                    this.RaisePropertyChanged("SendTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RouteCMD", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class RouteCMD : Gsafety.PTMS.ServiceReference.MessageService.DownwardBase {
        
        private string MdvrCoreIdField;
        
        private int OperTypeField;
        
        private string RouteField;
        
        private string RouteIdField;
        
        private string RouteNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrCoreId {
            get {
                return this.MdvrCoreIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrCoreIdField, value) != true)) {
                    this.MdvrCoreIdField = value;
                    this.RaisePropertyChanged("MdvrCoreId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OperType {
            get {
                return this.OperTypeField;
            }
            set {
                if ((this.OperTypeField.Equals(value) != true)) {
                    this.OperTypeField = value;
                    this.RaisePropertyChanged("OperType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Route {
            get {
                return this.RouteField;
            }
            set {
                if ((object.ReferenceEquals(this.RouteField, value) != true)) {
                    this.RouteField = value;
                    this.RaisePropertyChanged("Route");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RouteId {
            get {
                return this.RouteIdField;
            }
            set {
                if ((object.ReferenceEquals(this.RouteIdField, value) != true)) {
                    this.RouteIdField = value;
                    this.RaisePropertyChanged("RouteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RouteName {
            get {
                return this.RouteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RouteNameField, value) != true)) {
                    this.RouteNameField = value;
                    this.RaisePropertyChanged("RouteName");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AreaType", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public enum AreaType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoType = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ElectronicFence = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MonitoringPoint = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GpsSendType", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public enum GpsSendType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Distance = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Time = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DistanceAndTime = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TemperatureMarkType", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public enum TemperatureMarkType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Forbid = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AfterSendUp = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Original = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SendInfomationType", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data.Comman" +
        "dManage")]
    public enum SendInfomationType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Car = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Alert = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DisplayPositionType", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data.Comman" +
        "dManage")]
    public enum DisplayPositionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DriverScreen = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CarFrontLED = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CarInnerLED = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CarInnerScreen = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CarOuterPlate = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CarBroadside = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CarAfterbody = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TravelPlanCMD", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class TravelPlanCMD : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime BeginDateField;
        
        private System.DateTime EndDateField;
        
        private int OperTypeField;
        
        private short RadiusField;
        
        private string RaptorIMEIField;
        
        private string ScheduleIDField;
        
        private short ToleranceField;
        
        private string VechileIDField;
        
        private string WeekDayField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BeginDate {
            get {
                return this.BeginDateField;
            }
            set {
                if ((this.BeginDateField.Equals(value) != true)) {
                    this.BeginDateField = value;
                    this.RaisePropertyChanged("BeginDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OperType {
            get {
                return this.OperTypeField;
            }
            set {
                if ((this.OperTypeField.Equals(value) != true)) {
                    this.OperTypeField = value;
                    this.RaisePropertyChanged("OperType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Radius {
            get {
                return this.RadiusField;
            }
            set {
                if ((this.RadiusField.Equals(value) != true)) {
                    this.RadiusField = value;
                    this.RaisePropertyChanged("Radius");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RaptorIMEI {
            get {
                return this.RaptorIMEIField;
            }
            set {
                if ((object.ReferenceEquals(this.RaptorIMEIField, value) != true)) {
                    this.RaptorIMEIField = value;
                    this.RaisePropertyChanged("RaptorIMEI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScheduleID {
            get {
                return this.ScheduleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ScheduleIDField, value) != true)) {
                    this.ScheduleIDField = value;
                    this.RaisePropertyChanged("ScheduleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Tolerance {
            get {
                return this.ToleranceField;
            }
            set {
                if ((this.ToleranceField.Equals(value) != true)) {
                    this.ToleranceField = value;
                    this.RaisePropertyChanged("Tolerance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VechileID {
            get {
                return this.VechileIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VechileIDField, value) != true)) {
                    this.VechileIDField = value;
                    this.RaisePropertyChanged("VechileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WeekDay {
            get {
                return this.WeekDayField;
            }
            set {
                if ((object.ReferenceEquals(this.WeekDayField, value) != true)) {
                    this.WeekDayField = value;
                    this.RaisePropertyChanged("WeekDay");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UpgradeNotify", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class UpgradeNotify : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime NotifyTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime NotifyTime {
            get {
                return this.NotifyTimeField;
            }
            set {
                if ((this.NotifyTimeField.Equals(value) != true)) {
                    this.NotifyTimeField = value;
                    this.RaisePropertyChanged("NotifyTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationMonitorCMD", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class LocationMonitorCMD : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string MDVRCoreSNField;
        
        private string SessionIDField;
        
        private string VechileIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MDVRCoreSN {
            get {
                return this.MDVRCoreSNField;
            }
            set {
                if ((object.ReferenceEquals(this.MDVRCoreSNField, value) != true)) {
                    this.MDVRCoreSNField = value;
                    this.RaisePropertyChanged("MDVRCoreSN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionID {
            get {
                return this.SessionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIDField, value) != true)) {
                    this.SessionIDField = value;
                    this.RaisePropertyChanged("SessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VechileID {
            get {
                return this.VechileIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VechileIDField, value) != true)) {
                    this.VechileIDField = value;
                    this.RaisePropertyChanged("VechileID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CancelLocationMonitorCMD", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class CancelLocationMonitorCMD : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string MDVRCoreSNField;
        
        private string SessionIDField;
        
        private string VechileIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MDVRCoreSN {
            get {
                return this.MDVRCoreSNField;
            }
            set {
                if ((object.ReferenceEquals(this.MDVRCoreSNField, value) != true)) {
                    this.MDVRCoreSNField = value;
                    this.RaisePropertyChanged("MDVRCoreSN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionID {
            get {
                return this.SessionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIDField, value) != true)) {
                    this.SessionIDField = value;
                    this.RaisePropertyChanged("SessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VechileID {
            get {
                return this.VechileIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VechileIDField, value) != true)) {
                    this.VechileIDField = value;
                    this.RaisePropertyChanged("VechileID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseSettingModel", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.GpsSendUpModel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.OverSpeedSendSettingModel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.AbnormalDoorSendUpModel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.TemperatureSendUpModel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.OneKeyAlarmSendUpModel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.SendInfomationModel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.ElectircFenceSendSettingModel))]
    public partial class BaseSettingModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Gsafety.PTMS.ServiceReference.MessageService.RuleOperationType OperationTypeField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.SelectInfoModel> ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.MessageService.RuleOperationType OperationType {
            get {
                return this.OperationTypeField;
            }
            set {
                if ((this.OperationTypeField.Equals(value) != true)) {
                    this.OperationTypeField = value;
                    this.RaisePropertyChanged("OperationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.SelectInfoModel> Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GpsSendUpModel", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class GpsSendUpModel : Gsafety.PTMS.ServiceReference.MessageService.BaseSettingModel {
        
        private Gsafety.PTMS.ServiceReference.MessageService.SettingGpsSendUpCMD SettingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.MessageService.SettingGpsSendUpCMD Setting {
            get {
                return this.SettingField;
            }
            set {
                if ((object.ReferenceEquals(this.SettingField, value) != true)) {
                    this.SettingField = value;
                    this.RaisePropertyChanged("Setting");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OverSpeedSendSettingModel", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class OverSpeedSendSettingModel : Gsafety.PTMS.ServiceReference.MessageService.BaseSettingModel {
        
        private Gsafety.PTMS.ServiceReference.MessageService.SettingOverSpeedCMD SettingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.MessageService.SettingOverSpeedCMD Setting {
            get {
                return this.SettingField;
            }
            set {
                if ((object.ReferenceEquals(this.SettingField, value) != true)) {
                    this.SettingField = value;
                    this.RaisePropertyChanged("Setting");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AbnormalDoorSendUpModel", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class AbnormalDoorSendUpModel : Gsafety.PTMS.ServiceReference.MessageService.BaseSettingModel {
        
        private Gsafety.PTMS.ServiceReference.MessageService.SettingAbnormalDoorCMD SettingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.MessageService.SettingAbnormalDoorCMD Setting {
            get {
                return this.SettingField;
            }
            set {
                if ((object.ReferenceEquals(this.SettingField, value) != true)) {
                    this.SettingField = value;
                    this.RaisePropertyChanged("Setting");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TemperatureSendUpModel", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class TemperatureSendUpModel : Gsafety.PTMS.ServiceReference.MessageService.BaseSettingModel {
        
        private Gsafety.PTMS.ServiceReference.MessageService.SettingTemperatureCMD SettingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.MessageService.SettingTemperatureCMD Setting {
            get {
                return this.SettingField;
            }
            set {
                if ((object.ReferenceEquals(this.SettingField, value) != true)) {
                    this.SettingField = value;
                    this.RaisePropertyChanged("Setting");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OneKeyAlarmSendUpModel", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class OneKeyAlarmSendUpModel : Gsafety.PTMS.ServiceReference.MessageService.BaseSettingModel {
        
        private Gsafety.PTMS.ServiceReference.MessageService.SettingDelayAlarmCMD DelayAlarmSettingField;
        
        private Gsafety.PTMS.ServiceReference.MessageService.SettingOneKeyAlarmCMD SettingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.MessageService.SettingDelayAlarmCMD DelayAlarmSetting {
            get {
                return this.DelayAlarmSettingField;
            }
            set {
                if ((object.ReferenceEquals(this.DelayAlarmSettingField, value) != true)) {
                    this.DelayAlarmSettingField = value;
                    this.RaisePropertyChanged("DelayAlarmSetting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.MessageService.SettingOneKeyAlarmCMD Setting {
            get {
                return this.SettingField;
            }
            set {
                if ((object.ReferenceEquals(this.SettingField, value) != true)) {
                    this.SettingField = value;
                    this.RaisePropertyChanged("Setting");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SendInfomationModel", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class SendInfomationModel : Gsafety.PTMS.ServiceReference.MessageService.BaseSettingModel {
        
        private Gsafety.PTMS.ServiceReference.MessageService.SendInfomationCMD SettingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.MessageService.SendInfomationCMD Setting {
            get {
                return this.SettingField;
            }
            set {
                if ((object.ReferenceEquals(this.SettingField, value) != true)) {
                    this.SettingField = value;
                    this.RaisePropertyChanged("Setting");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectircFenceSendSettingModel", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class ElectircFenceSendSettingModel : Gsafety.PTMS.ServiceReference.MessageService.BaseSettingModel {
        
        private Gsafety.PTMS.ServiceReference.MessageService.ElectricFenceOperType ElectricFenceOperationField;
        
        private Gsafety.PTMS.ServiceReference.MessageService.ElectricFenceCMD SettingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.MessageService.ElectricFenceOperType ElectricFenceOperation {
            get {
                return this.ElectricFenceOperationField;
            }
            set {
                if ((this.ElectricFenceOperationField.Equals(value) != true)) {
                    this.ElectricFenceOperationField = value;
                    this.RaisePropertyChanged("ElectricFenceOperation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.MessageService.ElectricFenceCMD Setting {
            get {
                return this.SettingField;
            }
            set {
                if ((object.ReferenceEquals(this.SettingField, value) != true)) {
                    this.SettingField = value;
                    this.RaisePropertyChanged("Setting");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RuleOperationType", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public enum RuleOperationType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Add = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Delete = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Update = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelectInfoModel", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class SelectInfoModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CodeField;
        
        private string GroupIDField;
        
        private Gsafety.PTMS.ServiceReference.MessageService.SettingType TypeField;
        
        private System.Collections.ObjectModel.ObservableCollection<int> VehicleTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupIDField, value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.MessageService.SettingType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<int> VehicleType {
            get {
                return this.VehicleTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleTypeField, value) != true)) {
                    this.VehicleTypeField = value;
                    this.RaisePropertyChanged("VehicleType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectricFenceOperType", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public enum ElectricFenceOperType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Add = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Modify = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Delete = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SettingType", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public enum SettingType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProvinceCode = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CityCode = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CountryWide = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VehicleType = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Vehicle = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Group = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FenceID = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueryMdvrFileList", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data.Video")]
    public partial class QueryMdvrFileList : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<int> ChannelField;
        
        private System.DateTime End_TimeField;
        
        private string Mdvr_IdField;
        
        private System.DateTime Start_TimeField;
        
        private int Video_TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<int> Channel {
            get {
                return this.ChannelField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelField, value) != true)) {
                    this.ChannelField = value;
                    this.RaisePropertyChanged("Channel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime End_Time {
            get {
                return this.End_TimeField;
            }
            set {
                if ((this.End_TimeField.Equals(value) != true)) {
                    this.End_TimeField = value;
                    this.RaisePropertyChanged("End_Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mdvr_Id {
            get {
                return this.Mdvr_IdField;
            }
            set {
                if ((object.ReferenceEquals(this.Mdvr_IdField, value) != true)) {
                    this.Mdvr_IdField = value;
                    this.RaisePropertyChanged("Mdvr_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Start_Time {
            get {
                return this.Start_TimeField;
            }
            set {
                if ((this.Start_TimeField.Equals(value) != true)) {
                    this.Start_TimeField = value;
                    this.RaisePropertyChanged("Start_Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Video_Type {
            get {
                return this.Video_TypeField;
            }
            set {
                if ((this.Video_TypeField.Equals(value) != true)) {
                    this.Video_TypeField = value;
                    this.RaisePropertyChanged("Video_Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DownloadFile", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data.Video")]
    public partial class DownloadFile : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> BeginFileBackforwardField;
        
        private System.Nullable<int> BeginTimeBackforwardField;
        
        private int DownloadTypeField;
        
        private System.Nullable<int> EndFileBackforwardField;
        
        private System.Nullable<int> EndTimeBackforwardField;
        
        private string File_IdField;
        
        private string IpField;
        
        private string Mdvr_IdField;
        
        private string PortField;
        
        private string UidField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BeginFileBackforward {
            get {
                return this.BeginFileBackforwardField;
            }
            set {
                if ((this.BeginFileBackforwardField.Equals(value) != true)) {
                    this.BeginFileBackforwardField = value;
                    this.RaisePropertyChanged("BeginFileBackforward");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BeginTimeBackforward {
            get {
                return this.BeginTimeBackforwardField;
            }
            set {
                if ((this.BeginTimeBackforwardField.Equals(value) != true)) {
                    this.BeginTimeBackforwardField = value;
                    this.RaisePropertyChanged("BeginTimeBackforward");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DownloadType {
            get {
                return this.DownloadTypeField;
            }
            set {
                if ((this.DownloadTypeField.Equals(value) != true)) {
                    this.DownloadTypeField = value;
                    this.RaisePropertyChanged("DownloadType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EndFileBackforward {
            get {
                return this.EndFileBackforwardField;
            }
            set {
                if ((this.EndFileBackforwardField.Equals(value) != true)) {
                    this.EndFileBackforwardField = value;
                    this.RaisePropertyChanged("EndFileBackforward");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> EndTimeBackforward {
            get {
                return this.EndTimeBackforwardField;
            }
            set {
                if ((this.EndTimeBackforwardField.Equals(value) != true)) {
                    this.EndTimeBackforwardField = value;
                    this.RaisePropertyChanged("EndTimeBackforward");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string File_Id {
            get {
                return this.File_IdField;
            }
            set {
                if ((object.ReferenceEquals(this.File_IdField, value) != true)) {
                    this.File_IdField = value;
                    this.RaisePropertyChanged("File_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ip {
            get {
                return this.IpField;
            }
            set {
                if ((object.ReferenceEquals(this.IpField, value) != true)) {
                    this.IpField = value;
                    this.RaisePropertyChanged("Ip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mdvr_Id {
            get {
                return this.Mdvr_IdField;
            }
            set {
                if ((object.ReferenceEquals(this.Mdvr_IdField, value) != true)) {
                    this.Mdvr_IdField = value;
                    this.RaisePropertyChanged("Mdvr_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Port {
            get {
                return this.PortField;
            }
            set {
                if ((object.ReferenceEquals(this.PortField, value) != true)) {
                    this.PortField = value;
                    this.RaisePropertyChanged("Port");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Uid {
            get {
                return this.UidField;
            }
            set {
                if ((object.ReferenceEquals(this.UidField, value) != true)) {
                    this.UidField = value;
                    this.RaisePropertyChanged("Uid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RuleInfo", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class RuleInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.Province> ListProvinceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.Province> ListProvince {
            get {
                return this.ListProvinceField;
            }
            set {
                if ((object.ReferenceEquals(this.ListProvinceField, value) != true)) {
                    this.ListProvinceField = value;
                    this.RaisePropertyChanged("ListProvince");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Province", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class Province : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.City> ListCityField;
        
        private string ProvinceIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.City> ListCity {
            get {
                return this.ListCityField;
            }
            set {
                if ((object.ReferenceEquals(this.ListCityField, value) != true)) {
                    this.ListCityField = value;
                    this.RaisePropertyChanged("ListCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProvinceId {
            get {
                return this.ProvinceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceIdField, value) != true)) {
                    this.ProvinceIdField = value;
                    this.RaisePropertyChanged("ProvinceId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="City", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class City : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CityIdField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.Company> ListCompanyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityId {
            get {
                return this.CityIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CityIdField, value) != true)) {
                    this.CityIdField = value;
                    this.RaisePropertyChanged("CityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.Company> ListCompany {
            get {
                return this.ListCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.ListCompanyField, value) != true)) {
                    this.ListCompanyField = value;
                    this.RaisePropertyChanged("ListCompany");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Company", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class Company : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CompanyIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyIdField, value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlarmInfo", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class AlarmInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AlarmAddressField;
        
        private string AlarmAddressCodeField;
        
        private int AlarmStatusField;
        
        private System.DateTime AlarmTimeField;
        
        private string AlarmUidField;
        
        private string BrandModelField;
        
        private int ButtonNumField;
        
        private string CityNameField;
        
        private string ContextField;
        
        private string DirectionField;
        
        private string DistrictCodeField;
        
        private string DistrictNameField;
        
        private System.Nullable<System.DateTime> GpsTimeField;
        
        private string GpsValidField;
        
        private int HandleResultField;
        
        private System.DateTime HandleTimeField;
        
        private string IdField;
        
        private string IncidentIdField;
        
        private System.Nullable<short> IsTrueAlarmField;
        
        private string LatitudeField;
        
        private string LongitudeField;
        
        private string MdvrCoreIdField;
        
        private string MobileField;
        
        private string NoteField;
        
        private string OperationLinceseField;
        
        private string OwnerField;
        
        private string ProvinceCodeField;
        
        private string ProvinceNameField;
        
        private string SpeedField;
        
        private string StartYearField;
        
        private string SuiteIDField;
        
        private string SuiteInfoIDField;
        
        private int SuiteStatusField;
        
        private string VehicleIdField;
        
        private string VehicleSnField;
        
        private int VehicleTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlarmAddress {
            get {
                return this.AlarmAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AlarmAddressField, value) != true)) {
                    this.AlarmAddressField = value;
                    this.RaisePropertyChanged("AlarmAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlarmAddressCode {
            get {
                return this.AlarmAddressCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AlarmAddressCodeField, value) != true)) {
                    this.AlarmAddressCodeField = value;
                    this.RaisePropertyChanged("AlarmAddressCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AlarmStatus {
            get {
                return this.AlarmStatusField;
            }
            set {
                if ((this.AlarmStatusField.Equals(value) != true)) {
                    this.AlarmStatusField = value;
                    this.RaisePropertyChanged("AlarmStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AlarmTime {
            get {
                return this.AlarmTimeField;
            }
            set {
                if ((this.AlarmTimeField.Equals(value) != true)) {
                    this.AlarmTimeField = value;
                    this.RaisePropertyChanged("AlarmTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlarmUid {
            get {
                return this.AlarmUidField;
            }
            set {
                if ((object.ReferenceEquals(this.AlarmUidField, value) != true)) {
                    this.AlarmUidField = value;
                    this.RaisePropertyChanged("AlarmUid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrandModel {
            get {
                return this.BrandModelField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandModelField, value) != true)) {
                    this.BrandModelField = value;
                    this.RaisePropertyChanged("BrandModel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ButtonNum {
            get {
                return this.ButtonNumField;
            }
            set {
                if ((this.ButtonNumField.Equals(value) != true)) {
                    this.ButtonNumField = value;
                    this.RaisePropertyChanged("ButtonNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Context {
            get {
                return this.ContextField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextField, value) != true)) {
                    this.ContextField = value;
                    this.RaisePropertyChanged("Context");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectionField, value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistrictCode {
            get {
                return this.DistrictCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictCodeField, value) != true)) {
                    this.DistrictCodeField = value;
                    this.RaisePropertyChanged("DistrictCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistrictName {
            get {
                return this.DistrictNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictNameField, value) != true)) {
                    this.DistrictNameField = value;
                    this.RaisePropertyChanged("DistrictName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> GpsTime {
            get {
                return this.GpsTimeField;
            }
            set {
                if ((this.GpsTimeField.Equals(value) != true)) {
                    this.GpsTimeField = value;
                    this.RaisePropertyChanged("GpsTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GpsValid {
            get {
                return this.GpsValidField;
            }
            set {
                if ((object.ReferenceEquals(this.GpsValidField, value) != true)) {
                    this.GpsValidField = value;
                    this.RaisePropertyChanged("GpsValid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HandleResult {
            get {
                return this.HandleResultField;
            }
            set {
                if ((this.HandleResultField.Equals(value) != true)) {
                    this.HandleResultField = value;
                    this.RaisePropertyChanged("HandleResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime HandleTime {
            get {
                return this.HandleTimeField;
            }
            set {
                if ((this.HandleTimeField.Equals(value) != true)) {
                    this.HandleTimeField = value;
                    this.RaisePropertyChanged("HandleTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IncidentId {
            get {
                return this.IncidentIdField;
            }
            set {
                if ((object.ReferenceEquals(this.IncidentIdField, value) != true)) {
                    this.IncidentIdField = value;
                    this.RaisePropertyChanged("IncidentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> IsTrueAlarm {
            get {
                return this.IsTrueAlarmField;
            }
            set {
                if ((this.IsTrueAlarmField.Equals(value) != true)) {
                    this.IsTrueAlarmField = value;
                    this.RaisePropertyChanged("IsTrueAlarm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LatitudeField, value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LongitudeField, value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrCoreId {
            get {
                return this.MdvrCoreIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrCoreIdField, value) != true)) {
                    this.MdvrCoreIdField = value;
                    this.RaisePropertyChanged("MdvrCoreId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperationLincese {
            get {
                return this.OperationLinceseField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationLinceseField, value) != true)) {
                    this.OperationLinceseField = value;
                    this.RaisePropertyChanged("OperationLincese");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProvinceCode {
            get {
                return this.ProvinceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceCodeField, value) != true)) {
                    this.ProvinceCodeField = value;
                    this.RaisePropertyChanged("ProvinceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProvinceName {
            get {
                return this.ProvinceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceNameField, value) != true)) {
                    this.ProvinceNameField = value;
                    this.RaisePropertyChanged("ProvinceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((object.ReferenceEquals(this.SpeedField, value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartYear {
            get {
                return this.StartYearField;
            }
            set {
                if ((object.ReferenceEquals(this.StartYearField, value) != true)) {
                    this.StartYearField = value;
                    this.RaisePropertyChanged("StartYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuiteID {
            get {
                return this.SuiteIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SuiteIDField, value) != true)) {
                    this.SuiteIDField = value;
                    this.RaisePropertyChanged("SuiteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuiteInfoID {
            get {
                return this.SuiteInfoIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SuiteInfoIDField, value) != true)) {
                    this.SuiteInfoIDField = value;
                    this.RaisePropertyChanged("SuiteInfoID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SuiteStatus {
            get {
                return this.SuiteStatusField;
            }
            set {
                if ((this.SuiteStatusField.Equals(value) != true)) {
                    this.SuiteStatusField = value;
                    this.RaisePropertyChanged("SuiteStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleId {
            get {
                return this.VehicleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleIdField, value) != true)) {
                    this.VehicleIdField = value;
                    this.RaisePropertyChanged("VehicleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleSn {
            get {
                return this.VehicleSnField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleSnField, value) != true)) {
                    this.VehicleSnField = value;
                    this.RaisePropertyChanged("VehicleSn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VehicleType {
            get {
                return this.VehicleTypeField;
            }
            set {
                if ((this.VehicleTypeField.Equals(value) != true)) {
                    this.VehicleTypeField = value;
                    this.RaisePropertyChanged("VehicleType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HandingAlarm", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class HandingAlarm : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime AlarmTimeField;
        
        private string MdvrCoreIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AlarmTime {
            get {
                return this.AlarmTimeField;
            }
            set {
                if ((this.AlarmTimeField.Equals(value) != true)) {
                    this.AlarmTimeField = value;
                    this.RaisePropertyChanged("AlarmTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrCoreId {
            get {
                return this.MdvrCoreIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrCoreIdField, value) != true)) {
                    this.MdvrCoreIdField = value;
                    this.RaisePropertyChanged("MdvrCoreId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlertBaseModel", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.CameraOcclusionAlert))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.FireAlert))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.GpsReceiverFaultAlert))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.MdvrMemoryCardErrorAlert))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.OpenOrCloseDoorAbnormalAlert))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.OverSpeedAlert))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.RegionAlert))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.RemoveDeviceSuiteAlertNotify))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.TemperatureAlert))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.VoltageAbnormalAlert))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.CameraNoSignalAlert))]
    public partial class AlertBaseModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime AlertTimeField;
        
        private short AlertTypeField;
        
        private string CityNameField;
        
        private string CmdField;
        
        private string ContextField;
        
        private System.DateTime CreateTimeField;
        
        private string DirectionField;
        
        private string DistrictCodeField;
        
        private System.Nullable<System.DateTime> GpsTimeField;
        
        private string GpsValidField;
        
        private string IDField;
        
        private string LatitudeField;
        
        private string LongitudeField;
        
        private string MdvrCoreSNField;
        
        private string ProvinceNameField;
        
        private string SpeedField;
        
        private short StatusField;
        
        private string SuitInfoIDField;
        
        private string SuiteIDField;
        
        private short SuiteStatusField;
        
        private string VehicleIDField;
        
        private int VehicleTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AlertTime {
            get {
                return this.AlertTimeField;
            }
            set {
                if ((this.AlertTimeField.Equals(value) != true)) {
                    this.AlertTimeField = value;
                    this.RaisePropertyChanged("AlertTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short AlertType {
            get {
                return this.AlertTypeField;
            }
            set {
                if ((this.AlertTypeField.Equals(value) != true)) {
                    this.AlertTypeField = value;
                    this.RaisePropertyChanged("AlertType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cmd {
            get {
                return this.CmdField;
            }
            set {
                if ((object.ReferenceEquals(this.CmdField, value) != true)) {
                    this.CmdField = value;
                    this.RaisePropertyChanged("Cmd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Context {
            get {
                return this.ContextField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextField, value) != true)) {
                    this.ContextField = value;
                    this.RaisePropertyChanged("Context");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectionField, value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistrictCode {
            get {
                return this.DistrictCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictCodeField, value) != true)) {
                    this.DistrictCodeField = value;
                    this.RaisePropertyChanged("DistrictCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> GpsTime {
            get {
                return this.GpsTimeField;
            }
            set {
                if ((this.GpsTimeField.Equals(value) != true)) {
                    this.GpsTimeField = value;
                    this.RaisePropertyChanged("GpsTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GpsValid {
            get {
                return this.GpsValidField;
            }
            set {
                if ((object.ReferenceEquals(this.GpsValidField, value) != true)) {
                    this.GpsValidField = value;
                    this.RaisePropertyChanged("GpsValid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LatitudeField, value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LongitudeField, value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrCoreSN {
            get {
                return this.MdvrCoreSNField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrCoreSNField, value) != true)) {
                    this.MdvrCoreSNField = value;
                    this.RaisePropertyChanged("MdvrCoreSN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProvinceName {
            get {
                return this.ProvinceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceNameField, value) != true)) {
                    this.ProvinceNameField = value;
                    this.RaisePropertyChanged("ProvinceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((object.ReferenceEquals(this.SpeedField, value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuitInfoID {
            get {
                return this.SuitInfoIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SuitInfoIDField, value) != true)) {
                    this.SuitInfoIDField = value;
                    this.RaisePropertyChanged("SuitInfoID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuiteID {
            get {
                return this.SuiteIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SuiteIDField, value) != true)) {
                    this.SuiteIDField = value;
                    this.RaisePropertyChanged("SuiteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short SuiteStatus {
            get {
                return this.SuiteStatusField;
            }
            set {
                if ((this.SuiteStatusField.Equals(value) != true)) {
                    this.SuiteStatusField = value;
                    this.RaisePropertyChanged("SuiteStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleID {
            get {
                return this.VehicleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleIDField, value) != true)) {
                    this.VehicleIDField = value;
                    this.RaisePropertyChanged("VehicleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VehicleType {
            get {
                return this.VehicleTypeField;
            }
            set {
                if ((this.VehicleTypeField.Equals(value) != true)) {
                    this.VehicleTypeField = value;
                    this.RaisePropertyChanged("VehicleType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CameraOcclusionAlert", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class CameraOcclusionAlert : Gsafety.PTMS.ServiceReference.MessageService.AlertBaseModel {
        
        private string ChannelIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChannelId {
            get {
                return this.ChannelIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelIdField, value) != true)) {
                    this.ChannelIdField = value;
                    this.RaisePropertyChanged("ChannelId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FireAlert", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class FireAlert : Gsafety.PTMS.ServiceReference.MessageService.AlertBaseModel {
        
        private short FireTypeField;
        
        private string TimeZoneField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short FireType {
            get {
                return this.FireTypeField;
            }
            set {
                if ((this.FireTypeField.Equals(value) != true)) {
                    this.FireTypeField = value;
                    this.RaisePropertyChanged("FireType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeZone {
            get {
                return this.TimeZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeZoneField, value) != true)) {
                    this.TimeZoneField = value;
                    this.RaisePropertyChanged("TimeZone");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GpsReceiverFaultAlert", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class GpsReceiverFaultAlert : Gsafety.PTMS.ServiceReference.MessageService.AlertBaseModel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MdvrMemoryCardErrorAlert", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class MdvrMemoryCardErrorAlert : Gsafety.PTMS.ServiceReference.MessageService.AlertBaseModel {
        
        private string ErrorCodeField;
        
        private string ErrorMessageField;
        
        private string HardDiskIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HardDiskId {
            get {
                return this.HardDiskIdField;
            }
            set {
                if ((object.ReferenceEquals(this.HardDiskIdField, value) != true)) {
                    this.HardDiskIdField = value;
                    this.RaisePropertyChanged("HardDiskId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OpenOrCloseDoorAbnormalAlert", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class OpenOrCloseDoorAbnormalAlert : Gsafety.PTMS.ServiceReference.MessageService.AlertBaseModel {
        
        private string DoorOperationField;
        
        private string DoorTypeField;
        
        private string LimitSpeedField;
        
        private string TimeZoneField;
        
        private string TriggerSpeedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DoorOperation {
            get {
                return this.DoorOperationField;
            }
            set {
                if ((object.ReferenceEquals(this.DoorOperationField, value) != true)) {
                    this.DoorOperationField = value;
                    this.RaisePropertyChanged("DoorOperation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DoorType {
            get {
                return this.DoorTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DoorTypeField, value) != true)) {
                    this.DoorTypeField = value;
                    this.RaisePropertyChanged("DoorType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LimitSpeed {
            get {
                return this.LimitSpeedField;
            }
            set {
                if ((object.ReferenceEquals(this.LimitSpeedField, value) != true)) {
                    this.LimitSpeedField = value;
                    this.RaisePropertyChanged("LimitSpeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeZone {
            get {
                return this.TimeZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeZoneField, value) != true)) {
                    this.TimeZoneField = value;
                    this.RaisePropertyChanged("TimeZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TriggerSpeed {
            get {
                return this.TriggerSpeedField;
            }
            set {
                if ((object.ReferenceEquals(this.TriggerSpeedField, value) != true)) {
                    this.TriggerSpeedField = value;
                    this.RaisePropertyChanged("TriggerSpeed");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OverSpeedAlert", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class OverSpeedAlert : Gsafety.PTMS.ServiceReference.MessageService.AlertBaseModel {
        
        private string ContinueTimeField;
        
        private string CurrentSpeedField;
        
        private string HistoryMaxSpeedField;
        
        private string HistoryMinSpeedField;
        
        private string MaxSpeedField;
        
        private string MinSpeedField;
        
        private short SpeedAlertTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContinueTime {
            get {
                return this.ContinueTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContinueTimeField, value) != true)) {
                    this.ContinueTimeField = value;
                    this.RaisePropertyChanged("ContinueTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentSpeed {
            get {
                return this.CurrentSpeedField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentSpeedField, value) != true)) {
                    this.CurrentSpeedField = value;
                    this.RaisePropertyChanged("CurrentSpeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HistoryMaxSpeed {
            get {
                return this.HistoryMaxSpeedField;
            }
            set {
                if ((object.ReferenceEquals(this.HistoryMaxSpeedField, value) != true)) {
                    this.HistoryMaxSpeedField = value;
                    this.RaisePropertyChanged("HistoryMaxSpeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HistoryMinSpeed {
            get {
                return this.HistoryMinSpeedField;
            }
            set {
                if ((object.ReferenceEquals(this.HistoryMinSpeedField, value) != true)) {
                    this.HistoryMinSpeedField = value;
                    this.RaisePropertyChanged("HistoryMinSpeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaxSpeed {
            get {
                return this.MaxSpeedField;
            }
            set {
                if ((object.ReferenceEquals(this.MaxSpeedField, value) != true)) {
                    this.MaxSpeedField = value;
                    this.RaisePropertyChanged("MaxSpeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MinSpeed {
            get {
                return this.MinSpeedField;
            }
            set {
                if ((object.ReferenceEquals(this.MinSpeedField, value) != true)) {
                    this.MinSpeedField = value;
                    this.RaisePropertyChanged("MinSpeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short SpeedAlertType {
            get {
                return this.SpeedAlertTypeField;
            }
            set {
                if ((this.SpeedAlertTypeField.Equals(value) != true)) {
                    this.SpeedAlertTypeField = value;
                    this.RaisePropertyChanged("SpeedAlertType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RegionAlert", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class RegionAlert : Gsafety.PTMS.ServiceReference.MessageService.AlertBaseModel {
        
        private string EntryOrExitSignField;
        
        private string FenceIdField;
        
        private string FenceNameField;
        
        private string FenceSignField;
        
        private string RegionAlertStatusField;
        
        private string SubRegionAlertTypeField;
        
        private short SubRegionAlertTypeStatusNumberField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntryOrExitSign {
            get {
                return this.EntryOrExitSignField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryOrExitSignField, value) != true)) {
                    this.EntryOrExitSignField = value;
                    this.RaisePropertyChanged("EntryOrExitSign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FenceId {
            get {
                return this.FenceIdField;
            }
            set {
                if ((object.ReferenceEquals(this.FenceIdField, value) != true)) {
                    this.FenceIdField = value;
                    this.RaisePropertyChanged("FenceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FenceName {
            get {
                return this.FenceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FenceNameField, value) != true)) {
                    this.FenceNameField = value;
                    this.RaisePropertyChanged("FenceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FenceSign {
            get {
                return this.FenceSignField;
            }
            set {
                if ((object.ReferenceEquals(this.FenceSignField, value) != true)) {
                    this.FenceSignField = value;
                    this.RaisePropertyChanged("FenceSign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionAlertStatus {
            get {
                return this.RegionAlertStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionAlertStatusField, value) != true)) {
                    this.RegionAlertStatusField = value;
                    this.RaisePropertyChanged("RegionAlertStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubRegionAlertType {
            get {
                return this.SubRegionAlertTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SubRegionAlertTypeField, value) != true)) {
                    this.SubRegionAlertTypeField = value;
                    this.RaisePropertyChanged("SubRegionAlertType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short SubRegionAlertTypeStatusNumber {
            get {
                return this.SubRegionAlertTypeStatusNumberField;
            }
            set {
                if ((this.SubRegionAlertTypeStatusNumberField.Equals(value) != true)) {
                    this.SubRegionAlertTypeStatusNumberField = value;
                    this.RaisePropertyChanged("SubRegionAlertTypeStatusNumber");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoveDeviceSuiteAlertNotify", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class RemoveDeviceSuiteAlertNotify : Gsafety.PTMS.ServiceReference.MessageService.AlertBaseModel {
        
        private bool RemovedAlarmFlagField;
        
        private string UserDefinedAlertIdField;
        
        private string UserDefinedAlertNameField;
        
        private string removeBusinessAlertTypeField;
        
        private string removeDeviceAlertTypeField;
        
        private string removeUserDefinedAlertTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RemovedAlarmFlag {
            get {
                return this.RemovedAlarmFlagField;
            }
            set {
                if ((this.RemovedAlarmFlagField.Equals(value) != true)) {
                    this.RemovedAlarmFlagField = value;
                    this.RaisePropertyChanged("RemovedAlarmFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserDefinedAlertId {
            get {
                return this.UserDefinedAlertIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserDefinedAlertIdField, value) != true)) {
                    this.UserDefinedAlertIdField = value;
                    this.RaisePropertyChanged("UserDefinedAlertId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserDefinedAlertName {
            get {
                return this.UserDefinedAlertNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserDefinedAlertNameField, value) != true)) {
                    this.UserDefinedAlertNameField = value;
                    this.RaisePropertyChanged("UserDefinedAlertName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string removeBusinessAlertType {
            get {
                return this.removeBusinessAlertTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.removeBusinessAlertTypeField, value) != true)) {
                    this.removeBusinessAlertTypeField = value;
                    this.RaisePropertyChanged("removeBusinessAlertType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string removeDeviceAlertType {
            get {
                return this.removeDeviceAlertTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.removeDeviceAlertTypeField, value) != true)) {
                    this.removeDeviceAlertTypeField = value;
                    this.RaisePropertyChanged("removeDeviceAlertType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string removeUserDefinedAlertType {
            get {
                return this.removeUserDefinedAlertTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.removeUserDefinedAlertTypeField, value) != true)) {
                    this.removeUserDefinedAlertTypeField = value;
                    this.RaisePropertyChanged("removeUserDefinedAlertType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TemperatureAlert", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class TemperatureAlert : Gsafety.PTMS.ServiceReference.MessageService.AlertBaseModel {
        
        private string CurrentTemperatureField;
        
        private string MaxTemperatureField;
        
        private string MinTemperatureField;
        
        private short TemperatureTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentTemperature {
            get {
                return this.CurrentTemperatureField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentTemperatureField, value) != true)) {
                    this.CurrentTemperatureField = value;
                    this.RaisePropertyChanged("CurrentTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaxTemperature {
            get {
                return this.MaxTemperatureField;
            }
            set {
                if ((object.ReferenceEquals(this.MaxTemperatureField, value) != true)) {
                    this.MaxTemperatureField = value;
                    this.RaisePropertyChanged("MaxTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MinTemperature {
            get {
                return this.MinTemperatureField;
            }
            set {
                if ((object.ReferenceEquals(this.MinTemperatureField, value) != true)) {
                    this.MinTemperatureField = value;
                    this.RaisePropertyChanged("MinTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TemperatureType {
            get {
                return this.TemperatureTypeField;
            }
            set {
                if ((this.TemperatureTypeField.Equals(value) != true)) {
                    this.TemperatureTypeField = value;
                    this.RaisePropertyChanged("TemperatureType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VoltageAbnormalAlert", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class VoltageAbnormalAlert : Gsafety.PTMS.ServiceReference.MessageService.AlertBaseModel {
        
        private string CurrentVoltageField;
        
        private string MaxVoltageField;
        
        private string MinVoltageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentVoltage {
            get {
                return this.CurrentVoltageField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentVoltageField, value) != true)) {
                    this.CurrentVoltageField = value;
                    this.RaisePropertyChanged("CurrentVoltage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaxVoltage {
            get {
                return this.MaxVoltageField;
            }
            set {
                if ((object.ReferenceEquals(this.MaxVoltageField, value) != true)) {
                    this.MaxVoltageField = value;
                    this.RaisePropertyChanged("MaxVoltage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MinVoltage {
            get {
                return this.MinVoltageField;
            }
            set {
                if ((object.ReferenceEquals(this.MinVoltageField, value) != true)) {
                    this.MinVoltageField = value;
                    this.RaisePropertyChanged("MinVoltage");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CameraNoSignalAlert", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class CameraNoSignalAlert : Gsafety.PTMS.ServiceReference.MessageService.AlertBaseModel {
        
        private string ChannelIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChannelId {
            get {
                return this.ChannelIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelIdField, value) != true)) {
                    this.ChannelIdField = value;
                    this.RaisePropertyChanged("ChannelId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InspectInfo", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class InspectInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string Channel1Field;
        
        private string Channel2Field;
        
        private string Channel3Field;
        
        private string Channel4Field;
        
        private string CurInTemperatureField;
        
        private string CurVoltageField;
        
        private string DirectionField;
        
        private string GpsInfoField;
        
        private System.Nullable<System.DateTime> GpsTimeField;
        
        private string GpsValidField;
        
        private string InspectIDField;
        
        private System.DateTime InspectTimeField;
        
        private string LatitudeField;
        
        private string LongitudeField;
        
        private string MdvrCoreIdField;
        
        private string Module3GField;
        
        private string NoteField;
        
        private string RecSDField;
        
        private string SdCapacityField;
        
        private string Sensor1Field;
        
        private string Sensor2Field;
        
        private string Sensor3Field;
        
        private string SimCardField;
        
        private string SpeedField;
        
        private string StandbyPowerField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Channel1 {
            get {
                return this.Channel1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Channel1Field, value) != true)) {
                    this.Channel1Field = value;
                    this.RaisePropertyChanged("Channel1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Channel2 {
            get {
                return this.Channel2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Channel2Field, value) != true)) {
                    this.Channel2Field = value;
                    this.RaisePropertyChanged("Channel2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Channel3 {
            get {
                return this.Channel3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Channel3Field, value) != true)) {
                    this.Channel3Field = value;
                    this.RaisePropertyChanged("Channel3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Channel4 {
            get {
                return this.Channel4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Channel4Field, value) != true)) {
                    this.Channel4Field = value;
                    this.RaisePropertyChanged("Channel4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurInTemperature {
            get {
                return this.CurInTemperatureField;
            }
            set {
                if ((object.ReferenceEquals(this.CurInTemperatureField, value) != true)) {
                    this.CurInTemperatureField = value;
                    this.RaisePropertyChanged("CurInTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurVoltage {
            get {
                return this.CurVoltageField;
            }
            set {
                if ((object.ReferenceEquals(this.CurVoltageField, value) != true)) {
                    this.CurVoltageField = value;
                    this.RaisePropertyChanged("CurVoltage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectionField, value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GpsInfo {
            get {
                return this.GpsInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.GpsInfoField, value) != true)) {
                    this.GpsInfoField = value;
                    this.RaisePropertyChanged("GpsInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> GpsTime {
            get {
                return this.GpsTimeField;
            }
            set {
                if ((this.GpsTimeField.Equals(value) != true)) {
                    this.GpsTimeField = value;
                    this.RaisePropertyChanged("GpsTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GpsValid {
            get {
                return this.GpsValidField;
            }
            set {
                if ((object.ReferenceEquals(this.GpsValidField, value) != true)) {
                    this.GpsValidField = value;
                    this.RaisePropertyChanged("GpsValid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InspectID {
            get {
                return this.InspectIDField;
            }
            set {
                if ((object.ReferenceEquals(this.InspectIDField, value) != true)) {
                    this.InspectIDField = value;
                    this.RaisePropertyChanged("InspectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InspectTime {
            get {
                return this.InspectTimeField;
            }
            set {
                if ((this.InspectTimeField.Equals(value) != true)) {
                    this.InspectTimeField = value;
                    this.RaisePropertyChanged("InspectTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LatitudeField, value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LongitudeField, value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrCoreId {
            get {
                return this.MdvrCoreIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrCoreIdField, value) != true)) {
                    this.MdvrCoreIdField = value;
                    this.RaisePropertyChanged("MdvrCoreId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Module3G {
            get {
                return this.Module3GField;
            }
            set {
                if ((object.ReferenceEquals(this.Module3GField, value) != true)) {
                    this.Module3GField = value;
                    this.RaisePropertyChanged("Module3G");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecSD {
            get {
                return this.RecSDField;
            }
            set {
                if ((object.ReferenceEquals(this.RecSDField, value) != true)) {
                    this.RecSDField = value;
                    this.RaisePropertyChanged("RecSD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SdCapacity {
            get {
                return this.SdCapacityField;
            }
            set {
                if ((object.ReferenceEquals(this.SdCapacityField, value) != true)) {
                    this.SdCapacityField = value;
                    this.RaisePropertyChanged("SdCapacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sensor1 {
            get {
                return this.Sensor1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Sensor1Field, value) != true)) {
                    this.Sensor1Field = value;
                    this.RaisePropertyChanged("Sensor1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sensor2 {
            get {
                return this.Sensor2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Sensor2Field, value) != true)) {
                    this.Sensor2Field = value;
                    this.RaisePropertyChanged("Sensor2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sensor3 {
            get {
                return this.Sensor3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Sensor3Field, value) != true)) {
                    this.Sensor3Field = value;
                    this.RaisePropertyChanged("Sensor3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SimCard {
            get {
                return this.SimCardField;
            }
            set {
                if ((object.ReferenceEquals(this.SimCardField, value) != true)) {
                    this.SimCardField = value;
                    this.RaisePropertyChanged("SimCard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((object.ReferenceEquals(this.SpeedField, value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StandbyPower {
            get {
                return this.StandbyPowerField;
            }
            set {
                if ((object.ReferenceEquals(this.StandbyPowerField, value) != true)) {
                    this.StandbyPowerField = value;
                    this.RaisePropertyChanged("StandbyPower");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GPS", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class GPS : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ContextField;
        
        private string DirectionField;
        
        private string DistrictCodeField;
        
        private int DriveSignField;
        
        private System.Nullable<System.DateTime> GPSTimeField;
        
        private string GPSValidField;
        
        private string LatitudeField;
        
        private string LongitudeField;
        
        private string MdvrCoreIdField;
        
        private string SpeedField;
        
        private string SuiteInfoIdField;
        
        private string VehicleIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Context {
            get {
                return this.ContextField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextField, value) != true)) {
                    this.ContextField = value;
                    this.RaisePropertyChanged("Context");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectionField, value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistrictCode {
            get {
                return this.DistrictCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictCodeField, value) != true)) {
                    this.DistrictCodeField = value;
                    this.RaisePropertyChanged("DistrictCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DriveSign {
            get {
                return this.DriveSignField;
            }
            set {
                if ((this.DriveSignField.Equals(value) != true)) {
                    this.DriveSignField = value;
                    this.RaisePropertyChanged("DriveSign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> GPSTime {
            get {
                return this.GPSTimeField;
            }
            set {
                if ((this.GPSTimeField.Equals(value) != true)) {
                    this.GPSTimeField = value;
                    this.RaisePropertyChanged("GPSTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GPSValid {
            get {
                return this.GPSValidField;
            }
            set {
                if ((object.ReferenceEquals(this.GPSValidField, value) != true)) {
                    this.GPSValidField = value;
                    this.RaisePropertyChanged("GPSValid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LatitudeField, value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LongitudeField, value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrCoreId {
            get {
                return this.MdvrCoreIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrCoreIdField, value) != true)) {
                    this.MdvrCoreIdField = value;
                    this.RaisePropertyChanged("MdvrCoreId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((object.ReferenceEquals(this.SpeedField, value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuiteInfoId {
            get {
                return this.SuiteInfoIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SuiteInfoIdField, value) != true)) {
                    this.SuiteInfoIdField = value;
                    this.RaisePropertyChanged("SuiteInfoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleId {
            get {
                return this.VehicleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleIdField, value) != true)) {
                    this.VehicleIdField = value;
                    this.RaisePropertyChanged("VehicleId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PTMSGPS", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class PTMSGPS : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ContextField;
        
        private string DirectionField;
        
        private string DistrictCodeField;
        
        private System.DateTime GPSTimeField;
        
        private string GPSValidField;
        
        private string LatitudeField;
        
        private string LongitudeField;
        
        private string MdvrCoreIdField;
        
        private string SpeedField;
        
        private string SuiteInfoIdField;
        
        private string VehicleIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Context {
            get {
                return this.ContextField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextField, value) != true)) {
                    this.ContextField = value;
                    this.RaisePropertyChanged("Context");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectionField, value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistrictCode {
            get {
                return this.DistrictCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictCodeField, value) != true)) {
                    this.DistrictCodeField = value;
                    this.RaisePropertyChanged("DistrictCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime GPSTime {
            get {
                return this.GPSTimeField;
            }
            set {
                if ((this.GPSTimeField.Equals(value) != true)) {
                    this.GPSTimeField = value;
                    this.RaisePropertyChanged("GPSTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GPSValid {
            get {
                return this.GPSValidField;
            }
            set {
                if ((object.ReferenceEquals(this.GPSValidField, value) != true)) {
                    this.GPSValidField = value;
                    this.RaisePropertyChanged("GPSValid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LatitudeField, value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LongitudeField, value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrCoreId {
            get {
                return this.MdvrCoreIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrCoreIdField, value) != true)) {
                    this.MdvrCoreIdField = value;
                    this.RaisePropertyChanged("MdvrCoreId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((object.ReferenceEquals(this.SpeedField, value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuiteInfoId {
            get {
                return this.SuiteInfoIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SuiteInfoIdField, value) != true)) {
                    this.SuiteInfoIdField = value;
                    this.RaisePropertyChanged("SuiteInfoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleId {
            get {
                return this.VehicleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleIdField, value) != true)) {
                    this.VehicleIdField = value;
                    this.RaisePropertyChanged("VehicleId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OnOffline", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class OnOffline : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ContextField;
        
        private string DirectionField;
        
        private System.Nullable<System.DateTime> GPSTimeField;
        
        private string GPSValidField;
        
        private int IsOnLineField;
        
        private string LatitudeField;
        
        private string LongitudeField;
        
        private string MdvrCoreIdField;
        
        private string SpeedField;
        
        private string SuiteInfoIdField;
        
        private string VehicleIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Context {
            get {
                return this.ContextField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextField, value) != true)) {
                    this.ContextField = value;
                    this.RaisePropertyChanged("Context");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectionField, value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> GPSTime {
            get {
                return this.GPSTimeField;
            }
            set {
                if ((this.GPSTimeField.Equals(value) != true)) {
                    this.GPSTimeField = value;
                    this.RaisePropertyChanged("GPSTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GPSValid {
            get {
                return this.GPSValidField;
            }
            set {
                if ((object.ReferenceEquals(this.GPSValidField, value) != true)) {
                    this.GPSValidField = value;
                    this.RaisePropertyChanged("GPSValid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsOnLine {
            get {
                return this.IsOnLineField;
            }
            set {
                if ((this.IsOnLineField.Equals(value) != true)) {
                    this.IsOnLineField = value;
                    this.RaisePropertyChanged("IsOnLine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LatitudeField, value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LongitudeField, value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrCoreId {
            get {
                return this.MdvrCoreIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrCoreIdField, value) != true)) {
                    this.MdvrCoreIdField = value;
                    this.RaisePropertyChanged("MdvrCoreId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((object.ReferenceEquals(this.SpeedField, value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuiteInfoId {
            get {
                return this.SuiteInfoIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SuiteInfoIdField, value) != true)) {
                    this.SuiteInfoIdField = value;
                    this.RaisePropertyChanged("SuiteInfoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleId {
            get {
                return this.VehicleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleIdField, value) != true)) {
                    this.VehicleIdField = value;
                    this.RaisePropertyChanged("VehicleId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HeartbeatInfo", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class HeartbeatInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.DateTime> CurrentTimeField;
        
        private string SessionIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CurrentTime {
            get {
                return this.CurrentTimeField;
            }
            set {
                if ((this.CurrentTimeField.Equals(value) != true)) {
                    this.CurrentTimeField = value;
                    this.RaisePropertyChanged("CurrentTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIdField, value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReplyBaseModel", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.SettingOverSpeedReply))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.ElectricFenceReply))]
    public partial class ReplyBaseModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AssociationSetIDField;
        
        private string CmdField;
        
        private string DirectionField;
        
        private System.Nullable<System.DateTime> GpsTimeField;
        
        private string GpsValidField;
        
        private string LatitudeField;
        
        private string LongitudeField;
        
        private string MdvrCoreIdField;
        
        private string OperTypeField;
        
        private string OriginalCmdField;
        
        private System.DateTime OriginalTimeField;
        
        private int ReplyTypeField;
        
        private string SpeedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssociationSetID {
            get {
                return this.AssociationSetIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AssociationSetIDField, value) != true)) {
                    this.AssociationSetIDField = value;
                    this.RaisePropertyChanged("AssociationSetID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cmd {
            get {
                return this.CmdField;
            }
            set {
                if ((object.ReferenceEquals(this.CmdField, value) != true)) {
                    this.CmdField = value;
                    this.RaisePropertyChanged("Cmd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectionField, value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> GpsTime {
            get {
                return this.GpsTimeField;
            }
            set {
                if ((this.GpsTimeField.Equals(value) != true)) {
                    this.GpsTimeField = value;
                    this.RaisePropertyChanged("GpsTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GpsValid {
            get {
                return this.GpsValidField;
            }
            set {
                if ((object.ReferenceEquals(this.GpsValidField, value) != true)) {
                    this.GpsValidField = value;
                    this.RaisePropertyChanged("GpsValid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LatitudeField, value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LongitudeField, value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrCoreId {
            get {
                return this.MdvrCoreIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrCoreIdField, value) != true)) {
                    this.MdvrCoreIdField = value;
                    this.RaisePropertyChanged("MdvrCoreId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperType {
            get {
                return this.OperTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.OperTypeField, value) != true)) {
                    this.OperTypeField = value;
                    this.RaisePropertyChanged("OperType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginalCmd {
            get {
                return this.OriginalCmdField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalCmdField, value) != true)) {
                    this.OriginalCmdField = value;
                    this.RaisePropertyChanged("OriginalCmd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OriginalTime {
            get {
                return this.OriginalTimeField;
            }
            set {
                if ((this.OriginalTimeField.Equals(value) != true)) {
                    this.OriginalTimeField = value;
                    this.RaisePropertyChanged("OriginalTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReplyType {
            get {
                return this.ReplyTypeField;
            }
            set {
                if ((this.ReplyTypeField.Equals(value) != true)) {
                    this.ReplyTypeField = value;
                    this.RaisePropertyChanged("ReplyType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((object.ReferenceEquals(this.SpeedField, value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SettingOverSpeedReply", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class SettingOverSpeedReply : Gsafety.PTMS.ServiceReference.MessageService.ReplyBaseModel {
        
        private string ErrorCodeField;
        
        private string ErrorMsgField;
        
        private int ReplyResultField;
        
        private int SettingFlayField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorCodeField, value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReplyResult {
            get {
                return this.ReplyResultField;
            }
            set {
                if ((this.ReplyResultField.Equals(value) != true)) {
                    this.ReplyResultField = value;
                    this.RaisePropertyChanged("ReplyResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SettingFlay {
            get {
                return this.SettingFlayField;
            }
            set {
                if ((this.SettingFlayField.Equals(value) != true)) {
                    this.SettingFlayField = value;
                    this.RaisePropertyChanged("SettingFlay");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ElectricFenceReply", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class ElectricFenceReply : Gsafety.PTMS.ServiceReference.MessageService.ReplyBaseModel {
        
        private string ContextField;
        
        private string ErrorNumberField;
        
        private int ReplyResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Context {
            get {
                return this.ContextField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextField, value) != true)) {
                    this.ContextField = value;
                    this.RaisePropertyChanged("Context");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorNumber {
            get {
                return this.ErrorNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorNumberField, value) != true)) {
                    this.ErrorNumberField = value;
                    this.RaisePropertyChanged("ErrorNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReplyResult {
            get {
                return this.ReplyResultField;
            }
            set {
                if ((this.ReplyResultField.Equals(value) != true)) {
                    this.ReplyResultField = value;
                    this.RaisePropertyChanged("ReplyResult");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RealAlarm", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class RealAlarm : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AlarmIDField;
        
        private System.DateTime AlarmTimeField;
        
        private System.DateTime CompleteTimeField;
        
        private string MdvrCoreIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlarmID {
            get {
                return this.AlarmIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AlarmIDField, value) != true)) {
                    this.AlarmIDField = value;
                    this.RaisePropertyChanged("AlarmID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AlarmTime {
            get {
                return this.AlarmTimeField;
            }
            set {
                if ((this.AlarmTimeField.Equals(value) != true)) {
                    this.AlarmTimeField = value;
                    this.RaisePropertyChanged("AlarmTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CompleteTime {
            get {
                return this.CompleteTimeField;
            }
            set {
                if ((this.CompleteTimeField.Equals(value) != true)) {
                    this.CompleteTimeField = value;
                    this.RaisePropertyChanged("CompleteTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrCoreId {
            get {
                return this.MdvrCoreIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrCoreIdField, value) != true)) {
                    this.MdvrCoreIdField = value;
                    this.RaisePropertyChanged("MdvrCoreId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EndLocationMonitor", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class EndLocationMonitor : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Gsafety.PTMS.ServiceReference.MessageService.LocationMonitorEndType EndTypeField;
        
        private string VechileIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.MessageService.LocationMonitorEndType EndType {
            get {
                return this.EndTypeField;
            }
            set {
                if ((this.EndTypeField.Equals(value) != true)) {
                    this.EndTypeField = value;
                    this.RaisePropertyChanged("EndType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VechileID {
            get {
                return this.VechileIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VechileIDField, value) != true)) {
                    this.VechileIDField = value;
                    this.RaisePropertyChanged("VechileID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationMonitorEndType", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public enum LocationMonitorEndType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequestFails = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequestTimeout = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MonitorEnd = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BasicInfo", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class BasicInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ContextField;
        
        private System.DateTime GpsTimeField;
        
        private string IdField;
        
        private string MdvrCoreIdField;
        
        private string VehicleIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Context {
            get {
                return this.ContextField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextField, value) != true)) {
                    this.ContextField = value;
                    this.RaisePropertyChanged("Context");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime GpsTime {
            get {
                return this.GpsTimeField;
            }
            set {
                if ((this.GpsTimeField.Equals(value) != true)) {
                    this.GpsTimeField = value;
                    this.RaisePropertyChanged("GpsTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrCoreId {
            get {
                return this.MdvrCoreIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrCoreIdField, value) != true)) {
                    this.MdvrCoreIdField = value;
                    this.RaisePropertyChanged("MdvrCoreId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleId {
            get {
                return this.VehicleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleIdField, value) != true)) {
                    this.VehicleIdField = value;
                    this.RaisePropertyChanged("VehicleId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Enviroment", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class Enviroment : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AccStatusField;
        
        private string BatteryStatusField;
        
        private string ContextField;
        
        private System.DateTime GpsTimeField;
        
        private string IdField;
        
        private string MdvrCoreIdField;
        
        private System.Nullable<decimal> TemperatureInField;
        
        private System.Nullable<short> TemperatureInFlagField;
        
        private System.Nullable<decimal> TemperatureOutField;
        
        private System.Nullable<short> TemperatureOutFlagField;
        
        private string VoltageField;
        
        private System.Nullable<short> VoltageFlagField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccStatus {
            get {
                return this.AccStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.AccStatusField, value) != true)) {
                    this.AccStatusField = value;
                    this.RaisePropertyChanged("AccStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BatteryStatus {
            get {
                return this.BatteryStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.BatteryStatusField, value) != true)) {
                    this.BatteryStatusField = value;
                    this.RaisePropertyChanged("BatteryStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Context {
            get {
                return this.ContextField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextField, value) != true)) {
                    this.ContextField = value;
                    this.RaisePropertyChanged("Context");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime GpsTime {
            get {
                return this.GpsTimeField;
            }
            set {
                if ((this.GpsTimeField.Equals(value) != true)) {
                    this.GpsTimeField = value;
                    this.RaisePropertyChanged("GpsTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrCoreId {
            get {
                return this.MdvrCoreIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrCoreIdField, value) != true)) {
                    this.MdvrCoreIdField = value;
                    this.RaisePropertyChanged("MdvrCoreId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TemperatureIn {
            get {
                return this.TemperatureInField;
            }
            set {
                if ((this.TemperatureInField.Equals(value) != true)) {
                    this.TemperatureInField = value;
                    this.RaisePropertyChanged("TemperatureIn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> TemperatureInFlag {
            get {
                return this.TemperatureInFlagField;
            }
            set {
                if ((this.TemperatureInFlagField.Equals(value) != true)) {
                    this.TemperatureInFlagField = value;
                    this.RaisePropertyChanged("TemperatureInFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> TemperatureOut {
            get {
                return this.TemperatureOutField;
            }
            set {
                if ((this.TemperatureOutField.Equals(value) != true)) {
                    this.TemperatureOutField = value;
                    this.RaisePropertyChanged("TemperatureOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> TemperatureOutFlag {
            get {
                return this.TemperatureOutFlagField;
            }
            set {
                if ((this.TemperatureOutFlagField.Equals(value) != true)) {
                    this.TemperatureOutFlagField = value;
                    this.RaisePropertyChanged("TemperatureOutFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Voltage {
            get {
                return this.VoltageField;
            }
            set {
                if ((object.ReferenceEquals(this.VoltageField, value) != true)) {
                    this.VoltageField = value;
                    this.RaisePropertyChanged("Voltage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> VoltageFlag {
            get {
                return this.VoltageFlagField;
            }
            set {
                if ((this.VoltageFlagField.Equals(value) != true)) {
                    this.VoltageFlagField = value;
                    this.RaisePropertyChanged("VoltageFlag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Hardware", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    public partial class Hardware : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string Camera1RecstatField;
        
        private string Camera1StatusField;
        
        private string Camera2RecstatField;
        
        private string Camera2StatusField;
        
        private string ContextField;
        
        private string GpsAntennaField;
        
        private string GpsPoorcntField;
        
        private System.DateTime GpsTimeField;
        
        private string GpsValidField;
        
        private string IdField;
        
        private string MdvrCoreIdField;
        
        private string RecordStatusField;
        
        private string RecsdFullField;
        
        private string RecsdStatusField;
        
        private string RecsdWrErrorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Camera1Recstat {
            get {
                return this.Camera1RecstatField;
            }
            set {
                if ((object.ReferenceEquals(this.Camera1RecstatField, value) != true)) {
                    this.Camera1RecstatField = value;
                    this.RaisePropertyChanged("Camera1Recstat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Camera1Status {
            get {
                return this.Camera1StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.Camera1StatusField, value) != true)) {
                    this.Camera1StatusField = value;
                    this.RaisePropertyChanged("Camera1Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Camera2Recstat {
            get {
                return this.Camera2RecstatField;
            }
            set {
                if ((object.ReferenceEquals(this.Camera2RecstatField, value) != true)) {
                    this.Camera2RecstatField = value;
                    this.RaisePropertyChanged("Camera2Recstat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Camera2Status {
            get {
                return this.Camera2StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.Camera2StatusField, value) != true)) {
                    this.Camera2StatusField = value;
                    this.RaisePropertyChanged("Camera2Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Context {
            get {
                return this.ContextField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextField, value) != true)) {
                    this.ContextField = value;
                    this.RaisePropertyChanged("Context");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GpsAntenna {
            get {
                return this.GpsAntennaField;
            }
            set {
                if ((object.ReferenceEquals(this.GpsAntennaField, value) != true)) {
                    this.GpsAntennaField = value;
                    this.RaisePropertyChanged("GpsAntenna");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GpsPoorcnt {
            get {
                return this.GpsPoorcntField;
            }
            set {
                if ((object.ReferenceEquals(this.GpsPoorcntField, value) != true)) {
                    this.GpsPoorcntField = value;
                    this.RaisePropertyChanged("GpsPoorcnt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime GpsTime {
            get {
                return this.GpsTimeField;
            }
            set {
                if ((this.GpsTimeField.Equals(value) != true)) {
                    this.GpsTimeField = value;
                    this.RaisePropertyChanged("GpsTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GpsValid {
            get {
                return this.GpsValidField;
            }
            set {
                if ((object.ReferenceEquals(this.GpsValidField, value) != true)) {
                    this.GpsValidField = value;
                    this.RaisePropertyChanged("GpsValid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrCoreId {
            get {
                return this.MdvrCoreIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrCoreIdField, value) != true)) {
                    this.MdvrCoreIdField = value;
                    this.RaisePropertyChanged("MdvrCoreId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecordStatus {
            get {
                return this.RecordStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordStatusField, value) != true)) {
                    this.RecordStatusField = value;
                    this.RaisePropertyChanged("RecordStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecsdFull {
            get {
                return this.RecsdFullField;
            }
            set {
                if ((object.ReferenceEquals(this.RecsdFullField, value) != true)) {
                    this.RecsdFullField = value;
                    this.RaisePropertyChanged("RecsdFull");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecsdStatus {
            get {
                return this.RecsdStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.RecsdStatusField, value) != true)) {
                    this.RecsdStatusField = value;
                    this.RaisePropertyChanged("RecsdStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecsdWrError {
            get {
                return this.RecsdWrErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.RecsdWrErrorField, value) != true)) {
                    this.RecsdWrErrorField = value;
                    this.RaisePropertyChanged("RecsdWrError");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VideoListResult", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data.Video")]
    public partial class VideoListResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.MdvrFileListResult> lstResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.MdvrFileListResult> lstResult {
            get {
                return this.lstResultField;
            }
            set {
                if ((object.ReferenceEquals(this.lstResultField, value) != true)) {
                    this.lstResultField = value;
                    this.RaisePropertyChanged("lstResult");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MdvrFileListResult", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data.Video")]
    public partial class MdvrFileListResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int ChannelField;
        
        private bool Download_FlagField;
        
        private System.DateTime End_TimeField;
        
        private string Mdvr_File_IdField;
        
        private string Mdvr_File_SizeField;
        
        private System.DateTime Start_TimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Channel {
            get {
                return this.ChannelField;
            }
            set {
                if ((this.ChannelField.Equals(value) != true)) {
                    this.ChannelField = value;
                    this.RaisePropertyChanged("Channel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Download_Flag {
            get {
                return this.Download_FlagField;
            }
            set {
                if ((this.Download_FlagField.Equals(value) != true)) {
                    this.Download_FlagField = value;
                    this.RaisePropertyChanged("Download_Flag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime End_Time {
            get {
                return this.End_TimeField;
            }
            set {
                if ((this.End_TimeField.Equals(value) != true)) {
                    this.End_TimeField = value;
                    this.RaisePropertyChanged("End_Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mdvr_File_Id {
            get {
                return this.Mdvr_File_IdField;
            }
            set {
                if ((object.ReferenceEquals(this.Mdvr_File_IdField, value) != true)) {
                    this.Mdvr_File_IdField = value;
                    this.RaisePropertyChanged("Mdvr_File_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mdvr_File_Size {
            get {
                return this.Mdvr_File_SizeField;
            }
            set {
                if ((object.ReferenceEquals(this.Mdvr_File_SizeField, value) != true)) {
                    this.Mdvr_File_SizeField = value;
                    this.RaisePropertyChanged("Mdvr_File_Size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Start_Time {
            get {
                return this.Start_TimeField;
            }
            set {
                if ((this.Start_TimeField.Equals(value) != true)) {
                    this.Start_TimeField = value;
                    this.RaisePropertyChanged("Start_Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MessageService.IMessageService", CallbackContract=typeof(Gsafety.PTMS.ServiceReference.MessageService.IMessageServiceCallback))]
    public interface IMessageService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/SendCompleteAlarmMessage", ReplyAction="http://tempuri.org/IMessageService/SendCompleteAlarmMessageResponse")]
        System.IAsyncResult BeginSendCompleteAlarmMessage(Gsafety.PTMS.ServiceReference.MessageService.CompleteAlarm model, System.AsyncCallback callback, object asyncState);
        
        void EndSendCompleteAlarmMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/GetCompleteAlarmMessage", ReplyAction="http://tempuri.org/IMessageService/GetCompleteAlarmMessageResponse")]
        System.IAsyncResult BeginGetCompleteAlarmMessage(System.AsyncCallback callback, object asyncState);
        
        void EndGetCompleteAlarmMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/SendChangeGroupVechleMessage", ReplyAction="http://tempuri.org/IMessageService/SendChangeGroupVechleMessageResponse")]
        System.IAsyncResult BeginSendChangeGroupVechleMessage(Gsafety.PTMS.ServiceReference.MessageService.ChangeGroupVehicle model, System.AsyncCallback callback, object asyncState);
        
        void EndSendChangeGroupVechleMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/GetChangeGroupVechleMessage", ReplyAction="http://tempuri.org/IMessageService/GetChangeGroupVechleMessageResponse")]
        System.IAsyncResult BeginGetChangeGroupVechleMessage(System.AsyncCallback callback, object asyncState);
        
        void EndGetChangeGroupVechleMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/SendChangeGroupMessage", ReplyAction="http://tempuri.org/IMessageService/SendChangeGroupMessageResponse")]
        System.IAsyncResult BeginSendChangeGroupMessage(Gsafety.PTMS.ServiceReference.MessageService.ChangeGroup model, System.AsyncCallback callback, object asyncState);
        
        void EndSendChangeGroupMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/GetChangeGroupMessage", ReplyAction="http://tempuri.org/IMessageService/GetChangeGroupMessageResponse")]
        System.IAsyncResult BeginGetChangeGroupMessage(System.AsyncCallback callback, object asyncState);
        
        void EndGetChangeGroupMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/SendDeviceInstallMessage", ReplyAction="http://tempuri.org/IMessageService/SendDeviceInstallMessageResponse")]
        System.IAsyncResult BeginSendDeviceInstallMessage(Gsafety.PTMS.ServiceReference.MessageService.DeviceInstall model, System.AsyncCallback callback, object asyncState);
        
        void EndSendDeviceInstallMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/GetDeviceInstallMessage", ReplyAction="http://tempuri.org/IMessageService/GetDeviceInstallMessageResponse")]
        System.IAsyncResult BeginGetDeviceInstallMessage(System.AsyncCallback callback, object asyncState);
        
        void EndGetDeviceInstallMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/SendDeviceMaintainMessage", ReplyAction="http://tempuri.org/IMessageService/SendDeviceMaintainMessageResponse")]
        System.IAsyncResult BeginSendDeviceMaintainMessage(Gsafety.PTMS.ServiceReference.MessageService.DeviceMaintain model, System.AsyncCallback callback, object asyncState);
        
        void EndSendDeviceMaintainMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/GetDeviceMaintainMessage", ReplyAction="http://tempuri.org/IMessageService/GetDeviceMaintainMessageResponse")]
        System.IAsyncResult BeginGetDeviceMaintainMessage(System.AsyncCallback callback, object asyncState);
        
        void EndGetDeviceMaintainMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/SendHandingAlertMessage", ReplyAction="http://tempuri.org/IMessageService/SendHandingAlertMessageResponse")]
        System.IAsyncResult BeginSendHandingAlertMessage(Gsafety.PTMS.ServiceReference.MessageService.HandingAlert model, System.AsyncCallback callback, object asyncState);
        
        void EndSendHandingAlertMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/GetHandingAlertMessage", ReplyAction="http://tempuri.org/IMessageService/GetHandingAlertMessageResponse")]
        System.IAsyncResult BeginGetHandingAlertMessage(System.AsyncCallback callback, object asyncState);
        
        void EndGetHandingAlertMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/SendCompleteAlertMessage", ReplyAction="http://tempuri.org/IMessageService/SendCompleteAlertMessageResponse")]
        System.IAsyncResult BeginSendCompleteAlertMessage(Gsafety.PTMS.ServiceReference.MessageService.CompleteAlert modell, System.AsyncCallback callback, object asyncState);
        
        void EndSendCompleteAlertMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/GetCompleteAlertMessage", ReplyAction="http://tempuri.org/IMessageService/GetCompleteAlertMessageResponse")]
        System.IAsyncResult BeginGetCompleteAlertMessage(System.AsyncCallback callback, object asyncState);
        
        void EndGetCompleteAlertMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/SendStartInstallMessage", ReplyAction="http://tempuri.org/IMessageService/SendStartInstallMessageResponse")]
        System.IAsyncResult BeginSendStartInstallMessage(Gsafety.PTMS.ServiceReference.MessageService.StartInstall modell, System.AsyncCallback callback, object asyncState);
        
        void EndSendStartInstallMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/GetStartInstallMessage", ReplyAction="http://tempuri.org/IMessageService/GetStartInstallMessageResponse")]
        System.IAsyncResult BeginGetStartInstallMessage(System.AsyncCallback callback, object asyncState);
        
        void EndGetStartInstallMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/SendDeleteInstallMessage", ReplyAction="http://tempuri.org/IMessageService/SendDeleteInstallMessageResponse")]
        System.IAsyncResult BeginSendDeleteInstallMessage(Gsafety.PTMS.ServiceReference.MessageService.DeleteInstall model, System.AsyncCallback callback, object asyncState);
        
        void EndSendDeleteInstallMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/GetDeleteInstallMessage", ReplyAction="http://tempuri.org/IMessageService/GetDeleteInstallMessageResponse")]
        System.IAsyncResult BeginGetDeleteInstallMessage(System.AsyncCallback callback, object asyncState);
        
        void EndGetDeleteInstallMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/GetDeleteUserMessage", ReplyAction="http://tempuri.org/IMessageService/GetDeleteUserMessageResponse")]
        System.IAsyncResult BeginGetDeleteUserMessage(System.AsyncCallback callback, object asyncState);
        
        void EndGetDeleteUserMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/GetChangeUserMessage", ReplyAction="http://tempuri.org/IMessageService/GetChangeUserMessageResponse")]
        System.IAsyncResult BeginGetChangeUserMessage(System.AsyncCallback callback, object asyncState);
        
        void EndGetChangeUserMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/SendDeleteUserMessage", ReplyAction="http://tempuri.org/IMessageService/SendDeleteUserMessageResponse")]
        System.IAsyncResult BeginSendDeleteUserMessage(Gsafety.PTMS.ServiceReference.MessageService.DeleteUser model, System.AsyncCallback callback, object asyncState);
        
        void EndSendDeleteUserMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/SendChangeUserMessage", ReplyAction="http://tempuri.org/IMessageService/SendChangeUserMessageResponse")]
        System.IAsyncResult BeginSendChangeUserMessage(Gsafety.PTMS.ServiceReference.MessageService.ChangeUser model, System.AsyncCallback callback, object asyncState);
        
        void EndSendChangeUserMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/SendRouteMessage", ReplyAction="http://tempuri.org/IMessageService/SendRouteMessageResponse")]
        System.IAsyncResult BeginSendRouteMessage(Gsafety.PTMS.ServiceReference.MessageService.RouteCMD model, System.AsyncCallback callback, object asyncState);
        
        void EndSendRouteMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/SendRouteMessageSet", ReplyAction="http://tempuri.org/IMessageService/SendRouteMessageSetResponse")]
        System.IAsyncResult BeginSendRouteMessageSet(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.RouteCMD> routes, System.AsyncCallback callback, object asyncState);
        
        void EndSendRouteMessageSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/SendTravelPlanMessage", ReplyAction="http://tempuri.org/IMessageService/SendTravelPlanMessageResponse")]
        System.IAsyncResult BeginSendTravelPlanMessage(Gsafety.PTMS.ServiceReference.MessageService.TravelPlanCMD model, System.AsyncCallback callback, object asyncState);
        
        void EndSendTravelPlanMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/SendTravelPlanMessageSet", ReplyAction="http://tempuri.org/IMessageService/SendTravelPlanMessageSetResponse")]
        System.IAsyncResult BeginSendTravelPlanMessageSet(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.TravelPlanCMD> travelPlans, System.AsyncCallback callback, object asyncState);
        
        void EndSendTravelPlanMessageSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/SendUpgradeNotifyMessage", ReplyAction="http://tempuri.org/IMessageService/SendUpgradeNotifyMessageResponse")]
        System.IAsyncResult BeginSendUpgradeNotifyMessage(Gsafety.PTMS.ServiceReference.MessageService.UpgradeNotify model, System.AsyncCallback callback, object asyncState);
        
        void EndSendUpgradeNotifyMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/GetAlarmMessage", ReplyAction="http://tempuri.org/IMessageService/GetAlarmMessageResponse")]
        System.IAsyncResult BeginGetAlarmMessage(System.AsyncCallback callback, object asyncState);
        
        void EndGetAlarmMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/CancelAlarmMessage", ReplyAction="http://tempuri.org/IMessageService/CancelAlarmMessageResponse")]
        System.IAsyncResult BeginCancelAlarmMessage(System.AsyncCallback callback, object asyncState);
        
        void EndCancelAlarmMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/GetCancelAlarmMessage", ReplyAction="http://tempuri.org/IMessageService/GetCancelAlarmMessageResponse")]
        System.IAsyncResult BeginGetCancelAlarmMessage(System.AsyncCallback callback, object asyncState);
        
        void EndGetCancelAlarmMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/GetAlarmGpsMessage", ReplyAction="http://tempuri.org/IMessageService/GetAlarmGpsMessageResponse")]
        System.IAsyncResult BeginGetAlarmGpsMessage(string mdvrCoreId, System.AsyncCallback callback, object asyncState);
        
        void EndGetAlarmGpsMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/CancelAlarmGpsMessage", ReplyAction="http://tempuri.org/IMessageService/CancelAlarmGpsMessageResponse")]
        System.IAsyncResult BeginCancelAlarmGpsMessage(string mdvrCoreId, System.AsyncCallback callback, object asyncState);
        
        void EndCancelAlarmGpsMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/GetMonitorGpsMessage", ReplyAction="http://tempuri.org/IMessageService/GetMonitorGpsMessageResponse")]
        System.IAsyncResult BeginGetMonitorGpsMessage(Gsafety.PTMS.ServiceReference.MessageService.LocationMonitorCMD locationMonitorCmd, System.AsyncCallback callback, object asyncState);
        
        void EndGetMonitorGpsMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/CancelMonitorGpsMessage", ReplyAction="http://tempuri.org/IMessageService/CancelMonitorGpsMessageResponse")]
        System.IAsyncResult BeginCancelMonitorGpsMessage(Gsafety.PTMS.ServiceReference.MessageService.CancelLocationMonitorCMD cancelLocationMonitorCmd, System.AsyncCallback callback, object asyncState);
        
        void EndCancelMonitorGpsMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/GetLocationMonitorEndMessage", ReplyAction="http://tempuri.org/IMessageService/GetLocationMonitorEndMessageResponse")]
        System.IAsyncResult BeginGetLocationMonitorEndMessage(string SessionId, System.AsyncCallback callback, object asyncState);
        
        void EndGetLocationMonitorEndMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/GetCameraNoSignalAlertMessage", ReplyAction="http://tempuri.org/IMessageService/GetCameraNoSignalAlertMessageResponse")]
        System.IAsyncResult BeginGetCameraNoSignalAlertMessage(System.AsyncCallback callback, object asyncState);
        
        void EndGetCameraNoSignalAlertMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/CancelCameraNoSignalAlertMessage", ReplyAction="http://tempuri.org/IMessageService/CancelCameraNoSignalAlertMessageResponse")]
        System.IAsyncResult BeginCancelCameraNoSignalAlertMessage(System.AsyncCallback callback, object asyncState);
        
        void EndCancelCameraNoSignalAlertMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/GetCameraOcclusionAlertMessage", ReplyAction="http://tempuri.org/IMessageService/GetCameraOcclusionAlertMessageResponse")]
        System.IAsyncResult BeginGetCameraOcclusionAlertMessage(System.AsyncCallback callback, object asyncState);
        
        void EndGetCameraOcclusionAlertMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/CancelCameraOcclusionAlertMessage", ReplyAction="http://tempuri.org/IMessageService/CancelCameraOcclusionAlertMessageResponse")]
        System.IAsyncResult BeginCancelCameraOcclusionAlertMessage(System.AsyncCallback callback, object asyncState);
        
        void EndCancelCameraOcclusionAlertMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/GetFireAlertMessage", ReplyAction="http://tempuri.org/IMessageService/GetFireAlertMessageResponse")]
        System.IAsyncResult BeginGetFireAlertMessage(System.AsyncCallback callback, object asyncState);
        
        void EndGetFireAlertMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/CancelFireAlertMessage", ReplyAction="http://tempuri.org/IMessageService/CancelFireAlertMessageResponse")]
        System.IAsyncResult BeginCancelFireAlertMessage(System.AsyncCallback callback, object asyncState);
        
        void EndCancelFireAlertMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/GetGpsReceiverFaultAlertMessage", ReplyAction="http://tempuri.org/IMessageService/GetGpsReceiverFaultAlertMessageResponse")]
        System.IAsyncResult BeginGetGpsReceiverFaultAlertMessage(System.AsyncCallback callback, object asyncState);
        
        void EndGetGpsReceiverFaultAlertMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/CancelGpsReceiverFaultAlertMessage", ReplyAction="http://tempuri.org/IMessageService/CancelGpsReceiverFaultAlertMessageResponse")]
        System.IAsyncResult BeginCancelGpsReceiverFaultAlertMessage(System.AsyncCallback callback, object asyncState);
        
        void EndCancelGpsReceiverFaultAlertMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/GetMdvrMemoryCardErrorAlertMessage", ReplyAction="http://tempuri.org/IMessageService/GetMdvrMemoryCardErrorAlertMessageResponse")]
        System.IAsyncResult BeginGetMdvrMemoryCardErrorAlertMessage(System.AsyncCallback callback, object asyncState);
        
        void EndGetMdvrMemoryCardErrorAlertMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/CancelMdvrMemoryCardErrorAlertMessage", ReplyAction="http://tempuri.org/IMessageService/CancelMdvrMemoryCardErrorAlertMessageResponse")]
        System.IAsyncResult BeginCancelMdvrMemoryCardErrorAlertMessage(System.AsyncCallback callback, object asyncState);
        
        void EndCancelMdvrMemoryCardErrorAlertMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/GetOpenOrCloseDoorAbnormalAlertMessage", ReplyAction="http://tempuri.org/IMessageService/GetOpenOrCloseDoorAbnormalAlertMessageResponse" +
            "")]
        System.IAsyncResult BeginGetOpenOrCloseDoorAbnormalAlertMessage(System.AsyncCallback callback, object asyncState);
        
        void EndGetOpenOrCloseDoorAbnormalAlertMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/CancelOpenOrCloseDoorAbnormalAlertMessage", ReplyAction="http://tempuri.org/IMessageService/CancelOpenOrCloseDoorAbnormalAlertMessageRespo" +
            "nse")]
        System.IAsyncResult BeginCancelOpenOrCloseDoorAbnormalAlertMessage(System.AsyncCallback callback, object asyncState);
        
        void EndCancelOpenOrCloseDoorAbnormalAlertMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/GetOverSpeedAlertMessage", ReplyAction="http://tempuri.org/IMessageService/GetOverSpeedAlertMessageResponse")]
        System.IAsyncResult BeginGetOverSpeedAlertMessage(System.AsyncCallback callback, object asyncState);
        
        void EndGetOverSpeedAlertMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/CancelOverSpeedAlertMessage", ReplyAction="http://tempuri.org/IMessageService/CancelOverSpeedAlertMessageResponse")]
        System.IAsyncResult BeginCancelOverSpeedAlertMessage(System.AsyncCallback callback, object asyncState);
        
        void EndCancelOverSpeedAlertMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/GetRegionAlertMessage", ReplyAction="http://tempuri.org/IMessageService/GetRegionAlertMessageResponse")]
        System.IAsyncResult BeginGetRegionAlertMessage(System.AsyncCallback callback, object asyncState);
        
        void EndGetRegionAlertMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/CancelRegionAlertMessage", ReplyAction="http://tempuri.org/IMessageService/CancelRegionAlertMessageResponse")]
        System.IAsyncResult BeginCancelRegionAlertMessage(System.AsyncCallback callback, object asyncState);
        
        void EndCancelRegionAlertMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/GetRemoveDeviceSuiteAlertNotifyMessage", ReplyAction="http://tempuri.org/IMessageService/GetRemoveDeviceSuiteAlertNotifyMessageResponse" +
            "")]
        System.IAsyncResult BeginGetRemoveDeviceSuiteAlertNotifyMessage(System.AsyncCallback callback, object asyncState);
        
        void EndGetRemoveDeviceSuiteAlertNotifyMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/CancelRemoveDeviceSuiteAlertNotifyMessage", ReplyAction="http://tempuri.org/IMessageService/CancelRemoveDeviceSuiteAlertNotifyMessageRespo" +
            "nse")]
        System.IAsyncResult BeginCancelRemoveDeviceSuiteAlertNotifyMessage(System.AsyncCallback callback, object asyncState);
        
        void EndCancelRemoveDeviceSuiteAlertNotifyMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/GetTemperatureAlertMessage", ReplyAction="http://tempuri.org/IMessageService/GetTemperatureAlertMessageResponse")]
        System.IAsyncResult BeginGetTemperatureAlertMessage(System.AsyncCallback callback, object asyncState);
        
        void EndGetTemperatureAlertMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/CancelTemperatureAlertMessage", ReplyAction="http://tempuri.org/IMessageService/CancelTemperatureAlertMessageResponse")]
        System.IAsyncResult BeginCancelTemperatureAlertMessage(System.AsyncCallback callback, object asyncState);
        
        void EndCancelTemperatureAlertMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/GetVoltageAbnormalAlertMessage", ReplyAction="http://tempuri.org/IMessageService/GetVoltageAbnormalAlertMessageResponse")]
        System.IAsyncResult BeginGetVoltageAbnormalAlertMessage(System.AsyncCallback callback, object asyncState);
        
        void EndGetVoltageAbnormalAlertMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/CancelVoltageAbnormalAlertMessage", ReplyAction="http://tempuri.org/IMessageService/CancelVoltageAbnormalAlertMessageResponse")]
        System.IAsyncResult BeginCancelVoltageAbnormalAlertMessage(System.AsyncCallback callback, object asyncState);
        
        void EndCancelVoltageAbnormalAlertMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/GetInspectMessage", ReplyAction="http://tempuri.org/IMessageService/GetInspectMessageResponse")]
        System.IAsyncResult BeginGetInspectMessage(System.AsyncCallback callback, object asyncState);
        
        void EndGetInspectMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/CancelInspectMessage", ReplyAction="http://tempuri.org/IMessageService/CancelInspectMessageResponse")]
        System.IAsyncResult BeginCancelInspectMessage(System.AsyncCallback callback, object asyncState);
        
        void EndCancelInspectMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/GetOnOfflineMessage", ReplyAction="http://tempuri.org/IMessageService/GetOnOfflineMessageResponse")]
        System.IAsyncResult BeginGetOnOfflineMessage(System.AsyncCallback callback, object asyncState);
        
        void EndGetOnOfflineMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/CancelOnOfflineMessage", ReplyAction="http://tempuri.org/IMessageService/CancelOnOfflineMessageResponse")]
        System.IAsyncResult BeginCancelOnOfflineMessage(System.AsyncCallback callback, object asyncState);
        
        void EndCancelOnOfflineMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/GetSuiteRunintStatusMessage", ReplyAction="http://tempuri.org/IMessageService/GetSuiteRunintStatusMessageResponse")]
        System.IAsyncResult BeginGetSuiteRunintStatusMessage(System.AsyncCallback callback, object asyncState);
        
        void EndGetSuiteRunintStatusMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/GetFenceReplyMessage", ReplyAction="http://tempuri.org/IMessageService/GetFenceReplyMessageResponse")]
        System.IAsyncResult BeginGetFenceReplyMessage(System.AsyncCallback callback, object asyncState);
        
        void EndGetFenceReplyMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/GetSettingOverSpeedReplyMessage", ReplyAction="http://tempuri.org/IMessageService/GetSettingOverSpeedReplyMessageResponse")]
        System.IAsyncResult BeginGetSettingOverSpeedReplyMessage(System.AsyncCallback callback, object asyncState);
        
        void EndGetSettingOverSpeedReplyMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/SendUpgradeCMD", ReplyAction="http://tempuri.org/IMessageService/SendUpgradeCMDResponse")]
        System.IAsyncResult BeginSendUpgradeCMD(Gsafety.PTMS.ServiceReference.MessageService.UpgradeCMD modell, System.AsyncCallback callback, object asyncState);
        
        void EndSendUpgradeCMD(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/SendElectricFenceCMD", ReplyAction="http://tempuri.org/IMessageService/SendElectricFenceCMDResponse")]
        System.IAsyncResult BeginSendElectricFenceCMD(Gsafety.PTMS.ServiceReference.MessageService.ElectircFenceSendSettingModel modell, System.AsyncCallback callback, object asyncState);
        
        void EndSendElectricFenceCMD(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/SendElectricFenceCMDSet", ReplyAction="http://tempuri.org/IMessageService/SendElectricFenceCMDSetResponse")]
        System.IAsyncResult BeginSendElectricFenceCMDSet(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.ElectircFenceSendSettingModel> fenceSet, System.AsyncCallback callback, object asyncState);
        
        void EndSendElectricFenceCMDSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/SendGetUpgradeStatusCMD", ReplyAction="http://tempuri.org/IMessageService/SendGetUpgradeStatusCMDResponse")]
        System.IAsyncResult BeginSendGetUpgradeStatusCMD(Gsafety.PTMS.ServiceReference.MessageService.UpgradeStatusCMD model, System.AsyncCallback callback, object asyncState);
        
        void EndSendGetUpgradeStatusCMD(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/SendSettingOverSpeedCMD", ReplyAction="http://tempuri.org/IMessageService/SendSettingOverSpeedCMDResponse")]
        System.IAsyncResult BeginSendSettingOverSpeedCMD(Gsafety.PTMS.ServiceReference.MessageService.SettingOverSpeedCMD model, System.AsyncCallback callback, object asyncState);
        
        void EndSendSettingOverSpeedCMD(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/SendSettingOverSpeedCMDSet", ReplyAction="http://tempuri.org/IMessageService/SendSettingOverSpeedCMDSetResponse")]
        System.IAsyncResult BeginSendSettingOverSpeedCMDSet(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.SettingOverSpeedCMD> overSpeed, System.AsyncCallback callback, object asyncState);
        
        void EndSendSettingOverSpeedCMDSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/SendElectircFenceSetting", ReplyAction="http://tempuri.org/IMessageService/SendElectircFenceSettingResponse")]
        System.IAsyncResult BeginSendElectircFenceSetting(Gsafety.PTMS.ServiceReference.MessageService.ElectircFenceSendSettingModel model, System.AsyncCallback callback, object asyncState);
        
        void EndSendElectircFenceSetting(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/SendOverSpeedSetting", ReplyAction="http://tempuri.org/IMessageService/SendOverSpeedSettingResponse")]
        System.IAsyncResult BeginSendOverSpeedSetting(Gsafety.PTMS.ServiceReference.MessageService.OverSpeedSendSettingModel model, System.AsyncCallback callback, object asyncState);
        
        void EndSendOverSpeedSetting(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/SendSettingGpsUploadCMDSet", ReplyAction="http://tempuri.org/IMessageService/SendSettingGpsUploadCMDSetResponse")]
        System.IAsyncResult BeginSendSettingGpsUploadCMDSet(Gsafety.PTMS.ServiceReference.MessageService.GpsSendUpModel model, System.AsyncCallback callback, object asyncState);
        
        void EndSendSettingGpsUploadCMDSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/SendSettingAbnormalDoorUploadCMDSet", ReplyAction="http://tempuri.org/IMessageService/SendSettingAbnormalDoorUploadCMDSetResponse")]
        System.IAsyncResult BeginSendSettingAbnormalDoorUploadCMDSet(Gsafety.PTMS.ServiceReference.MessageService.AbnormalDoorSendUpModel model, System.AsyncCallback callback, object asyncState);
        
        void EndSendSettingAbnormalDoorUploadCMDSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/SendSettingTemperatureUploadCMDSet", ReplyAction="http://tempuri.org/IMessageService/SendSettingTemperatureUploadCMDSetResponse")]
        System.IAsyncResult BeginSendSettingTemperatureUploadCMDSet(Gsafety.PTMS.ServiceReference.MessageService.TemperatureSendUpModel model, System.AsyncCallback callback, object asyncState);
        
        void EndSendSettingTemperatureUploadCMDSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/SendSettingOneKeyAlarmUploadCMDSet", ReplyAction="http://tempuri.org/IMessageService/SendSettingOneKeyAlarmUploadCMDSetResponse")]
        System.IAsyncResult BeginSendSettingOneKeyAlarmUploadCMDSet(Gsafety.PTMS.ServiceReference.MessageService.OneKeyAlarmSendUpModel model, System.AsyncCallback callback, object asyncState);
        
        void EndSendSettingOneKeyAlarmUploadCMDSet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/SendInfomationCommand", ReplyAction="http://tempuri.org/IMessageService/SendInfomationCommandResponse")]
        System.IAsyncResult BeginSendInfomationCommand(Gsafety.PTMS.ServiceReference.MessageService.SendInfomationModel model, System.AsyncCallback callback, object asyncState);
        
        void EndSendInfomationCommand(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/SendGetVideoListCMD", ReplyAction="http://tempuri.org/IMessageService/SendGetVideoListCMDResponse")]
        System.IAsyncResult BeginSendGetVideoListCMD(Gsafety.PTMS.ServiceReference.MessageService.QueryMdvrFileList model, System.AsyncCallback callback, object asyncState);
        
        void EndSendGetVideoListCMD(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/GetSettingVideoListReplyMessage", ReplyAction="http://tempuri.org/IMessageService/GetSettingVideoListReplyMessageResponse")]
        System.IAsyncResult BeginGetSettingVideoListReplyMessage(System.AsyncCallback callback, object asyncState);
        
        void EndGetSettingVideoListReplyMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/GetV23ReplyMessage", ReplyAction="http://tempuri.org/IMessageService/GetV23ReplyMessageResponse")]
        System.IAsyncResult BeginGetV23ReplyMessage(System.AsyncCallback callback, object asyncState);
        
        void EndGetV23ReplyMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/SendDownloadMdvrFile", ReplyAction="http://tempuri.org/IMessageService/SendDownloadMdvrFileResponse")]
        System.IAsyncResult BeginSendDownloadMdvrFile(Gsafety.PTMS.ServiceReference.MessageService.DownloadFile model, System.AsyncCallback callback, object asyncState);
        
        void EndSendDownloadMdvrFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMessageService/Init", ReplyAction="http://tempuri.org/IMessageService/InitResponse")]
        System.IAsyncResult BeginInit(string QUEUE, Gsafety.PTMS.ServiceReference.MessageService.RuleInfo ruleInfo, System.AsyncCallback callback, object asyncState);
        
        void EndInit(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMessageServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMessageService/MessageCallBack")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.UpgradeCMD))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.LocationMonitorCMD))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.CancelLocationMonitorCMD))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.AlarmInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.HandingAlert))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.CompleteAlert))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.HandingAlarm))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.DeviceMaintain))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.DeviceInstall))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.CompleteAlarm))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.CameraNoSignalAlert))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.CameraOcclusionAlert))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.FireAlert))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.GpsReceiverFaultAlert))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.MdvrMemoryCardErrorAlert))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.OpenOrCloseDoorAbnormalAlert))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.OverSpeedAlert))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.RegionAlert))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.RemoveDeviceSuiteAlertNotify))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.TemperatureAlert))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.VoltageAbnormalAlert))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.InspectInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.GPS))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.PTMSGPS))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.OnOffline))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.ElectircFenceSendSettingModel))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.ElectricFenceCMD))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.HeartbeatInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.ElectricFenceReply))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.SettingOverSpeedReply))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.TravelPlanCMD))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.RealAlarm))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.EndLocationMonitor))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.LocationMonitorEndType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.SettingGpsSendUpCMD))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.GpsSendType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.GpsSendUpModel))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.ChangeGroupVehicle))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.ChangeGroup))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.StartInstall))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.DeleteInstall))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.DeleteUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.ChangeUser))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.RouteCMD))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.RouteCMD>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.TravelPlanCMD>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.UpgradeNotify))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.ElectircFenceSendSettingModel>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.UpgradeStatusCMD))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.SettingOverSpeedCMD))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.SettingOverSpeedCMD>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.OverSpeedSendSettingModel))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.AbnormalDoorSendUpModel))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.SettingAbnormalDoorCMD))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.TemperatureSendUpModel))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.SettingTemperatureCMD))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.TemperatureMarkType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.OneKeyAlarmSendUpModel))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.SettingDelayAlarmCMD))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.SettingOneKeyAlarmCMD))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.SendInfomationModel))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.RuleInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.Province>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.Province))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.City>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.City))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.Company>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.Company))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.BasicInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.Enviroment))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.Hardware))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.DownwardBase))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.RuleOperationType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.AlertBaseModel))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.BaseSettingModel))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.SelectInfoModel>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.SelectInfoModel))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.SettingType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.ElectricFenceOperType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.AreaType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.ReplyBaseModel))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<int>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<string>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.SendInfomationCMD))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.SendInfomationType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.DisplayPositionType>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.DisplayPositionType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.QueryMdvrFileList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.DownloadFile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.VideoListResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.MdvrFileListResult>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.MessageService.MdvrFileListResult))]
        void MessageCallBack(object message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMessageServiceChannel : Gsafety.PTMS.ServiceReference.MessageService.IMessageService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MessageServiceClient : System.ServiceModel.DuplexClientBase<Gsafety.PTMS.ServiceReference.MessageService.IMessageService>, Gsafety.PTMS.ServiceReference.MessageService.IMessageService {
        
        private BeginOperationDelegate onBeginSendCompleteAlarmMessageDelegate;
        
        private EndOperationDelegate onEndSendCompleteAlarmMessageDelegate;
        
        private System.Threading.SendOrPostCallback onSendCompleteAlarmMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCompleteAlarmMessageDelegate;
        
        private EndOperationDelegate onEndGetCompleteAlarmMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetCompleteAlarmMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendChangeGroupVechleMessageDelegate;
        
        private EndOperationDelegate onEndSendChangeGroupVechleMessageDelegate;
        
        private System.Threading.SendOrPostCallback onSendChangeGroupVechleMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetChangeGroupVechleMessageDelegate;
        
        private EndOperationDelegate onEndGetChangeGroupVechleMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetChangeGroupVechleMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendChangeGroupMessageDelegate;
        
        private EndOperationDelegate onEndSendChangeGroupMessageDelegate;
        
        private System.Threading.SendOrPostCallback onSendChangeGroupMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetChangeGroupMessageDelegate;
        
        private EndOperationDelegate onEndGetChangeGroupMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetChangeGroupMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendDeviceInstallMessageDelegate;
        
        private EndOperationDelegate onEndSendDeviceInstallMessageDelegate;
        
        private System.Threading.SendOrPostCallback onSendDeviceInstallMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDeviceInstallMessageDelegate;
        
        private EndOperationDelegate onEndGetDeviceInstallMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetDeviceInstallMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendDeviceMaintainMessageDelegate;
        
        private EndOperationDelegate onEndSendDeviceMaintainMessageDelegate;
        
        private System.Threading.SendOrPostCallback onSendDeviceMaintainMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDeviceMaintainMessageDelegate;
        
        private EndOperationDelegate onEndGetDeviceMaintainMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetDeviceMaintainMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendHandingAlertMessageDelegate;
        
        private EndOperationDelegate onEndSendHandingAlertMessageDelegate;
        
        private System.Threading.SendOrPostCallback onSendHandingAlertMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHandingAlertMessageDelegate;
        
        private EndOperationDelegate onEndGetHandingAlertMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetHandingAlertMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendCompleteAlertMessageDelegate;
        
        private EndOperationDelegate onEndSendCompleteAlertMessageDelegate;
        
        private System.Threading.SendOrPostCallback onSendCompleteAlertMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCompleteAlertMessageDelegate;
        
        private EndOperationDelegate onEndGetCompleteAlertMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetCompleteAlertMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendStartInstallMessageDelegate;
        
        private EndOperationDelegate onEndSendStartInstallMessageDelegate;
        
        private System.Threading.SendOrPostCallback onSendStartInstallMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStartInstallMessageDelegate;
        
        private EndOperationDelegate onEndGetStartInstallMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetStartInstallMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendDeleteInstallMessageDelegate;
        
        private EndOperationDelegate onEndSendDeleteInstallMessageDelegate;
        
        private System.Threading.SendOrPostCallback onSendDeleteInstallMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDeleteInstallMessageDelegate;
        
        private EndOperationDelegate onEndGetDeleteInstallMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetDeleteInstallMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDeleteUserMessageDelegate;
        
        private EndOperationDelegate onEndGetDeleteUserMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetDeleteUserMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetChangeUserMessageDelegate;
        
        private EndOperationDelegate onEndGetChangeUserMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetChangeUserMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendDeleteUserMessageDelegate;
        
        private EndOperationDelegate onEndSendDeleteUserMessageDelegate;
        
        private System.Threading.SendOrPostCallback onSendDeleteUserMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendChangeUserMessageDelegate;
        
        private EndOperationDelegate onEndSendChangeUserMessageDelegate;
        
        private System.Threading.SendOrPostCallback onSendChangeUserMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendRouteMessageDelegate;
        
        private EndOperationDelegate onEndSendRouteMessageDelegate;
        
        private System.Threading.SendOrPostCallback onSendRouteMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendRouteMessageSetDelegate;
        
        private EndOperationDelegate onEndSendRouteMessageSetDelegate;
        
        private System.Threading.SendOrPostCallback onSendRouteMessageSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendTravelPlanMessageDelegate;
        
        private EndOperationDelegate onEndSendTravelPlanMessageDelegate;
        
        private System.Threading.SendOrPostCallback onSendTravelPlanMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendTravelPlanMessageSetDelegate;
        
        private EndOperationDelegate onEndSendTravelPlanMessageSetDelegate;
        
        private System.Threading.SendOrPostCallback onSendTravelPlanMessageSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendUpgradeNotifyMessageDelegate;
        
        private EndOperationDelegate onEndSendUpgradeNotifyMessageDelegate;
        
        private System.Threading.SendOrPostCallback onSendUpgradeNotifyMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAlarmMessageDelegate;
        
        private EndOperationDelegate onEndGetAlarmMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetAlarmMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginCancelAlarmMessageDelegate;
        
        private EndOperationDelegate onEndCancelAlarmMessageDelegate;
        
        private System.Threading.SendOrPostCallback onCancelAlarmMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCancelAlarmMessageDelegate;
        
        private EndOperationDelegate onEndGetCancelAlarmMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetCancelAlarmMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAlarmGpsMessageDelegate;
        
        private EndOperationDelegate onEndGetAlarmGpsMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetAlarmGpsMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginCancelAlarmGpsMessageDelegate;
        
        private EndOperationDelegate onEndCancelAlarmGpsMessageDelegate;
        
        private System.Threading.SendOrPostCallback onCancelAlarmGpsMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMonitorGpsMessageDelegate;
        
        private EndOperationDelegate onEndGetMonitorGpsMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetMonitorGpsMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginCancelMonitorGpsMessageDelegate;
        
        private EndOperationDelegate onEndCancelMonitorGpsMessageDelegate;
        
        private System.Threading.SendOrPostCallback onCancelMonitorGpsMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLocationMonitorEndMessageDelegate;
        
        private EndOperationDelegate onEndGetLocationMonitorEndMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetLocationMonitorEndMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCameraNoSignalAlertMessageDelegate;
        
        private EndOperationDelegate onEndGetCameraNoSignalAlertMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetCameraNoSignalAlertMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginCancelCameraNoSignalAlertMessageDelegate;
        
        private EndOperationDelegate onEndCancelCameraNoSignalAlertMessageDelegate;
        
        private System.Threading.SendOrPostCallback onCancelCameraNoSignalAlertMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCameraOcclusionAlertMessageDelegate;
        
        private EndOperationDelegate onEndGetCameraOcclusionAlertMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetCameraOcclusionAlertMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginCancelCameraOcclusionAlertMessageDelegate;
        
        private EndOperationDelegate onEndCancelCameraOcclusionAlertMessageDelegate;
        
        private System.Threading.SendOrPostCallback onCancelCameraOcclusionAlertMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFireAlertMessageDelegate;
        
        private EndOperationDelegate onEndGetFireAlertMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetFireAlertMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginCancelFireAlertMessageDelegate;
        
        private EndOperationDelegate onEndCancelFireAlertMessageDelegate;
        
        private System.Threading.SendOrPostCallback onCancelFireAlertMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetGpsReceiverFaultAlertMessageDelegate;
        
        private EndOperationDelegate onEndGetGpsReceiverFaultAlertMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetGpsReceiverFaultAlertMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginCancelGpsReceiverFaultAlertMessageDelegate;
        
        private EndOperationDelegate onEndCancelGpsReceiverFaultAlertMessageDelegate;
        
        private System.Threading.SendOrPostCallback onCancelGpsReceiverFaultAlertMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMdvrMemoryCardErrorAlertMessageDelegate;
        
        private EndOperationDelegate onEndGetMdvrMemoryCardErrorAlertMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetMdvrMemoryCardErrorAlertMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginCancelMdvrMemoryCardErrorAlertMessageDelegate;
        
        private EndOperationDelegate onEndCancelMdvrMemoryCardErrorAlertMessageDelegate;
        
        private System.Threading.SendOrPostCallback onCancelMdvrMemoryCardErrorAlertMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOpenOrCloseDoorAbnormalAlertMessageDelegate;
        
        private EndOperationDelegate onEndGetOpenOrCloseDoorAbnormalAlertMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetOpenOrCloseDoorAbnormalAlertMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginCancelOpenOrCloseDoorAbnormalAlertMessageDelegate;
        
        private EndOperationDelegate onEndCancelOpenOrCloseDoorAbnormalAlertMessageDelegate;
        
        private System.Threading.SendOrPostCallback onCancelOpenOrCloseDoorAbnormalAlertMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOverSpeedAlertMessageDelegate;
        
        private EndOperationDelegate onEndGetOverSpeedAlertMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetOverSpeedAlertMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginCancelOverSpeedAlertMessageDelegate;
        
        private EndOperationDelegate onEndCancelOverSpeedAlertMessageDelegate;
        
        private System.Threading.SendOrPostCallback onCancelOverSpeedAlertMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRegionAlertMessageDelegate;
        
        private EndOperationDelegate onEndGetRegionAlertMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetRegionAlertMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginCancelRegionAlertMessageDelegate;
        
        private EndOperationDelegate onEndCancelRegionAlertMessageDelegate;
        
        private System.Threading.SendOrPostCallback onCancelRegionAlertMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRemoveDeviceSuiteAlertNotifyMessageDelegate;
        
        private EndOperationDelegate onEndGetRemoveDeviceSuiteAlertNotifyMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetRemoveDeviceSuiteAlertNotifyMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginCancelRemoveDeviceSuiteAlertNotifyMessageDelegate;
        
        private EndOperationDelegate onEndCancelRemoveDeviceSuiteAlertNotifyMessageDelegate;
        
        private System.Threading.SendOrPostCallback onCancelRemoveDeviceSuiteAlertNotifyMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTemperatureAlertMessageDelegate;
        
        private EndOperationDelegate onEndGetTemperatureAlertMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetTemperatureAlertMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginCancelTemperatureAlertMessageDelegate;
        
        private EndOperationDelegate onEndCancelTemperatureAlertMessageDelegate;
        
        private System.Threading.SendOrPostCallback onCancelTemperatureAlertMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVoltageAbnormalAlertMessageDelegate;
        
        private EndOperationDelegate onEndGetVoltageAbnormalAlertMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetVoltageAbnormalAlertMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginCancelVoltageAbnormalAlertMessageDelegate;
        
        private EndOperationDelegate onEndCancelVoltageAbnormalAlertMessageDelegate;
        
        private System.Threading.SendOrPostCallback onCancelVoltageAbnormalAlertMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInspectMessageDelegate;
        
        private EndOperationDelegate onEndGetInspectMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetInspectMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginCancelInspectMessageDelegate;
        
        private EndOperationDelegate onEndCancelInspectMessageDelegate;
        
        private System.Threading.SendOrPostCallback onCancelInspectMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOnOfflineMessageDelegate;
        
        private EndOperationDelegate onEndGetOnOfflineMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetOnOfflineMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginCancelOnOfflineMessageDelegate;
        
        private EndOperationDelegate onEndCancelOnOfflineMessageDelegate;
        
        private System.Threading.SendOrPostCallback onCancelOnOfflineMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSuiteRunintStatusMessageDelegate;
        
        private EndOperationDelegate onEndGetSuiteRunintStatusMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetSuiteRunintStatusMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFenceReplyMessageDelegate;
        
        private EndOperationDelegate onEndGetFenceReplyMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetFenceReplyMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSettingOverSpeedReplyMessageDelegate;
        
        private EndOperationDelegate onEndGetSettingOverSpeedReplyMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetSettingOverSpeedReplyMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendUpgradeCMDDelegate;
        
        private EndOperationDelegate onEndSendUpgradeCMDDelegate;
        
        private System.Threading.SendOrPostCallback onSendUpgradeCMDCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendElectricFenceCMDDelegate;
        
        private EndOperationDelegate onEndSendElectricFenceCMDDelegate;
        
        private System.Threading.SendOrPostCallback onSendElectricFenceCMDCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendElectricFenceCMDSetDelegate;
        
        private EndOperationDelegate onEndSendElectricFenceCMDSetDelegate;
        
        private System.Threading.SendOrPostCallback onSendElectricFenceCMDSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendGetUpgradeStatusCMDDelegate;
        
        private EndOperationDelegate onEndSendGetUpgradeStatusCMDDelegate;
        
        private System.Threading.SendOrPostCallback onSendGetUpgradeStatusCMDCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendSettingOverSpeedCMDDelegate;
        
        private EndOperationDelegate onEndSendSettingOverSpeedCMDDelegate;
        
        private System.Threading.SendOrPostCallback onSendSettingOverSpeedCMDCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendSettingOverSpeedCMDSetDelegate;
        
        private EndOperationDelegate onEndSendSettingOverSpeedCMDSetDelegate;
        
        private System.Threading.SendOrPostCallback onSendSettingOverSpeedCMDSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendElectircFenceSettingDelegate;
        
        private EndOperationDelegate onEndSendElectircFenceSettingDelegate;
        
        private System.Threading.SendOrPostCallback onSendElectircFenceSettingCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendOverSpeedSettingDelegate;
        
        private EndOperationDelegate onEndSendOverSpeedSettingDelegate;
        
        private System.Threading.SendOrPostCallback onSendOverSpeedSettingCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendSettingGpsUploadCMDSetDelegate;
        
        private EndOperationDelegate onEndSendSettingGpsUploadCMDSetDelegate;
        
        private System.Threading.SendOrPostCallback onSendSettingGpsUploadCMDSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendSettingAbnormalDoorUploadCMDSetDelegate;
        
        private EndOperationDelegate onEndSendSettingAbnormalDoorUploadCMDSetDelegate;
        
        private System.Threading.SendOrPostCallback onSendSettingAbnormalDoorUploadCMDSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendSettingTemperatureUploadCMDSetDelegate;
        
        private EndOperationDelegate onEndSendSettingTemperatureUploadCMDSetDelegate;
        
        private System.Threading.SendOrPostCallback onSendSettingTemperatureUploadCMDSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendSettingOneKeyAlarmUploadCMDSetDelegate;
        
        private EndOperationDelegate onEndSendSettingOneKeyAlarmUploadCMDSetDelegate;
        
        private System.Threading.SendOrPostCallback onSendSettingOneKeyAlarmUploadCMDSetCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendInfomationCommandDelegate;
        
        private EndOperationDelegate onEndSendInfomationCommandDelegate;
        
        private System.Threading.SendOrPostCallback onSendInfomationCommandCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendGetVideoListCMDDelegate;
        
        private EndOperationDelegate onEndSendGetVideoListCMDDelegate;
        
        private System.Threading.SendOrPostCallback onSendGetVideoListCMDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSettingVideoListReplyMessageDelegate;
        
        private EndOperationDelegate onEndGetSettingVideoListReplyMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetSettingVideoListReplyMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetV23ReplyMessageDelegate;
        
        private EndOperationDelegate onEndGetV23ReplyMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetV23ReplyMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendDownloadMdvrFileDelegate;
        
        private EndOperationDelegate onEndSendDownloadMdvrFileDelegate;
        
        private System.Threading.SendOrPostCallback onSendDownloadMdvrFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginInitDelegate;
        
        private EndOperationDelegate onEndInitDelegate;
        
        private System.Threading.SendOrPostCallback onInitCompletedDelegate;
        
        private bool useGeneratedCallback;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public MessageServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public MessageServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public MessageServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MessageServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MessageServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public MessageServiceClient(string endpointConfigurationName) : 
                this(new MessageServiceClientCallback(), endpointConfigurationName) {
        }
        
        private MessageServiceClient(MessageServiceClientCallback callbackImpl, string endpointConfigurationName) : 
                this(new System.ServiceModel.InstanceContext(callbackImpl), endpointConfigurationName) {
            useGeneratedCallback = true;
            callbackImpl.Initialize(this);
        }
        
        public MessageServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                this(new MessageServiceClientCallback(), binding, remoteAddress) {
        }
        
        private MessageServiceClient(MessageServiceClientCallback callbackImpl, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                this(new System.ServiceModel.InstanceContext(callbackImpl), binding, remoteAddress) {
            useGeneratedCallback = true;
            callbackImpl.Initialize(this);
        }
        
        public MessageServiceClient() : 
                this(new MessageServiceClientCallback()) {
        }
        
        private MessageServiceClient(MessageServiceClientCallback callbackImpl) : 
                this(new System.ServiceModel.InstanceContext(callbackImpl)) {
            useGeneratedCallback = true;
            callbackImpl.Initialize(this);
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendCompleteAlarmMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetCompleteAlarmMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendChangeGroupVechleMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetChangeGroupVechleMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendChangeGroupMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetChangeGroupMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendDeviceInstallMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetDeviceInstallMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendDeviceMaintainMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetDeviceMaintainMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendHandingAlertMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetHandingAlertMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendCompleteAlertMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetCompleteAlertMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendStartInstallMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetStartInstallMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendDeleteInstallMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetDeleteInstallMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetDeleteUserMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetChangeUserMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendDeleteUserMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendChangeUserMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendRouteMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendRouteMessageSetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendTravelPlanMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendTravelPlanMessageSetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendUpgradeNotifyMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetAlarmMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CancelAlarmMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetCancelAlarmMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetAlarmGpsMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CancelAlarmGpsMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetMonitorGpsMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CancelMonitorGpsMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetLocationMonitorEndMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetCameraNoSignalAlertMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CancelCameraNoSignalAlertMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetCameraOcclusionAlertMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CancelCameraOcclusionAlertMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetFireAlertMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CancelFireAlertMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetGpsReceiverFaultAlertMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CancelGpsReceiverFaultAlertMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetMdvrMemoryCardErrorAlertMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CancelMdvrMemoryCardErrorAlertMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetOpenOrCloseDoorAbnormalAlertMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CancelOpenOrCloseDoorAbnormalAlertMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetOverSpeedAlertMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CancelOverSpeedAlertMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetRegionAlertMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CancelRegionAlertMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetRemoveDeviceSuiteAlertNotifyMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CancelRemoveDeviceSuiteAlertNotifyMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetTemperatureAlertMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CancelTemperatureAlertMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetVoltageAbnormalAlertMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CancelVoltageAbnormalAlertMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetInspectMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CancelInspectMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetOnOfflineMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CancelOnOfflineMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetSuiteRunintStatusMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetFenceReplyMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetSettingOverSpeedReplyMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendUpgradeCMDCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendElectricFenceCMDCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendElectricFenceCMDSetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendGetUpgradeStatusCMDCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendSettingOverSpeedCMDCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendSettingOverSpeedCMDSetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendElectircFenceSettingCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendOverSpeedSettingCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendSettingGpsUploadCMDSetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendSettingAbnormalDoorUploadCMDSetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendSettingTemperatureUploadCMDSetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendSettingOneKeyAlarmUploadCMDSetCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendInfomationCommandCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendGetVideoListCMDCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetSettingVideoListReplyMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetV23ReplyMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendDownloadMdvrFileCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InitCompleted;
        
        public event System.EventHandler<MessageCallBackReceivedEventArgs> MessageCallBackReceived;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginSendCompleteAlarmMessage(Gsafety.PTMS.ServiceReference.MessageService.CompleteAlarm model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendCompleteAlarmMessage(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndSendCompleteAlarmMessage(System.IAsyncResult result) {
            base.Channel.EndSendCompleteAlarmMessage(result);
        }
        
        private System.IAsyncResult OnBeginSendCompleteAlarmMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            Gsafety.PTMS.ServiceReference.MessageService.CompleteAlarm model = ((Gsafety.PTMS.ServiceReference.MessageService.CompleteAlarm)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginSendCompleteAlarmMessage(model, callback, asyncState);
        }
        
        private object[] OnEndSendCompleteAlarmMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndSendCompleteAlarmMessage(result);
            return null;
        }
        
        private void OnSendCompleteAlarmMessageCompleted(object state) {
            if ((this.SendCompleteAlarmMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendCompleteAlarmMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendCompleteAlarmMessageAsync(Gsafety.PTMS.ServiceReference.MessageService.CompleteAlarm model) {
            this.SendCompleteAlarmMessageAsync(model, null);
        }
        
        public void SendCompleteAlarmMessageAsync(Gsafety.PTMS.ServiceReference.MessageService.CompleteAlarm model, object userState) {
            if ((this.onBeginSendCompleteAlarmMessageDelegate == null)) {
                this.onBeginSendCompleteAlarmMessageDelegate = new BeginOperationDelegate(this.OnBeginSendCompleteAlarmMessage);
            }
            if ((this.onEndSendCompleteAlarmMessageDelegate == null)) {
                this.onEndSendCompleteAlarmMessageDelegate = new EndOperationDelegate(this.OnEndSendCompleteAlarmMessage);
            }
            if ((this.onSendCompleteAlarmMessageCompletedDelegate == null)) {
                this.onSendCompleteAlarmMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendCompleteAlarmMessageCompleted);
            }
            base.InvokeAsync(this.onBeginSendCompleteAlarmMessageDelegate, new object[] {
                        model}, this.onEndSendCompleteAlarmMessageDelegate, this.onSendCompleteAlarmMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginGetCompleteAlarmMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCompleteAlarmMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndGetCompleteAlarmMessage(System.IAsyncResult result) {
            base.Channel.EndGetCompleteAlarmMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetCompleteAlarmMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginGetCompleteAlarmMessage(callback, asyncState);
        }
        
        private object[] OnEndGetCompleteAlarmMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndGetCompleteAlarmMessage(result);
            return null;
        }
        
        private void OnGetCompleteAlarmMessageCompleted(object state) {
            if ((this.GetCompleteAlarmMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCompleteAlarmMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCompleteAlarmMessageAsync() {
            this.GetCompleteAlarmMessageAsync(null);
        }
        
        public void GetCompleteAlarmMessageAsync(object userState) {
            if ((this.onBeginGetCompleteAlarmMessageDelegate == null)) {
                this.onBeginGetCompleteAlarmMessageDelegate = new BeginOperationDelegate(this.OnBeginGetCompleteAlarmMessage);
            }
            if ((this.onEndGetCompleteAlarmMessageDelegate == null)) {
                this.onEndGetCompleteAlarmMessageDelegate = new EndOperationDelegate(this.OnEndGetCompleteAlarmMessage);
            }
            if ((this.onGetCompleteAlarmMessageCompletedDelegate == null)) {
                this.onGetCompleteAlarmMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCompleteAlarmMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetCompleteAlarmMessageDelegate, null, this.onEndGetCompleteAlarmMessageDelegate, this.onGetCompleteAlarmMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginSendChangeGroupVechleMessage(Gsafety.PTMS.ServiceReference.MessageService.ChangeGroupVehicle model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendChangeGroupVechleMessage(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndSendChangeGroupVechleMessage(System.IAsyncResult result) {
            base.Channel.EndSendChangeGroupVechleMessage(result);
        }
        
        private System.IAsyncResult OnBeginSendChangeGroupVechleMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            Gsafety.PTMS.ServiceReference.MessageService.ChangeGroupVehicle model = ((Gsafety.PTMS.ServiceReference.MessageService.ChangeGroupVehicle)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginSendChangeGroupVechleMessage(model, callback, asyncState);
        }
        
        private object[] OnEndSendChangeGroupVechleMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndSendChangeGroupVechleMessage(result);
            return null;
        }
        
        private void OnSendChangeGroupVechleMessageCompleted(object state) {
            if ((this.SendChangeGroupVechleMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendChangeGroupVechleMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendChangeGroupVechleMessageAsync(Gsafety.PTMS.ServiceReference.MessageService.ChangeGroupVehicle model) {
            this.SendChangeGroupVechleMessageAsync(model, null);
        }
        
        public void SendChangeGroupVechleMessageAsync(Gsafety.PTMS.ServiceReference.MessageService.ChangeGroupVehicle model, object userState) {
            if ((this.onBeginSendChangeGroupVechleMessageDelegate == null)) {
                this.onBeginSendChangeGroupVechleMessageDelegate = new BeginOperationDelegate(this.OnBeginSendChangeGroupVechleMessage);
            }
            if ((this.onEndSendChangeGroupVechleMessageDelegate == null)) {
                this.onEndSendChangeGroupVechleMessageDelegate = new EndOperationDelegate(this.OnEndSendChangeGroupVechleMessage);
            }
            if ((this.onSendChangeGroupVechleMessageCompletedDelegate == null)) {
                this.onSendChangeGroupVechleMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendChangeGroupVechleMessageCompleted);
            }
            base.InvokeAsync(this.onBeginSendChangeGroupVechleMessageDelegate, new object[] {
                        model}, this.onEndSendChangeGroupVechleMessageDelegate, this.onSendChangeGroupVechleMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginGetChangeGroupVechleMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetChangeGroupVechleMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndGetChangeGroupVechleMessage(System.IAsyncResult result) {
            base.Channel.EndGetChangeGroupVechleMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetChangeGroupVechleMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginGetChangeGroupVechleMessage(callback, asyncState);
        }
        
        private object[] OnEndGetChangeGroupVechleMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndGetChangeGroupVechleMessage(result);
            return null;
        }
        
        private void OnGetChangeGroupVechleMessageCompleted(object state) {
            if ((this.GetChangeGroupVechleMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetChangeGroupVechleMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetChangeGroupVechleMessageAsync() {
            this.GetChangeGroupVechleMessageAsync(null);
        }
        
        public void GetChangeGroupVechleMessageAsync(object userState) {
            if ((this.onBeginGetChangeGroupVechleMessageDelegate == null)) {
                this.onBeginGetChangeGroupVechleMessageDelegate = new BeginOperationDelegate(this.OnBeginGetChangeGroupVechleMessage);
            }
            if ((this.onEndGetChangeGroupVechleMessageDelegate == null)) {
                this.onEndGetChangeGroupVechleMessageDelegate = new EndOperationDelegate(this.OnEndGetChangeGroupVechleMessage);
            }
            if ((this.onGetChangeGroupVechleMessageCompletedDelegate == null)) {
                this.onGetChangeGroupVechleMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetChangeGroupVechleMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetChangeGroupVechleMessageDelegate, null, this.onEndGetChangeGroupVechleMessageDelegate, this.onGetChangeGroupVechleMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginSendChangeGroupMessage(Gsafety.PTMS.ServiceReference.MessageService.ChangeGroup model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendChangeGroupMessage(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndSendChangeGroupMessage(System.IAsyncResult result) {
            base.Channel.EndSendChangeGroupMessage(result);
        }
        
        private System.IAsyncResult OnBeginSendChangeGroupMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            Gsafety.PTMS.ServiceReference.MessageService.ChangeGroup model = ((Gsafety.PTMS.ServiceReference.MessageService.ChangeGroup)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginSendChangeGroupMessage(model, callback, asyncState);
        }
        
        private object[] OnEndSendChangeGroupMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndSendChangeGroupMessage(result);
            return null;
        }
        
        private void OnSendChangeGroupMessageCompleted(object state) {
            if ((this.SendChangeGroupMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendChangeGroupMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendChangeGroupMessageAsync(Gsafety.PTMS.ServiceReference.MessageService.ChangeGroup model) {
            this.SendChangeGroupMessageAsync(model, null);
        }
        
        public void SendChangeGroupMessageAsync(Gsafety.PTMS.ServiceReference.MessageService.ChangeGroup model, object userState) {
            if ((this.onBeginSendChangeGroupMessageDelegate == null)) {
                this.onBeginSendChangeGroupMessageDelegate = new BeginOperationDelegate(this.OnBeginSendChangeGroupMessage);
            }
            if ((this.onEndSendChangeGroupMessageDelegate == null)) {
                this.onEndSendChangeGroupMessageDelegate = new EndOperationDelegate(this.OnEndSendChangeGroupMessage);
            }
            if ((this.onSendChangeGroupMessageCompletedDelegate == null)) {
                this.onSendChangeGroupMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendChangeGroupMessageCompleted);
            }
            base.InvokeAsync(this.onBeginSendChangeGroupMessageDelegate, new object[] {
                        model}, this.onEndSendChangeGroupMessageDelegate, this.onSendChangeGroupMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginGetChangeGroupMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetChangeGroupMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndGetChangeGroupMessage(System.IAsyncResult result) {
            base.Channel.EndGetChangeGroupMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetChangeGroupMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginGetChangeGroupMessage(callback, asyncState);
        }
        
        private object[] OnEndGetChangeGroupMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndGetChangeGroupMessage(result);
            return null;
        }
        
        private void OnGetChangeGroupMessageCompleted(object state) {
            if ((this.GetChangeGroupMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetChangeGroupMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetChangeGroupMessageAsync() {
            this.GetChangeGroupMessageAsync(null);
        }
        
        public void GetChangeGroupMessageAsync(object userState) {
            if ((this.onBeginGetChangeGroupMessageDelegate == null)) {
                this.onBeginGetChangeGroupMessageDelegate = new BeginOperationDelegate(this.OnBeginGetChangeGroupMessage);
            }
            if ((this.onEndGetChangeGroupMessageDelegate == null)) {
                this.onEndGetChangeGroupMessageDelegate = new EndOperationDelegate(this.OnEndGetChangeGroupMessage);
            }
            if ((this.onGetChangeGroupMessageCompletedDelegate == null)) {
                this.onGetChangeGroupMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetChangeGroupMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetChangeGroupMessageDelegate, null, this.onEndGetChangeGroupMessageDelegate, this.onGetChangeGroupMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginSendDeviceInstallMessage(Gsafety.PTMS.ServiceReference.MessageService.DeviceInstall model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendDeviceInstallMessage(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndSendDeviceInstallMessage(System.IAsyncResult result) {
            base.Channel.EndSendDeviceInstallMessage(result);
        }
        
        private System.IAsyncResult OnBeginSendDeviceInstallMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            Gsafety.PTMS.ServiceReference.MessageService.DeviceInstall model = ((Gsafety.PTMS.ServiceReference.MessageService.DeviceInstall)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginSendDeviceInstallMessage(model, callback, asyncState);
        }
        
        private object[] OnEndSendDeviceInstallMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndSendDeviceInstallMessage(result);
            return null;
        }
        
        private void OnSendDeviceInstallMessageCompleted(object state) {
            if ((this.SendDeviceInstallMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendDeviceInstallMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendDeviceInstallMessageAsync(Gsafety.PTMS.ServiceReference.MessageService.DeviceInstall model) {
            this.SendDeviceInstallMessageAsync(model, null);
        }
        
        public void SendDeviceInstallMessageAsync(Gsafety.PTMS.ServiceReference.MessageService.DeviceInstall model, object userState) {
            if ((this.onBeginSendDeviceInstallMessageDelegate == null)) {
                this.onBeginSendDeviceInstallMessageDelegate = new BeginOperationDelegate(this.OnBeginSendDeviceInstallMessage);
            }
            if ((this.onEndSendDeviceInstallMessageDelegate == null)) {
                this.onEndSendDeviceInstallMessageDelegate = new EndOperationDelegate(this.OnEndSendDeviceInstallMessage);
            }
            if ((this.onSendDeviceInstallMessageCompletedDelegate == null)) {
                this.onSendDeviceInstallMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendDeviceInstallMessageCompleted);
            }
            base.InvokeAsync(this.onBeginSendDeviceInstallMessageDelegate, new object[] {
                        model}, this.onEndSendDeviceInstallMessageDelegate, this.onSendDeviceInstallMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginGetDeviceInstallMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDeviceInstallMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndGetDeviceInstallMessage(System.IAsyncResult result) {
            base.Channel.EndGetDeviceInstallMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetDeviceInstallMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginGetDeviceInstallMessage(callback, asyncState);
        }
        
        private object[] OnEndGetDeviceInstallMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndGetDeviceInstallMessage(result);
            return null;
        }
        
        private void OnGetDeviceInstallMessageCompleted(object state) {
            if ((this.GetDeviceInstallMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDeviceInstallMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDeviceInstallMessageAsync() {
            this.GetDeviceInstallMessageAsync(null);
        }
        
        public void GetDeviceInstallMessageAsync(object userState) {
            if ((this.onBeginGetDeviceInstallMessageDelegate == null)) {
                this.onBeginGetDeviceInstallMessageDelegate = new BeginOperationDelegate(this.OnBeginGetDeviceInstallMessage);
            }
            if ((this.onEndGetDeviceInstallMessageDelegate == null)) {
                this.onEndGetDeviceInstallMessageDelegate = new EndOperationDelegate(this.OnEndGetDeviceInstallMessage);
            }
            if ((this.onGetDeviceInstallMessageCompletedDelegate == null)) {
                this.onGetDeviceInstallMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDeviceInstallMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetDeviceInstallMessageDelegate, null, this.onEndGetDeviceInstallMessageDelegate, this.onGetDeviceInstallMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginSendDeviceMaintainMessage(Gsafety.PTMS.ServiceReference.MessageService.DeviceMaintain model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendDeviceMaintainMessage(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndSendDeviceMaintainMessage(System.IAsyncResult result) {
            base.Channel.EndSendDeviceMaintainMessage(result);
        }
        
        private System.IAsyncResult OnBeginSendDeviceMaintainMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            Gsafety.PTMS.ServiceReference.MessageService.DeviceMaintain model = ((Gsafety.PTMS.ServiceReference.MessageService.DeviceMaintain)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginSendDeviceMaintainMessage(model, callback, asyncState);
        }
        
        private object[] OnEndSendDeviceMaintainMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndSendDeviceMaintainMessage(result);
            return null;
        }
        
        private void OnSendDeviceMaintainMessageCompleted(object state) {
            if ((this.SendDeviceMaintainMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendDeviceMaintainMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendDeviceMaintainMessageAsync(Gsafety.PTMS.ServiceReference.MessageService.DeviceMaintain model) {
            this.SendDeviceMaintainMessageAsync(model, null);
        }
        
        public void SendDeviceMaintainMessageAsync(Gsafety.PTMS.ServiceReference.MessageService.DeviceMaintain model, object userState) {
            if ((this.onBeginSendDeviceMaintainMessageDelegate == null)) {
                this.onBeginSendDeviceMaintainMessageDelegate = new BeginOperationDelegate(this.OnBeginSendDeviceMaintainMessage);
            }
            if ((this.onEndSendDeviceMaintainMessageDelegate == null)) {
                this.onEndSendDeviceMaintainMessageDelegate = new EndOperationDelegate(this.OnEndSendDeviceMaintainMessage);
            }
            if ((this.onSendDeviceMaintainMessageCompletedDelegate == null)) {
                this.onSendDeviceMaintainMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendDeviceMaintainMessageCompleted);
            }
            base.InvokeAsync(this.onBeginSendDeviceMaintainMessageDelegate, new object[] {
                        model}, this.onEndSendDeviceMaintainMessageDelegate, this.onSendDeviceMaintainMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginGetDeviceMaintainMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDeviceMaintainMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndGetDeviceMaintainMessage(System.IAsyncResult result) {
            base.Channel.EndGetDeviceMaintainMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetDeviceMaintainMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginGetDeviceMaintainMessage(callback, asyncState);
        }
        
        private object[] OnEndGetDeviceMaintainMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndGetDeviceMaintainMessage(result);
            return null;
        }
        
        private void OnGetDeviceMaintainMessageCompleted(object state) {
            if ((this.GetDeviceMaintainMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDeviceMaintainMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDeviceMaintainMessageAsync() {
            this.GetDeviceMaintainMessageAsync(null);
        }
        
        public void GetDeviceMaintainMessageAsync(object userState) {
            if ((this.onBeginGetDeviceMaintainMessageDelegate == null)) {
                this.onBeginGetDeviceMaintainMessageDelegate = new BeginOperationDelegate(this.OnBeginGetDeviceMaintainMessage);
            }
            if ((this.onEndGetDeviceMaintainMessageDelegate == null)) {
                this.onEndGetDeviceMaintainMessageDelegate = new EndOperationDelegate(this.OnEndGetDeviceMaintainMessage);
            }
            if ((this.onGetDeviceMaintainMessageCompletedDelegate == null)) {
                this.onGetDeviceMaintainMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDeviceMaintainMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetDeviceMaintainMessageDelegate, null, this.onEndGetDeviceMaintainMessageDelegate, this.onGetDeviceMaintainMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginSendHandingAlertMessage(Gsafety.PTMS.ServiceReference.MessageService.HandingAlert model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendHandingAlertMessage(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndSendHandingAlertMessage(System.IAsyncResult result) {
            base.Channel.EndSendHandingAlertMessage(result);
        }
        
        private System.IAsyncResult OnBeginSendHandingAlertMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            Gsafety.PTMS.ServiceReference.MessageService.HandingAlert model = ((Gsafety.PTMS.ServiceReference.MessageService.HandingAlert)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginSendHandingAlertMessage(model, callback, asyncState);
        }
        
        private object[] OnEndSendHandingAlertMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndSendHandingAlertMessage(result);
            return null;
        }
        
        private void OnSendHandingAlertMessageCompleted(object state) {
            if ((this.SendHandingAlertMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendHandingAlertMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendHandingAlertMessageAsync(Gsafety.PTMS.ServiceReference.MessageService.HandingAlert model) {
            this.SendHandingAlertMessageAsync(model, null);
        }
        
        public void SendHandingAlertMessageAsync(Gsafety.PTMS.ServiceReference.MessageService.HandingAlert model, object userState) {
            if ((this.onBeginSendHandingAlertMessageDelegate == null)) {
                this.onBeginSendHandingAlertMessageDelegate = new BeginOperationDelegate(this.OnBeginSendHandingAlertMessage);
            }
            if ((this.onEndSendHandingAlertMessageDelegate == null)) {
                this.onEndSendHandingAlertMessageDelegate = new EndOperationDelegate(this.OnEndSendHandingAlertMessage);
            }
            if ((this.onSendHandingAlertMessageCompletedDelegate == null)) {
                this.onSendHandingAlertMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendHandingAlertMessageCompleted);
            }
            base.InvokeAsync(this.onBeginSendHandingAlertMessageDelegate, new object[] {
                        model}, this.onEndSendHandingAlertMessageDelegate, this.onSendHandingAlertMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginGetHandingAlertMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHandingAlertMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndGetHandingAlertMessage(System.IAsyncResult result) {
            base.Channel.EndGetHandingAlertMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetHandingAlertMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginGetHandingAlertMessage(callback, asyncState);
        }
        
        private object[] OnEndGetHandingAlertMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndGetHandingAlertMessage(result);
            return null;
        }
        
        private void OnGetHandingAlertMessageCompleted(object state) {
            if ((this.GetHandingAlertMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHandingAlertMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHandingAlertMessageAsync() {
            this.GetHandingAlertMessageAsync(null);
        }
        
        public void GetHandingAlertMessageAsync(object userState) {
            if ((this.onBeginGetHandingAlertMessageDelegate == null)) {
                this.onBeginGetHandingAlertMessageDelegate = new BeginOperationDelegate(this.OnBeginGetHandingAlertMessage);
            }
            if ((this.onEndGetHandingAlertMessageDelegate == null)) {
                this.onEndGetHandingAlertMessageDelegate = new EndOperationDelegate(this.OnEndGetHandingAlertMessage);
            }
            if ((this.onGetHandingAlertMessageCompletedDelegate == null)) {
                this.onGetHandingAlertMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHandingAlertMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetHandingAlertMessageDelegate, null, this.onEndGetHandingAlertMessageDelegate, this.onGetHandingAlertMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginSendCompleteAlertMessage(Gsafety.PTMS.ServiceReference.MessageService.CompleteAlert modell, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendCompleteAlertMessage(modell, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndSendCompleteAlertMessage(System.IAsyncResult result) {
            base.Channel.EndSendCompleteAlertMessage(result);
        }
        
        private System.IAsyncResult OnBeginSendCompleteAlertMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            Gsafety.PTMS.ServiceReference.MessageService.CompleteAlert modell = ((Gsafety.PTMS.ServiceReference.MessageService.CompleteAlert)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginSendCompleteAlertMessage(modell, callback, asyncState);
        }
        
        private object[] OnEndSendCompleteAlertMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndSendCompleteAlertMessage(result);
            return null;
        }
        
        private void OnSendCompleteAlertMessageCompleted(object state) {
            if ((this.SendCompleteAlertMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendCompleteAlertMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendCompleteAlertMessageAsync(Gsafety.PTMS.ServiceReference.MessageService.CompleteAlert modell) {
            this.SendCompleteAlertMessageAsync(modell, null);
        }
        
        public void SendCompleteAlertMessageAsync(Gsafety.PTMS.ServiceReference.MessageService.CompleteAlert modell, object userState) {
            if ((this.onBeginSendCompleteAlertMessageDelegate == null)) {
                this.onBeginSendCompleteAlertMessageDelegate = new BeginOperationDelegate(this.OnBeginSendCompleteAlertMessage);
            }
            if ((this.onEndSendCompleteAlertMessageDelegate == null)) {
                this.onEndSendCompleteAlertMessageDelegate = new EndOperationDelegate(this.OnEndSendCompleteAlertMessage);
            }
            if ((this.onSendCompleteAlertMessageCompletedDelegate == null)) {
                this.onSendCompleteAlertMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendCompleteAlertMessageCompleted);
            }
            base.InvokeAsync(this.onBeginSendCompleteAlertMessageDelegate, new object[] {
                        modell}, this.onEndSendCompleteAlertMessageDelegate, this.onSendCompleteAlertMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginGetCompleteAlertMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCompleteAlertMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndGetCompleteAlertMessage(System.IAsyncResult result) {
            base.Channel.EndGetCompleteAlertMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetCompleteAlertMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginGetCompleteAlertMessage(callback, asyncState);
        }
        
        private object[] OnEndGetCompleteAlertMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndGetCompleteAlertMessage(result);
            return null;
        }
        
        private void OnGetCompleteAlertMessageCompleted(object state) {
            if ((this.GetCompleteAlertMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCompleteAlertMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCompleteAlertMessageAsync() {
            this.GetCompleteAlertMessageAsync(null);
        }
        
        public void GetCompleteAlertMessageAsync(object userState) {
            if ((this.onBeginGetCompleteAlertMessageDelegate == null)) {
                this.onBeginGetCompleteAlertMessageDelegate = new BeginOperationDelegate(this.OnBeginGetCompleteAlertMessage);
            }
            if ((this.onEndGetCompleteAlertMessageDelegate == null)) {
                this.onEndGetCompleteAlertMessageDelegate = new EndOperationDelegate(this.OnEndGetCompleteAlertMessage);
            }
            if ((this.onGetCompleteAlertMessageCompletedDelegate == null)) {
                this.onGetCompleteAlertMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCompleteAlertMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetCompleteAlertMessageDelegate, null, this.onEndGetCompleteAlertMessageDelegate, this.onGetCompleteAlertMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginSendStartInstallMessage(Gsafety.PTMS.ServiceReference.MessageService.StartInstall modell, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendStartInstallMessage(modell, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndSendStartInstallMessage(System.IAsyncResult result) {
            base.Channel.EndSendStartInstallMessage(result);
        }
        
        private System.IAsyncResult OnBeginSendStartInstallMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            Gsafety.PTMS.ServiceReference.MessageService.StartInstall modell = ((Gsafety.PTMS.ServiceReference.MessageService.StartInstall)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginSendStartInstallMessage(modell, callback, asyncState);
        }
        
        private object[] OnEndSendStartInstallMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndSendStartInstallMessage(result);
            return null;
        }
        
        private void OnSendStartInstallMessageCompleted(object state) {
            if ((this.SendStartInstallMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendStartInstallMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendStartInstallMessageAsync(Gsafety.PTMS.ServiceReference.MessageService.StartInstall modell) {
            this.SendStartInstallMessageAsync(modell, null);
        }
        
        public void SendStartInstallMessageAsync(Gsafety.PTMS.ServiceReference.MessageService.StartInstall modell, object userState) {
            if ((this.onBeginSendStartInstallMessageDelegate == null)) {
                this.onBeginSendStartInstallMessageDelegate = new BeginOperationDelegate(this.OnBeginSendStartInstallMessage);
            }
            if ((this.onEndSendStartInstallMessageDelegate == null)) {
                this.onEndSendStartInstallMessageDelegate = new EndOperationDelegate(this.OnEndSendStartInstallMessage);
            }
            if ((this.onSendStartInstallMessageCompletedDelegate == null)) {
                this.onSendStartInstallMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendStartInstallMessageCompleted);
            }
            base.InvokeAsync(this.onBeginSendStartInstallMessageDelegate, new object[] {
                        modell}, this.onEndSendStartInstallMessageDelegate, this.onSendStartInstallMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginGetStartInstallMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStartInstallMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndGetStartInstallMessage(System.IAsyncResult result) {
            base.Channel.EndGetStartInstallMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetStartInstallMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginGetStartInstallMessage(callback, asyncState);
        }
        
        private object[] OnEndGetStartInstallMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndGetStartInstallMessage(result);
            return null;
        }
        
        private void OnGetStartInstallMessageCompleted(object state) {
            if ((this.GetStartInstallMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStartInstallMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStartInstallMessageAsync() {
            this.GetStartInstallMessageAsync(null);
        }
        
        public void GetStartInstallMessageAsync(object userState) {
            if ((this.onBeginGetStartInstallMessageDelegate == null)) {
                this.onBeginGetStartInstallMessageDelegate = new BeginOperationDelegate(this.OnBeginGetStartInstallMessage);
            }
            if ((this.onEndGetStartInstallMessageDelegate == null)) {
                this.onEndGetStartInstallMessageDelegate = new EndOperationDelegate(this.OnEndGetStartInstallMessage);
            }
            if ((this.onGetStartInstallMessageCompletedDelegate == null)) {
                this.onGetStartInstallMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStartInstallMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetStartInstallMessageDelegate, null, this.onEndGetStartInstallMessageDelegate, this.onGetStartInstallMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginSendDeleteInstallMessage(Gsafety.PTMS.ServiceReference.MessageService.DeleteInstall model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendDeleteInstallMessage(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndSendDeleteInstallMessage(System.IAsyncResult result) {
            base.Channel.EndSendDeleteInstallMessage(result);
        }
        
        private System.IAsyncResult OnBeginSendDeleteInstallMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            Gsafety.PTMS.ServiceReference.MessageService.DeleteInstall model = ((Gsafety.PTMS.ServiceReference.MessageService.DeleteInstall)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginSendDeleteInstallMessage(model, callback, asyncState);
        }
        
        private object[] OnEndSendDeleteInstallMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndSendDeleteInstallMessage(result);
            return null;
        }
        
        private void OnSendDeleteInstallMessageCompleted(object state) {
            if ((this.SendDeleteInstallMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendDeleteInstallMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendDeleteInstallMessageAsync(Gsafety.PTMS.ServiceReference.MessageService.DeleteInstall model) {
            this.SendDeleteInstallMessageAsync(model, null);
        }
        
        public void SendDeleteInstallMessageAsync(Gsafety.PTMS.ServiceReference.MessageService.DeleteInstall model, object userState) {
            if ((this.onBeginSendDeleteInstallMessageDelegate == null)) {
                this.onBeginSendDeleteInstallMessageDelegate = new BeginOperationDelegate(this.OnBeginSendDeleteInstallMessage);
            }
            if ((this.onEndSendDeleteInstallMessageDelegate == null)) {
                this.onEndSendDeleteInstallMessageDelegate = new EndOperationDelegate(this.OnEndSendDeleteInstallMessage);
            }
            if ((this.onSendDeleteInstallMessageCompletedDelegate == null)) {
                this.onSendDeleteInstallMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendDeleteInstallMessageCompleted);
            }
            base.InvokeAsync(this.onBeginSendDeleteInstallMessageDelegate, new object[] {
                        model}, this.onEndSendDeleteInstallMessageDelegate, this.onSendDeleteInstallMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginGetDeleteInstallMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDeleteInstallMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndGetDeleteInstallMessage(System.IAsyncResult result) {
            base.Channel.EndGetDeleteInstallMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetDeleteInstallMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginGetDeleteInstallMessage(callback, asyncState);
        }
        
        private object[] OnEndGetDeleteInstallMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndGetDeleteInstallMessage(result);
            return null;
        }
        
        private void OnGetDeleteInstallMessageCompleted(object state) {
            if ((this.GetDeleteInstallMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDeleteInstallMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDeleteInstallMessageAsync() {
            this.GetDeleteInstallMessageAsync(null);
        }
        
        public void GetDeleteInstallMessageAsync(object userState) {
            if ((this.onBeginGetDeleteInstallMessageDelegate == null)) {
                this.onBeginGetDeleteInstallMessageDelegate = new BeginOperationDelegate(this.OnBeginGetDeleteInstallMessage);
            }
            if ((this.onEndGetDeleteInstallMessageDelegate == null)) {
                this.onEndGetDeleteInstallMessageDelegate = new EndOperationDelegate(this.OnEndGetDeleteInstallMessage);
            }
            if ((this.onGetDeleteInstallMessageCompletedDelegate == null)) {
                this.onGetDeleteInstallMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDeleteInstallMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetDeleteInstallMessageDelegate, null, this.onEndGetDeleteInstallMessageDelegate, this.onGetDeleteInstallMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginGetDeleteUserMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDeleteUserMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndGetDeleteUserMessage(System.IAsyncResult result) {
            base.Channel.EndGetDeleteUserMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetDeleteUserMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginGetDeleteUserMessage(callback, asyncState);
        }
        
        private object[] OnEndGetDeleteUserMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndGetDeleteUserMessage(result);
            return null;
        }
        
        private void OnGetDeleteUserMessageCompleted(object state) {
            if ((this.GetDeleteUserMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDeleteUserMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDeleteUserMessageAsync() {
            this.GetDeleteUserMessageAsync(null);
        }
        
        public void GetDeleteUserMessageAsync(object userState) {
            if ((this.onBeginGetDeleteUserMessageDelegate == null)) {
                this.onBeginGetDeleteUserMessageDelegate = new BeginOperationDelegate(this.OnBeginGetDeleteUserMessage);
            }
            if ((this.onEndGetDeleteUserMessageDelegate == null)) {
                this.onEndGetDeleteUserMessageDelegate = new EndOperationDelegate(this.OnEndGetDeleteUserMessage);
            }
            if ((this.onGetDeleteUserMessageCompletedDelegate == null)) {
                this.onGetDeleteUserMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDeleteUserMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetDeleteUserMessageDelegate, null, this.onEndGetDeleteUserMessageDelegate, this.onGetDeleteUserMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginGetChangeUserMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetChangeUserMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndGetChangeUserMessage(System.IAsyncResult result) {
            base.Channel.EndGetChangeUserMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetChangeUserMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginGetChangeUserMessage(callback, asyncState);
        }
        
        private object[] OnEndGetChangeUserMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndGetChangeUserMessage(result);
            return null;
        }
        
        private void OnGetChangeUserMessageCompleted(object state) {
            if ((this.GetChangeUserMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetChangeUserMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetChangeUserMessageAsync() {
            this.GetChangeUserMessageAsync(null);
        }
        
        public void GetChangeUserMessageAsync(object userState) {
            if ((this.onBeginGetChangeUserMessageDelegate == null)) {
                this.onBeginGetChangeUserMessageDelegate = new BeginOperationDelegate(this.OnBeginGetChangeUserMessage);
            }
            if ((this.onEndGetChangeUserMessageDelegate == null)) {
                this.onEndGetChangeUserMessageDelegate = new EndOperationDelegate(this.OnEndGetChangeUserMessage);
            }
            if ((this.onGetChangeUserMessageCompletedDelegate == null)) {
                this.onGetChangeUserMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetChangeUserMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetChangeUserMessageDelegate, null, this.onEndGetChangeUserMessageDelegate, this.onGetChangeUserMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginSendDeleteUserMessage(Gsafety.PTMS.ServiceReference.MessageService.DeleteUser model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendDeleteUserMessage(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndSendDeleteUserMessage(System.IAsyncResult result) {
            base.Channel.EndSendDeleteUserMessage(result);
        }
        
        private System.IAsyncResult OnBeginSendDeleteUserMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            Gsafety.PTMS.ServiceReference.MessageService.DeleteUser model = ((Gsafety.PTMS.ServiceReference.MessageService.DeleteUser)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginSendDeleteUserMessage(model, callback, asyncState);
        }
        
        private object[] OnEndSendDeleteUserMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndSendDeleteUserMessage(result);
            return null;
        }
        
        private void OnSendDeleteUserMessageCompleted(object state) {
            if ((this.SendDeleteUserMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendDeleteUserMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendDeleteUserMessageAsync(Gsafety.PTMS.ServiceReference.MessageService.DeleteUser model) {
            this.SendDeleteUserMessageAsync(model, null);
        }
        
        public void SendDeleteUserMessageAsync(Gsafety.PTMS.ServiceReference.MessageService.DeleteUser model, object userState) {
            if ((this.onBeginSendDeleteUserMessageDelegate == null)) {
                this.onBeginSendDeleteUserMessageDelegate = new BeginOperationDelegate(this.OnBeginSendDeleteUserMessage);
            }
            if ((this.onEndSendDeleteUserMessageDelegate == null)) {
                this.onEndSendDeleteUserMessageDelegate = new EndOperationDelegate(this.OnEndSendDeleteUserMessage);
            }
            if ((this.onSendDeleteUserMessageCompletedDelegate == null)) {
                this.onSendDeleteUserMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendDeleteUserMessageCompleted);
            }
            base.InvokeAsync(this.onBeginSendDeleteUserMessageDelegate, new object[] {
                        model}, this.onEndSendDeleteUserMessageDelegate, this.onSendDeleteUserMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginSendChangeUserMessage(Gsafety.PTMS.ServiceReference.MessageService.ChangeUser model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendChangeUserMessage(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndSendChangeUserMessage(System.IAsyncResult result) {
            base.Channel.EndSendChangeUserMessage(result);
        }
        
        private System.IAsyncResult OnBeginSendChangeUserMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            Gsafety.PTMS.ServiceReference.MessageService.ChangeUser model = ((Gsafety.PTMS.ServiceReference.MessageService.ChangeUser)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginSendChangeUserMessage(model, callback, asyncState);
        }
        
        private object[] OnEndSendChangeUserMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndSendChangeUserMessage(result);
            return null;
        }
        
        private void OnSendChangeUserMessageCompleted(object state) {
            if ((this.SendChangeUserMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendChangeUserMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendChangeUserMessageAsync(Gsafety.PTMS.ServiceReference.MessageService.ChangeUser model) {
            this.SendChangeUserMessageAsync(model, null);
        }
        
        public void SendChangeUserMessageAsync(Gsafety.PTMS.ServiceReference.MessageService.ChangeUser model, object userState) {
            if ((this.onBeginSendChangeUserMessageDelegate == null)) {
                this.onBeginSendChangeUserMessageDelegate = new BeginOperationDelegate(this.OnBeginSendChangeUserMessage);
            }
            if ((this.onEndSendChangeUserMessageDelegate == null)) {
                this.onEndSendChangeUserMessageDelegate = new EndOperationDelegate(this.OnEndSendChangeUserMessage);
            }
            if ((this.onSendChangeUserMessageCompletedDelegate == null)) {
                this.onSendChangeUserMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendChangeUserMessageCompleted);
            }
            base.InvokeAsync(this.onBeginSendChangeUserMessageDelegate, new object[] {
                        model}, this.onEndSendChangeUserMessageDelegate, this.onSendChangeUserMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginSendRouteMessage(Gsafety.PTMS.ServiceReference.MessageService.RouteCMD model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendRouteMessage(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndSendRouteMessage(System.IAsyncResult result) {
            base.Channel.EndSendRouteMessage(result);
        }
        
        private System.IAsyncResult OnBeginSendRouteMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            Gsafety.PTMS.ServiceReference.MessageService.RouteCMD model = ((Gsafety.PTMS.ServiceReference.MessageService.RouteCMD)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginSendRouteMessage(model, callback, asyncState);
        }
        
        private object[] OnEndSendRouteMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndSendRouteMessage(result);
            return null;
        }
        
        private void OnSendRouteMessageCompleted(object state) {
            if ((this.SendRouteMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendRouteMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendRouteMessageAsync(Gsafety.PTMS.ServiceReference.MessageService.RouteCMD model) {
            this.SendRouteMessageAsync(model, null);
        }
        
        public void SendRouteMessageAsync(Gsafety.PTMS.ServiceReference.MessageService.RouteCMD model, object userState) {
            if ((this.onBeginSendRouteMessageDelegate == null)) {
                this.onBeginSendRouteMessageDelegate = new BeginOperationDelegate(this.OnBeginSendRouteMessage);
            }
            if ((this.onEndSendRouteMessageDelegate == null)) {
                this.onEndSendRouteMessageDelegate = new EndOperationDelegate(this.OnEndSendRouteMessage);
            }
            if ((this.onSendRouteMessageCompletedDelegate == null)) {
                this.onSendRouteMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendRouteMessageCompleted);
            }
            base.InvokeAsync(this.onBeginSendRouteMessageDelegate, new object[] {
                        model}, this.onEndSendRouteMessageDelegate, this.onSendRouteMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginSendRouteMessageSet(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.RouteCMD> routes, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendRouteMessageSet(routes, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndSendRouteMessageSet(System.IAsyncResult result) {
            base.Channel.EndSendRouteMessageSet(result);
        }
        
        private System.IAsyncResult OnBeginSendRouteMessageSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.RouteCMD> routes = ((System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.RouteCMD>)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginSendRouteMessageSet(routes, callback, asyncState);
        }
        
        private object[] OnEndSendRouteMessageSet(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndSendRouteMessageSet(result);
            return null;
        }
        
        private void OnSendRouteMessageSetCompleted(object state) {
            if ((this.SendRouteMessageSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendRouteMessageSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendRouteMessageSetAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.RouteCMD> routes) {
            this.SendRouteMessageSetAsync(routes, null);
        }
        
        public void SendRouteMessageSetAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.RouteCMD> routes, object userState) {
            if ((this.onBeginSendRouteMessageSetDelegate == null)) {
                this.onBeginSendRouteMessageSetDelegate = new BeginOperationDelegate(this.OnBeginSendRouteMessageSet);
            }
            if ((this.onEndSendRouteMessageSetDelegate == null)) {
                this.onEndSendRouteMessageSetDelegate = new EndOperationDelegate(this.OnEndSendRouteMessageSet);
            }
            if ((this.onSendRouteMessageSetCompletedDelegate == null)) {
                this.onSendRouteMessageSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendRouteMessageSetCompleted);
            }
            base.InvokeAsync(this.onBeginSendRouteMessageSetDelegate, new object[] {
                        routes}, this.onEndSendRouteMessageSetDelegate, this.onSendRouteMessageSetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginSendTravelPlanMessage(Gsafety.PTMS.ServiceReference.MessageService.TravelPlanCMD model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendTravelPlanMessage(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndSendTravelPlanMessage(System.IAsyncResult result) {
            base.Channel.EndSendTravelPlanMessage(result);
        }
        
        private System.IAsyncResult OnBeginSendTravelPlanMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            Gsafety.PTMS.ServiceReference.MessageService.TravelPlanCMD model = ((Gsafety.PTMS.ServiceReference.MessageService.TravelPlanCMD)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginSendTravelPlanMessage(model, callback, asyncState);
        }
        
        private object[] OnEndSendTravelPlanMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndSendTravelPlanMessage(result);
            return null;
        }
        
        private void OnSendTravelPlanMessageCompleted(object state) {
            if ((this.SendTravelPlanMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendTravelPlanMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendTravelPlanMessageAsync(Gsafety.PTMS.ServiceReference.MessageService.TravelPlanCMD model) {
            this.SendTravelPlanMessageAsync(model, null);
        }
        
        public void SendTravelPlanMessageAsync(Gsafety.PTMS.ServiceReference.MessageService.TravelPlanCMD model, object userState) {
            if ((this.onBeginSendTravelPlanMessageDelegate == null)) {
                this.onBeginSendTravelPlanMessageDelegate = new BeginOperationDelegate(this.OnBeginSendTravelPlanMessage);
            }
            if ((this.onEndSendTravelPlanMessageDelegate == null)) {
                this.onEndSendTravelPlanMessageDelegate = new EndOperationDelegate(this.OnEndSendTravelPlanMessage);
            }
            if ((this.onSendTravelPlanMessageCompletedDelegate == null)) {
                this.onSendTravelPlanMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendTravelPlanMessageCompleted);
            }
            base.InvokeAsync(this.onBeginSendTravelPlanMessageDelegate, new object[] {
                        model}, this.onEndSendTravelPlanMessageDelegate, this.onSendTravelPlanMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginSendTravelPlanMessageSet(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.TravelPlanCMD> travelPlans, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendTravelPlanMessageSet(travelPlans, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndSendTravelPlanMessageSet(System.IAsyncResult result) {
            base.Channel.EndSendTravelPlanMessageSet(result);
        }
        
        private System.IAsyncResult OnBeginSendTravelPlanMessageSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.TravelPlanCMD> travelPlans = ((System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.TravelPlanCMD>)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginSendTravelPlanMessageSet(travelPlans, callback, asyncState);
        }
        
        private object[] OnEndSendTravelPlanMessageSet(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndSendTravelPlanMessageSet(result);
            return null;
        }
        
        private void OnSendTravelPlanMessageSetCompleted(object state) {
            if ((this.SendTravelPlanMessageSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendTravelPlanMessageSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendTravelPlanMessageSetAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.TravelPlanCMD> travelPlans) {
            this.SendTravelPlanMessageSetAsync(travelPlans, null);
        }
        
        public void SendTravelPlanMessageSetAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.TravelPlanCMD> travelPlans, object userState) {
            if ((this.onBeginSendTravelPlanMessageSetDelegate == null)) {
                this.onBeginSendTravelPlanMessageSetDelegate = new BeginOperationDelegate(this.OnBeginSendTravelPlanMessageSet);
            }
            if ((this.onEndSendTravelPlanMessageSetDelegate == null)) {
                this.onEndSendTravelPlanMessageSetDelegate = new EndOperationDelegate(this.OnEndSendTravelPlanMessageSet);
            }
            if ((this.onSendTravelPlanMessageSetCompletedDelegate == null)) {
                this.onSendTravelPlanMessageSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendTravelPlanMessageSetCompleted);
            }
            base.InvokeAsync(this.onBeginSendTravelPlanMessageSetDelegate, new object[] {
                        travelPlans}, this.onEndSendTravelPlanMessageSetDelegate, this.onSendTravelPlanMessageSetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginSendUpgradeNotifyMessage(Gsafety.PTMS.ServiceReference.MessageService.UpgradeNotify model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendUpgradeNotifyMessage(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndSendUpgradeNotifyMessage(System.IAsyncResult result) {
            base.Channel.EndSendUpgradeNotifyMessage(result);
        }
        
        private System.IAsyncResult OnBeginSendUpgradeNotifyMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            Gsafety.PTMS.ServiceReference.MessageService.UpgradeNotify model = ((Gsafety.PTMS.ServiceReference.MessageService.UpgradeNotify)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginSendUpgradeNotifyMessage(model, callback, asyncState);
        }
        
        private object[] OnEndSendUpgradeNotifyMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndSendUpgradeNotifyMessage(result);
            return null;
        }
        
        private void OnSendUpgradeNotifyMessageCompleted(object state) {
            if ((this.SendUpgradeNotifyMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendUpgradeNotifyMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendUpgradeNotifyMessageAsync(Gsafety.PTMS.ServiceReference.MessageService.UpgradeNotify model) {
            this.SendUpgradeNotifyMessageAsync(model, null);
        }
        
        public void SendUpgradeNotifyMessageAsync(Gsafety.PTMS.ServiceReference.MessageService.UpgradeNotify model, object userState) {
            if ((this.onBeginSendUpgradeNotifyMessageDelegate == null)) {
                this.onBeginSendUpgradeNotifyMessageDelegate = new BeginOperationDelegate(this.OnBeginSendUpgradeNotifyMessage);
            }
            if ((this.onEndSendUpgradeNotifyMessageDelegate == null)) {
                this.onEndSendUpgradeNotifyMessageDelegate = new EndOperationDelegate(this.OnEndSendUpgradeNotifyMessage);
            }
            if ((this.onSendUpgradeNotifyMessageCompletedDelegate == null)) {
                this.onSendUpgradeNotifyMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendUpgradeNotifyMessageCompleted);
            }
            base.InvokeAsync(this.onBeginSendUpgradeNotifyMessageDelegate, new object[] {
                        model}, this.onEndSendUpgradeNotifyMessageDelegate, this.onSendUpgradeNotifyMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginGetAlarmMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAlarmMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndGetAlarmMessage(System.IAsyncResult result) {
            base.Channel.EndGetAlarmMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetAlarmMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginGetAlarmMessage(callback, asyncState);
        }
        
        private object[] OnEndGetAlarmMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndGetAlarmMessage(result);
            return null;
        }
        
        private void OnGetAlarmMessageCompleted(object state) {
            if ((this.GetAlarmMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAlarmMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAlarmMessageAsync() {
            this.GetAlarmMessageAsync(null);
        }
        
        public void GetAlarmMessageAsync(object userState) {
            if ((this.onBeginGetAlarmMessageDelegate == null)) {
                this.onBeginGetAlarmMessageDelegate = new BeginOperationDelegate(this.OnBeginGetAlarmMessage);
            }
            if ((this.onEndGetAlarmMessageDelegate == null)) {
                this.onEndGetAlarmMessageDelegate = new EndOperationDelegate(this.OnEndGetAlarmMessage);
            }
            if ((this.onGetAlarmMessageCompletedDelegate == null)) {
                this.onGetAlarmMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAlarmMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetAlarmMessageDelegate, null, this.onEndGetAlarmMessageDelegate, this.onGetAlarmMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginCancelAlarmMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCancelAlarmMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndCancelAlarmMessage(System.IAsyncResult result) {
            base.Channel.EndCancelAlarmMessage(result);
        }
        
        private System.IAsyncResult OnBeginCancelAlarmMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginCancelAlarmMessage(callback, asyncState);
        }
        
        private object[] OnEndCancelAlarmMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndCancelAlarmMessage(result);
            return null;
        }
        
        private void OnCancelAlarmMessageCompleted(object state) {
            if ((this.CancelAlarmMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CancelAlarmMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CancelAlarmMessageAsync() {
            this.CancelAlarmMessageAsync(null);
        }
        
        public void CancelAlarmMessageAsync(object userState) {
            if ((this.onBeginCancelAlarmMessageDelegate == null)) {
                this.onBeginCancelAlarmMessageDelegate = new BeginOperationDelegate(this.OnBeginCancelAlarmMessage);
            }
            if ((this.onEndCancelAlarmMessageDelegate == null)) {
                this.onEndCancelAlarmMessageDelegate = new EndOperationDelegate(this.OnEndCancelAlarmMessage);
            }
            if ((this.onCancelAlarmMessageCompletedDelegate == null)) {
                this.onCancelAlarmMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCancelAlarmMessageCompleted);
            }
            base.InvokeAsync(this.onBeginCancelAlarmMessageDelegate, null, this.onEndCancelAlarmMessageDelegate, this.onCancelAlarmMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginGetCancelAlarmMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCancelAlarmMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndGetCancelAlarmMessage(System.IAsyncResult result) {
            base.Channel.EndGetCancelAlarmMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetCancelAlarmMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginGetCancelAlarmMessage(callback, asyncState);
        }
        
        private object[] OnEndGetCancelAlarmMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndGetCancelAlarmMessage(result);
            return null;
        }
        
        private void OnGetCancelAlarmMessageCompleted(object state) {
            if ((this.GetCancelAlarmMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCancelAlarmMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCancelAlarmMessageAsync() {
            this.GetCancelAlarmMessageAsync(null);
        }
        
        public void GetCancelAlarmMessageAsync(object userState) {
            if ((this.onBeginGetCancelAlarmMessageDelegate == null)) {
                this.onBeginGetCancelAlarmMessageDelegate = new BeginOperationDelegate(this.OnBeginGetCancelAlarmMessage);
            }
            if ((this.onEndGetCancelAlarmMessageDelegate == null)) {
                this.onEndGetCancelAlarmMessageDelegate = new EndOperationDelegate(this.OnEndGetCancelAlarmMessage);
            }
            if ((this.onGetCancelAlarmMessageCompletedDelegate == null)) {
                this.onGetCancelAlarmMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCancelAlarmMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetCancelAlarmMessageDelegate, null, this.onEndGetCancelAlarmMessageDelegate, this.onGetCancelAlarmMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginGetAlarmGpsMessage(string mdvrCoreId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAlarmGpsMessage(mdvrCoreId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndGetAlarmGpsMessage(System.IAsyncResult result) {
            base.Channel.EndGetAlarmGpsMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetAlarmGpsMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            string mdvrCoreId = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginGetAlarmGpsMessage(mdvrCoreId, callback, asyncState);
        }
        
        private object[] OnEndGetAlarmGpsMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndGetAlarmGpsMessage(result);
            return null;
        }
        
        private void OnGetAlarmGpsMessageCompleted(object state) {
            if ((this.GetAlarmGpsMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAlarmGpsMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAlarmGpsMessageAsync(string mdvrCoreId) {
            this.GetAlarmGpsMessageAsync(mdvrCoreId, null);
        }
        
        public void GetAlarmGpsMessageAsync(string mdvrCoreId, object userState) {
            if ((this.onBeginGetAlarmGpsMessageDelegate == null)) {
                this.onBeginGetAlarmGpsMessageDelegate = new BeginOperationDelegate(this.OnBeginGetAlarmGpsMessage);
            }
            if ((this.onEndGetAlarmGpsMessageDelegate == null)) {
                this.onEndGetAlarmGpsMessageDelegate = new EndOperationDelegate(this.OnEndGetAlarmGpsMessage);
            }
            if ((this.onGetAlarmGpsMessageCompletedDelegate == null)) {
                this.onGetAlarmGpsMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAlarmGpsMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetAlarmGpsMessageDelegate, new object[] {
                        mdvrCoreId}, this.onEndGetAlarmGpsMessageDelegate, this.onGetAlarmGpsMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginCancelAlarmGpsMessage(string mdvrCoreId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCancelAlarmGpsMessage(mdvrCoreId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndCancelAlarmGpsMessage(System.IAsyncResult result) {
            base.Channel.EndCancelAlarmGpsMessage(result);
        }
        
        private System.IAsyncResult OnBeginCancelAlarmGpsMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            string mdvrCoreId = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginCancelAlarmGpsMessage(mdvrCoreId, callback, asyncState);
        }
        
        private object[] OnEndCancelAlarmGpsMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndCancelAlarmGpsMessage(result);
            return null;
        }
        
        private void OnCancelAlarmGpsMessageCompleted(object state) {
            if ((this.CancelAlarmGpsMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CancelAlarmGpsMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CancelAlarmGpsMessageAsync(string mdvrCoreId) {
            this.CancelAlarmGpsMessageAsync(mdvrCoreId, null);
        }
        
        public void CancelAlarmGpsMessageAsync(string mdvrCoreId, object userState) {
            if ((this.onBeginCancelAlarmGpsMessageDelegate == null)) {
                this.onBeginCancelAlarmGpsMessageDelegate = new BeginOperationDelegate(this.OnBeginCancelAlarmGpsMessage);
            }
            if ((this.onEndCancelAlarmGpsMessageDelegate == null)) {
                this.onEndCancelAlarmGpsMessageDelegate = new EndOperationDelegate(this.OnEndCancelAlarmGpsMessage);
            }
            if ((this.onCancelAlarmGpsMessageCompletedDelegate == null)) {
                this.onCancelAlarmGpsMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCancelAlarmGpsMessageCompleted);
            }
            base.InvokeAsync(this.onBeginCancelAlarmGpsMessageDelegate, new object[] {
                        mdvrCoreId}, this.onEndCancelAlarmGpsMessageDelegate, this.onCancelAlarmGpsMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginGetMonitorGpsMessage(Gsafety.PTMS.ServiceReference.MessageService.LocationMonitorCMD locationMonitorCmd, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMonitorGpsMessage(locationMonitorCmd, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndGetMonitorGpsMessage(System.IAsyncResult result) {
            base.Channel.EndGetMonitorGpsMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetMonitorGpsMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            Gsafety.PTMS.ServiceReference.MessageService.LocationMonitorCMD locationMonitorCmd = ((Gsafety.PTMS.ServiceReference.MessageService.LocationMonitorCMD)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginGetMonitorGpsMessage(locationMonitorCmd, callback, asyncState);
        }
        
        private object[] OnEndGetMonitorGpsMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndGetMonitorGpsMessage(result);
            return null;
        }
        
        private void OnGetMonitorGpsMessageCompleted(object state) {
            if ((this.GetMonitorGpsMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMonitorGpsMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMonitorGpsMessageAsync(Gsafety.PTMS.ServiceReference.MessageService.LocationMonitorCMD locationMonitorCmd) {
            this.GetMonitorGpsMessageAsync(locationMonitorCmd, null);
        }
        
        public void GetMonitorGpsMessageAsync(Gsafety.PTMS.ServiceReference.MessageService.LocationMonitorCMD locationMonitorCmd, object userState) {
            if ((this.onBeginGetMonitorGpsMessageDelegate == null)) {
                this.onBeginGetMonitorGpsMessageDelegate = new BeginOperationDelegate(this.OnBeginGetMonitorGpsMessage);
            }
            if ((this.onEndGetMonitorGpsMessageDelegate == null)) {
                this.onEndGetMonitorGpsMessageDelegate = new EndOperationDelegate(this.OnEndGetMonitorGpsMessage);
            }
            if ((this.onGetMonitorGpsMessageCompletedDelegate == null)) {
                this.onGetMonitorGpsMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMonitorGpsMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetMonitorGpsMessageDelegate, new object[] {
                        locationMonitorCmd}, this.onEndGetMonitorGpsMessageDelegate, this.onGetMonitorGpsMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginCancelMonitorGpsMessage(Gsafety.PTMS.ServiceReference.MessageService.CancelLocationMonitorCMD cancelLocationMonitorCmd, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCancelMonitorGpsMessage(cancelLocationMonitorCmd, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndCancelMonitorGpsMessage(System.IAsyncResult result) {
            base.Channel.EndCancelMonitorGpsMessage(result);
        }
        
        private System.IAsyncResult OnBeginCancelMonitorGpsMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            Gsafety.PTMS.ServiceReference.MessageService.CancelLocationMonitorCMD cancelLocationMonitorCmd = ((Gsafety.PTMS.ServiceReference.MessageService.CancelLocationMonitorCMD)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginCancelMonitorGpsMessage(cancelLocationMonitorCmd, callback, asyncState);
        }
        
        private object[] OnEndCancelMonitorGpsMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndCancelMonitorGpsMessage(result);
            return null;
        }
        
        private void OnCancelMonitorGpsMessageCompleted(object state) {
            if ((this.CancelMonitorGpsMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CancelMonitorGpsMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CancelMonitorGpsMessageAsync(Gsafety.PTMS.ServiceReference.MessageService.CancelLocationMonitorCMD cancelLocationMonitorCmd) {
            this.CancelMonitorGpsMessageAsync(cancelLocationMonitorCmd, null);
        }
        
        public void CancelMonitorGpsMessageAsync(Gsafety.PTMS.ServiceReference.MessageService.CancelLocationMonitorCMD cancelLocationMonitorCmd, object userState) {
            if ((this.onBeginCancelMonitorGpsMessageDelegate == null)) {
                this.onBeginCancelMonitorGpsMessageDelegate = new BeginOperationDelegate(this.OnBeginCancelMonitorGpsMessage);
            }
            if ((this.onEndCancelMonitorGpsMessageDelegate == null)) {
                this.onEndCancelMonitorGpsMessageDelegate = new EndOperationDelegate(this.OnEndCancelMonitorGpsMessage);
            }
            if ((this.onCancelMonitorGpsMessageCompletedDelegate == null)) {
                this.onCancelMonitorGpsMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCancelMonitorGpsMessageCompleted);
            }
            base.InvokeAsync(this.onBeginCancelMonitorGpsMessageDelegate, new object[] {
                        cancelLocationMonitorCmd}, this.onEndCancelMonitorGpsMessageDelegate, this.onCancelMonitorGpsMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginGetLocationMonitorEndMessage(string SessionId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLocationMonitorEndMessage(SessionId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndGetLocationMonitorEndMessage(System.IAsyncResult result) {
            base.Channel.EndGetLocationMonitorEndMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetLocationMonitorEndMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            string SessionId = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginGetLocationMonitorEndMessage(SessionId, callback, asyncState);
        }
        
        private object[] OnEndGetLocationMonitorEndMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndGetLocationMonitorEndMessage(result);
            return null;
        }
        
        private void OnGetLocationMonitorEndMessageCompleted(object state) {
            if ((this.GetLocationMonitorEndMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLocationMonitorEndMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLocationMonitorEndMessageAsync(string SessionId) {
            this.GetLocationMonitorEndMessageAsync(SessionId, null);
        }
        
        public void GetLocationMonitorEndMessageAsync(string SessionId, object userState) {
            if ((this.onBeginGetLocationMonitorEndMessageDelegate == null)) {
                this.onBeginGetLocationMonitorEndMessageDelegate = new BeginOperationDelegate(this.OnBeginGetLocationMonitorEndMessage);
            }
            if ((this.onEndGetLocationMonitorEndMessageDelegate == null)) {
                this.onEndGetLocationMonitorEndMessageDelegate = new EndOperationDelegate(this.OnEndGetLocationMonitorEndMessage);
            }
            if ((this.onGetLocationMonitorEndMessageCompletedDelegate == null)) {
                this.onGetLocationMonitorEndMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLocationMonitorEndMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetLocationMonitorEndMessageDelegate, new object[] {
                        SessionId}, this.onEndGetLocationMonitorEndMessageDelegate, this.onGetLocationMonitorEndMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginGetCameraNoSignalAlertMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCameraNoSignalAlertMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndGetCameraNoSignalAlertMessage(System.IAsyncResult result) {
            base.Channel.EndGetCameraNoSignalAlertMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetCameraNoSignalAlertMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginGetCameraNoSignalAlertMessage(callback, asyncState);
        }
        
        private object[] OnEndGetCameraNoSignalAlertMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndGetCameraNoSignalAlertMessage(result);
            return null;
        }
        
        private void OnGetCameraNoSignalAlertMessageCompleted(object state) {
            if ((this.GetCameraNoSignalAlertMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCameraNoSignalAlertMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCameraNoSignalAlertMessageAsync() {
            this.GetCameraNoSignalAlertMessageAsync(null);
        }
        
        public void GetCameraNoSignalAlertMessageAsync(object userState) {
            if ((this.onBeginGetCameraNoSignalAlertMessageDelegate == null)) {
                this.onBeginGetCameraNoSignalAlertMessageDelegate = new BeginOperationDelegate(this.OnBeginGetCameraNoSignalAlertMessage);
            }
            if ((this.onEndGetCameraNoSignalAlertMessageDelegate == null)) {
                this.onEndGetCameraNoSignalAlertMessageDelegate = new EndOperationDelegate(this.OnEndGetCameraNoSignalAlertMessage);
            }
            if ((this.onGetCameraNoSignalAlertMessageCompletedDelegate == null)) {
                this.onGetCameraNoSignalAlertMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCameraNoSignalAlertMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetCameraNoSignalAlertMessageDelegate, null, this.onEndGetCameraNoSignalAlertMessageDelegate, this.onGetCameraNoSignalAlertMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginCancelCameraNoSignalAlertMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCancelCameraNoSignalAlertMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndCancelCameraNoSignalAlertMessage(System.IAsyncResult result) {
            base.Channel.EndCancelCameraNoSignalAlertMessage(result);
        }
        
        private System.IAsyncResult OnBeginCancelCameraNoSignalAlertMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginCancelCameraNoSignalAlertMessage(callback, asyncState);
        }
        
        private object[] OnEndCancelCameraNoSignalAlertMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndCancelCameraNoSignalAlertMessage(result);
            return null;
        }
        
        private void OnCancelCameraNoSignalAlertMessageCompleted(object state) {
            if ((this.CancelCameraNoSignalAlertMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CancelCameraNoSignalAlertMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CancelCameraNoSignalAlertMessageAsync() {
            this.CancelCameraNoSignalAlertMessageAsync(null);
        }
        
        public void CancelCameraNoSignalAlertMessageAsync(object userState) {
            if ((this.onBeginCancelCameraNoSignalAlertMessageDelegate == null)) {
                this.onBeginCancelCameraNoSignalAlertMessageDelegate = new BeginOperationDelegate(this.OnBeginCancelCameraNoSignalAlertMessage);
            }
            if ((this.onEndCancelCameraNoSignalAlertMessageDelegate == null)) {
                this.onEndCancelCameraNoSignalAlertMessageDelegate = new EndOperationDelegate(this.OnEndCancelCameraNoSignalAlertMessage);
            }
            if ((this.onCancelCameraNoSignalAlertMessageCompletedDelegate == null)) {
                this.onCancelCameraNoSignalAlertMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCancelCameraNoSignalAlertMessageCompleted);
            }
            base.InvokeAsync(this.onBeginCancelCameraNoSignalAlertMessageDelegate, null, this.onEndCancelCameraNoSignalAlertMessageDelegate, this.onCancelCameraNoSignalAlertMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginGetCameraOcclusionAlertMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCameraOcclusionAlertMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndGetCameraOcclusionAlertMessage(System.IAsyncResult result) {
            base.Channel.EndGetCameraOcclusionAlertMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetCameraOcclusionAlertMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginGetCameraOcclusionAlertMessage(callback, asyncState);
        }
        
        private object[] OnEndGetCameraOcclusionAlertMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndGetCameraOcclusionAlertMessage(result);
            return null;
        }
        
        private void OnGetCameraOcclusionAlertMessageCompleted(object state) {
            if ((this.GetCameraOcclusionAlertMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCameraOcclusionAlertMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCameraOcclusionAlertMessageAsync() {
            this.GetCameraOcclusionAlertMessageAsync(null);
        }
        
        public void GetCameraOcclusionAlertMessageAsync(object userState) {
            if ((this.onBeginGetCameraOcclusionAlertMessageDelegate == null)) {
                this.onBeginGetCameraOcclusionAlertMessageDelegate = new BeginOperationDelegate(this.OnBeginGetCameraOcclusionAlertMessage);
            }
            if ((this.onEndGetCameraOcclusionAlertMessageDelegate == null)) {
                this.onEndGetCameraOcclusionAlertMessageDelegate = new EndOperationDelegate(this.OnEndGetCameraOcclusionAlertMessage);
            }
            if ((this.onGetCameraOcclusionAlertMessageCompletedDelegate == null)) {
                this.onGetCameraOcclusionAlertMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCameraOcclusionAlertMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetCameraOcclusionAlertMessageDelegate, null, this.onEndGetCameraOcclusionAlertMessageDelegate, this.onGetCameraOcclusionAlertMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginCancelCameraOcclusionAlertMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCancelCameraOcclusionAlertMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndCancelCameraOcclusionAlertMessage(System.IAsyncResult result) {
            base.Channel.EndCancelCameraOcclusionAlertMessage(result);
        }
        
        private System.IAsyncResult OnBeginCancelCameraOcclusionAlertMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginCancelCameraOcclusionAlertMessage(callback, asyncState);
        }
        
        private object[] OnEndCancelCameraOcclusionAlertMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndCancelCameraOcclusionAlertMessage(result);
            return null;
        }
        
        private void OnCancelCameraOcclusionAlertMessageCompleted(object state) {
            if ((this.CancelCameraOcclusionAlertMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CancelCameraOcclusionAlertMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CancelCameraOcclusionAlertMessageAsync() {
            this.CancelCameraOcclusionAlertMessageAsync(null);
        }
        
        public void CancelCameraOcclusionAlertMessageAsync(object userState) {
            if ((this.onBeginCancelCameraOcclusionAlertMessageDelegate == null)) {
                this.onBeginCancelCameraOcclusionAlertMessageDelegate = new BeginOperationDelegate(this.OnBeginCancelCameraOcclusionAlertMessage);
            }
            if ((this.onEndCancelCameraOcclusionAlertMessageDelegate == null)) {
                this.onEndCancelCameraOcclusionAlertMessageDelegate = new EndOperationDelegate(this.OnEndCancelCameraOcclusionAlertMessage);
            }
            if ((this.onCancelCameraOcclusionAlertMessageCompletedDelegate == null)) {
                this.onCancelCameraOcclusionAlertMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCancelCameraOcclusionAlertMessageCompleted);
            }
            base.InvokeAsync(this.onBeginCancelCameraOcclusionAlertMessageDelegate, null, this.onEndCancelCameraOcclusionAlertMessageDelegate, this.onCancelCameraOcclusionAlertMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginGetFireAlertMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFireAlertMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndGetFireAlertMessage(System.IAsyncResult result) {
            base.Channel.EndGetFireAlertMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetFireAlertMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginGetFireAlertMessage(callback, asyncState);
        }
        
        private object[] OnEndGetFireAlertMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndGetFireAlertMessage(result);
            return null;
        }
        
        private void OnGetFireAlertMessageCompleted(object state) {
            if ((this.GetFireAlertMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFireAlertMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFireAlertMessageAsync() {
            this.GetFireAlertMessageAsync(null);
        }
        
        public void GetFireAlertMessageAsync(object userState) {
            if ((this.onBeginGetFireAlertMessageDelegate == null)) {
                this.onBeginGetFireAlertMessageDelegate = new BeginOperationDelegate(this.OnBeginGetFireAlertMessage);
            }
            if ((this.onEndGetFireAlertMessageDelegate == null)) {
                this.onEndGetFireAlertMessageDelegate = new EndOperationDelegate(this.OnEndGetFireAlertMessage);
            }
            if ((this.onGetFireAlertMessageCompletedDelegate == null)) {
                this.onGetFireAlertMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFireAlertMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetFireAlertMessageDelegate, null, this.onEndGetFireAlertMessageDelegate, this.onGetFireAlertMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginCancelFireAlertMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCancelFireAlertMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndCancelFireAlertMessage(System.IAsyncResult result) {
            base.Channel.EndCancelFireAlertMessage(result);
        }
        
        private System.IAsyncResult OnBeginCancelFireAlertMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginCancelFireAlertMessage(callback, asyncState);
        }
        
        private object[] OnEndCancelFireAlertMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndCancelFireAlertMessage(result);
            return null;
        }
        
        private void OnCancelFireAlertMessageCompleted(object state) {
            if ((this.CancelFireAlertMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CancelFireAlertMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CancelFireAlertMessageAsync() {
            this.CancelFireAlertMessageAsync(null);
        }
        
        public void CancelFireAlertMessageAsync(object userState) {
            if ((this.onBeginCancelFireAlertMessageDelegate == null)) {
                this.onBeginCancelFireAlertMessageDelegate = new BeginOperationDelegate(this.OnBeginCancelFireAlertMessage);
            }
            if ((this.onEndCancelFireAlertMessageDelegate == null)) {
                this.onEndCancelFireAlertMessageDelegate = new EndOperationDelegate(this.OnEndCancelFireAlertMessage);
            }
            if ((this.onCancelFireAlertMessageCompletedDelegate == null)) {
                this.onCancelFireAlertMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCancelFireAlertMessageCompleted);
            }
            base.InvokeAsync(this.onBeginCancelFireAlertMessageDelegate, null, this.onEndCancelFireAlertMessageDelegate, this.onCancelFireAlertMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginGetGpsReceiverFaultAlertMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGpsReceiverFaultAlertMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndGetGpsReceiverFaultAlertMessage(System.IAsyncResult result) {
            base.Channel.EndGetGpsReceiverFaultAlertMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetGpsReceiverFaultAlertMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginGetGpsReceiverFaultAlertMessage(callback, asyncState);
        }
        
        private object[] OnEndGetGpsReceiverFaultAlertMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndGetGpsReceiverFaultAlertMessage(result);
            return null;
        }
        
        private void OnGetGpsReceiverFaultAlertMessageCompleted(object state) {
            if ((this.GetGpsReceiverFaultAlertMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGpsReceiverFaultAlertMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGpsReceiverFaultAlertMessageAsync() {
            this.GetGpsReceiverFaultAlertMessageAsync(null);
        }
        
        public void GetGpsReceiverFaultAlertMessageAsync(object userState) {
            if ((this.onBeginGetGpsReceiverFaultAlertMessageDelegate == null)) {
                this.onBeginGetGpsReceiverFaultAlertMessageDelegate = new BeginOperationDelegate(this.OnBeginGetGpsReceiverFaultAlertMessage);
            }
            if ((this.onEndGetGpsReceiverFaultAlertMessageDelegate == null)) {
                this.onEndGetGpsReceiverFaultAlertMessageDelegate = new EndOperationDelegate(this.OnEndGetGpsReceiverFaultAlertMessage);
            }
            if ((this.onGetGpsReceiverFaultAlertMessageCompletedDelegate == null)) {
                this.onGetGpsReceiverFaultAlertMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGpsReceiverFaultAlertMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetGpsReceiverFaultAlertMessageDelegate, null, this.onEndGetGpsReceiverFaultAlertMessageDelegate, this.onGetGpsReceiverFaultAlertMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginCancelGpsReceiverFaultAlertMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCancelGpsReceiverFaultAlertMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndCancelGpsReceiverFaultAlertMessage(System.IAsyncResult result) {
            base.Channel.EndCancelGpsReceiverFaultAlertMessage(result);
        }
        
        private System.IAsyncResult OnBeginCancelGpsReceiverFaultAlertMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginCancelGpsReceiverFaultAlertMessage(callback, asyncState);
        }
        
        private object[] OnEndCancelGpsReceiverFaultAlertMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndCancelGpsReceiverFaultAlertMessage(result);
            return null;
        }
        
        private void OnCancelGpsReceiverFaultAlertMessageCompleted(object state) {
            if ((this.CancelGpsReceiverFaultAlertMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CancelGpsReceiverFaultAlertMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CancelGpsReceiverFaultAlertMessageAsync() {
            this.CancelGpsReceiverFaultAlertMessageAsync(null);
        }
        
        public void CancelGpsReceiverFaultAlertMessageAsync(object userState) {
            if ((this.onBeginCancelGpsReceiverFaultAlertMessageDelegate == null)) {
                this.onBeginCancelGpsReceiverFaultAlertMessageDelegate = new BeginOperationDelegate(this.OnBeginCancelGpsReceiverFaultAlertMessage);
            }
            if ((this.onEndCancelGpsReceiverFaultAlertMessageDelegate == null)) {
                this.onEndCancelGpsReceiverFaultAlertMessageDelegate = new EndOperationDelegate(this.OnEndCancelGpsReceiverFaultAlertMessage);
            }
            if ((this.onCancelGpsReceiverFaultAlertMessageCompletedDelegate == null)) {
                this.onCancelGpsReceiverFaultAlertMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCancelGpsReceiverFaultAlertMessageCompleted);
            }
            base.InvokeAsync(this.onBeginCancelGpsReceiverFaultAlertMessageDelegate, null, this.onEndCancelGpsReceiverFaultAlertMessageDelegate, this.onCancelGpsReceiverFaultAlertMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginGetMdvrMemoryCardErrorAlertMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMdvrMemoryCardErrorAlertMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndGetMdvrMemoryCardErrorAlertMessage(System.IAsyncResult result) {
            base.Channel.EndGetMdvrMemoryCardErrorAlertMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetMdvrMemoryCardErrorAlertMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginGetMdvrMemoryCardErrorAlertMessage(callback, asyncState);
        }
        
        private object[] OnEndGetMdvrMemoryCardErrorAlertMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndGetMdvrMemoryCardErrorAlertMessage(result);
            return null;
        }
        
        private void OnGetMdvrMemoryCardErrorAlertMessageCompleted(object state) {
            if ((this.GetMdvrMemoryCardErrorAlertMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMdvrMemoryCardErrorAlertMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMdvrMemoryCardErrorAlertMessageAsync() {
            this.GetMdvrMemoryCardErrorAlertMessageAsync(null);
        }
        
        public void GetMdvrMemoryCardErrorAlertMessageAsync(object userState) {
            if ((this.onBeginGetMdvrMemoryCardErrorAlertMessageDelegate == null)) {
                this.onBeginGetMdvrMemoryCardErrorAlertMessageDelegate = new BeginOperationDelegate(this.OnBeginGetMdvrMemoryCardErrorAlertMessage);
            }
            if ((this.onEndGetMdvrMemoryCardErrorAlertMessageDelegate == null)) {
                this.onEndGetMdvrMemoryCardErrorAlertMessageDelegate = new EndOperationDelegate(this.OnEndGetMdvrMemoryCardErrorAlertMessage);
            }
            if ((this.onGetMdvrMemoryCardErrorAlertMessageCompletedDelegate == null)) {
                this.onGetMdvrMemoryCardErrorAlertMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMdvrMemoryCardErrorAlertMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetMdvrMemoryCardErrorAlertMessageDelegate, null, this.onEndGetMdvrMemoryCardErrorAlertMessageDelegate, this.onGetMdvrMemoryCardErrorAlertMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginCancelMdvrMemoryCardErrorAlertMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCancelMdvrMemoryCardErrorAlertMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndCancelMdvrMemoryCardErrorAlertMessage(System.IAsyncResult result) {
            base.Channel.EndCancelMdvrMemoryCardErrorAlertMessage(result);
        }
        
        private System.IAsyncResult OnBeginCancelMdvrMemoryCardErrorAlertMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginCancelMdvrMemoryCardErrorAlertMessage(callback, asyncState);
        }
        
        private object[] OnEndCancelMdvrMemoryCardErrorAlertMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndCancelMdvrMemoryCardErrorAlertMessage(result);
            return null;
        }
        
        private void OnCancelMdvrMemoryCardErrorAlertMessageCompleted(object state) {
            if ((this.CancelMdvrMemoryCardErrorAlertMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CancelMdvrMemoryCardErrorAlertMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CancelMdvrMemoryCardErrorAlertMessageAsync() {
            this.CancelMdvrMemoryCardErrorAlertMessageAsync(null);
        }
        
        public void CancelMdvrMemoryCardErrorAlertMessageAsync(object userState) {
            if ((this.onBeginCancelMdvrMemoryCardErrorAlertMessageDelegate == null)) {
                this.onBeginCancelMdvrMemoryCardErrorAlertMessageDelegate = new BeginOperationDelegate(this.OnBeginCancelMdvrMemoryCardErrorAlertMessage);
            }
            if ((this.onEndCancelMdvrMemoryCardErrorAlertMessageDelegate == null)) {
                this.onEndCancelMdvrMemoryCardErrorAlertMessageDelegate = new EndOperationDelegate(this.OnEndCancelMdvrMemoryCardErrorAlertMessage);
            }
            if ((this.onCancelMdvrMemoryCardErrorAlertMessageCompletedDelegate == null)) {
                this.onCancelMdvrMemoryCardErrorAlertMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCancelMdvrMemoryCardErrorAlertMessageCompleted);
            }
            base.InvokeAsync(this.onBeginCancelMdvrMemoryCardErrorAlertMessageDelegate, null, this.onEndCancelMdvrMemoryCardErrorAlertMessageDelegate, this.onCancelMdvrMemoryCardErrorAlertMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginGetOpenOrCloseDoorAbnormalAlertMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOpenOrCloseDoorAbnormalAlertMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndGetOpenOrCloseDoorAbnormalAlertMessage(System.IAsyncResult result) {
            base.Channel.EndGetOpenOrCloseDoorAbnormalAlertMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetOpenOrCloseDoorAbnormalAlertMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginGetOpenOrCloseDoorAbnormalAlertMessage(callback, asyncState);
        }
        
        private object[] OnEndGetOpenOrCloseDoorAbnormalAlertMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndGetOpenOrCloseDoorAbnormalAlertMessage(result);
            return null;
        }
        
        private void OnGetOpenOrCloseDoorAbnormalAlertMessageCompleted(object state) {
            if ((this.GetOpenOrCloseDoorAbnormalAlertMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOpenOrCloseDoorAbnormalAlertMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOpenOrCloseDoorAbnormalAlertMessageAsync() {
            this.GetOpenOrCloseDoorAbnormalAlertMessageAsync(null);
        }
        
        public void GetOpenOrCloseDoorAbnormalAlertMessageAsync(object userState) {
            if ((this.onBeginGetOpenOrCloseDoorAbnormalAlertMessageDelegate == null)) {
                this.onBeginGetOpenOrCloseDoorAbnormalAlertMessageDelegate = new BeginOperationDelegate(this.OnBeginGetOpenOrCloseDoorAbnormalAlertMessage);
            }
            if ((this.onEndGetOpenOrCloseDoorAbnormalAlertMessageDelegate == null)) {
                this.onEndGetOpenOrCloseDoorAbnormalAlertMessageDelegate = new EndOperationDelegate(this.OnEndGetOpenOrCloseDoorAbnormalAlertMessage);
            }
            if ((this.onGetOpenOrCloseDoorAbnormalAlertMessageCompletedDelegate == null)) {
                this.onGetOpenOrCloseDoorAbnormalAlertMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOpenOrCloseDoorAbnormalAlertMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetOpenOrCloseDoorAbnormalAlertMessageDelegate, null, this.onEndGetOpenOrCloseDoorAbnormalAlertMessageDelegate, this.onGetOpenOrCloseDoorAbnormalAlertMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginCancelOpenOrCloseDoorAbnormalAlertMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCancelOpenOrCloseDoorAbnormalAlertMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndCancelOpenOrCloseDoorAbnormalAlertMessage(System.IAsyncResult result) {
            base.Channel.EndCancelOpenOrCloseDoorAbnormalAlertMessage(result);
        }
        
        private System.IAsyncResult OnBeginCancelOpenOrCloseDoorAbnormalAlertMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginCancelOpenOrCloseDoorAbnormalAlertMessage(callback, asyncState);
        }
        
        private object[] OnEndCancelOpenOrCloseDoorAbnormalAlertMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndCancelOpenOrCloseDoorAbnormalAlertMessage(result);
            return null;
        }
        
        private void OnCancelOpenOrCloseDoorAbnormalAlertMessageCompleted(object state) {
            if ((this.CancelOpenOrCloseDoorAbnormalAlertMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CancelOpenOrCloseDoorAbnormalAlertMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CancelOpenOrCloseDoorAbnormalAlertMessageAsync() {
            this.CancelOpenOrCloseDoorAbnormalAlertMessageAsync(null);
        }
        
        public void CancelOpenOrCloseDoorAbnormalAlertMessageAsync(object userState) {
            if ((this.onBeginCancelOpenOrCloseDoorAbnormalAlertMessageDelegate == null)) {
                this.onBeginCancelOpenOrCloseDoorAbnormalAlertMessageDelegate = new BeginOperationDelegate(this.OnBeginCancelOpenOrCloseDoorAbnormalAlertMessage);
            }
            if ((this.onEndCancelOpenOrCloseDoorAbnormalAlertMessageDelegate == null)) {
                this.onEndCancelOpenOrCloseDoorAbnormalAlertMessageDelegate = new EndOperationDelegate(this.OnEndCancelOpenOrCloseDoorAbnormalAlertMessage);
            }
            if ((this.onCancelOpenOrCloseDoorAbnormalAlertMessageCompletedDelegate == null)) {
                this.onCancelOpenOrCloseDoorAbnormalAlertMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCancelOpenOrCloseDoorAbnormalAlertMessageCompleted);
            }
            base.InvokeAsync(this.onBeginCancelOpenOrCloseDoorAbnormalAlertMessageDelegate, null, this.onEndCancelOpenOrCloseDoorAbnormalAlertMessageDelegate, this.onCancelOpenOrCloseDoorAbnormalAlertMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginGetOverSpeedAlertMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOverSpeedAlertMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndGetOverSpeedAlertMessage(System.IAsyncResult result) {
            base.Channel.EndGetOverSpeedAlertMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetOverSpeedAlertMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginGetOverSpeedAlertMessage(callback, asyncState);
        }
        
        private object[] OnEndGetOverSpeedAlertMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndGetOverSpeedAlertMessage(result);
            return null;
        }
        
        private void OnGetOverSpeedAlertMessageCompleted(object state) {
            if ((this.GetOverSpeedAlertMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOverSpeedAlertMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOverSpeedAlertMessageAsync() {
            this.GetOverSpeedAlertMessageAsync(null);
        }
        
        public void GetOverSpeedAlertMessageAsync(object userState) {
            if ((this.onBeginGetOverSpeedAlertMessageDelegate == null)) {
                this.onBeginGetOverSpeedAlertMessageDelegate = new BeginOperationDelegate(this.OnBeginGetOverSpeedAlertMessage);
            }
            if ((this.onEndGetOverSpeedAlertMessageDelegate == null)) {
                this.onEndGetOverSpeedAlertMessageDelegate = new EndOperationDelegate(this.OnEndGetOverSpeedAlertMessage);
            }
            if ((this.onGetOverSpeedAlertMessageCompletedDelegate == null)) {
                this.onGetOverSpeedAlertMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOverSpeedAlertMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetOverSpeedAlertMessageDelegate, null, this.onEndGetOverSpeedAlertMessageDelegate, this.onGetOverSpeedAlertMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginCancelOverSpeedAlertMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCancelOverSpeedAlertMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndCancelOverSpeedAlertMessage(System.IAsyncResult result) {
            base.Channel.EndCancelOverSpeedAlertMessage(result);
        }
        
        private System.IAsyncResult OnBeginCancelOverSpeedAlertMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginCancelOverSpeedAlertMessage(callback, asyncState);
        }
        
        private object[] OnEndCancelOverSpeedAlertMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndCancelOverSpeedAlertMessage(result);
            return null;
        }
        
        private void OnCancelOverSpeedAlertMessageCompleted(object state) {
            if ((this.CancelOverSpeedAlertMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CancelOverSpeedAlertMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CancelOverSpeedAlertMessageAsync() {
            this.CancelOverSpeedAlertMessageAsync(null);
        }
        
        public void CancelOverSpeedAlertMessageAsync(object userState) {
            if ((this.onBeginCancelOverSpeedAlertMessageDelegate == null)) {
                this.onBeginCancelOverSpeedAlertMessageDelegate = new BeginOperationDelegate(this.OnBeginCancelOverSpeedAlertMessage);
            }
            if ((this.onEndCancelOverSpeedAlertMessageDelegate == null)) {
                this.onEndCancelOverSpeedAlertMessageDelegate = new EndOperationDelegate(this.OnEndCancelOverSpeedAlertMessage);
            }
            if ((this.onCancelOverSpeedAlertMessageCompletedDelegate == null)) {
                this.onCancelOverSpeedAlertMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCancelOverSpeedAlertMessageCompleted);
            }
            base.InvokeAsync(this.onBeginCancelOverSpeedAlertMessageDelegate, null, this.onEndCancelOverSpeedAlertMessageDelegate, this.onCancelOverSpeedAlertMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginGetRegionAlertMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRegionAlertMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndGetRegionAlertMessage(System.IAsyncResult result) {
            base.Channel.EndGetRegionAlertMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetRegionAlertMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginGetRegionAlertMessage(callback, asyncState);
        }
        
        private object[] OnEndGetRegionAlertMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndGetRegionAlertMessage(result);
            return null;
        }
        
        private void OnGetRegionAlertMessageCompleted(object state) {
            if ((this.GetRegionAlertMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRegionAlertMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRegionAlertMessageAsync() {
            this.GetRegionAlertMessageAsync(null);
        }
        
        public void GetRegionAlertMessageAsync(object userState) {
            if ((this.onBeginGetRegionAlertMessageDelegate == null)) {
                this.onBeginGetRegionAlertMessageDelegate = new BeginOperationDelegate(this.OnBeginGetRegionAlertMessage);
            }
            if ((this.onEndGetRegionAlertMessageDelegate == null)) {
                this.onEndGetRegionAlertMessageDelegate = new EndOperationDelegate(this.OnEndGetRegionAlertMessage);
            }
            if ((this.onGetRegionAlertMessageCompletedDelegate == null)) {
                this.onGetRegionAlertMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRegionAlertMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetRegionAlertMessageDelegate, null, this.onEndGetRegionAlertMessageDelegate, this.onGetRegionAlertMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginCancelRegionAlertMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCancelRegionAlertMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndCancelRegionAlertMessage(System.IAsyncResult result) {
            base.Channel.EndCancelRegionAlertMessage(result);
        }
        
        private System.IAsyncResult OnBeginCancelRegionAlertMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginCancelRegionAlertMessage(callback, asyncState);
        }
        
        private object[] OnEndCancelRegionAlertMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndCancelRegionAlertMessage(result);
            return null;
        }
        
        private void OnCancelRegionAlertMessageCompleted(object state) {
            if ((this.CancelRegionAlertMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CancelRegionAlertMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CancelRegionAlertMessageAsync() {
            this.CancelRegionAlertMessageAsync(null);
        }
        
        public void CancelRegionAlertMessageAsync(object userState) {
            if ((this.onBeginCancelRegionAlertMessageDelegate == null)) {
                this.onBeginCancelRegionAlertMessageDelegate = new BeginOperationDelegate(this.OnBeginCancelRegionAlertMessage);
            }
            if ((this.onEndCancelRegionAlertMessageDelegate == null)) {
                this.onEndCancelRegionAlertMessageDelegate = new EndOperationDelegate(this.OnEndCancelRegionAlertMessage);
            }
            if ((this.onCancelRegionAlertMessageCompletedDelegate == null)) {
                this.onCancelRegionAlertMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCancelRegionAlertMessageCompleted);
            }
            base.InvokeAsync(this.onBeginCancelRegionAlertMessageDelegate, null, this.onEndCancelRegionAlertMessageDelegate, this.onCancelRegionAlertMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginGetRemoveDeviceSuiteAlertNotifyMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRemoveDeviceSuiteAlertNotifyMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndGetRemoveDeviceSuiteAlertNotifyMessage(System.IAsyncResult result) {
            base.Channel.EndGetRemoveDeviceSuiteAlertNotifyMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetRemoveDeviceSuiteAlertNotifyMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginGetRemoveDeviceSuiteAlertNotifyMessage(callback, asyncState);
        }
        
        private object[] OnEndGetRemoveDeviceSuiteAlertNotifyMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndGetRemoveDeviceSuiteAlertNotifyMessage(result);
            return null;
        }
        
        private void OnGetRemoveDeviceSuiteAlertNotifyMessageCompleted(object state) {
            if ((this.GetRemoveDeviceSuiteAlertNotifyMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRemoveDeviceSuiteAlertNotifyMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRemoveDeviceSuiteAlertNotifyMessageAsync() {
            this.GetRemoveDeviceSuiteAlertNotifyMessageAsync(null);
        }
        
        public void GetRemoveDeviceSuiteAlertNotifyMessageAsync(object userState) {
            if ((this.onBeginGetRemoveDeviceSuiteAlertNotifyMessageDelegate == null)) {
                this.onBeginGetRemoveDeviceSuiteAlertNotifyMessageDelegate = new BeginOperationDelegate(this.OnBeginGetRemoveDeviceSuiteAlertNotifyMessage);
            }
            if ((this.onEndGetRemoveDeviceSuiteAlertNotifyMessageDelegate == null)) {
                this.onEndGetRemoveDeviceSuiteAlertNotifyMessageDelegate = new EndOperationDelegate(this.OnEndGetRemoveDeviceSuiteAlertNotifyMessage);
            }
            if ((this.onGetRemoveDeviceSuiteAlertNotifyMessageCompletedDelegate == null)) {
                this.onGetRemoveDeviceSuiteAlertNotifyMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRemoveDeviceSuiteAlertNotifyMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetRemoveDeviceSuiteAlertNotifyMessageDelegate, null, this.onEndGetRemoveDeviceSuiteAlertNotifyMessageDelegate, this.onGetRemoveDeviceSuiteAlertNotifyMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginCancelRemoveDeviceSuiteAlertNotifyMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCancelRemoveDeviceSuiteAlertNotifyMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndCancelRemoveDeviceSuiteAlertNotifyMessage(System.IAsyncResult result) {
            base.Channel.EndCancelRemoveDeviceSuiteAlertNotifyMessage(result);
        }
        
        private System.IAsyncResult OnBeginCancelRemoveDeviceSuiteAlertNotifyMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginCancelRemoveDeviceSuiteAlertNotifyMessage(callback, asyncState);
        }
        
        private object[] OnEndCancelRemoveDeviceSuiteAlertNotifyMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndCancelRemoveDeviceSuiteAlertNotifyMessage(result);
            return null;
        }
        
        private void OnCancelRemoveDeviceSuiteAlertNotifyMessageCompleted(object state) {
            if ((this.CancelRemoveDeviceSuiteAlertNotifyMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CancelRemoveDeviceSuiteAlertNotifyMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CancelRemoveDeviceSuiteAlertNotifyMessageAsync() {
            this.CancelRemoveDeviceSuiteAlertNotifyMessageAsync(null);
        }
        
        public void CancelRemoveDeviceSuiteAlertNotifyMessageAsync(object userState) {
            if ((this.onBeginCancelRemoveDeviceSuiteAlertNotifyMessageDelegate == null)) {
                this.onBeginCancelRemoveDeviceSuiteAlertNotifyMessageDelegate = new BeginOperationDelegate(this.OnBeginCancelRemoveDeviceSuiteAlertNotifyMessage);
            }
            if ((this.onEndCancelRemoveDeviceSuiteAlertNotifyMessageDelegate == null)) {
                this.onEndCancelRemoveDeviceSuiteAlertNotifyMessageDelegate = new EndOperationDelegate(this.OnEndCancelRemoveDeviceSuiteAlertNotifyMessage);
            }
            if ((this.onCancelRemoveDeviceSuiteAlertNotifyMessageCompletedDelegate == null)) {
                this.onCancelRemoveDeviceSuiteAlertNotifyMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCancelRemoveDeviceSuiteAlertNotifyMessageCompleted);
            }
            base.InvokeAsync(this.onBeginCancelRemoveDeviceSuiteAlertNotifyMessageDelegate, null, this.onEndCancelRemoveDeviceSuiteAlertNotifyMessageDelegate, this.onCancelRemoveDeviceSuiteAlertNotifyMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginGetTemperatureAlertMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTemperatureAlertMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndGetTemperatureAlertMessage(System.IAsyncResult result) {
            base.Channel.EndGetTemperatureAlertMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetTemperatureAlertMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginGetTemperatureAlertMessage(callback, asyncState);
        }
        
        private object[] OnEndGetTemperatureAlertMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndGetTemperatureAlertMessage(result);
            return null;
        }
        
        private void OnGetTemperatureAlertMessageCompleted(object state) {
            if ((this.GetTemperatureAlertMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTemperatureAlertMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTemperatureAlertMessageAsync() {
            this.GetTemperatureAlertMessageAsync(null);
        }
        
        public void GetTemperatureAlertMessageAsync(object userState) {
            if ((this.onBeginGetTemperatureAlertMessageDelegate == null)) {
                this.onBeginGetTemperatureAlertMessageDelegate = new BeginOperationDelegate(this.OnBeginGetTemperatureAlertMessage);
            }
            if ((this.onEndGetTemperatureAlertMessageDelegate == null)) {
                this.onEndGetTemperatureAlertMessageDelegate = new EndOperationDelegate(this.OnEndGetTemperatureAlertMessage);
            }
            if ((this.onGetTemperatureAlertMessageCompletedDelegate == null)) {
                this.onGetTemperatureAlertMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTemperatureAlertMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetTemperatureAlertMessageDelegate, null, this.onEndGetTemperatureAlertMessageDelegate, this.onGetTemperatureAlertMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginCancelTemperatureAlertMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCancelTemperatureAlertMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndCancelTemperatureAlertMessage(System.IAsyncResult result) {
            base.Channel.EndCancelTemperatureAlertMessage(result);
        }
        
        private System.IAsyncResult OnBeginCancelTemperatureAlertMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginCancelTemperatureAlertMessage(callback, asyncState);
        }
        
        private object[] OnEndCancelTemperatureAlertMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndCancelTemperatureAlertMessage(result);
            return null;
        }
        
        private void OnCancelTemperatureAlertMessageCompleted(object state) {
            if ((this.CancelTemperatureAlertMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CancelTemperatureAlertMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CancelTemperatureAlertMessageAsync() {
            this.CancelTemperatureAlertMessageAsync(null);
        }
        
        public void CancelTemperatureAlertMessageAsync(object userState) {
            if ((this.onBeginCancelTemperatureAlertMessageDelegate == null)) {
                this.onBeginCancelTemperatureAlertMessageDelegate = new BeginOperationDelegate(this.OnBeginCancelTemperatureAlertMessage);
            }
            if ((this.onEndCancelTemperatureAlertMessageDelegate == null)) {
                this.onEndCancelTemperatureAlertMessageDelegate = new EndOperationDelegate(this.OnEndCancelTemperatureAlertMessage);
            }
            if ((this.onCancelTemperatureAlertMessageCompletedDelegate == null)) {
                this.onCancelTemperatureAlertMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCancelTemperatureAlertMessageCompleted);
            }
            base.InvokeAsync(this.onBeginCancelTemperatureAlertMessageDelegate, null, this.onEndCancelTemperatureAlertMessageDelegate, this.onCancelTemperatureAlertMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginGetVoltageAbnormalAlertMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVoltageAbnormalAlertMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndGetVoltageAbnormalAlertMessage(System.IAsyncResult result) {
            base.Channel.EndGetVoltageAbnormalAlertMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetVoltageAbnormalAlertMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginGetVoltageAbnormalAlertMessage(callback, asyncState);
        }
        
        private object[] OnEndGetVoltageAbnormalAlertMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndGetVoltageAbnormalAlertMessage(result);
            return null;
        }
        
        private void OnGetVoltageAbnormalAlertMessageCompleted(object state) {
            if ((this.GetVoltageAbnormalAlertMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVoltageAbnormalAlertMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVoltageAbnormalAlertMessageAsync() {
            this.GetVoltageAbnormalAlertMessageAsync(null);
        }
        
        public void GetVoltageAbnormalAlertMessageAsync(object userState) {
            if ((this.onBeginGetVoltageAbnormalAlertMessageDelegate == null)) {
                this.onBeginGetVoltageAbnormalAlertMessageDelegate = new BeginOperationDelegate(this.OnBeginGetVoltageAbnormalAlertMessage);
            }
            if ((this.onEndGetVoltageAbnormalAlertMessageDelegate == null)) {
                this.onEndGetVoltageAbnormalAlertMessageDelegate = new EndOperationDelegate(this.OnEndGetVoltageAbnormalAlertMessage);
            }
            if ((this.onGetVoltageAbnormalAlertMessageCompletedDelegate == null)) {
                this.onGetVoltageAbnormalAlertMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVoltageAbnormalAlertMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetVoltageAbnormalAlertMessageDelegate, null, this.onEndGetVoltageAbnormalAlertMessageDelegate, this.onGetVoltageAbnormalAlertMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginCancelVoltageAbnormalAlertMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCancelVoltageAbnormalAlertMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndCancelVoltageAbnormalAlertMessage(System.IAsyncResult result) {
            base.Channel.EndCancelVoltageAbnormalAlertMessage(result);
        }
        
        private System.IAsyncResult OnBeginCancelVoltageAbnormalAlertMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginCancelVoltageAbnormalAlertMessage(callback, asyncState);
        }
        
        private object[] OnEndCancelVoltageAbnormalAlertMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndCancelVoltageAbnormalAlertMessage(result);
            return null;
        }
        
        private void OnCancelVoltageAbnormalAlertMessageCompleted(object state) {
            if ((this.CancelVoltageAbnormalAlertMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CancelVoltageAbnormalAlertMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CancelVoltageAbnormalAlertMessageAsync() {
            this.CancelVoltageAbnormalAlertMessageAsync(null);
        }
        
        public void CancelVoltageAbnormalAlertMessageAsync(object userState) {
            if ((this.onBeginCancelVoltageAbnormalAlertMessageDelegate == null)) {
                this.onBeginCancelVoltageAbnormalAlertMessageDelegate = new BeginOperationDelegate(this.OnBeginCancelVoltageAbnormalAlertMessage);
            }
            if ((this.onEndCancelVoltageAbnormalAlertMessageDelegate == null)) {
                this.onEndCancelVoltageAbnormalAlertMessageDelegate = new EndOperationDelegate(this.OnEndCancelVoltageAbnormalAlertMessage);
            }
            if ((this.onCancelVoltageAbnormalAlertMessageCompletedDelegate == null)) {
                this.onCancelVoltageAbnormalAlertMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCancelVoltageAbnormalAlertMessageCompleted);
            }
            base.InvokeAsync(this.onBeginCancelVoltageAbnormalAlertMessageDelegate, null, this.onEndCancelVoltageAbnormalAlertMessageDelegate, this.onCancelVoltageAbnormalAlertMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginGetInspectMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInspectMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndGetInspectMessage(System.IAsyncResult result) {
            base.Channel.EndGetInspectMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetInspectMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginGetInspectMessage(callback, asyncState);
        }
        
        private object[] OnEndGetInspectMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndGetInspectMessage(result);
            return null;
        }
        
        private void OnGetInspectMessageCompleted(object state) {
            if ((this.GetInspectMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInspectMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInspectMessageAsync() {
            this.GetInspectMessageAsync(null);
        }
        
        public void GetInspectMessageAsync(object userState) {
            if ((this.onBeginGetInspectMessageDelegate == null)) {
                this.onBeginGetInspectMessageDelegate = new BeginOperationDelegate(this.OnBeginGetInspectMessage);
            }
            if ((this.onEndGetInspectMessageDelegate == null)) {
                this.onEndGetInspectMessageDelegate = new EndOperationDelegate(this.OnEndGetInspectMessage);
            }
            if ((this.onGetInspectMessageCompletedDelegate == null)) {
                this.onGetInspectMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInspectMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetInspectMessageDelegate, null, this.onEndGetInspectMessageDelegate, this.onGetInspectMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginCancelInspectMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCancelInspectMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndCancelInspectMessage(System.IAsyncResult result) {
            base.Channel.EndCancelInspectMessage(result);
        }
        
        private System.IAsyncResult OnBeginCancelInspectMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginCancelInspectMessage(callback, asyncState);
        }
        
        private object[] OnEndCancelInspectMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndCancelInspectMessage(result);
            return null;
        }
        
        private void OnCancelInspectMessageCompleted(object state) {
            if ((this.CancelInspectMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CancelInspectMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CancelInspectMessageAsync() {
            this.CancelInspectMessageAsync(null);
        }
        
        public void CancelInspectMessageAsync(object userState) {
            if ((this.onBeginCancelInspectMessageDelegate == null)) {
                this.onBeginCancelInspectMessageDelegate = new BeginOperationDelegate(this.OnBeginCancelInspectMessage);
            }
            if ((this.onEndCancelInspectMessageDelegate == null)) {
                this.onEndCancelInspectMessageDelegate = new EndOperationDelegate(this.OnEndCancelInspectMessage);
            }
            if ((this.onCancelInspectMessageCompletedDelegate == null)) {
                this.onCancelInspectMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCancelInspectMessageCompleted);
            }
            base.InvokeAsync(this.onBeginCancelInspectMessageDelegate, null, this.onEndCancelInspectMessageDelegate, this.onCancelInspectMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginGetOnOfflineMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOnOfflineMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndGetOnOfflineMessage(System.IAsyncResult result) {
            base.Channel.EndGetOnOfflineMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetOnOfflineMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginGetOnOfflineMessage(callback, asyncState);
        }
        
        private object[] OnEndGetOnOfflineMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndGetOnOfflineMessage(result);
            return null;
        }
        
        private void OnGetOnOfflineMessageCompleted(object state) {
            if ((this.GetOnOfflineMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOnOfflineMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOnOfflineMessageAsync() {
            this.GetOnOfflineMessageAsync(null);
        }
        
        public void GetOnOfflineMessageAsync(object userState) {
            if ((this.onBeginGetOnOfflineMessageDelegate == null)) {
                this.onBeginGetOnOfflineMessageDelegate = new BeginOperationDelegate(this.OnBeginGetOnOfflineMessage);
            }
            if ((this.onEndGetOnOfflineMessageDelegate == null)) {
                this.onEndGetOnOfflineMessageDelegate = new EndOperationDelegate(this.OnEndGetOnOfflineMessage);
            }
            if ((this.onGetOnOfflineMessageCompletedDelegate == null)) {
                this.onGetOnOfflineMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOnOfflineMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetOnOfflineMessageDelegate, null, this.onEndGetOnOfflineMessageDelegate, this.onGetOnOfflineMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginCancelOnOfflineMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCancelOnOfflineMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndCancelOnOfflineMessage(System.IAsyncResult result) {
            base.Channel.EndCancelOnOfflineMessage(result);
        }
        
        private System.IAsyncResult OnBeginCancelOnOfflineMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginCancelOnOfflineMessage(callback, asyncState);
        }
        
        private object[] OnEndCancelOnOfflineMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndCancelOnOfflineMessage(result);
            return null;
        }
        
        private void OnCancelOnOfflineMessageCompleted(object state) {
            if ((this.CancelOnOfflineMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CancelOnOfflineMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CancelOnOfflineMessageAsync() {
            this.CancelOnOfflineMessageAsync(null);
        }
        
        public void CancelOnOfflineMessageAsync(object userState) {
            if ((this.onBeginCancelOnOfflineMessageDelegate == null)) {
                this.onBeginCancelOnOfflineMessageDelegate = new BeginOperationDelegate(this.OnBeginCancelOnOfflineMessage);
            }
            if ((this.onEndCancelOnOfflineMessageDelegate == null)) {
                this.onEndCancelOnOfflineMessageDelegate = new EndOperationDelegate(this.OnEndCancelOnOfflineMessage);
            }
            if ((this.onCancelOnOfflineMessageCompletedDelegate == null)) {
                this.onCancelOnOfflineMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCancelOnOfflineMessageCompleted);
            }
            base.InvokeAsync(this.onBeginCancelOnOfflineMessageDelegate, null, this.onEndCancelOnOfflineMessageDelegate, this.onCancelOnOfflineMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginGetSuiteRunintStatusMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSuiteRunintStatusMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndGetSuiteRunintStatusMessage(System.IAsyncResult result) {
            base.Channel.EndGetSuiteRunintStatusMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetSuiteRunintStatusMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginGetSuiteRunintStatusMessage(callback, asyncState);
        }
        
        private object[] OnEndGetSuiteRunintStatusMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndGetSuiteRunintStatusMessage(result);
            return null;
        }
        
        private void OnGetSuiteRunintStatusMessageCompleted(object state) {
            if ((this.GetSuiteRunintStatusMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSuiteRunintStatusMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSuiteRunintStatusMessageAsync() {
            this.GetSuiteRunintStatusMessageAsync(null);
        }
        
        public void GetSuiteRunintStatusMessageAsync(object userState) {
            if ((this.onBeginGetSuiteRunintStatusMessageDelegate == null)) {
                this.onBeginGetSuiteRunintStatusMessageDelegate = new BeginOperationDelegate(this.OnBeginGetSuiteRunintStatusMessage);
            }
            if ((this.onEndGetSuiteRunintStatusMessageDelegate == null)) {
                this.onEndGetSuiteRunintStatusMessageDelegate = new EndOperationDelegate(this.OnEndGetSuiteRunintStatusMessage);
            }
            if ((this.onGetSuiteRunintStatusMessageCompletedDelegate == null)) {
                this.onGetSuiteRunintStatusMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSuiteRunintStatusMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetSuiteRunintStatusMessageDelegate, null, this.onEndGetSuiteRunintStatusMessageDelegate, this.onGetSuiteRunintStatusMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginGetFenceReplyMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFenceReplyMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndGetFenceReplyMessage(System.IAsyncResult result) {
            base.Channel.EndGetFenceReplyMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetFenceReplyMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginGetFenceReplyMessage(callback, asyncState);
        }
        
        private object[] OnEndGetFenceReplyMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndGetFenceReplyMessage(result);
            return null;
        }
        
        private void OnGetFenceReplyMessageCompleted(object state) {
            if ((this.GetFenceReplyMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFenceReplyMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFenceReplyMessageAsync() {
            this.GetFenceReplyMessageAsync(null);
        }
        
        public void GetFenceReplyMessageAsync(object userState) {
            if ((this.onBeginGetFenceReplyMessageDelegate == null)) {
                this.onBeginGetFenceReplyMessageDelegate = new BeginOperationDelegate(this.OnBeginGetFenceReplyMessage);
            }
            if ((this.onEndGetFenceReplyMessageDelegate == null)) {
                this.onEndGetFenceReplyMessageDelegate = new EndOperationDelegate(this.OnEndGetFenceReplyMessage);
            }
            if ((this.onGetFenceReplyMessageCompletedDelegate == null)) {
                this.onGetFenceReplyMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFenceReplyMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetFenceReplyMessageDelegate, null, this.onEndGetFenceReplyMessageDelegate, this.onGetFenceReplyMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginGetSettingOverSpeedReplyMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSettingOverSpeedReplyMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndGetSettingOverSpeedReplyMessage(System.IAsyncResult result) {
            base.Channel.EndGetSettingOverSpeedReplyMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetSettingOverSpeedReplyMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginGetSettingOverSpeedReplyMessage(callback, asyncState);
        }
        
        private object[] OnEndGetSettingOverSpeedReplyMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndGetSettingOverSpeedReplyMessage(result);
            return null;
        }
        
        private void OnGetSettingOverSpeedReplyMessageCompleted(object state) {
            if ((this.GetSettingOverSpeedReplyMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSettingOverSpeedReplyMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSettingOverSpeedReplyMessageAsync() {
            this.GetSettingOverSpeedReplyMessageAsync(null);
        }
        
        public void GetSettingOverSpeedReplyMessageAsync(object userState) {
            if ((this.onBeginGetSettingOverSpeedReplyMessageDelegate == null)) {
                this.onBeginGetSettingOverSpeedReplyMessageDelegate = new BeginOperationDelegate(this.OnBeginGetSettingOverSpeedReplyMessage);
            }
            if ((this.onEndGetSettingOverSpeedReplyMessageDelegate == null)) {
                this.onEndGetSettingOverSpeedReplyMessageDelegate = new EndOperationDelegate(this.OnEndGetSettingOverSpeedReplyMessage);
            }
            if ((this.onGetSettingOverSpeedReplyMessageCompletedDelegate == null)) {
                this.onGetSettingOverSpeedReplyMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSettingOverSpeedReplyMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetSettingOverSpeedReplyMessageDelegate, null, this.onEndGetSettingOverSpeedReplyMessageDelegate, this.onGetSettingOverSpeedReplyMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginSendUpgradeCMD(Gsafety.PTMS.ServiceReference.MessageService.UpgradeCMD modell, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendUpgradeCMD(modell, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndSendUpgradeCMD(System.IAsyncResult result) {
            base.Channel.EndSendUpgradeCMD(result);
        }
        
        private System.IAsyncResult OnBeginSendUpgradeCMD(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            Gsafety.PTMS.ServiceReference.MessageService.UpgradeCMD modell = ((Gsafety.PTMS.ServiceReference.MessageService.UpgradeCMD)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginSendUpgradeCMD(modell, callback, asyncState);
        }
        
        private object[] OnEndSendUpgradeCMD(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndSendUpgradeCMD(result);
            return null;
        }
        
        private void OnSendUpgradeCMDCompleted(object state) {
            if ((this.SendUpgradeCMDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendUpgradeCMDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendUpgradeCMDAsync(Gsafety.PTMS.ServiceReference.MessageService.UpgradeCMD modell) {
            this.SendUpgradeCMDAsync(modell, null);
        }
        
        public void SendUpgradeCMDAsync(Gsafety.PTMS.ServiceReference.MessageService.UpgradeCMD modell, object userState) {
            if ((this.onBeginSendUpgradeCMDDelegate == null)) {
                this.onBeginSendUpgradeCMDDelegate = new BeginOperationDelegate(this.OnBeginSendUpgradeCMD);
            }
            if ((this.onEndSendUpgradeCMDDelegate == null)) {
                this.onEndSendUpgradeCMDDelegate = new EndOperationDelegate(this.OnEndSendUpgradeCMD);
            }
            if ((this.onSendUpgradeCMDCompletedDelegate == null)) {
                this.onSendUpgradeCMDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendUpgradeCMDCompleted);
            }
            base.InvokeAsync(this.onBeginSendUpgradeCMDDelegate, new object[] {
                        modell}, this.onEndSendUpgradeCMDDelegate, this.onSendUpgradeCMDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginSendElectricFenceCMD(Gsafety.PTMS.ServiceReference.MessageService.ElectircFenceSendSettingModel modell, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendElectricFenceCMD(modell, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndSendElectricFenceCMD(System.IAsyncResult result) {
            base.Channel.EndSendElectricFenceCMD(result);
        }
        
        private System.IAsyncResult OnBeginSendElectricFenceCMD(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            Gsafety.PTMS.ServiceReference.MessageService.ElectircFenceSendSettingModel modell = ((Gsafety.PTMS.ServiceReference.MessageService.ElectircFenceSendSettingModel)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginSendElectricFenceCMD(modell, callback, asyncState);
        }
        
        private object[] OnEndSendElectricFenceCMD(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndSendElectricFenceCMD(result);
            return null;
        }
        
        private void OnSendElectricFenceCMDCompleted(object state) {
            if ((this.SendElectricFenceCMDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendElectricFenceCMDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendElectricFenceCMDAsync(Gsafety.PTMS.ServiceReference.MessageService.ElectircFenceSendSettingModel modell) {
            this.SendElectricFenceCMDAsync(modell, null);
        }
        
        public void SendElectricFenceCMDAsync(Gsafety.PTMS.ServiceReference.MessageService.ElectircFenceSendSettingModel modell, object userState) {
            if ((this.onBeginSendElectricFenceCMDDelegate == null)) {
                this.onBeginSendElectricFenceCMDDelegate = new BeginOperationDelegate(this.OnBeginSendElectricFenceCMD);
            }
            if ((this.onEndSendElectricFenceCMDDelegate == null)) {
                this.onEndSendElectricFenceCMDDelegate = new EndOperationDelegate(this.OnEndSendElectricFenceCMD);
            }
            if ((this.onSendElectricFenceCMDCompletedDelegate == null)) {
                this.onSendElectricFenceCMDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendElectricFenceCMDCompleted);
            }
            base.InvokeAsync(this.onBeginSendElectricFenceCMDDelegate, new object[] {
                        modell}, this.onEndSendElectricFenceCMDDelegate, this.onSendElectricFenceCMDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginSendElectricFenceCMDSet(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.ElectircFenceSendSettingModel> fenceSet, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendElectricFenceCMDSet(fenceSet, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndSendElectricFenceCMDSet(System.IAsyncResult result) {
            base.Channel.EndSendElectricFenceCMDSet(result);
        }
        
        private System.IAsyncResult OnBeginSendElectricFenceCMDSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.ElectircFenceSendSettingModel> fenceSet = ((System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.ElectircFenceSendSettingModel>)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginSendElectricFenceCMDSet(fenceSet, callback, asyncState);
        }
        
        private object[] OnEndSendElectricFenceCMDSet(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndSendElectricFenceCMDSet(result);
            return null;
        }
        
        private void OnSendElectricFenceCMDSetCompleted(object state) {
            if ((this.SendElectricFenceCMDSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendElectricFenceCMDSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendElectricFenceCMDSetAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.ElectircFenceSendSettingModel> fenceSet) {
            this.SendElectricFenceCMDSetAsync(fenceSet, null);
        }
        
        public void SendElectricFenceCMDSetAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.ElectircFenceSendSettingModel> fenceSet, object userState) {
            if ((this.onBeginSendElectricFenceCMDSetDelegate == null)) {
                this.onBeginSendElectricFenceCMDSetDelegate = new BeginOperationDelegate(this.OnBeginSendElectricFenceCMDSet);
            }
            if ((this.onEndSendElectricFenceCMDSetDelegate == null)) {
                this.onEndSendElectricFenceCMDSetDelegate = new EndOperationDelegate(this.OnEndSendElectricFenceCMDSet);
            }
            if ((this.onSendElectricFenceCMDSetCompletedDelegate == null)) {
                this.onSendElectricFenceCMDSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendElectricFenceCMDSetCompleted);
            }
            base.InvokeAsync(this.onBeginSendElectricFenceCMDSetDelegate, new object[] {
                        fenceSet}, this.onEndSendElectricFenceCMDSetDelegate, this.onSendElectricFenceCMDSetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginSendGetUpgradeStatusCMD(Gsafety.PTMS.ServiceReference.MessageService.UpgradeStatusCMD model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendGetUpgradeStatusCMD(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndSendGetUpgradeStatusCMD(System.IAsyncResult result) {
            base.Channel.EndSendGetUpgradeStatusCMD(result);
        }
        
        private System.IAsyncResult OnBeginSendGetUpgradeStatusCMD(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            Gsafety.PTMS.ServiceReference.MessageService.UpgradeStatusCMD model = ((Gsafety.PTMS.ServiceReference.MessageService.UpgradeStatusCMD)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginSendGetUpgradeStatusCMD(model, callback, asyncState);
        }
        
        private object[] OnEndSendGetUpgradeStatusCMD(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndSendGetUpgradeStatusCMD(result);
            return null;
        }
        
        private void OnSendGetUpgradeStatusCMDCompleted(object state) {
            if ((this.SendGetUpgradeStatusCMDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendGetUpgradeStatusCMDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendGetUpgradeStatusCMDAsync(Gsafety.PTMS.ServiceReference.MessageService.UpgradeStatusCMD model) {
            this.SendGetUpgradeStatusCMDAsync(model, null);
        }
        
        public void SendGetUpgradeStatusCMDAsync(Gsafety.PTMS.ServiceReference.MessageService.UpgradeStatusCMD model, object userState) {
            if ((this.onBeginSendGetUpgradeStatusCMDDelegate == null)) {
                this.onBeginSendGetUpgradeStatusCMDDelegate = new BeginOperationDelegate(this.OnBeginSendGetUpgradeStatusCMD);
            }
            if ((this.onEndSendGetUpgradeStatusCMDDelegate == null)) {
                this.onEndSendGetUpgradeStatusCMDDelegate = new EndOperationDelegate(this.OnEndSendGetUpgradeStatusCMD);
            }
            if ((this.onSendGetUpgradeStatusCMDCompletedDelegate == null)) {
                this.onSendGetUpgradeStatusCMDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendGetUpgradeStatusCMDCompleted);
            }
            base.InvokeAsync(this.onBeginSendGetUpgradeStatusCMDDelegate, new object[] {
                        model}, this.onEndSendGetUpgradeStatusCMDDelegate, this.onSendGetUpgradeStatusCMDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginSendSettingOverSpeedCMD(Gsafety.PTMS.ServiceReference.MessageService.SettingOverSpeedCMD model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendSettingOverSpeedCMD(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndSendSettingOverSpeedCMD(System.IAsyncResult result) {
            base.Channel.EndSendSettingOverSpeedCMD(result);
        }
        
        private System.IAsyncResult OnBeginSendSettingOverSpeedCMD(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            Gsafety.PTMS.ServiceReference.MessageService.SettingOverSpeedCMD model = ((Gsafety.PTMS.ServiceReference.MessageService.SettingOverSpeedCMD)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginSendSettingOverSpeedCMD(model, callback, asyncState);
        }
        
        private object[] OnEndSendSettingOverSpeedCMD(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndSendSettingOverSpeedCMD(result);
            return null;
        }
        
        private void OnSendSettingOverSpeedCMDCompleted(object state) {
            if ((this.SendSettingOverSpeedCMDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendSettingOverSpeedCMDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendSettingOverSpeedCMDAsync(Gsafety.PTMS.ServiceReference.MessageService.SettingOverSpeedCMD model) {
            this.SendSettingOverSpeedCMDAsync(model, null);
        }
        
        public void SendSettingOverSpeedCMDAsync(Gsafety.PTMS.ServiceReference.MessageService.SettingOverSpeedCMD model, object userState) {
            if ((this.onBeginSendSettingOverSpeedCMDDelegate == null)) {
                this.onBeginSendSettingOverSpeedCMDDelegate = new BeginOperationDelegate(this.OnBeginSendSettingOverSpeedCMD);
            }
            if ((this.onEndSendSettingOverSpeedCMDDelegate == null)) {
                this.onEndSendSettingOverSpeedCMDDelegate = new EndOperationDelegate(this.OnEndSendSettingOverSpeedCMD);
            }
            if ((this.onSendSettingOverSpeedCMDCompletedDelegate == null)) {
                this.onSendSettingOverSpeedCMDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendSettingOverSpeedCMDCompleted);
            }
            base.InvokeAsync(this.onBeginSendSettingOverSpeedCMDDelegate, new object[] {
                        model}, this.onEndSendSettingOverSpeedCMDDelegate, this.onSendSettingOverSpeedCMDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginSendSettingOverSpeedCMDSet(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.SettingOverSpeedCMD> overSpeed, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendSettingOverSpeedCMDSet(overSpeed, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndSendSettingOverSpeedCMDSet(System.IAsyncResult result) {
            base.Channel.EndSendSettingOverSpeedCMDSet(result);
        }
        
        private System.IAsyncResult OnBeginSendSettingOverSpeedCMDSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.SettingOverSpeedCMD> overSpeed = ((System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.SettingOverSpeedCMD>)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginSendSettingOverSpeedCMDSet(overSpeed, callback, asyncState);
        }
        
        private object[] OnEndSendSettingOverSpeedCMDSet(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndSendSettingOverSpeedCMDSet(result);
            return null;
        }
        
        private void OnSendSettingOverSpeedCMDSetCompleted(object state) {
            if ((this.SendSettingOverSpeedCMDSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendSettingOverSpeedCMDSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendSettingOverSpeedCMDSetAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.SettingOverSpeedCMD> overSpeed) {
            this.SendSettingOverSpeedCMDSetAsync(overSpeed, null);
        }
        
        public void SendSettingOverSpeedCMDSetAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.SettingOverSpeedCMD> overSpeed, object userState) {
            if ((this.onBeginSendSettingOverSpeedCMDSetDelegate == null)) {
                this.onBeginSendSettingOverSpeedCMDSetDelegate = new BeginOperationDelegate(this.OnBeginSendSettingOverSpeedCMDSet);
            }
            if ((this.onEndSendSettingOverSpeedCMDSetDelegate == null)) {
                this.onEndSendSettingOverSpeedCMDSetDelegate = new EndOperationDelegate(this.OnEndSendSettingOverSpeedCMDSet);
            }
            if ((this.onSendSettingOverSpeedCMDSetCompletedDelegate == null)) {
                this.onSendSettingOverSpeedCMDSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendSettingOverSpeedCMDSetCompleted);
            }
            base.InvokeAsync(this.onBeginSendSettingOverSpeedCMDSetDelegate, new object[] {
                        overSpeed}, this.onEndSendSettingOverSpeedCMDSetDelegate, this.onSendSettingOverSpeedCMDSetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginSendElectircFenceSetting(Gsafety.PTMS.ServiceReference.MessageService.ElectircFenceSendSettingModel model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendElectircFenceSetting(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndSendElectircFenceSetting(System.IAsyncResult result) {
            base.Channel.EndSendElectircFenceSetting(result);
        }
        
        private System.IAsyncResult OnBeginSendElectircFenceSetting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            Gsafety.PTMS.ServiceReference.MessageService.ElectircFenceSendSettingModel model = ((Gsafety.PTMS.ServiceReference.MessageService.ElectircFenceSendSettingModel)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginSendElectircFenceSetting(model, callback, asyncState);
        }
        
        private object[] OnEndSendElectircFenceSetting(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndSendElectircFenceSetting(result);
            return null;
        }
        
        private void OnSendElectircFenceSettingCompleted(object state) {
            if ((this.SendElectircFenceSettingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendElectircFenceSettingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendElectircFenceSettingAsync(Gsafety.PTMS.ServiceReference.MessageService.ElectircFenceSendSettingModel model) {
            this.SendElectircFenceSettingAsync(model, null);
        }
        
        public void SendElectircFenceSettingAsync(Gsafety.PTMS.ServiceReference.MessageService.ElectircFenceSendSettingModel model, object userState) {
            if ((this.onBeginSendElectircFenceSettingDelegate == null)) {
                this.onBeginSendElectircFenceSettingDelegate = new BeginOperationDelegate(this.OnBeginSendElectircFenceSetting);
            }
            if ((this.onEndSendElectircFenceSettingDelegate == null)) {
                this.onEndSendElectircFenceSettingDelegate = new EndOperationDelegate(this.OnEndSendElectircFenceSetting);
            }
            if ((this.onSendElectircFenceSettingCompletedDelegate == null)) {
                this.onSendElectircFenceSettingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendElectircFenceSettingCompleted);
            }
            base.InvokeAsync(this.onBeginSendElectircFenceSettingDelegate, new object[] {
                        model}, this.onEndSendElectircFenceSettingDelegate, this.onSendElectircFenceSettingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginSendOverSpeedSetting(Gsafety.PTMS.ServiceReference.MessageService.OverSpeedSendSettingModel model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendOverSpeedSetting(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndSendOverSpeedSetting(System.IAsyncResult result) {
            base.Channel.EndSendOverSpeedSetting(result);
        }
        
        private System.IAsyncResult OnBeginSendOverSpeedSetting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            Gsafety.PTMS.ServiceReference.MessageService.OverSpeedSendSettingModel model = ((Gsafety.PTMS.ServiceReference.MessageService.OverSpeedSendSettingModel)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginSendOverSpeedSetting(model, callback, asyncState);
        }
        
        private object[] OnEndSendOverSpeedSetting(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndSendOverSpeedSetting(result);
            return null;
        }
        
        private void OnSendOverSpeedSettingCompleted(object state) {
            if ((this.SendOverSpeedSettingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendOverSpeedSettingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendOverSpeedSettingAsync(Gsafety.PTMS.ServiceReference.MessageService.OverSpeedSendSettingModel model) {
            this.SendOverSpeedSettingAsync(model, null);
        }
        
        public void SendOverSpeedSettingAsync(Gsafety.PTMS.ServiceReference.MessageService.OverSpeedSendSettingModel model, object userState) {
            if ((this.onBeginSendOverSpeedSettingDelegate == null)) {
                this.onBeginSendOverSpeedSettingDelegate = new BeginOperationDelegate(this.OnBeginSendOverSpeedSetting);
            }
            if ((this.onEndSendOverSpeedSettingDelegate == null)) {
                this.onEndSendOverSpeedSettingDelegate = new EndOperationDelegate(this.OnEndSendOverSpeedSetting);
            }
            if ((this.onSendOverSpeedSettingCompletedDelegate == null)) {
                this.onSendOverSpeedSettingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendOverSpeedSettingCompleted);
            }
            base.InvokeAsync(this.onBeginSendOverSpeedSettingDelegate, new object[] {
                        model}, this.onEndSendOverSpeedSettingDelegate, this.onSendOverSpeedSettingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginSendSettingGpsUploadCMDSet(Gsafety.PTMS.ServiceReference.MessageService.GpsSendUpModel model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendSettingGpsUploadCMDSet(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndSendSettingGpsUploadCMDSet(System.IAsyncResult result) {
            base.Channel.EndSendSettingGpsUploadCMDSet(result);
        }
        
        private System.IAsyncResult OnBeginSendSettingGpsUploadCMDSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            Gsafety.PTMS.ServiceReference.MessageService.GpsSendUpModel model = ((Gsafety.PTMS.ServiceReference.MessageService.GpsSendUpModel)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginSendSettingGpsUploadCMDSet(model, callback, asyncState);
        }
        
        private object[] OnEndSendSettingGpsUploadCMDSet(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndSendSettingGpsUploadCMDSet(result);
            return null;
        }
        
        private void OnSendSettingGpsUploadCMDSetCompleted(object state) {
            if ((this.SendSettingGpsUploadCMDSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendSettingGpsUploadCMDSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendSettingGpsUploadCMDSetAsync(Gsafety.PTMS.ServiceReference.MessageService.GpsSendUpModel model) {
            this.SendSettingGpsUploadCMDSetAsync(model, null);
        }
        
        public void SendSettingGpsUploadCMDSetAsync(Gsafety.PTMS.ServiceReference.MessageService.GpsSendUpModel model, object userState) {
            if ((this.onBeginSendSettingGpsUploadCMDSetDelegate == null)) {
                this.onBeginSendSettingGpsUploadCMDSetDelegate = new BeginOperationDelegate(this.OnBeginSendSettingGpsUploadCMDSet);
            }
            if ((this.onEndSendSettingGpsUploadCMDSetDelegate == null)) {
                this.onEndSendSettingGpsUploadCMDSetDelegate = new EndOperationDelegate(this.OnEndSendSettingGpsUploadCMDSet);
            }
            if ((this.onSendSettingGpsUploadCMDSetCompletedDelegate == null)) {
                this.onSendSettingGpsUploadCMDSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendSettingGpsUploadCMDSetCompleted);
            }
            base.InvokeAsync(this.onBeginSendSettingGpsUploadCMDSetDelegate, new object[] {
                        model}, this.onEndSendSettingGpsUploadCMDSetDelegate, this.onSendSettingGpsUploadCMDSetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginSendSettingAbnormalDoorUploadCMDSet(Gsafety.PTMS.ServiceReference.MessageService.AbnormalDoorSendUpModel model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendSettingAbnormalDoorUploadCMDSet(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndSendSettingAbnormalDoorUploadCMDSet(System.IAsyncResult result) {
            base.Channel.EndSendSettingAbnormalDoorUploadCMDSet(result);
        }
        
        private System.IAsyncResult OnBeginSendSettingAbnormalDoorUploadCMDSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            Gsafety.PTMS.ServiceReference.MessageService.AbnormalDoorSendUpModel model = ((Gsafety.PTMS.ServiceReference.MessageService.AbnormalDoorSendUpModel)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginSendSettingAbnormalDoorUploadCMDSet(model, callback, asyncState);
        }
        
        private object[] OnEndSendSettingAbnormalDoorUploadCMDSet(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndSendSettingAbnormalDoorUploadCMDSet(result);
            return null;
        }
        
        private void OnSendSettingAbnormalDoorUploadCMDSetCompleted(object state) {
            if ((this.SendSettingAbnormalDoorUploadCMDSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendSettingAbnormalDoorUploadCMDSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendSettingAbnormalDoorUploadCMDSetAsync(Gsafety.PTMS.ServiceReference.MessageService.AbnormalDoorSendUpModel model) {
            this.SendSettingAbnormalDoorUploadCMDSetAsync(model, null);
        }
        
        public void SendSettingAbnormalDoorUploadCMDSetAsync(Gsafety.PTMS.ServiceReference.MessageService.AbnormalDoorSendUpModel model, object userState) {
            if ((this.onBeginSendSettingAbnormalDoorUploadCMDSetDelegate == null)) {
                this.onBeginSendSettingAbnormalDoorUploadCMDSetDelegate = new BeginOperationDelegate(this.OnBeginSendSettingAbnormalDoorUploadCMDSet);
            }
            if ((this.onEndSendSettingAbnormalDoorUploadCMDSetDelegate == null)) {
                this.onEndSendSettingAbnormalDoorUploadCMDSetDelegate = new EndOperationDelegate(this.OnEndSendSettingAbnormalDoorUploadCMDSet);
            }
            if ((this.onSendSettingAbnormalDoorUploadCMDSetCompletedDelegate == null)) {
                this.onSendSettingAbnormalDoorUploadCMDSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendSettingAbnormalDoorUploadCMDSetCompleted);
            }
            base.InvokeAsync(this.onBeginSendSettingAbnormalDoorUploadCMDSetDelegate, new object[] {
                        model}, this.onEndSendSettingAbnormalDoorUploadCMDSetDelegate, this.onSendSettingAbnormalDoorUploadCMDSetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginSendSettingTemperatureUploadCMDSet(Gsafety.PTMS.ServiceReference.MessageService.TemperatureSendUpModel model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendSettingTemperatureUploadCMDSet(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndSendSettingTemperatureUploadCMDSet(System.IAsyncResult result) {
            base.Channel.EndSendSettingTemperatureUploadCMDSet(result);
        }
        
        private System.IAsyncResult OnBeginSendSettingTemperatureUploadCMDSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            Gsafety.PTMS.ServiceReference.MessageService.TemperatureSendUpModel model = ((Gsafety.PTMS.ServiceReference.MessageService.TemperatureSendUpModel)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginSendSettingTemperatureUploadCMDSet(model, callback, asyncState);
        }
        
        private object[] OnEndSendSettingTemperatureUploadCMDSet(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndSendSettingTemperatureUploadCMDSet(result);
            return null;
        }
        
        private void OnSendSettingTemperatureUploadCMDSetCompleted(object state) {
            if ((this.SendSettingTemperatureUploadCMDSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendSettingTemperatureUploadCMDSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendSettingTemperatureUploadCMDSetAsync(Gsafety.PTMS.ServiceReference.MessageService.TemperatureSendUpModel model) {
            this.SendSettingTemperatureUploadCMDSetAsync(model, null);
        }
        
        public void SendSettingTemperatureUploadCMDSetAsync(Gsafety.PTMS.ServiceReference.MessageService.TemperatureSendUpModel model, object userState) {
            if ((this.onBeginSendSettingTemperatureUploadCMDSetDelegate == null)) {
                this.onBeginSendSettingTemperatureUploadCMDSetDelegate = new BeginOperationDelegate(this.OnBeginSendSettingTemperatureUploadCMDSet);
            }
            if ((this.onEndSendSettingTemperatureUploadCMDSetDelegate == null)) {
                this.onEndSendSettingTemperatureUploadCMDSetDelegate = new EndOperationDelegate(this.OnEndSendSettingTemperatureUploadCMDSet);
            }
            if ((this.onSendSettingTemperatureUploadCMDSetCompletedDelegate == null)) {
                this.onSendSettingTemperatureUploadCMDSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendSettingTemperatureUploadCMDSetCompleted);
            }
            base.InvokeAsync(this.onBeginSendSettingTemperatureUploadCMDSetDelegate, new object[] {
                        model}, this.onEndSendSettingTemperatureUploadCMDSetDelegate, this.onSendSettingTemperatureUploadCMDSetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginSendSettingOneKeyAlarmUploadCMDSet(Gsafety.PTMS.ServiceReference.MessageService.OneKeyAlarmSendUpModel model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendSettingOneKeyAlarmUploadCMDSet(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndSendSettingOneKeyAlarmUploadCMDSet(System.IAsyncResult result) {
            base.Channel.EndSendSettingOneKeyAlarmUploadCMDSet(result);
        }
        
        private System.IAsyncResult OnBeginSendSettingOneKeyAlarmUploadCMDSet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            Gsafety.PTMS.ServiceReference.MessageService.OneKeyAlarmSendUpModel model = ((Gsafety.PTMS.ServiceReference.MessageService.OneKeyAlarmSendUpModel)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginSendSettingOneKeyAlarmUploadCMDSet(model, callback, asyncState);
        }
        
        private object[] OnEndSendSettingOneKeyAlarmUploadCMDSet(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndSendSettingOneKeyAlarmUploadCMDSet(result);
            return null;
        }
        
        private void OnSendSettingOneKeyAlarmUploadCMDSetCompleted(object state) {
            if ((this.SendSettingOneKeyAlarmUploadCMDSetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendSettingOneKeyAlarmUploadCMDSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendSettingOneKeyAlarmUploadCMDSetAsync(Gsafety.PTMS.ServiceReference.MessageService.OneKeyAlarmSendUpModel model) {
            this.SendSettingOneKeyAlarmUploadCMDSetAsync(model, null);
        }
        
        public void SendSettingOneKeyAlarmUploadCMDSetAsync(Gsafety.PTMS.ServiceReference.MessageService.OneKeyAlarmSendUpModel model, object userState) {
            if ((this.onBeginSendSettingOneKeyAlarmUploadCMDSetDelegate == null)) {
                this.onBeginSendSettingOneKeyAlarmUploadCMDSetDelegate = new BeginOperationDelegate(this.OnBeginSendSettingOneKeyAlarmUploadCMDSet);
            }
            if ((this.onEndSendSettingOneKeyAlarmUploadCMDSetDelegate == null)) {
                this.onEndSendSettingOneKeyAlarmUploadCMDSetDelegate = new EndOperationDelegate(this.OnEndSendSettingOneKeyAlarmUploadCMDSet);
            }
            if ((this.onSendSettingOneKeyAlarmUploadCMDSetCompletedDelegate == null)) {
                this.onSendSettingOneKeyAlarmUploadCMDSetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendSettingOneKeyAlarmUploadCMDSetCompleted);
            }
            base.InvokeAsync(this.onBeginSendSettingOneKeyAlarmUploadCMDSetDelegate, new object[] {
                        model}, this.onEndSendSettingOneKeyAlarmUploadCMDSetDelegate, this.onSendSettingOneKeyAlarmUploadCMDSetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginSendInfomationCommand(Gsafety.PTMS.ServiceReference.MessageService.SendInfomationModel model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendInfomationCommand(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndSendInfomationCommand(System.IAsyncResult result) {
            base.Channel.EndSendInfomationCommand(result);
        }
        
        private System.IAsyncResult OnBeginSendInfomationCommand(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            Gsafety.PTMS.ServiceReference.MessageService.SendInfomationModel model = ((Gsafety.PTMS.ServiceReference.MessageService.SendInfomationModel)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginSendInfomationCommand(model, callback, asyncState);
        }
        
        private object[] OnEndSendInfomationCommand(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndSendInfomationCommand(result);
            return null;
        }
        
        private void OnSendInfomationCommandCompleted(object state) {
            if ((this.SendInfomationCommandCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendInfomationCommandCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendInfomationCommandAsync(Gsafety.PTMS.ServiceReference.MessageService.SendInfomationModel model) {
            this.SendInfomationCommandAsync(model, null);
        }
        
        public void SendInfomationCommandAsync(Gsafety.PTMS.ServiceReference.MessageService.SendInfomationModel model, object userState) {
            if ((this.onBeginSendInfomationCommandDelegate == null)) {
                this.onBeginSendInfomationCommandDelegate = new BeginOperationDelegate(this.OnBeginSendInfomationCommand);
            }
            if ((this.onEndSendInfomationCommandDelegate == null)) {
                this.onEndSendInfomationCommandDelegate = new EndOperationDelegate(this.OnEndSendInfomationCommand);
            }
            if ((this.onSendInfomationCommandCompletedDelegate == null)) {
                this.onSendInfomationCommandCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendInfomationCommandCompleted);
            }
            base.InvokeAsync(this.onBeginSendInfomationCommandDelegate, new object[] {
                        model}, this.onEndSendInfomationCommandDelegate, this.onSendInfomationCommandCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginSendGetVideoListCMD(Gsafety.PTMS.ServiceReference.MessageService.QueryMdvrFileList model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendGetVideoListCMD(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndSendGetVideoListCMD(System.IAsyncResult result) {
            base.Channel.EndSendGetVideoListCMD(result);
        }
        
        private System.IAsyncResult OnBeginSendGetVideoListCMD(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            Gsafety.PTMS.ServiceReference.MessageService.QueryMdvrFileList model = ((Gsafety.PTMS.ServiceReference.MessageService.QueryMdvrFileList)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginSendGetVideoListCMD(model, callback, asyncState);
        }
        
        private object[] OnEndSendGetVideoListCMD(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndSendGetVideoListCMD(result);
            return null;
        }
        
        private void OnSendGetVideoListCMDCompleted(object state) {
            if ((this.SendGetVideoListCMDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendGetVideoListCMDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendGetVideoListCMDAsync(Gsafety.PTMS.ServiceReference.MessageService.QueryMdvrFileList model) {
            this.SendGetVideoListCMDAsync(model, null);
        }
        
        public void SendGetVideoListCMDAsync(Gsafety.PTMS.ServiceReference.MessageService.QueryMdvrFileList model, object userState) {
            if ((this.onBeginSendGetVideoListCMDDelegate == null)) {
                this.onBeginSendGetVideoListCMDDelegate = new BeginOperationDelegate(this.OnBeginSendGetVideoListCMD);
            }
            if ((this.onEndSendGetVideoListCMDDelegate == null)) {
                this.onEndSendGetVideoListCMDDelegate = new EndOperationDelegate(this.OnEndSendGetVideoListCMD);
            }
            if ((this.onSendGetVideoListCMDCompletedDelegate == null)) {
                this.onSendGetVideoListCMDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendGetVideoListCMDCompleted);
            }
            base.InvokeAsync(this.onBeginSendGetVideoListCMDDelegate, new object[] {
                        model}, this.onEndSendGetVideoListCMDDelegate, this.onSendGetVideoListCMDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginGetSettingVideoListReplyMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSettingVideoListReplyMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndGetSettingVideoListReplyMessage(System.IAsyncResult result) {
            base.Channel.EndGetSettingVideoListReplyMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetSettingVideoListReplyMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginGetSettingVideoListReplyMessage(callback, asyncState);
        }
        
        private object[] OnEndGetSettingVideoListReplyMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndGetSettingVideoListReplyMessage(result);
            return null;
        }
        
        private void OnGetSettingVideoListReplyMessageCompleted(object state) {
            if ((this.GetSettingVideoListReplyMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSettingVideoListReplyMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSettingVideoListReplyMessageAsync() {
            this.GetSettingVideoListReplyMessageAsync(null);
        }
        
        public void GetSettingVideoListReplyMessageAsync(object userState) {
            if ((this.onBeginGetSettingVideoListReplyMessageDelegate == null)) {
                this.onBeginGetSettingVideoListReplyMessageDelegate = new BeginOperationDelegate(this.OnBeginGetSettingVideoListReplyMessage);
            }
            if ((this.onEndGetSettingVideoListReplyMessageDelegate == null)) {
                this.onEndGetSettingVideoListReplyMessageDelegate = new EndOperationDelegate(this.OnEndGetSettingVideoListReplyMessage);
            }
            if ((this.onGetSettingVideoListReplyMessageCompletedDelegate == null)) {
                this.onGetSettingVideoListReplyMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSettingVideoListReplyMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetSettingVideoListReplyMessageDelegate, null, this.onEndGetSettingVideoListReplyMessageDelegate, this.onGetSettingVideoListReplyMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginGetV23ReplyMessage(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetV23ReplyMessage(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndGetV23ReplyMessage(System.IAsyncResult result) {
            base.Channel.EndGetV23ReplyMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetV23ReplyMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginGetV23ReplyMessage(callback, asyncState);
        }
        
        private object[] OnEndGetV23ReplyMessage(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndGetV23ReplyMessage(result);
            return null;
        }
        
        private void OnGetV23ReplyMessageCompleted(object state) {
            if ((this.GetV23ReplyMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetV23ReplyMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetV23ReplyMessageAsync() {
            this.GetV23ReplyMessageAsync(null);
        }
        
        public void GetV23ReplyMessageAsync(object userState) {
            if ((this.onBeginGetV23ReplyMessageDelegate == null)) {
                this.onBeginGetV23ReplyMessageDelegate = new BeginOperationDelegate(this.OnBeginGetV23ReplyMessage);
            }
            if ((this.onEndGetV23ReplyMessageDelegate == null)) {
                this.onEndGetV23ReplyMessageDelegate = new EndOperationDelegate(this.OnEndGetV23ReplyMessage);
            }
            if ((this.onGetV23ReplyMessageCompletedDelegate == null)) {
                this.onGetV23ReplyMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetV23ReplyMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetV23ReplyMessageDelegate, null, this.onEndGetV23ReplyMessageDelegate, this.onGetV23ReplyMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginSendDownloadMdvrFile(Gsafety.PTMS.ServiceReference.MessageService.DownloadFile model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendDownloadMdvrFile(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndSendDownloadMdvrFile(System.IAsyncResult result) {
            base.Channel.EndSendDownloadMdvrFile(result);
        }
        
        private System.IAsyncResult OnBeginSendDownloadMdvrFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            Gsafety.PTMS.ServiceReference.MessageService.DownloadFile model = ((Gsafety.PTMS.ServiceReference.MessageService.DownloadFile)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginSendDownloadMdvrFile(model, callback, asyncState);
        }
        
        private object[] OnEndSendDownloadMdvrFile(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndSendDownloadMdvrFile(result);
            return null;
        }
        
        private void OnSendDownloadMdvrFileCompleted(object state) {
            if ((this.SendDownloadMdvrFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendDownloadMdvrFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendDownloadMdvrFileAsync(Gsafety.PTMS.ServiceReference.MessageService.DownloadFile model) {
            this.SendDownloadMdvrFileAsync(model, null);
        }
        
        public void SendDownloadMdvrFileAsync(Gsafety.PTMS.ServiceReference.MessageService.DownloadFile model, object userState) {
            if ((this.onBeginSendDownloadMdvrFileDelegate == null)) {
                this.onBeginSendDownloadMdvrFileDelegate = new BeginOperationDelegate(this.OnBeginSendDownloadMdvrFile);
            }
            if ((this.onEndSendDownloadMdvrFileDelegate == null)) {
                this.onEndSendDownloadMdvrFileDelegate = new EndOperationDelegate(this.OnEndSendDownloadMdvrFile);
            }
            if ((this.onSendDownloadMdvrFileCompletedDelegate == null)) {
                this.onSendDownloadMdvrFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendDownloadMdvrFileCompleted);
            }
            base.InvokeAsync(this.onBeginSendDownloadMdvrFileDelegate, new object[] {
                        model}, this.onEndSendDownloadMdvrFileDelegate, this.onSendDownloadMdvrFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.MessageService.IMessageService.BeginInit(string QUEUE, Gsafety.PTMS.ServiceReference.MessageService.RuleInfo ruleInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInit(QUEUE, ruleInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Gsafety.PTMS.ServiceReference.MessageService.IMessageService.EndInit(System.IAsyncResult result) {
            base.Channel.EndInit(result);
        }
        
        private System.IAsyncResult OnBeginInit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            string QUEUE = ((string)(inValues[0]));
            Gsafety.PTMS.ServiceReference.MessageService.RuleInfo ruleInfo = ((Gsafety.PTMS.ServiceReference.MessageService.RuleInfo)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).BeginInit(QUEUE, ruleInfo, callback, asyncState);
        }
        
        private object[] OnEndInit(System.IAsyncResult result) {
            ((Gsafety.PTMS.ServiceReference.MessageService.IMessageService)(this)).EndInit(result);
            return null;
        }
        
        private void OnInitCompleted(object state) {
            if ((this.InitCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InitCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InitAsync(string QUEUE, Gsafety.PTMS.ServiceReference.MessageService.RuleInfo ruleInfo) {
            this.InitAsync(QUEUE, ruleInfo, null);
        }
        
        public void InitAsync(string QUEUE, Gsafety.PTMS.ServiceReference.MessageService.RuleInfo ruleInfo, object userState) {
            if ((this.onBeginInitDelegate == null)) {
                this.onBeginInitDelegate = new BeginOperationDelegate(this.OnBeginInit);
            }
            if ((this.onEndInitDelegate == null)) {
                this.onEndInitDelegate = new EndOperationDelegate(this.OnEndInit);
            }
            if ((this.onInitCompletedDelegate == null)) {
                this.onInitCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInitCompleted);
            }
            base.InvokeAsync(this.onBeginInitDelegate, new object[] {
                        QUEUE,
                        ruleInfo}, this.onEndInitDelegate, this.onInitCompletedDelegate, userState);
        }
        
        private void OnMessageCallBackReceived(object state) {
            if ((this.MessageCallBackReceived != null)) {
                object[] results = ((object[])(state));
                this.MessageCallBackReceived(this, new MessageCallBackReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void VerifyCallbackEvents() {
            if (((this.useGeneratedCallback != true) 
                        && (this.MessageCallBackReceived != null))) {
                throw new System.InvalidOperationException("指定了回调 InstanceContext 时无法使用回调事件。请选择是指定回调 InstanceContext 还是订阅回调事件。");
            }
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            this.VerifyCallbackEvents();
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Gsafety.PTMS.ServiceReference.MessageService.IMessageService CreateChannel() {
            return new MessageServiceClientChannel(this);
        }
        
        private class MessageServiceClientCallback : object, IMessageServiceCallback {
            
            private MessageServiceClient proxy;
            
            public void Initialize(MessageServiceClient proxy) {
                this.proxy = proxy;
            }
            
            public void MessageCallBack(object message) {
                this.proxy.OnMessageCallBackReceived(new object[] {
                            message});
            }
        }
        
        private class MessageServiceClientChannel : ChannelBase<Gsafety.PTMS.ServiceReference.MessageService.IMessageService>, Gsafety.PTMS.ServiceReference.MessageService.IMessageService {
            
            public MessageServiceClientChannel(System.ServiceModel.DuplexClientBase<Gsafety.PTMS.ServiceReference.MessageService.IMessageService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginSendCompleteAlarmMessage(Gsafety.PTMS.ServiceReference.MessageService.CompleteAlarm model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("SendCompleteAlarmMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendCompleteAlarmMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendCompleteAlarmMessage", _args, result);
            }
            
            public System.IAsyncResult BeginGetCompleteAlarmMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCompleteAlarmMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetCompleteAlarmMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetCompleteAlarmMessage", _args, result);
            }
            
            public System.IAsyncResult BeginSendChangeGroupVechleMessage(Gsafety.PTMS.ServiceReference.MessageService.ChangeGroupVehicle model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("SendChangeGroupVechleMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendChangeGroupVechleMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendChangeGroupVechleMessage", _args, result);
            }
            
            public System.IAsyncResult BeginGetChangeGroupVechleMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetChangeGroupVechleMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetChangeGroupVechleMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetChangeGroupVechleMessage", _args, result);
            }
            
            public System.IAsyncResult BeginSendChangeGroupMessage(Gsafety.PTMS.ServiceReference.MessageService.ChangeGroup model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("SendChangeGroupMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendChangeGroupMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendChangeGroupMessage", _args, result);
            }
            
            public System.IAsyncResult BeginGetChangeGroupMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetChangeGroupMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetChangeGroupMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetChangeGroupMessage", _args, result);
            }
            
            public System.IAsyncResult BeginSendDeviceInstallMessage(Gsafety.PTMS.ServiceReference.MessageService.DeviceInstall model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("SendDeviceInstallMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendDeviceInstallMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendDeviceInstallMessage", _args, result);
            }
            
            public System.IAsyncResult BeginGetDeviceInstallMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetDeviceInstallMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetDeviceInstallMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetDeviceInstallMessage", _args, result);
            }
            
            public System.IAsyncResult BeginSendDeviceMaintainMessage(Gsafety.PTMS.ServiceReference.MessageService.DeviceMaintain model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("SendDeviceMaintainMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendDeviceMaintainMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendDeviceMaintainMessage", _args, result);
            }
            
            public System.IAsyncResult BeginGetDeviceMaintainMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetDeviceMaintainMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetDeviceMaintainMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetDeviceMaintainMessage", _args, result);
            }
            
            public System.IAsyncResult BeginSendHandingAlertMessage(Gsafety.PTMS.ServiceReference.MessageService.HandingAlert model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("SendHandingAlertMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendHandingAlertMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendHandingAlertMessage", _args, result);
            }
            
            public System.IAsyncResult BeginGetHandingAlertMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetHandingAlertMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetHandingAlertMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetHandingAlertMessage", _args, result);
            }
            
            public System.IAsyncResult BeginSendCompleteAlertMessage(Gsafety.PTMS.ServiceReference.MessageService.CompleteAlert modell, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = modell;
                System.IAsyncResult _result = base.BeginInvoke("SendCompleteAlertMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendCompleteAlertMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendCompleteAlertMessage", _args, result);
            }
            
            public System.IAsyncResult BeginGetCompleteAlertMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCompleteAlertMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetCompleteAlertMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetCompleteAlertMessage", _args, result);
            }
            
            public System.IAsyncResult BeginSendStartInstallMessage(Gsafety.PTMS.ServiceReference.MessageService.StartInstall modell, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = modell;
                System.IAsyncResult _result = base.BeginInvoke("SendStartInstallMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendStartInstallMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendStartInstallMessage", _args, result);
            }
            
            public System.IAsyncResult BeginGetStartInstallMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetStartInstallMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetStartInstallMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetStartInstallMessage", _args, result);
            }
            
            public System.IAsyncResult BeginSendDeleteInstallMessage(Gsafety.PTMS.ServiceReference.MessageService.DeleteInstall model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("SendDeleteInstallMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendDeleteInstallMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendDeleteInstallMessage", _args, result);
            }
            
            public System.IAsyncResult BeginGetDeleteInstallMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetDeleteInstallMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetDeleteInstallMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetDeleteInstallMessage", _args, result);
            }
            
            public System.IAsyncResult BeginGetDeleteUserMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetDeleteUserMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetDeleteUserMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetDeleteUserMessage", _args, result);
            }
            
            public System.IAsyncResult BeginGetChangeUserMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetChangeUserMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetChangeUserMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetChangeUserMessage", _args, result);
            }
            
            public System.IAsyncResult BeginSendDeleteUserMessage(Gsafety.PTMS.ServiceReference.MessageService.DeleteUser model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("SendDeleteUserMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendDeleteUserMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendDeleteUserMessage", _args, result);
            }
            
            public System.IAsyncResult BeginSendChangeUserMessage(Gsafety.PTMS.ServiceReference.MessageService.ChangeUser model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("SendChangeUserMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendChangeUserMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendChangeUserMessage", _args, result);
            }
            
            public System.IAsyncResult BeginSendRouteMessage(Gsafety.PTMS.ServiceReference.MessageService.RouteCMD model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("SendRouteMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendRouteMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendRouteMessage", _args, result);
            }
            
            public System.IAsyncResult BeginSendRouteMessageSet(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.RouteCMD> routes, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = routes;
                System.IAsyncResult _result = base.BeginInvoke("SendRouteMessageSet", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendRouteMessageSet(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendRouteMessageSet", _args, result);
            }
            
            public System.IAsyncResult BeginSendTravelPlanMessage(Gsafety.PTMS.ServiceReference.MessageService.TravelPlanCMD model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("SendTravelPlanMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendTravelPlanMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendTravelPlanMessage", _args, result);
            }
            
            public System.IAsyncResult BeginSendTravelPlanMessageSet(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.TravelPlanCMD> travelPlans, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = travelPlans;
                System.IAsyncResult _result = base.BeginInvoke("SendTravelPlanMessageSet", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendTravelPlanMessageSet(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendTravelPlanMessageSet", _args, result);
            }
            
            public System.IAsyncResult BeginSendUpgradeNotifyMessage(Gsafety.PTMS.ServiceReference.MessageService.UpgradeNotify model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("SendUpgradeNotifyMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendUpgradeNotifyMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendUpgradeNotifyMessage", _args, result);
            }
            
            public System.IAsyncResult BeginGetAlarmMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAlarmMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetAlarmMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetAlarmMessage", _args, result);
            }
            
            public System.IAsyncResult BeginCancelAlarmMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("CancelAlarmMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCancelAlarmMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CancelAlarmMessage", _args, result);
            }
            
            public System.IAsyncResult BeginGetCancelAlarmMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCancelAlarmMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetCancelAlarmMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetCancelAlarmMessage", _args, result);
            }
            
            public System.IAsyncResult BeginGetAlarmGpsMessage(string mdvrCoreId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = mdvrCoreId;
                System.IAsyncResult _result = base.BeginInvoke("GetAlarmGpsMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetAlarmGpsMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetAlarmGpsMessage", _args, result);
            }
            
            public System.IAsyncResult BeginCancelAlarmGpsMessage(string mdvrCoreId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = mdvrCoreId;
                System.IAsyncResult _result = base.BeginInvoke("CancelAlarmGpsMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCancelAlarmGpsMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CancelAlarmGpsMessage", _args, result);
            }
            
            public System.IAsyncResult BeginGetMonitorGpsMessage(Gsafety.PTMS.ServiceReference.MessageService.LocationMonitorCMD locationMonitorCmd, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = locationMonitorCmd;
                System.IAsyncResult _result = base.BeginInvoke("GetMonitorGpsMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetMonitorGpsMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetMonitorGpsMessage", _args, result);
            }
            
            public System.IAsyncResult BeginCancelMonitorGpsMessage(Gsafety.PTMS.ServiceReference.MessageService.CancelLocationMonitorCMD cancelLocationMonitorCmd, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = cancelLocationMonitorCmd;
                System.IAsyncResult _result = base.BeginInvoke("CancelMonitorGpsMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCancelMonitorGpsMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CancelMonitorGpsMessage", _args, result);
            }
            
            public System.IAsyncResult BeginGetLocationMonitorEndMessage(string SessionId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = SessionId;
                System.IAsyncResult _result = base.BeginInvoke("GetLocationMonitorEndMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetLocationMonitorEndMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetLocationMonitorEndMessage", _args, result);
            }
            
            public System.IAsyncResult BeginGetCameraNoSignalAlertMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCameraNoSignalAlertMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetCameraNoSignalAlertMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetCameraNoSignalAlertMessage", _args, result);
            }
            
            public System.IAsyncResult BeginCancelCameraNoSignalAlertMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("CancelCameraNoSignalAlertMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCancelCameraNoSignalAlertMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CancelCameraNoSignalAlertMessage", _args, result);
            }
            
            public System.IAsyncResult BeginGetCameraOcclusionAlertMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCameraOcclusionAlertMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetCameraOcclusionAlertMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetCameraOcclusionAlertMessage", _args, result);
            }
            
            public System.IAsyncResult BeginCancelCameraOcclusionAlertMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("CancelCameraOcclusionAlertMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCancelCameraOcclusionAlertMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CancelCameraOcclusionAlertMessage", _args, result);
            }
            
            public System.IAsyncResult BeginGetFireAlertMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetFireAlertMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetFireAlertMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetFireAlertMessage", _args, result);
            }
            
            public System.IAsyncResult BeginCancelFireAlertMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("CancelFireAlertMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCancelFireAlertMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CancelFireAlertMessage", _args, result);
            }
            
            public System.IAsyncResult BeginGetGpsReceiverFaultAlertMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetGpsReceiverFaultAlertMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetGpsReceiverFaultAlertMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetGpsReceiverFaultAlertMessage", _args, result);
            }
            
            public System.IAsyncResult BeginCancelGpsReceiverFaultAlertMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("CancelGpsReceiverFaultAlertMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCancelGpsReceiverFaultAlertMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CancelGpsReceiverFaultAlertMessage", _args, result);
            }
            
            public System.IAsyncResult BeginGetMdvrMemoryCardErrorAlertMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetMdvrMemoryCardErrorAlertMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetMdvrMemoryCardErrorAlertMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetMdvrMemoryCardErrorAlertMessage", _args, result);
            }
            
            public System.IAsyncResult BeginCancelMdvrMemoryCardErrorAlertMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("CancelMdvrMemoryCardErrorAlertMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCancelMdvrMemoryCardErrorAlertMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CancelMdvrMemoryCardErrorAlertMessage", _args, result);
            }
            
            public System.IAsyncResult BeginGetOpenOrCloseDoorAbnormalAlertMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetOpenOrCloseDoorAbnormalAlertMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetOpenOrCloseDoorAbnormalAlertMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetOpenOrCloseDoorAbnormalAlertMessage", _args, result);
            }
            
            public System.IAsyncResult BeginCancelOpenOrCloseDoorAbnormalAlertMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("CancelOpenOrCloseDoorAbnormalAlertMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCancelOpenOrCloseDoorAbnormalAlertMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CancelOpenOrCloseDoorAbnormalAlertMessage", _args, result);
            }
            
            public System.IAsyncResult BeginGetOverSpeedAlertMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetOverSpeedAlertMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetOverSpeedAlertMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetOverSpeedAlertMessage", _args, result);
            }
            
            public System.IAsyncResult BeginCancelOverSpeedAlertMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("CancelOverSpeedAlertMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCancelOverSpeedAlertMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CancelOverSpeedAlertMessage", _args, result);
            }
            
            public System.IAsyncResult BeginGetRegionAlertMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetRegionAlertMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetRegionAlertMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetRegionAlertMessage", _args, result);
            }
            
            public System.IAsyncResult BeginCancelRegionAlertMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("CancelRegionAlertMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCancelRegionAlertMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CancelRegionAlertMessage", _args, result);
            }
            
            public System.IAsyncResult BeginGetRemoveDeviceSuiteAlertNotifyMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetRemoveDeviceSuiteAlertNotifyMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetRemoveDeviceSuiteAlertNotifyMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetRemoveDeviceSuiteAlertNotifyMessage", _args, result);
            }
            
            public System.IAsyncResult BeginCancelRemoveDeviceSuiteAlertNotifyMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("CancelRemoveDeviceSuiteAlertNotifyMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCancelRemoveDeviceSuiteAlertNotifyMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CancelRemoveDeviceSuiteAlertNotifyMessage", _args, result);
            }
            
            public System.IAsyncResult BeginGetTemperatureAlertMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetTemperatureAlertMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetTemperatureAlertMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetTemperatureAlertMessage", _args, result);
            }
            
            public System.IAsyncResult BeginCancelTemperatureAlertMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("CancelTemperatureAlertMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCancelTemperatureAlertMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CancelTemperatureAlertMessage", _args, result);
            }
            
            public System.IAsyncResult BeginGetVoltageAbnormalAlertMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetVoltageAbnormalAlertMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetVoltageAbnormalAlertMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetVoltageAbnormalAlertMessage", _args, result);
            }
            
            public System.IAsyncResult BeginCancelVoltageAbnormalAlertMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("CancelVoltageAbnormalAlertMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCancelVoltageAbnormalAlertMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CancelVoltageAbnormalAlertMessage", _args, result);
            }
            
            public System.IAsyncResult BeginGetInspectMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetInspectMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetInspectMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetInspectMessage", _args, result);
            }
            
            public System.IAsyncResult BeginCancelInspectMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("CancelInspectMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCancelInspectMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CancelInspectMessage", _args, result);
            }
            
            public System.IAsyncResult BeginGetOnOfflineMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetOnOfflineMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetOnOfflineMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetOnOfflineMessage", _args, result);
            }
            
            public System.IAsyncResult BeginCancelOnOfflineMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("CancelOnOfflineMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCancelOnOfflineMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CancelOnOfflineMessage", _args, result);
            }
            
            public System.IAsyncResult BeginGetSuiteRunintStatusMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetSuiteRunintStatusMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetSuiteRunintStatusMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetSuiteRunintStatusMessage", _args, result);
            }
            
            public System.IAsyncResult BeginGetFenceReplyMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetFenceReplyMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetFenceReplyMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetFenceReplyMessage", _args, result);
            }
            
            public System.IAsyncResult BeginGetSettingOverSpeedReplyMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetSettingOverSpeedReplyMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetSettingOverSpeedReplyMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetSettingOverSpeedReplyMessage", _args, result);
            }
            
            public System.IAsyncResult BeginSendUpgradeCMD(Gsafety.PTMS.ServiceReference.MessageService.UpgradeCMD modell, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = modell;
                System.IAsyncResult _result = base.BeginInvoke("SendUpgradeCMD", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendUpgradeCMD(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendUpgradeCMD", _args, result);
            }
            
            public System.IAsyncResult BeginSendElectricFenceCMD(Gsafety.PTMS.ServiceReference.MessageService.ElectircFenceSendSettingModel modell, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = modell;
                System.IAsyncResult _result = base.BeginInvoke("SendElectricFenceCMD", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendElectricFenceCMD(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendElectricFenceCMD", _args, result);
            }
            
            public System.IAsyncResult BeginSendElectricFenceCMDSet(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.ElectircFenceSendSettingModel> fenceSet, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = fenceSet;
                System.IAsyncResult _result = base.BeginInvoke("SendElectricFenceCMDSet", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendElectricFenceCMDSet(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendElectricFenceCMDSet", _args, result);
            }
            
            public System.IAsyncResult BeginSendGetUpgradeStatusCMD(Gsafety.PTMS.ServiceReference.MessageService.UpgradeStatusCMD model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("SendGetUpgradeStatusCMD", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendGetUpgradeStatusCMD(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendGetUpgradeStatusCMD", _args, result);
            }
            
            public System.IAsyncResult BeginSendSettingOverSpeedCMD(Gsafety.PTMS.ServiceReference.MessageService.SettingOverSpeedCMD model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("SendSettingOverSpeedCMD", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendSettingOverSpeedCMD(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendSettingOverSpeedCMD", _args, result);
            }
            
            public System.IAsyncResult BeginSendSettingOverSpeedCMDSet(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.MessageService.SettingOverSpeedCMD> overSpeed, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = overSpeed;
                System.IAsyncResult _result = base.BeginInvoke("SendSettingOverSpeedCMDSet", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendSettingOverSpeedCMDSet(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendSettingOverSpeedCMDSet", _args, result);
            }
            
            public System.IAsyncResult BeginSendElectircFenceSetting(Gsafety.PTMS.ServiceReference.MessageService.ElectircFenceSendSettingModel model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("SendElectircFenceSetting", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendElectircFenceSetting(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendElectircFenceSetting", _args, result);
            }
            
            public System.IAsyncResult BeginSendOverSpeedSetting(Gsafety.PTMS.ServiceReference.MessageService.OverSpeedSendSettingModel model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("SendOverSpeedSetting", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendOverSpeedSetting(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendOverSpeedSetting", _args, result);
            }
            
            public System.IAsyncResult BeginSendSettingGpsUploadCMDSet(Gsafety.PTMS.ServiceReference.MessageService.GpsSendUpModel model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("SendSettingGpsUploadCMDSet", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendSettingGpsUploadCMDSet(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendSettingGpsUploadCMDSet", _args, result);
            }
            
            public System.IAsyncResult BeginSendSettingAbnormalDoorUploadCMDSet(Gsafety.PTMS.ServiceReference.MessageService.AbnormalDoorSendUpModel model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("SendSettingAbnormalDoorUploadCMDSet", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendSettingAbnormalDoorUploadCMDSet(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendSettingAbnormalDoorUploadCMDSet", _args, result);
            }
            
            public System.IAsyncResult BeginSendSettingTemperatureUploadCMDSet(Gsafety.PTMS.ServiceReference.MessageService.TemperatureSendUpModel model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("SendSettingTemperatureUploadCMDSet", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendSettingTemperatureUploadCMDSet(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendSettingTemperatureUploadCMDSet", _args, result);
            }
            
            public System.IAsyncResult BeginSendSettingOneKeyAlarmUploadCMDSet(Gsafety.PTMS.ServiceReference.MessageService.OneKeyAlarmSendUpModel model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("SendSettingOneKeyAlarmUploadCMDSet", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendSettingOneKeyAlarmUploadCMDSet(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendSettingOneKeyAlarmUploadCMDSet", _args, result);
            }
            
            public System.IAsyncResult BeginSendInfomationCommand(Gsafety.PTMS.ServiceReference.MessageService.SendInfomationModel model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("SendInfomationCommand", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendInfomationCommand(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendInfomationCommand", _args, result);
            }
            
            public System.IAsyncResult BeginSendGetVideoListCMD(Gsafety.PTMS.ServiceReference.MessageService.QueryMdvrFileList model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("SendGetVideoListCMD", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendGetVideoListCMD(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendGetVideoListCMD", _args, result);
            }
            
            public System.IAsyncResult BeginGetSettingVideoListReplyMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetSettingVideoListReplyMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetSettingVideoListReplyMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetSettingVideoListReplyMessage", _args, result);
            }
            
            public System.IAsyncResult BeginGetV23ReplyMessage(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetV23ReplyMessage", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetV23ReplyMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetV23ReplyMessage", _args, result);
            }
            
            public System.IAsyncResult BeginSendDownloadMdvrFile(Gsafety.PTMS.ServiceReference.MessageService.DownloadFile model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("SendDownloadMdvrFile", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendDownloadMdvrFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendDownloadMdvrFile", _args, result);
            }
            
            public System.IAsyncResult BeginInit(string QUEUE, Gsafety.PTMS.ServiceReference.MessageService.RuleInfo ruleInfo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = QUEUE;
                _args[1] = ruleInfo;
                System.IAsyncResult _result = base.BeginInvoke("Init", _args, callback, asyncState);
                return _result;
            }
            
            public void EndInit(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Init", _args, result);
            }
        }
    }
    
    public class MessageCallBackReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MessageCallBackReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public object message {
            get {
                base.RaiseExceptionIfNecessary();
                return ((object)(this.results[0]));
            }
        }
    }
}
