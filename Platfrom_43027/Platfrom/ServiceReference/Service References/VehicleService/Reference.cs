//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace Gsafety.PTMS.ServiceReference.VehicleService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Vehicle", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Common.Data")]
    public partial class Vehicle : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string BrandModelField;
        
        private string CityCodeField;
        
        private string CityNameField;
        
        private string ClientIdField;
        
        private string ContactField;
        
        private string ContactAddressField;
        
        private string ContactEmailField;
        
        private string ContactPhoneField;
        
        private System.DateTime CreateTimeField;
        
        private string CreatorField;
        
        private bool DeleteFlagField;
        
        private string DistrictCodeField;
        
        private string EngineIdField;
        
        private string FichaField;
        
        private System.Nullable<int> GPSOnlineField;
        
        private string GPS_SNField;
        
        private Gsafety.PTMS.ServiceReference.VehicleService.InstallStatusType InstallStatusField;
        
        private bool IsBindingField;
        
        private System.Nullable<int> MDVROnlineField;
        
        private string MDVR_SNField;
        
        private System.Nullable<int> MobileOnlineField;
        
        private string Mobile_SNField;
        
        private string NoteField;
        
        private string OperationLicenseField;
        
        private string OrgnizationIdField;
        
        private string OrgnizationNameField;
        
        private string OwnerField;
        
        private System.Nullable<System.DateTime> ProductDateField;
        
        private string ProvinceCodeField;
        
        private string ProvinceNameField;
        
        private string RegionField;
        
        private Gsafety.PTMS.ServiceReference.VehicleService.VehicleSeviceType ServiceTypeField;
        
        private string StartYearField;
        
        private bool UpdateFlagField;
        
        private decimal ValidField;
        
        private string VehicleIdField;
        
        private string VehicleSnField;
        
        private Gsafety.PTMS.ServiceReference.VehicleService.VehicleConditionType VehicleStatusField;
        
        private Gsafety.PTMS.ServiceReference.VehicleService.VehicleType VehicleTypeField;
        
        private string VehicleTypeDescribeField;
        
        private string VehicleTypeImageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrandModel {
            get {
                return this.BrandModelField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandModelField, value) != true)) {
                    this.BrandModelField = value;
                    this.RaisePropertyChanged("BrandModel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityCode {
            get {
                return this.CityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CityCodeField, value) != true)) {
                    this.CityCodeField = value;
                    this.RaisePropertyChanged("CityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientId {
            get {
                return this.ClientIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIdField, value) != true)) {
                    this.ClientIdField = value;
                    this.RaisePropertyChanged("ClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactAddress {
            get {
                return this.ContactAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactAddressField, value) != true)) {
                    this.ContactAddressField = value;
                    this.RaisePropertyChanged("ContactAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactEmail {
            get {
                return this.ContactEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactEmailField, value) != true)) {
                    this.ContactEmailField = value;
                    this.RaisePropertyChanged("ContactEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactPhone {
            get {
                return this.ContactPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactPhoneField, value) != true)) {
                    this.ContactPhoneField = value;
                    this.RaisePropertyChanged("ContactPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeleteFlag {
            get {
                return this.DeleteFlagField;
            }
            set {
                if ((this.DeleteFlagField.Equals(value) != true)) {
                    this.DeleteFlagField = value;
                    this.RaisePropertyChanged("DeleteFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistrictCode {
            get {
                return this.DistrictCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictCodeField, value) != true)) {
                    this.DistrictCodeField = value;
                    this.RaisePropertyChanged("DistrictCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EngineId {
            get {
                return this.EngineIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EngineIdField, value) != true)) {
                    this.EngineIdField = value;
                    this.RaisePropertyChanged("EngineId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ficha {
            get {
                return this.FichaField;
            }
            set {
                if ((object.ReferenceEquals(this.FichaField, value) != true)) {
                    this.FichaField = value;
                    this.RaisePropertyChanged("Ficha");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GPSOnline {
            get {
                return this.GPSOnlineField;
            }
            set {
                if ((this.GPSOnlineField.Equals(value) != true)) {
                    this.GPSOnlineField = value;
                    this.RaisePropertyChanged("GPSOnline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GPS_SN {
            get {
                return this.GPS_SNField;
            }
            set {
                if ((object.ReferenceEquals(this.GPS_SNField, value) != true)) {
                    this.GPS_SNField = value;
                    this.RaisePropertyChanged("GPS_SN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.VehicleService.InstallStatusType InstallStatus {
            get {
                return this.InstallStatusField;
            }
            set {
                if ((this.InstallStatusField.Equals(value) != true)) {
                    this.InstallStatusField = value;
                    this.RaisePropertyChanged("InstallStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsBinding {
            get {
                return this.IsBindingField;
            }
            set {
                if ((this.IsBindingField.Equals(value) != true)) {
                    this.IsBindingField = value;
                    this.RaisePropertyChanged("IsBinding");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MDVROnline {
            get {
                return this.MDVROnlineField;
            }
            set {
                if ((this.MDVROnlineField.Equals(value) != true)) {
                    this.MDVROnlineField = value;
                    this.RaisePropertyChanged("MDVROnline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MDVR_SN {
            get {
                return this.MDVR_SNField;
            }
            set {
                if ((object.ReferenceEquals(this.MDVR_SNField, value) != true)) {
                    this.MDVR_SNField = value;
                    this.RaisePropertyChanged("MDVR_SN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> MobileOnline {
            get {
                return this.MobileOnlineField;
            }
            set {
                if ((this.MobileOnlineField.Equals(value) != true)) {
                    this.MobileOnlineField = value;
                    this.RaisePropertyChanged("MobileOnline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile_SN {
            get {
                return this.Mobile_SNField;
            }
            set {
                if ((object.ReferenceEquals(this.Mobile_SNField, value) != true)) {
                    this.Mobile_SNField = value;
                    this.RaisePropertyChanged("Mobile_SN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperationLicense {
            get {
                return this.OperationLicenseField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationLicenseField, value) != true)) {
                    this.OperationLicenseField = value;
                    this.RaisePropertyChanged("OperationLicense");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrgnizationId {
            get {
                return this.OrgnizationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.OrgnizationIdField, value) != true)) {
                    this.OrgnizationIdField = value;
                    this.RaisePropertyChanged("OrgnizationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrgnizationName {
            get {
                return this.OrgnizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrgnizationNameField, value) != true)) {
                    this.OrgnizationNameField = value;
                    this.RaisePropertyChanged("OrgnizationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ProductDate {
            get {
                return this.ProductDateField;
            }
            set {
                if ((this.ProductDateField.Equals(value) != true)) {
                    this.ProductDateField = value;
                    this.RaisePropertyChanged("ProductDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProvinceCode {
            get {
                return this.ProvinceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceCodeField, value) != true)) {
                    this.ProvinceCodeField = value;
                    this.RaisePropertyChanged("ProvinceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProvinceName {
            get {
                return this.ProvinceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceNameField, value) != true)) {
                    this.ProvinceNameField = value;
                    this.RaisePropertyChanged("ProvinceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.VehicleService.VehicleSeviceType ServiceType {
            get {
                return this.ServiceTypeField;
            }
            set {
                if ((this.ServiceTypeField.Equals(value) != true)) {
                    this.ServiceTypeField = value;
                    this.RaisePropertyChanged("ServiceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartYear {
            get {
                return this.StartYearField;
            }
            set {
                if ((object.ReferenceEquals(this.StartYearField, value) != true)) {
                    this.StartYearField = value;
                    this.RaisePropertyChanged("StartYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpdateFlag {
            get {
                return this.UpdateFlagField;
            }
            set {
                if ((this.UpdateFlagField.Equals(value) != true)) {
                    this.UpdateFlagField = value;
                    this.RaisePropertyChanged("UpdateFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((this.ValidField.Equals(value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleId {
            get {
                return this.VehicleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleIdField, value) != true)) {
                    this.VehicleIdField = value;
                    this.RaisePropertyChanged("VehicleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleSn {
            get {
                return this.VehicleSnField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleSnField, value) != true)) {
                    this.VehicleSnField = value;
                    this.RaisePropertyChanged("VehicleSn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.VehicleService.VehicleConditionType VehicleStatus {
            get {
                return this.VehicleStatusField;
            }
            set {
                if ((this.VehicleStatusField.Equals(value) != true)) {
                    this.VehicleStatusField = value;
                    this.RaisePropertyChanged("VehicleStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.VehicleService.VehicleType VehicleType {
            get {
                return this.VehicleTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleTypeField, value) != true)) {
                    this.VehicleTypeField = value;
                    this.RaisePropertyChanged("VehicleType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleTypeDescribe {
            get {
                return this.VehicleTypeDescribeField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleTypeDescribeField, value) != true)) {
                    this.VehicleTypeDescribeField = value;
                    this.RaisePropertyChanged("VehicleTypeDescribe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleTypeImage {
            get {
                return this.VehicleTypeImageField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleTypeImageField, value) != true)) {
                    this.VehicleTypeImageField = value;
                    this.RaisePropertyChanged("VehicleTypeImage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VehicleType", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Common.Data")]
    public partial class VehicleType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ClientIDField;
        
        private System.DateTime CreateTimeField;
        
        private string CreatorField;
        
        private string DescriptionField;
        
        private string IDField;
        
        private string ImageField;
        
        private string NameField;
        
        private int RowField;
        
        private decimal ValidField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIDField, value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Row {
            get {
                return this.RowField;
            }
            set {
                if ((this.RowField.Equals(value) != true)) {
                    this.RowField = value;
                    this.RaisePropertyChanged("Row");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((this.ValidField.Equals(value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstallStatusType", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Common.Enum")]
    public enum InstallStatusType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnInstall = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Installing = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Installed = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VehicleSeviceType", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Common.Data.Enum")]
    public enum VehicleSeviceType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Comercial = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Public = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Private = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 99,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VehicleConditionType", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Common.Data.Enum")]
    public enum VehicleConditionType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unavailable = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Available = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleMessageOfboolean", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class SingleMessageOfboolean : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private bool ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleMessageOfVehiclei7Zg_POJ5", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class SingleMessageOfVehiclei7Zg_POJ5 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private Gsafety.PTMS.ServiceReference.VehicleService.Vehicle ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.VehicleService.Vehicle Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleMessageOfVehicleCheckResultExti7Zg_POJ5", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class SingleMessageOfVehicleCheckResultExti7Zg_POJ5 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private Gsafety.PTMS.ServiceReference.VehicleService.VehicleCheckResultExt ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.VehicleService.VehicleCheckResultExt Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VehicleCheckResultExt", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Common.Data")]
    public partial class VehicleCheckResultExt : Gsafety.PTMS.ServiceReference.VehicleService.VehicleCheckResult {
        
        private string BusinessTypeField;
        
        private string ContactPhoneField;
        
        private string EngineIdField;
        
        private string OperationLicenseField;
        
        private string OrganizationIDField;
        
        private string OrgnizationNameField;
        
        private string OwnerField;
        
        private string VehicleSnField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessType {
            get {
                return this.BusinessTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessTypeField, value) != true)) {
                    this.BusinessTypeField = value;
                    this.RaisePropertyChanged("BusinessType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactPhone {
            get {
                return this.ContactPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactPhoneField, value) != true)) {
                    this.ContactPhoneField = value;
                    this.RaisePropertyChanged("ContactPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EngineId {
            get {
                return this.EngineIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EngineIdField, value) != true)) {
                    this.EngineIdField = value;
                    this.RaisePropertyChanged("EngineId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperationLicense {
            get {
                return this.OperationLicenseField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationLicenseField, value) != true)) {
                    this.OperationLicenseField = value;
                    this.RaisePropertyChanged("OperationLicense");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationID {
            get {
                return this.OrganizationIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationIDField, value) != true)) {
                    this.OrganizationIDField = value;
                    this.RaisePropertyChanged("OrganizationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrgnizationName {
            get {
                return this.OrgnizationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrgnizationNameField, value) != true)) {
                    this.OrgnizationNameField = value;
                    this.RaisePropertyChanged("OrgnizationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleSn {
            get {
                return this.VehicleSnField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleSnField, value) != true)) {
                    this.VehicleSnField = value;
                    this.RaisePropertyChanged("VehicleSn");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VehicleCheckResult", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Common.Data")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Gsafety.PTMS.ServiceReference.VehicleService.VehicleCheckResultExt))]
    public partial class VehicleCheckResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int InvalidCodeField;
        
        private int ResultField;
        
        private int StatusField;
        
        private string TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InvalidCode {
            get {
                return this.InvalidCodeField;
            }
            set {
                if ((this.InvalidCodeField.Equals(value) != true)) {
                    this.InvalidCodeField = value;
                    this.RaisePropertyChanged("InvalidCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfVehiclei7Zg_POJ5", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfVehiclei7Zg_POJ5 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.VehicleService.Vehicle> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.VehicleService.Vehicle> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagingInfo", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class PagingInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfVVehicleh_PhsrrDr", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfVVehicleh_PhsrrDr : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.VehicleService.VVehicle> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.VehicleService.VVehicle> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VVehicle", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.BaseInformation.Contract.Dat" +
        "a")]
    public partial class VVehicle : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool IsCheckedField;
        
        private Gsafety.PTMS.ServiceReference.VehicleService.Vehicle VehiclesField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsChecked {
            get {
                return this.IsCheckedField;
            }
            set {
                if ((this.IsCheckedField.Equals(value) != true)) {
                    this.IsCheckedField = value;
                    this.RaisePropertyChanged("IsChecked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.VehicleService.Vehicle Vehicles {
            get {
                return this.VehiclesField;
            }
            set {
                if ((object.ReferenceEquals(this.VehiclesField, value) != true)) {
                    this.VehiclesField = value;
                    this.RaisePropertyChanged("Vehicles");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VehicleTypeColor", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Common.Data")]
    public partial class VehicleTypeColor : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ColorField;
        
        private string IDField;
        
        private int MaxSpeedField;
        
        private int MinSpeedField;
        
        private string TypeIDField;
        
        private string TypeNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxSpeed {
            get {
                return this.MaxSpeedField;
            }
            set {
                if ((this.MaxSpeedField.Equals(value) != true)) {
                    this.MaxSpeedField = value;
                    this.RaisePropertyChanged("MaxSpeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinSpeed {
            get {
                return this.MinSpeedField;
            }
            set {
                if ((this.MinSpeedField.Equals(value) != true)) {
                    this.MinSpeedField = value;
                    this.RaisePropertyChanged("MinSpeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeID {
            get {
                return this.TypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeIDField, value) != true)) {
                    this.TypeIDField = value;
                    this.RaisePropertyChanged("TypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeName {
            get {
                return this.TypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeNameField, value) != true)) {
                    this.TypeNameField = value;
                    this.RaisePropertyChanged("TypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfVehicleTypeColori7Zg_POJ5", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfVehicleTypeColori7Zg_POJ5 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.VehicleService.VehicleTypeColor> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.VehicleService.VehicleTypeColor> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfVehicleTypei7Zg_POJ5", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfVehicleTypei7Zg_POJ5 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.VehicleService.VehicleType> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.VehicleService.VehicleType> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="VehicleService.IVehicleService")]
    public interface IVehicleService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVehicleService/AddVehicle", ReplyAction="http://tempuri.org/IVehicleService/AddVehicleResponse")]
        System.IAsyncResult BeginAddVehicle(Gsafety.PTMS.ServiceReference.VehicleService.Vehicle vehicle, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean EndAddVehicle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVehicleService/DeleteVehicle", ReplyAction="http://tempuri.org/IVehicleService/DeleteVehicleResponse")]
        System.IAsyncResult BeginDeleteVehicle(Gsafety.PTMS.ServiceReference.VehicleService.Vehicle model, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean EndDeleteVehicle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVehicleService/UpdateVehicle", ReplyAction="http://tempuri.org/IVehicleService/UpdateVehicleResponse")]
        System.IAsyncResult BeginUpdateVehicle(Gsafety.PTMS.ServiceReference.VehicleService.Vehicle vehicle, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean EndUpdateVehicle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVehicleService/GetInstalSecuritVehicleByMDVRID", ReplyAction="http://tempuri.org/IVehicleService/GetInstalSecuritVehicleByMDVRIDResponse")]
        System.IAsyncResult BeginGetInstalSecuritVehicleByMDVRID(string mdvrID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehiclei7Zg_POJ5 EndGetInstalSecuritVehicleByMDVRID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVehicleService/CheckInstallVehicleForSuite", ReplyAction="http://tempuri.org/IVehicleService/CheckInstallVehicleForSuiteResponse")]
        System.IAsyncResult BeginCheckInstallVehicleForSuite(string vehicleId, string clientID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehicleCheckResultExti7Zg_POJ5 EndCheckInstallVehicleForSuite(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVehicleService/CheckInstallVehicleForGPS", ReplyAction="http://tempuri.org/IVehicleService/CheckInstallVehicleForGPSResponse")]
        System.IAsyncResult BeginCheckInstallVehicleForGPS(string vehicleId, string clientID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehicleCheckResultExti7Zg_POJ5 EndCheckInstallVehicleForGPS(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVehicleService/UpdateVehicleStatusByVehicleId", ReplyAction="http://tempuri.org/IVehicleService/UpdateVehicleStatusByVehicleIdResponse")]
        System.IAsyncResult BeginUpdateVehicleStatusByVehicleId(string vehicleId, int status, string note, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean EndUpdateVehicleStatusByVehicleId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVehicleService/CheckVehicleExistByVehicleId", ReplyAction="http://tempuri.org/IVehicleService/CheckVehicleExistByVehicleIdResponse")]
        System.IAsyncResult BeginCheckVehicleExistByVehicleId(string vehicleId, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean EndCheckVehicleExistByVehicleId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVehicleService/BatchAdd", ReplyAction="http://tempuri.org/IVehicleService/BatchAddResponse")]
        System.IAsyncResult BeginBatchAdd(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.VehicleService.Vehicle> vehicleList, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean EndBatchAdd(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVehicleService/GetInstalSecuritVehiclesByAuthority", ReplyAction="http://tempuri.org/IVehicleService/GetInstalSecuritVehiclesByAuthorityResponse")]
        System.IAsyncResult BeginGetInstalSecuritVehiclesByAuthority(System.AsyncCallback callback, object asyncState);
        
        byte[] EndGetInstalSecuritVehiclesByAuthority(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVehicleService/CheckVehicleExistByVehicleSn", ReplyAction="http://tempuri.org/IVehicleService/CheckVehicleExistByVehicleSnResponse")]
        System.IAsyncResult BeginCheckVehicleExistByVehicleSn(string vehicleSn, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean EndCheckVehicleExistByVehicleSn(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVehicleService/CheckVehicleExist", ReplyAction="http://tempuri.org/IVehicleService/CheckVehicleExistResponse")]
        System.IAsyncResult BeginCheckVehicleExist(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.VehicleService.Vehicle> vehicleList, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehiclei7Zg_POJ5 EndCheckVehicleExist(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVehicleService/GetBscVehicle", ReplyAction="http://tempuri.org/IVehicleService/GetBscVehicleResponse")]
        System.IAsyncResult BeginGetBscVehicle(string VehicleId, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehiclei7Zg_POJ5 EndGetBscVehicle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVehicleService/GetChauffeurVehiclePageList", ReplyAction="http://tempuri.org/IVehicleService/GetChauffeurVehiclePageListResponse")]
        System.IAsyncResult BeginGetChauffeurVehiclePageList(Gsafety.PTMS.ServiceReference.VehicleService.PagingInfo page, string clientID, string vehicleNum, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVVehicleh_PhsrrDr EndGetChauffeurVehiclePageList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVehicleService/GetChauffeurVehicle", ReplyAction="http://tempuri.org/IVehicleService/GetChauffeurVehicleResponse")]
        System.IAsyncResult BeginGetChauffeurVehicle(string clientID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehiclei7Zg_POJ5 EndGetChauffeurVehicle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVehicleService/GetInstallVehiclesByAuthority", ReplyAction="http://tempuri.org/IVehicleService/GetInstallVehiclesByAuthorityResponse")]
        System.IAsyncResult BeginGetInstallVehiclesByAuthority(System.Collections.ObjectModel.ObservableCollection<string> organizations, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehiclei7Zg_POJ5 EndGetInstallVehiclesByAuthority(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVehicleService/GetInstallVehicle", ReplyAction="http://tempuri.org/IVehicleService/GetInstallVehicleResponse")]
        System.IAsyncResult BeginGetInstallVehicle(string organization, string vehicleid, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehiclei7Zg_POJ5 EndGetInstallVehicle(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVehicleServiceChannel : Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetInstalSecuritVehicleByMDVRIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInstalSecuritVehicleByMDVRIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehiclei7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehiclei7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckInstallVehicleForSuiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckInstallVehicleForSuiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehicleCheckResultExti7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehicleCheckResultExti7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckInstallVehicleForGPSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckInstallVehicleForGPSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehicleCheckResultExti7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehicleCheckResultExti7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateVehicleStatusByVehicleIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateVehicleStatusByVehicleIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckVehicleExistByVehicleIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckVehicleExistByVehicleIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BatchAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BatchAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetInstalSecuritVehiclesByAuthorityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInstalSecuritVehiclesByAuthorityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckVehicleExistByVehicleSnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckVehicleExistByVehicleSnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckVehicleExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckVehicleExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehiclei7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehiclei7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBscVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBscVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehiclei7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehiclei7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetChauffeurVehiclePageListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetChauffeurVehiclePageListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVVehicleh_PhsrrDr Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVVehicleh_PhsrrDr)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetChauffeurVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetChauffeurVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehiclei7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehiclei7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetInstallVehiclesByAuthorityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInstallVehiclesByAuthorityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehiclei7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehiclei7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetInstallVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInstallVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehiclei7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehiclei7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VehicleServiceClient : System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService>, Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService {
        
        private BeginOperationDelegate onBeginAddVehicleDelegate;
        
        private EndOperationDelegate onEndAddVehicleDelegate;
        
        private System.Threading.SendOrPostCallback onAddVehicleCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteVehicleDelegate;
        
        private EndOperationDelegate onEndDeleteVehicleDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteVehicleCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateVehicleDelegate;
        
        private EndOperationDelegate onEndUpdateVehicleDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateVehicleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInstalSecuritVehicleByMDVRIDDelegate;
        
        private EndOperationDelegate onEndGetInstalSecuritVehicleByMDVRIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetInstalSecuritVehicleByMDVRIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckInstallVehicleForSuiteDelegate;
        
        private EndOperationDelegate onEndCheckInstallVehicleForSuiteDelegate;
        
        private System.Threading.SendOrPostCallback onCheckInstallVehicleForSuiteCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckInstallVehicleForGPSDelegate;
        
        private EndOperationDelegate onEndCheckInstallVehicleForGPSDelegate;
        
        private System.Threading.SendOrPostCallback onCheckInstallVehicleForGPSCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateVehicleStatusByVehicleIdDelegate;
        
        private EndOperationDelegate onEndUpdateVehicleStatusByVehicleIdDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateVehicleStatusByVehicleIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckVehicleExistByVehicleIdDelegate;
        
        private EndOperationDelegate onEndCheckVehicleExistByVehicleIdDelegate;
        
        private System.Threading.SendOrPostCallback onCheckVehicleExistByVehicleIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginBatchAddDelegate;
        
        private EndOperationDelegate onEndBatchAddDelegate;
        
        private System.Threading.SendOrPostCallback onBatchAddCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInstalSecuritVehiclesByAuthorityDelegate;
        
        private EndOperationDelegate onEndGetInstalSecuritVehiclesByAuthorityDelegate;
        
        private System.Threading.SendOrPostCallback onGetInstalSecuritVehiclesByAuthorityCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckVehicleExistByVehicleSnDelegate;
        
        private EndOperationDelegate onEndCheckVehicleExistByVehicleSnDelegate;
        
        private System.Threading.SendOrPostCallback onCheckVehicleExistByVehicleSnCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckVehicleExistDelegate;
        
        private EndOperationDelegate onEndCheckVehicleExistDelegate;
        
        private System.Threading.SendOrPostCallback onCheckVehicleExistCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBscVehicleDelegate;
        
        private EndOperationDelegate onEndGetBscVehicleDelegate;
        
        private System.Threading.SendOrPostCallback onGetBscVehicleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetChauffeurVehiclePageListDelegate;
        
        private EndOperationDelegate onEndGetChauffeurVehiclePageListDelegate;
        
        private System.Threading.SendOrPostCallback onGetChauffeurVehiclePageListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetChauffeurVehicleDelegate;
        
        private EndOperationDelegate onEndGetChauffeurVehicleDelegate;
        
        private System.Threading.SendOrPostCallback onGetChauffeurVehicleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInstallVehiclesByAuthorityDelegate;
        
        private EndOperationDelegate onEndGetInstallVehiclesByAuthorityDelegate;
        
        private System.Threading.SendOrPostCallback onGetInstallVehiclesByAuthorityCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInstallVehicleDelegate;
        
        private EndOperationDelegate onEndGetInstallVehicleDelegate;
        
        private System.Threading.SendOrPostCallback onGetInstallVehicleCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public VehicleServiceClient() {
        }
        
        public VehicleServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VehicleServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VehicleServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VehicleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<AddVehicleCompletedEventArgs> AddVehicleCompleted;
        
        public event System.EventHandler<DeleteVehicleCompletedEventArgs> DeleteVehicleCompleted;
        
        public event System.EventHandler<UpdateVehicleCompletedEventArgs> UpdateVehicleCompleted;
        
        public event System.EventHandler<GetInstalSecuritVehicleByMDVRIDCompletedEventArgs> GetInstalSecuritVehicleByMDVRIDCompleted;
        
        public event System.EventHandler<CheckInstallVehicleForSuiteCompletedEventArgs> CheckInstallVehicleForSuiteCompleted;
        
        public event System.EventHandler<CheckInstallVehicleForGPSCompletedEventArgs> CheckInstallVehicleForGPSCompleted;
        
        public event System.EventHandler<UpdateVehicleStatusByVehicleIdCompletedEventArgs> UpdateVehicleStatusByVehicleIdCompleted;
        
        public event System.EventHandler<CheckVehicleExistByVehicleIdCompletedEventArgs> CheckVehicleExistByVehicleIdCompleted;
        
        public event System.EventHandler<BatchAddCompletedEventArgs> BatchAddCompleted;
        
        public event System.EventHandler<GetInstalSecuritVehiclesByAuthorityCompletedEventArgs> GetInstalSecuritVehiclesByAuthorityCompleted;
        
        public event System.EventHandler<CheckVehicleExistByVehicleSnCompletedEventArgs> CheckVehicleExistByVehicleSnCompleted;
        
        public event System.EventHandler<CheckVehicleExistCompletedEventArgs> CheckVehicleExistCompleted;
        
        public event System.EventHandler<GetBscVehicleCompletedEventArgs> GetBscVehicleCompleted;
        
        public event System.EventHandler<GetChauffeurVehiclePageListCompletedEventArgs> GetChauffeurVehiclePageListCompleted;
        
        public event System.EventHandler<GetChauffeurVehicleCompletedEventArgs> GetChauffeurVehicleCompleted;
        
        public event System.EventHandler<GetInstallVehiclesByAuthorityCompletedEventArgs> GetInstallVehiclesByAuthorityCompleted;
        
        public event System.EventHandler<GetInstallVehicleCompletedEventArgs> GetInstallVehicleCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService.BeginAddVehicle(Gsafety.PTMS.ServiceReference.VehicleService.Vehicle vehicle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddVehicle(vehicle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService.EndAddVehicle(System.IAsyncResult result) {
            return base.Channel.EndAddVehicle(result);
        }
        
        private System.IAsyncResult OnBeginAddVehicle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.VehicleService.Vehicle vehicle = ((Gsafety.PTMS.ServiceReference.VehicleService.Vehicle)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService)(this)).BeginAddVehicle(vehicle, callback, asyncState);
        }
        
        private object[] OnEndAddVehicle(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService)(this)).EndAddVehicle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddVehicleCompleted(object state) {
            if ((this.AddVehicleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddVehicleCompleted(this, new AddVehicleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddVehicleAsync(Gsafety.PTMS.ServiceReference.VehicleService.Vehicle vehicle) {
            this.AddVehicleAsync(vehicle, null);
        }
        
        public void AddVehicleAsync(Gsafety.PTMS.ServiceReference.VehicleService.Vehicle vehicle, object userState) {
            if ((this.onBeginAddVehicleDelegate == null)) {
                this.onBeginAddVehicleDelegate = new BeginOperationDelegate(this.OnBeginAddVehicle);
            }
            if ((this.onEndAddVehicleDelegate == null)) {
                this.onEndAddVehicleDelegate = new EndOperationDelegate(this.OnEndAddVehicle);
            }
            if ((this.onAddVehicleCompletedDelegate == null)) {
                this.onAddVehicleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddVehicleCompleted);
            }
            base.InvokeAsync(this.onBeginAddVehicleDelegate, new object[] {
                        vehicle}, this.onEndAddVehicleDelegate, this.onAddVehicleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService.BeginDeleteVehicle(Gsafety.PTMS.ServiceReference.VehicleService.Vehicle model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteVehicle(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService.EndDeleteVehicle(System.IAsyncResult result) {
            return base.Channel.EndDeleteVehicle(result);
        }
        
        private System.IAsyncResult OnBeginDeleteVehicle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.VehicleService.Vehicle model = ((Gsafety.PTMS.ServiceReference.VehicleService.Vehicle)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService)(this)).BeginDeleteVehicle(model, callback, asyncState);
        }
        
        private object[] OnEndDeleteVehicle(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService)(this)).EndDeleteVehicle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteVehicleCompleted(object state) {
            if ((this.DeleteVehicleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteVehicleCompleted(this, new DeleteVehicleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteVehicleAsync(Gsafety.PTMS.ServiceReference.VehicleService.Vehicle model) {
            this.DeleteVehicleAsync(model, null);
        }
        
        public void DeleteVehicleAsync(Gsafety.PTMS.ServiceReference.VehicleService.Vehicle model, object userState) {
            if ((this.onBeginDeleteVehicleDelegate == null)) {
                this.onBeginDeleteVehicleDelegate = new BeginOperationDelegate(this.OnBeginDeleteVehicle);
            }
            if ((this.onEndDeleteVehicleDelegate == null)) {
                this.onEndDeleteVehicleDelegate = new EndOperationDelegate(this.OnEndDeleteVehicle);
            }
            if ((this.onDeleteVehicleCompletedDelegate == null)) {
                this.onDeleteVehicleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteVehicleCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteVehicleDelegate, new object[] {
                        model}, this.onEndDeleteVehicleDelegate, this.onDeleteVehicleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService.BeginUpdateVehicle(Gsafety.PTMS.ServiceReference.VehicleService.Vehicle vehicle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateVehicle(vehicle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService.EndUpdateVehicle(System.IAsyncResult result) {
            return base.Channel.EndUpdateVehicle(result);
        }
        
        private System.IAsyncResult OnBeginUpdateVehicle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.VehicleService.Vehicle vehicle = ((Gsafety.PTMS.ServiceReference.VehicleService.Vehicle)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService)(this)).BeginUpdateVehicle(vehicle, callback, asyncState);
        }
        
        private object[] OnEndUpdateVehicle(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService)(this)).EndUpdateVehicle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateVehicleCompleted(object state) {
            if ((this.UpdateVehicleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateVehicleCompleted(this, new UpdateVehicleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateVehicleAsync(Gsafety.PTMS.ServiceReference.VehicleService.Vehicle vehicle) {
            this.UpdateVehicleAsync(vehicle, null);
        }
        
        public void UpdateVehicleAsync(Gsafety.PTMS.ServiceReference.VehicleService.Vehicle vehicle, object userState) {
            if ((this.onBeginUpdateVehicleDelegate == null)) {
                this.onBeginUpdateVehicleDelegate = new BeginOperationDelegate(this.OnBeginUpdateVehicle);
            }
            if ((this.onEndUpdateVehicleDelegate == null)) {
                this.onEndUpdateVehicleDelegate = new EndOperationDelegate(this.OnEndUpdateVehicle);
            }
            if ((this.onUpdateVehicleCompletedDelegate == null)) {
                this.onUpdateVehicleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateVehicleCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateVehicleDelegate, new object[] {
                        vehicle}, this.onEndUpdateVehicleDelegate, this.onUpdateVehicleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService.BeginGetInstalSecuritVehicleByMDVRID(string mdvrID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInstalSecuritVehicleByMDVRID(mdvrID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehiclei7Zg_POJ5 Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService.EndGetInstalSecuritVehicleByMDVRID(System.IAsyncResult result) {
            return base.Channel.EndGetInstalSecuritVehicleByMDVRID(result);
        }
        
        private System.IAsyncResult OnBeginGetInstalSecuritVehicleByMDVRID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string mdvrID = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService)(this)).BeginGetInstalSecuritVehicleByMDVRID(mdvrID, callback, asyncState);
        }
        
        private object[] OnEndGetInstalSecuritVehicleByMDVRID(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehiclei7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService)(this)).EndGetInstalSecuritVehicleByMDVRID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInstalSecuritVehicleByMDVRIDCompleted(object state) {
            if ((this.GetInstalSecuritVehicleByMDVRIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInstalSecuritVehicleByMDVRIDCompleted(this, new GetInstalSecuritVehicleByMDVRIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInstalSecuritVehicleByMDVRIDAsync(string mdvrID) {
            this.GetInstalSecuritVehicleByMDVRIDAsync(mdvrID, null);
        }
        
        public void GetInstalSecuritVehicleByMDVRIDAsync(string mdvrID, object userState) {
            if ((this.onBeginGetInstalSecuritVehicleByMDVRIDDelegate == null)) {
                this.onBeginGetInstalSecuritVehicleByMDVRIDDelegate = new BeginOperationDelegate(this.OnBeginGetInstalSecuritVehicleByMDVRID);
            }
            if ((this.onEndGetInstalSecuritVehicleByMDVRIDDelegate == null)) {
                this.onEndGetInstalSecuritVehicleByMDVRIDDelegate = new EndOperationDelegate(this.OnEndGetInstalSecuritVehicleByMDVRID);
            }
            if ((this.onGetInstalSecuritVehicleByMDVRIDCompletedDelegate == null)) {
                this.onGetInstalSecuritVehicleByMDVRIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInstalSecuritVehicleByMDVRIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetInstalSecuritVehicleByMDVRIDDelegate, new object[] {
                        mdvrID}, this.onEndGetInstalSecuritVehicleByMDVRIDDelegate, this.onGetInstalSecuritVehicleByMDVRIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService.BeginCheckInstallVehicleForSuite(string vehicleId, string clientID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckInstallVehicleForSuite(vehicleId, clientID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehicleCheckResultExti7Zg_POJ5 Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService.EndCheckInstallVehicleForSuite(System.IAsyncResult result) {
            return base.Channel.EndCheckInstallVehicleForSuite(result);
        }
        
        private System.IAsyncResult OnBeginCheckInstallVehicleForSuite(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vehicleId = ((string)(inValues[0]));
            string clientID = ((string)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService)(this)).BeginCheckInstallVehicleForSuite(vehicleId, clientID, callback, asyncState);
        }
        
        private object[] OnEndCheckInstallVehicleForSuite(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehicleCheckResultExti7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService)(this)).EndCheckInstallVehicleForSuite(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckInstallVehicleForSuiteCompleted(object state) {
            if ((this.CheckInstallVehicleForSuiteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckInstallVehicleForSuiteCompleted(this, new CheckInstallVehicleForSuiteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckInstallVehicleForSuiteAsync(string vehicleId, string clientID) {
            this.CheckInstallVehicleForSuiteAsync(vehicleId, clientID, null);
        }
        
        public void CheckInstallVehicleForSuiteAsync(string vehicleId, string clientID, object userState) {
            if ((this.onBeginCheckInstallVehicleForSuiteDelegate == null)) {
                this.onBeginCheckInstallVehicleForSuiteDelegate = new BeginOperationDelegate(this.OnBeginCheckInstallVehicleForSuite);
            }
            if ((this.onEndCheckInstallVehicleForSuiteDelegate == null)) {
                this.onEndCheckInstallVehicleForSuiteDelegate = new EndOperationDelegate(this.OnEndCheckInstallVehicleForSuite);
            }
            if ((this.onCheckInstallVehicleForSuiteCompletedDelegate == null)) {
                this.onCheckInstallVehicleForSuiteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckInstallVehicleForSuiteCompleted);
            }
            base.InvokeAsync(this.onBeginCheckInstallVehicleForSuiteDelegate, new object[] {
                        vehicleId,
                        clientID}, this.onEndCheckInstallVehicleForSuiteDelegate, this.onCheckInstallVehicleForSuiteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService.BeginCheckInstallVehicleForGPS(string vehicleId, string clientID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckInstallVehicleForGPS(vehicleId, clientID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehicleCheckResultExti7Zg_POJ5 Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService.EndCheckInstallVehicleForGPS(System.IAsyncResult result) {
            return base.Channel.EndCheckInstallVehicleForGPS(result);
        }
        
        private System.IAsyncResult OnBeginCheckInstallVehicleForGPS(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vehicleId = ((string)(inValues[0]));
            string clientID = ((string)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService)(this)).BeginCheckInstallVehicleForGPS(vehicleId, clientID, callback, asyncState);
        }
        
        private object[] OnEndCheckInstallVehicleForGPS(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehicleCheckResultExti7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService)(this)).EndCheckInstallVehicleForGPS(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckInstallVehicleForGPSCompleted(object state) {
            if ((this.CheckInstallVehicleForGPSCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckInstallVehicleForGPSCompleted(this, new CheckInstallVehicleForGPSCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckInstallVehicleForGPSAsync(string vehicleId, string clientID) {
            this.CheckInstallVehicleForGPSAsync(vehicleId, clientID, null);
        }
        
        public void CheckInstallVehicleForGPSAsync(string vehicleId, string clientID, object userState) {
            if ((this.onBeginCheckInstallVehicleForGPSDelegate == null)) {
                this.onBeginCheckInstallVehicleForGPSDelegate = new BeginOperationDelegate(this.OnBeginCheckInstallVehicleForGPS);
            }
            if ((this.onEndCheckInstallVehicleForGPSDelegate == null)) {
                this.onEndCheckInstallVehicleForGPSDelegate = new EndOperationDelegate(this.OnEndCheckInstallVehicleForGPS);
            }
            if ((this.onCheckInstallVehicleForGPSCompletedDelegate == null)) {
                this.onCheckInstallVehicleForGPSCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckInstallVehicleForGPSCompleted);
            }
            base.InvokeAsync(this.onBeginCheckInstallVehicleForGPSDelegate, new object[] {
                        vehicleId,
                        clientID}, this.onEndCheckInstallVehicleForGPSDelegate, this.onCheckInstallVehicleForGPSCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService.BeginUpdateVehicleStatusByVehicleId(string vehicleId, int status, string note, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateVehicleStatusByVehicleId(vehicleId, status, note, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService.EndUpdateVehicleStatusByVehicleId(System.IAsyncResult result) {
            return base.Channel.EndUpdateVehicleStatusByVehicleId(result);
        }
        
        private System.IAsyncResult OnBeginUpdateVehicleStatusByVehicleId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vehicleId = ((string)(inValues[0]));
            int status = ((int)(inValues[1]));
            string note = ((string)(inValues[2]));
            return ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService)(this)).BeginUpdateVehicleStatusByVehicleId(vehicleId, status, note, callback, asyncState);
        }
        
        private object[] OnEndUpdateVehicleStatusByVehicleId(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService)(this)).EndUpdateVehicleStatusByVehicleId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateVehicleStatusByVehicleIdCompleted(object state) {
            if ((this.UpdateVehicleStatusByVehicleIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateVehicleStatusByVehicleIdCompleted(this, new UpdateVehicleStatusByVehicleIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateVehicleStatusByVehicleIdAsync(string vehicleId, int status, string note) {
            this.UpdateVehicleStatusByVehicleIdAsync(vehicleId, status, note, null);
        }
        
        public void UpdateVehicleStatusByVehicleIdAsync(string vehicleId, int status, string note, object userState) {
            if ((this.onBeginUpdateVehicleStatusByVehicleIdDelegate == null)) {
                this.onBeginUpdateVehicleStatusByVehicleIdDelegate = new BeginOperationDelegate(this.OnBeginUpdateVehicleStatusByVehicleId);
            }
            if ((this.onEndUpdateVehicleStatusByVehicleIdDelegate == null)) {
                this.onEndUpdateVehicleStatusByVehicleIdDelegate = new EndOperationDelegate(this.OnEndUpdateVehicleStatusByVehicleId);
            }
            if ((this.onUpdateVehicleStatusByVehicleIdCompletedDelegate == null)) {
                this.onUpdateVehicleStatusByVehicleIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateVehicleStatusByVehicleIdCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateVehicleStatusByVehicleIdDelegate, new object[] {
                        vehicleId,
                        status,
                        note}, this.onEndUpdateVehicleStatusByVehicleIdDelegate, this.onUpdateVehicleStatusByVehicleIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService.BeginCheckVehicleExistByVehicleId(string vehicleId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckVehicleExistByVehicleId(vehicleId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService.EndCheckVehicleExistByVehicleId(System.IAsyncResult result) {
            return base.Channel.EndCheckVehicleExistByVehicleId(result);
        }
        
        private System.IAsyncResult OnBeginCheckVehicleExistByVehicleId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vehicleId = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService)(this)).BeginCheckVehicleExistByVehicleId(vehicleId, callback, asyncState);
        }
        
        private object[] OnEndCheckVehicleExistByVehicleId(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService)(this)).EndCheckVehicleExistByVehicleId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckVehicleExistByVehicleIdCompleted(object state) {
            if ((this.CheckVehicleExistByVehicleIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckVehicleExistByVehicleIdCompleted(this, new CheckVehicleExistByVehicleIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckVehicleExistByVehicleIdAsync(string vehicleId) {
            this.CheckVehicleExistByVehicleIdAsync(vehicleId, null);
        }
        
        public void CheckVehicleExistByVehicleIdAsync(string vehicleId, object userState) {
            if ((this.onBeginCheckVehicleExistByVehicleIdDelegate == null)) {
                this.onBeginCheckVehicleExistByVehicleIdDelegate = new BeginOperationDelegate(this.OnBeginCheckVehicleExistByVehicleId);
            }
            if ((this.onEndCheckVehicleExistByVehicleIdDelegate == null)) {
                this.onEndCheckVehicleExistByVehicleIdDelegate = new EndOperationDelegate(this.OnEndCheckVehicleExistByVehicleId);
            }
            if ((this.onCheckVehicleExistByVehicleIdCompletedDelegate == null)) {
                this.onCheckVehicleExistByVehicleIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckVehicleExistByVehicleIdCompleted);
            }
            base.InvokeAsync(this.onBeginCheckVehicleExistByVehicleIdDelegate, new object[] {
                        vehicleId}, this.onEndCheckVehicleExistByVehicleIdDelegate, this.onCheckVehicleExistByVehicleIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService.BeginBatchAdd(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.VehicleService.Vehicle> vehicleList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBatchAdd(vehicleList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService.EndBatchAdd(System.IAsyncResult result) {
            return base.Channel.EndBatchAdd(result);
        }
        
        private System.IAsyncResult OnBeginBatchAdd(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.VehicleService.Vehicle> vehicleList = ((System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.VehicleService.Vehicle>)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService)(this)).BeginBatchAdd(vehicleList, callback, asyncState);
        }
        
        private object[] OnEndBatchAdd(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService)(this)).EndBatchAdd(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBatchAddCompleted(object state) {
            if ((this.BatchAddCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BatchAddCompleted(this, new BatchAddCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BatchAddAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.VehicleService.Vehicle> vehicleList) {
            this.BatchAddAsync(vehicleList, null);
        }
        
        public void BatchAddAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.VehicleService.Vehicle> vehicleList, object userState) {
            if ((this.onBeginBatchAddDelegate == null)) {
                this.onBeginBatchAddDelegate = new BeginOperationDelegate(this.OnBeginBatchAdd);
            }
            if ((this.onEndBatchAddDelegate == null)) {
                this.onEndBatchAddDelegate = new EndOperationDelegate(this.OnEndBatchAdd);
            }
            if ((this.onBatchAddCompletedDelegate == null)) {
                this.onBatchAddCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBatchAddCompleted);
            }
            base.InvokeAsync(this.onBeginBatchAddDelegate, new object[] {
                        vehicleList}, this.onEndBatchAddDelegate, this.onBatchAddCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService.BeginGetInstalSecuritVehiclesByAuthority(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInstalSecuritVehiclesByAuthority(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        byte[] Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService.EndGetInstalSecuritVehiclesByAuthority(System.IAsyncResult result) {
            return base.Channel.EndGetInstalSecuritVehiclesByAuthority(result);
        }
        
        private System.IAsyncResult OnBeginGetInstalSecuritVehiclesByAuthority(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService)(this)).BeginGetInstalSecuritVehiclesByAuthority(callback, asyncState);
        }
        
        private object[] OnEndGetInstalSecuritVehiclesByAuthority(System.IAsyncResult result) {
            byte[] retVal = ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService)(this)).EndGetInstalSecuritVehiclesByAuthority(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInstalSecuritVehiclesByAuthorityCompleted(object state) {
            if ((this.GetInstalSecuritVehiclesByAuthorityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInstalSecuritVehiclesByAuthorityCompleted(this, new GetInstalSecuritVehiclesByAuthorityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInstalSecuritVehiclesByAuthorityAsync() {
            this.GetInstalSecuritVehiclesByAuthorityAsync(null);
        }
        
        public void GetInstalSecuritVehiclesByAuthorityAsync(object userState) {
            if ((this.onBeginGetInstalSecuritVehiclesByAuthorityDelegate == null)) {
                this.onBeginGetInstalSecuritVehiclesByAuthorityDelegate = new BeginOperationDelegate(this.OnBeginGetInstalSecuritVehiclesByAuthority);
            }
            if ((this.onEndGetInstalSecuritVehiclesByAuthorityDelegate == null)) {
                this.onEndGetInstalSecuritVehiclesByAuthorityDelegate = new EndOperationDelegate(this.OnEndGetInstalSecuritVehiclesByAuthority);
            }
            if ((this.onGetInstalSecuritVehiclesByAuthorityCompletedDelegate == null)) {
                this.onGetInstalSecuritVehiclesByAuthorityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInstalSecuritVehiclesByAuthorityCompleted);
            }
            base.InvokeAsync(this.onBeginGetInstalSecuritVehiclesByAuthorityDelegate, null, this.onEndGetInstalSecuritVehiclesByAuthorityDelegate, this.onGetInstalSecuritVehiclesByAuthorityCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService.BeginCheckVehicleExistByVehicleSn(string vehicleSn, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckVehicleExistByVehicleSn(vehicleSn, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService.EndCheckVehicleExistByVehicleSn(System.IAsyncResult result) {
            return base.Channel.EndCheckVehicleExistByVehicleSn(result);
        }
        
        private System.IAsyncResult OnBeginCheckVehicleExistByVehicleSn(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vehicleSn = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService)(this)).BeginCheckVehicleExistByVehicleSn(vehicleSn, callback, asyncState);
        }
        
        private object[] OnEndCheckVehicleExistByVehicleSn(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService)(this)).EndCheckVehicleExistByVehicleSn(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckVehicleExistByVehicleSnCompleted(object state) {
            if ((this.CheckVehicleExistByVehicleSnCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckVehicleExistByVehicleSnCompleted(this, new CheckVehicleExistByVehicleSnCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckVehicleExistByVehicleSnAsync(string vehicleSn) {
            this.CheckVehicleExistByVehicleSnAsync(vehicleSn, null);
        }
        
        public void CheckVehicleExistByVehicleSnAsync(string vehicleSn, object userState) {
            if ((this.onBeginCheckVehicleExistByVehicleSnDelegate == null)) {
                this.onBeginCheckVehicleExistByVehicleSnDelegate = new BeginOperationDelegate(this.OnBeginCheckVehicleExistByVehicleSn);
            }
            if ((this.onEndCheckVehicleExistByVehicleSnDelegate == null)) {
                this.onEndCheckVehicleExistByVehicleSnDelegate = new EndOperationDelegate(this.OnEndCheckVehicleExistByVehicleSn);
            }
            if ((this.onCheckVehicleExistByVehicleSnCompletedDelegate == null)) {
                this.onCheckVehicleExistByVehicleSnCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckVehicleExistByVehicleSnCompleted);
            }
            base.InvokeAsync(this.onBeginCheckVehicleExistByVehicleSnDelegate, new object[] {
                        vehicleSn}, this.onEndCheckVehicleExistByVehicleSnDelegate, this.onCheckVehicleExistByVehicleSnCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService.BeginCheckVehicleExist(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.VehicleService.Vehicle> vehicleList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckVehicleExist(vehicleList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehiclei7Zg_POJ5 Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService.EndCheckVehicleExist(System.IAsyncResult result) {
            return base.Channel.EndCheckVehicleExist(result);
        }
        
        private System.IAsyncResult OnBeginCheckVehicleExist(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.VehicleService.Vehicle> vehicleList = ((System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.VehicleService.Vehicle>)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService)(this)).BeginCheckVehicleExist(vehicleList, callback, asyncState);
        }
        
        private object[] OnEndCheckVehicleExist(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehiclei7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService)(this)).EndCheckVehicleExist(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckVehicleExistCompleted(object state) {
            if ((this.CheckVehicleExistCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckVehicleExistCompleted(this, new CheckVehicleExistCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckVehicleExistAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.VehicleService.Vehicle> vehicleList) {
            this.CheckVehicleExistAsync(vehicleList, null);
        }
        
        public void CheckVehicleExistAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.VehicleService.Vehicle> vehicleList, object userState) {
            if ((this.onBeginCheckVehicleExistDelegate == null)) {
                this.onBeginCheckVehicleExistDelegate = new BeginOperationDelegate(this.OnBeginCheckVehicleExist);
            }
            if ((this.onEndCheckVehicleExistDelegate == null)) {
                this.onEndCheckVehicleExistDelegate = new EndOperationDelegate(this.OnEndCheckVehicleExist);
            }
            if ((this.onCheckVehicleExistCompletedDelegate == null)) {
                this.onCheckVehicleExistCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckVehicleExistCompleted);
            }
            base.InvokeAsync(this.onBeginCheckVehicleExistDelegate, new object[] {
                        vehicleList}, this.onEndCheckVehicleExistDelegate, this.onCheckVehicleExistCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService.BeginGetBscVehicle(string VehicleId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBscVehicle(VehicleId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehiclei7Zg_POJ5 Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService.EndGetBscVehicle(System.IAsyncResult result) {
            return base.Channel.EndGetBscVehicle(result);
        }
        
        private System.IAsyncResult OnBeginGetBscVehicle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string VehicleId = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService)(this)).BeginGetBscVehicle(VehicleId, callback, asyncState);
        }
        
        private object[] OnEndGetBscVehicle(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehiclei7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService)(this)).EndGetBscVehicle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBscVehicleCompleted(object state) {
            if ((this.GetBscVehicleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBscVehicleCompleted(this, new GetBscVehicleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBscVehicleAsync(string VehicleId) {
            this.GetBscVehicleAsync(VehicleId, null);
        }
        
        public void GetBscVehicleAsync(string VehicleId, object userState) {
            if ((this.onBeginGetBscVehicleDelegate == null)) {
                this.onBeginGetBscVehicleDelegate = new BeginOperationDelegate(this.OnBeginGetBscVehicle);
            }
            if ((this.onEndGetBscVehicleDelegate == null)) {
                this.onEndGetBscVehicleDelegate = new EndOperationDelegate(this.OnEndGetBscVehicle);
            }
            if ((this.onGetBscVehicleCompletedDelegate == null)) {
                this.onGetBscVehicleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBscVehicleCompleted);
            }
            base.InvokeAsync(this.onBeginGetBscVehicleDelegate, new object[] {
                        VehicleId}, this.onEndGetBscVehicleDelegate, this.onGetBscVehicleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService.BeginGetChauffeurVehiclePageList(Gsafety.PTMS.ServiceReference.VehicleService.PagingInfo page, string clientID, string vehicleNum, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetChauffeurVehiclePageList(page, clientID, vehicleNum, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVVehicleh_PhsrrDr Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService.EndGetChauffeurVehiclePageList(System.IAsyncResult result) {
            return base.Channel.EndGetChauffeurVehiclePageList(result);
        }
        
        private System.IAsyncResult OnBeginGetChauffeurVehiclePageList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.VehicleService.PagingInfo page = ((Gsafety.PTMS.ServiceReference.VehicleService.PagingInfo)(inValues[0]));
            string clientID = ((string)(inValues[1]));
            string vehicleNum = ((string)(inValues[2]));
            return ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService)(this)).BeginGetChauffeurVehiclePageList(page, clientID, vehicleNum, callback, asyncState);
        }
        
        private object[] OnEndGetChauffeurVehiclePageList(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVVehicleh_PhsrrDr retVal = ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService)(this)).EndGetChauffeurVehiclePageList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetChauffeurVehiclePageListCompleted(object state) {
            if ((this.GetChauffeurVehiclePageListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetChauffeurVehiclePageListCompleted(this, new GetChauffeurVehiclePageListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetChauffeurVehiclePageListAsync(Gsafety.PTMS.ServiceReference.VehicleService.PagingInfo page, string clientID, string vehicleNum) {
            this.GetChauffeurVehiclePageListAsync(page, clientID, vehicleNum, null);
        }
        
        public void GetChauffeurVehiclePageListAsync(Gsafety.PTMS.ServiceReference.VehicleService.PagingInfo page, string clientID, string vehicleNum, object userState) {
            if ((this.onBeginGetChauffeurVehiclePageListDelegate == null)) {
                this.onBeginGetChauffeurVehiclePageListDelegate = new BeginOperationDelegate(this.OnBeginGetChauffeurVehiclePageList);
            }
            if ((this.onEndGetChauffeurVehiclePageListDelegate == null)) {
                this.onEndGetChauffeurVehiclePageListDelegate = new EndOperationDelegate(this.OnEndGetChauffeurVehiclePageList);
            }
            if ((this.onGetChauffeurVehiclePageListCompletedDelegate == null)) {
                this.onGetChauffeurVehiclePageListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetChauffeurVehiclePageListCompleted);
            }
            base.InvokeAsync(this.onBeginGetChauffeurVehiclePageListDelegate, new object[] {
                        page,
                        clientID,
                        vehicleNum}, this.onEndGetChauffeurVehiclePageListDelegate, this.onGetChauffeurVehiclePageListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService.BeginGetChauffeurVehicle(string clientID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetChauffeurVehicle(clientID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehiclei7Zg_POJ5 Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService.EndGetChauffeurVehicle(System.IAsyncResult result) {
            return base.Channel.EndGetChauffeurVehicle(result);
        }
        
        private System.IAsyncResult OnBeginGetChauffeurVehicle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService)(this)).BeginGetChauffeurVehicle(clientID, callback, asyncState);
        }
        
        private object[] OnEndGetChauffeurVehicle(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehiclei7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService)(this)).EndGetChauffeurVehicle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetChauffeurVehicleCompleted(object state) {
            if ((this.GetChauffeurVehicleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetChauffeurVehicleCompleted(this, new GetChauffeurVehicleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetChauffeurVehicleAsync(string clientID) {
            this.GetChauffeurVehicleAsync(clientID, null);
        }
        
        public void GetChauffeurVehicleAsync(string clientID, object userState) {
            if ((this.onBeginGetChauffeurVehicleDelegate == null)) {
                this.onBeginGetChauffeurVehicleDelegate = new BeginOperationDelegate(this.OnBeginGetChauffeurVehicle);
            }
            if ((this.onEndGetChauffeurVehicleDelegate == null)) {
                this.onEndGetChauffeurVehicleDelegate = new EndOperationDelegate(this.OnEndGetChauffeurVehicle);
            }
            if ((this.onGetChauffeurVehicleCompletedDelegate == null)) {
                this.onGetChauffeurVehicleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetChauffeurVehicleCompleted);
            }
            base.InvokeAsync(this.onBeginGetChauffeurVehicleDelegate, new object[] {
                        clientID}, this.onEndGetChauffeurVehicleDelegate, this.onGetChauffeurVehicleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService.BeginGetInstallVehiclesByAuthority(System.Collections.ObjectModel.ObservableCollection<string> organizations, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInstallVehiclesByAuthority(organizations, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehiclei7Zg_POJ5 Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService.EndGetInstallVehiclesByAuthority(System.IAsyncResult result) {
            return base.Channel.EndGetInstallVehiclesByAuthority(result);
        }
        
        private System.IAsyncResult OnBeginGetInstallVehiclesByAuthority(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<string> organizations = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService)(this)).BeginGetInstallVehiclesByAuthority(organizations, callback, asyncState);
        }
        
        private object[] OnEndGetInstallVehiclesByAuthority(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehiclei7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService)(this)).EndGetInstallVehiclesByAuthority(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInstallVehiclesByAuthorityCompleted(object state) {
            if ((this.GetInstallVehiclesByAuthorityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInstallVehiclesByAuthorityCompleted(this, new GetInstallVehiclesByAuthorityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInstallVehiclesByAuthorityAsync(System.Collections.ObjectModel.ObservableCollection<string> organizations) {
            this.GetInstallVehiclesByAuthorityAsync(organizations, null);
        }
        
        public void GetInstallVehiclesByAuthorityAsync(System.Collections.ObjectModel.ObservableCollection<string> organizations, object userState) {
            if ((this.onBeginGetInstallVehiclesByAuthorityDelegate == null)) {
                this.onBeginGetInstallVehiclesByAuthorityDelegate = new BeginOperationDelegate(this.OnBeginGetInstallVehiclesByAuthority);
            }
            if ((this.onEndGetInstallVehiclesByAuthorityDelegate == null)) {
                this.onEndGetInstallVehiclesByAuthorityDelegate = new EndOperationDelegate(this.OnEndGetInstallVehiclesByAuthority);
            }
            if ((this.onGetInstallVehiclesByAuthorityCompletedDelegate == null)) {
                this.onGetInstallVehiclesByAuthorityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInstallVehiclesByAuthorityCompleted);
            }
            base.InvokeAsync(this.onBeginGetInstallVehiclesByAuthorityDelegate, new object[] {
                        organizations}, this.onEndGetInstallVehiclesByAuthorityDelegate, this.onGetInstallVehiclesByAuthorityCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService.BeginGetInstallVehicle(string organization, string vehicleid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInstallVehicle(organization, vehicleid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehiclei7Zg_POJ5 Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService.EndGetInstallVehicle(System.IAsyncResult result) {
            return base.Channel.EndGetInstallVehicle(result);
        }
        
        private System.IAsyncResult OnBeginGetInstallVehicle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string organization = ((string)(inValues[0]));
            string vehicleid = ((string)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService)(this)).BeginGetInstallVehicle(organization, vehicleid, callback, asyncState);
        }
        
        private object[] OnEndGetInstallVehicle(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehiclei7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService)(this)).EndGetInstallVehicle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInstallVehicleCompleted(object state) {
            if ((this.GetInstallVehicleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInstallVehicleCompleted(this, new GetInstallVehicleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInstallVehicleAsync(string organization, string vehicleid) {
            this.GetInstallVehicleAsync(organization, vehicleid, null);
        }
        
        public void GetInstallVehicleAsync(string organization, string vehicleid, object userState) {
            if ((this.onBeginGetInstallVehicleDelegate == null)) {
                this.onBeginGetInstallVehicleDelegate = new BeginOperationDelegate(this.OnBeginGetInstallVehicle);
            }
            if ((this.onEndGetInstallVehicleDelegate == null)) {
                this.onEndGetInstallVehicleDelegate = new EndOperationDelegate(this.OnEndGetInstallVehicle);
            }
            if ((this.onGetInstallVehicleCompletedDelegate == null)) {
                this.onGetInstallVehicleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInstallVehicleCompleted);
            }
            base.InvokeAsync(this.onBeginGetInstallVehicleDelegate, new object[] {
                        organization,
                        vehicleid}, this.onEndGetInstallVehicleDelegate, this.onGetInstallVehicleCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService CreateChannel() {
            return new VehicleServiceClientChannel(this);
        }
        
        private class VehicleServiceClientChannel : ChannelBase<Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService>, Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService {
            
            public VehicleServiceClientChannel(System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.VehicleService.IVehicleService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginAddVehicle(Gsafety.PTMS.ServiceReference.VehicleService.Vehicle vehicle, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = vehicle;
                System.IAsyncResult _result = base.BeginInvoke("AddVehicle", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean EndAddVehicle(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean)(base.EndInvoke("AddVehicle", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteVehicle(Gsafety.PTMS.ServiceReference.VehicleService.Vehicle model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("DeleteVehicle", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean EndDeleteVehicle(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean)(base.EndInvoke("DeleteVehicle", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateVehicle(Gsafety.PTMS.ServiceReference.VehicleService.Vehicle vehicle, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = vehicle;
                System.IAsyncResult _result = base.BeginInvoke("UpdateVehicle", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean EndUpdateVehicle(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean)(base.EndInvoke("UpdateVehicle", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetInstalSecuritVehicleByMDVRID(string mdvrID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = mdvrID;
                System.IAsyncResult _result = base.BeginInvoke("GetInstalSecuritVehicleByMDVRID", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehiclei7Zg_POJ5 EndGetInstalSecuritVehicleByMDVRID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehiclei7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehiclei7Zg_POJ5)(base.EndInvoke("GetInstalSecuritVehicleByMDVRID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckInstallVehicleForSuite(string vehicleId, string clientID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = vehicleId;
                _args[1] = clientID;
                System.IAsyncResult _result = base.BeginInvoke("CheckInstallVehicleForSuite", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehicleCheckResultExti7Zg_POJ5 EndCheckInstallVehicleForSuite(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehicleCheckResultExti7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehicleCheckResultExti7Zg_POJ5)(base.EndInvoke("CheckInstallVehicleForSuite", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckInstallVehicleForGPS(string vehicleId, string clientID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = vehicleId;
                _args[1] = clientID;
                System.IAsyncResult _result = base.BeginInvoke("CheckInstallVehicleForGPS", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehicleCheckResultExti7Zg_POJ5 EndCheckInstallVehicleForGPS(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehicleCheckResultExti7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehicleCheckResultExti7Zg_POJ5)(base.EndInvoke("CheckInstallVehicleForGPS", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateVehicleStatusByVehicleId(string vehicleId, int status, string note, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = vehicleId;
                _args[1] = status;
                _args[2] = note;
                System.IAsyncResult _result = base.BeginInvoke("UpdateVehicleStatusByVehicleId", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean EndUpdateVehicleStatusByVehicleId(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean)(base.EndInvoke("UpdateVehicleStatusByVehicleId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckVehicleExistByVehicleId(string vehicleId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = vehicleId;
                System.IAsyncResult _result = base.BeginInvoke("CheckVehicleExistByVehicleId", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean EndCheckVehicleExistByVehicleId(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean)(base.EndInvoke("CheckVehicleExistByVehicleId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginBatchAdd(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.VehicleService.Vehicle> vehicleList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = vehicleList;
                System.IAsyncResult _result = base.BeginInvoke("BatchAdd", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean EndBatchAdd(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean)(base.EndInvoke("BatchAdd", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetInstalSecuritVehiclesByAuthority(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetInstalSecuritVehiclesByAuthority", _args, callback, asyncState);
                return _result;
            }
            
            public byte[] EndGetInstalSecuritVehiclesByAuthority(System.IAsyncResult result) {
                object[] _args = new object[0];
                byte[] _result = ((byte[])(base.EndInvoke("GetInstalSecuritVehiclesByAuthority", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckVehicleExistByVehicleSn(string vehicleSn, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = vehicleSn;
                System.IAsyncResult _result = base.BeginInvoke("CheckVehicleExistByVehicleSn", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean EndCheckVehicleExistByVehicleSn(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean)(base.EndInvoke("CheckVehicleExistByVehicleSn", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckVehicleExist(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.VehicleService.Vehicle> vehicleList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = vehicleList;
                System.IAsyncResult _result = base.BeginInvoke("CheckVehicleExist", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehiclei7Zg_POJ5 EndCheckVehicleExist(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehiclei7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehiclei7Zg_POJ5)(base.EndInvoke("CheckVehicleExist", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetBscVehicle(string VehicleId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = VehicleId;
                System.IAsyncResult _result = base.BeginInvoke("GetBscVehicle", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehiclei7Zg_POJ5 EndGetBscVehicle(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehiclei7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehiclei7Zg_POJ5)(base.EndInvoke("GetBscVehicle", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetChauffeurVehiclePageList(Gsafety.PTMS.ServiceReference.VehicleService.PagingInfo page, string clientID, string vehicleNum, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = page;
                _args[1] = clientID;
                _args[2] = vehicleNum;
                System.IAsyncResult _result = base.BeginInvoke("GetChauffeurVehiclePageList", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVVehicleh_PhsrrDr EndGetChauffeurVehiclePageList(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVVehicleh_PhsrrDr _result = ((Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVVehicleh_PhsrrDr)(base.EndInvoke("GetChauffeurVehiclePageList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetChauffeurVehicle(string clientID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = clientID;
                System.IAsyncResult _result = base.BeginInvoke("GetChauffeurVehicle", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehiclei7Zg_POJ5 EndGetChauffeurVehicle(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehiclei7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehiclei7Zg_POJ5)(base.EndInvoke("GetChauffeurVehicle", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetInstallVehiclesByAuthority(System.Collections.ObjectModel.ObservableCollection<string> organizations, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = organizations;
                System.IAsyncResult _result = base.BeginInvoke("GetInstallVehiclesByAuthority", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehiclei7Zg_POJ5 EndGetInstallVehiclesByAuthority(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehiclei7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehiclei7Zg_POJ5)(base.EndInvoke("GetInstallVehiclesByAuthority", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetInstallVehicle(string organization, string vehicleid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = organization;
                _args[1] = vehicleid;
                System.IAsyncResult _result = base.BeginInvoke("GetInstallVehicle", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehiclei7Zg_POJ5 EndGetInstallVehicle(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehiclei7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfVehiclei7Zg_POJ5)(base.EndInvoke("GetInstallVehicle", _args, result)));
                return _result;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="VehicleService.IVehicleType")]
    public interface IVehicleType {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVehicleType/InsertVehicleTypeColor", ReplyAction="http://tempuri.org/IVehicleType/InsertVehicleTypeColorResponse")]
        System.IAsyncResult BeginInsertVehicleTypeColor(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.VehicleService.VehicleTypeColor> color, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean EndInsertVehicleTypeColor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVehicleType/UpdateVehicleTypeColor", ReplyAction="http://tempuri.org/IVehicleType/UpdateVehicleTypeColorResponse")]
        System.IAsyncResult BeginUpdateVehicleTypeColor(Gsafety.PTMS.ServiceReference.VehicleService.VehicleTypeColor model, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean EndUpdateVehicleTypeColor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVehicleType/DeleteVehicleTypeColor", ReplyAction="http://tempuri.org/IVehicleType/DeleteVehicleTypeColorResponse")]
        System.IAsyncResult BeginDeleteVehicleTypeColor(string id, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean EndDeleteVehicleTypeColor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVehicleType/GetVehicleTypeColorList", ReplyAction="http://tempuri.org/IVehicleType/GetVehicleTypeColorListResponse")]
        System.IAsyncResult BeginGetVehicleTypeColorList(string typeid, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehicleTypeColori7Zg_POJ5 EndGetVehicleTypeColorList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVehicleType/GetAllVehicleTypeColorList", ReplyAction="http://tempuri.org/IVehicleType/GetAllVehicleTypeColorListResponse")]
        System.IAsyncResult BeginGetAllVehicleTypeColorList(string clientID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehicleTypeColori7Zg_POJ5 EndGetAllVehicleTypeColorList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVehicleType/InsertVehicleType", ReplyAction="http://tempuri.org/IVehicleType/InsertVehicleTypeResponse")]
        System.IAsyncResult BeginInsertVehicleType(Gsafety.PTMS.ServiceReference.VehicleService.VehicleType model, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean EndInsertVehicleType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVehicleType/UpdateVehicleType", ReplyAction="http://tempuri.org/IVehicleType/UpdateVehicleTypeResponse")]
        System.IAsyncResult BeginUpdateVehicleType(Gsafety.PTMS.ServiceReference.VehicleService.VehicleType model, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean EndUpdateVehicleType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVehicleType/DeleteVehicleTypeByID", ReplyAction="http://tempuri.org/IVehicleType/DeleteVehicleTypeByIDResponse")]
        System.IAsyncResult BeginDeleteVehicleTypeByID(string ID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean EndDeleteVehicleTypeByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVehicleType/GetByNameVehicleTypeList", ReplyAction="http://tempuri.org/IVehicleType/GetByNameVehicleTypeListResponse")]
        System.IAsyncResult BeginGetByNameVehicleTypeList(int pageIndex, int pageSize, string clientID, string name, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehicleTypei7Zg_POJ5 EndGetByNameVehicleTypeList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVehicleType/GetBscVehicleList", ReplyAction="http://tempuri.org/IVehicleType/GetBscVehicleListResponse")]
        System.IAsyncResult BeginGetBscVehicleList(int pageIndex, int pageSize, string SearchVehicleId, string SearchOwner, string SearchVehicleType, string orgId, string vehicletypeid, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehiclei7Zg_POJ5 EndGetBscVehicleList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVehicleType/GetVehicleTypeList", ReplyAction="http://tempuri.org/IVehicleType/GetVehicleTypeListResponse")]
        System.IAsyncResult BeginGetVehicleTypeList(string clientID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehicleTypei7Zg_POJ5 EndGetVehicleTypeList(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVehicleTypeChannel : Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertVehicleTypeColorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertVehicleTypeColorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateVehicleTypeColorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateVehicleTypeColorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteVehicleTypeColorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteVehicleTypeColorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVehicleTypeColorListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVehicleTypeColorListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehicleTypeColori7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehicleTypeColori7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllVehicleTypeColorListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllVehicleTypeColorListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehicleTypeColori7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehicleTypeColori7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertVehicleTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertVehicleTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateVehicleTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateVehicleTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteVehicleTypeByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteVehicleTypeByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetByNameVehicleTypeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetByNameVehicleTypeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehicleTypei7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehicleTypei7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBscVehicleListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBscVehicleListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehiclei7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehiclei7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVehicleTypeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVehicleTypeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehicleTypei7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehicleTypei7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VehicleTypeClient : System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType>, Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType {
        
        private BeginOperationDelegate onBeginInsertVehicleTypeColorDelegate;
        
        private EndOperationDelegate onEndInsertVehicleTypeColorDelegate;
        
        private System.Threading.SendOrPostCallback onInsertVehicleTypeColorCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateVehicleTypeColorDelegate;
        
        private EndOperationDelegate onEndUpdateVehicleTypeColorDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateVehicleTypeColorCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteVehicleTypeColorDelegate;
        
        private EndOperationDelegate onEndDeleteVehicleTypeColorDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteVehicleTypeColorCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVehicleTypeColorListDelegate;
        
        private EndOperationDelegate onEndGetVehicleTypeColorListDelegate;
        
        private System.Threading.SendOrPostCallback onGetVehicleTypeColorListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllVehicleTypeColorListDelegate;
        
        private EndOperationDelegate onEndGetAllVehicleTypeColorListDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllVehicleTypeColorListCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertVehicleTypeDelegate;
        
        private EndOperationDelegate onEndInsertVehicleTypeDelegate;
        
        private System.Threading.SendOrPostCallback onInsertVehicleTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateVehicleTypeDelegate;
        
        private EndOperationDelegate onEndUpdateVehicleTypeDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateVehicleTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteVehicleTypeByIDDelegate;
        
        private EndOperationDelegate onEndDeleteVehicleTypeByIDDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteVehicleTypeByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetByNameVehicleTypeListDelegate;
        
        private EndOperationDelegate onEndGetByNameVehicleTypeListDelegate;
        
        private System.Threading.SendOrPostCallback onGetByNameVehicleTypeListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBscVehicleListDelegate;
        
        private EndOperationDelegate onEndGetBscVehicleListDelegate;
        
        private System.Threading.SendOrPostCallback onGetBscVehicleListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVehicleTypeListDelegate;
        
        private EndOperationDelegate onEndGetVehicleTypeListDelegate;
        
        private System.Threading.SendOrPostCallback onGetVehicleTypeListCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public VehicleTypeClient() {
        }
        
        public VehicleTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VehicleTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VehicleTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VehicleTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<InsertVehicleTypeColorCompletedEventArgs> InsertVehicleTypeColorCompleted;
        
        public event System.EventHandler<UpdateVehicleTypeColorCompletedEventArgs> UpdateVehicleTypeColorCompleted;
        
        public event System.EventHandler<DeleteVehicleTypeColorCompletedEventArgs> DeleteVehicleTypeColorCompleted;
        
        public event System.EventHandler<GetVehicleTypeColorListCompletedEventArgs> GetVehicleTypeColorListCompleted;
        
        public event System.EventHandler<GetAllVehicleTypeColorListCompletedEventArgs> GetAllVehicleTypeColorListCompleted;
        
        public event System.EventHandler<InsertVehicleTypeCompletedEventArgs> InsertVehicleTypeCompleted;
        
        public event System.EventHandler<UpdateVehicleTypeCompletedEventArgs> UpdateVehicleTypeCompleted;
        
        public event System.EventHandler<DeleteVehicleTypeByIDCompletedEventArgs> DeleteVehicleTypeByIDCompleted;
        
        public event System.EventHandler<GetByNameVehicleTypeListCompletedEventArgs> GetByNameVehicleTypeListCompleted;
        
        public event System.EventHandler<GetBscVehicleListCompletedEventArgs> GetBscVehicleListCompleted;
        
        public event System.EventHandler<GetVehicleTypeListCompletedEventArgs> GetVehicleTypeListCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType.BeginInsertVehicleTypeColor(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.VehicleService.VehicleTypeColor> color, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertVehicleTypeColor(color, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType.EndInsertVehicleTypeColor(System.IAsyncResult result) {
            return base.Channel.EndInsertVehicleTypeColor(result);
        }
        
        private System.IAsyncResult OnBeginInsertVehicleTypeColor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.VehicleService.VehicleTypeColor> color = ((System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.VehicleService.VehicleTypeColor>)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType)(this)).BeginInsertVehicleTypeColor(color, callback, asyncState);
        }
        
        private object[] OnEndInsertVehicleTypeColor(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType)(this)).EndInsertVehicleTypeColor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertVehicleTypeColorCompleted(object state) {
            if ((this.InsertVehicleTypeColorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertVehicleTypeColorCompleted(this, new InsertVehicleTypeColorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertVehicleTypeColorAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.VehicleService.VehicleTypeColor> color) {
            this.InsertVehicleTypeColorAsync(color, null);
        }
        
        public void InsertVehicleTypeColorAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.VehicleService.VehicleTypeColor> color, object userState) {
            if ((this.onBeginInsertVehicleTypeColorDelegate == null)) {
                this.onBeginInsertVehicleTypeColorDelegate = new BeginOperationDelegate(this.OnBeginInsertVehicleTypeColor);
            }
            if ((this.onEndInsertVehicleTypeColorDelegate == null)) {
                this.onEndInsertVehicleTypeColorDelegate = new EndOperationDelegate(this.OnEndInsertVehicleTypeColor);
            }
            if ((this.onInsertVehicleTypeColorCompletedDelegate == null)) {
                this.onInsertVehicleTypeColorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertVehicleTypeColorCompleted);
            }
            base.InvokeAsync(this.onBeginInsertVehicleTypeColorDelegate, new object[] {
                        color}, this.onEndInsertVehicleTypeColorDelegate, this.onInsertVehicleTypeColorCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType.BeginUpdateVehicleTypeColor(Gsafety.PTMS.ServiceReference.VehicleService.VehicleTypeColor model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateVehicleTypeColor(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType.EndUpdateVehicleTypeColor(System.IAsyncResult result) {
            return base.Channel.EndUpdateVehicleTypeColor(result);
        }
        
        private System.IAsyncResult OnBeginUpdateVehicleTypeColor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.VehicleService.VehicleTypeColor model = ((Gsafety.PTMS.ServiceReference.VehicleService.VehicleTypeColor)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType)(this)).BeginUpdateVehicleTypeColor(model, callback, asyncState);
        }
        
        private object[] OnEndUpdateVehicleTypeColor(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType)(this)).EndUpdateVehicleTypeColor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateVehicleTypeColorCompleted(object state) {
            if ((this.UpdateVehicleTypeColorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateVehicleTypeColorCompleted(this, new UpdateVehicleTypeColorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateVehicleTypeColorAsync(Gsafety.PTMS.ServiceReference.VehicleService.VehicleTypeColor model) {
            this.UpdateVehicleTypeColorAsync(model, null);
        }
        
        public void UpdateVehicleTypeColorAsync(Gsafety.PTMS.ServiceReference.VehicleService.VehicleTypeColor model, object userState) {
            if ((this.onBeginUpdateVehicleTypeColorDelegate == null)) {
                this.onBeginUpdateVehicleTypeColorDelegate = new BeginOperationDelegate(this.OnBeginUpdateVehicleTypeColor);
            }
            if ((this.onEndUpdateVehicleTypeColorDelegate == null)) {
                this.onEndUpdateVehicleTypeColorDelegate = new EndOperationDelegate(this.OnEndUpdateVehicleTypeColor);
            }
            if ((this.onUpdateVehicleTypeColorCompletedDelegate == null)) {
                this.onUpdateVehicleTypeColorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateVehicleTypeColorCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateVehicleTypeColorDelegate, new object[] {
                        model}, this.onEndUpdateVehicleTypeColorDelegate, this.onUpdateVehicleTypeColorCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType.BeginDeleteVehicleTypeColor(string id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteVehicleTypeColor(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType.EndDeleteVehicleTypeColor(System.IAsyncResult result) {
            return base.Channel.EndDeleteVehicleTypeColor(result);
        }
        
        private System.IAsyncResult OnBeginDeleteVehicleTypeColor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType)(this)).BeginDeleteVehicleTypeColor(id, callback, asyncState);
        }
        
        private object[] OnEndDeleteVehicleTypeColor(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType)(this)).EndDeleteVehicleTypeColor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteVehicleTypeColorCompleted(object state) {
            if ((this.DeleteVehicleTypeColorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteVehicleTypeColorCompleted(this, new DeleteVehicleTypeColorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteVehicleTypeColorAsync(string id) {
            this.DeleteVehicleTypeColorAsync(id, null);
        }
        
        public void DeleteVehicleTypeColorAsync(string id, object userState) {
            if ((this.onBeginDeleteVehicleTypeColorDelegate == null)) {
                this.onBeginDeleteVehicleTypeColorDelegate = new BeginOperationDelegate(this.OnBeginDeleteVehicleTypeColor);
            }
            if ((this.onEndDeleteVehicleTypeColorDelegate == null)) {
                this.onEndDeleteVehicleTypeColorDelegate = new EndOperationDelegate(this.OnEndDeleteVehicleTypeColor);
            }
            if ((this.onDeleteVehicleTypeColorCompletedDelegate == null)) {
                this.onDeleteVehicleTypeColorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteVehicleTypeColorCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteVehicleTypeColorDelegate, new object[] {
                        id}, this.onEndDeleteVehicleTypeColorDelegate, this.onDeleteVehicleTypeColorCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType.BeginGetVehicleTypeColorList(string typeid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVehicleTypeColorList(typeid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehicleTypeColori7Zg_POJ5 Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType.EndGetVehicleTypeColorList(System.IAsyncResult result) {
            return base.Channel.EndGetVehicleTypeColorList(result);
        }
        
        private System.IAsyncResult OnBeginGetVehicleTypeColorList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string typeid = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType)(this)).BeginGetVehicleTypeColorList(typeid, callback, asyncState);
        }
        
        private object[] OnEndGetVehicleTypeColorList(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehicleTypeColori7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType)(this)).EndGetVehicleTypeColorList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVehicleTypeColorListCompleted(object state) {
            if ((this.GetVehicleTypeColorListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVehicleTypeColorListCompleted(this, new GetVehicleTypeColorListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVehicleTypeColorListAsync(string typeid) {
            this.GetVehicleTypeColorListAsync(typeid, null);
        }
        
        public void GetVehicleTypeColorListAsync(string typeid, object userState) {
            if ((this.onBeginGetVehicleTypeColorListDelegate == null)) {
                this.onBeginGetVehicleTypeColorListDelegate = new BeginOperationDelegate(this.OnBeginGetVehicleTypeColorList);
            }
            if ((this.onEndGetVehicleTypeColorListDelegate == null)) {
                this.onEndGetVehicleTypeColorListDelegate = new EndOperationDelegate(this.OnEndGetVehicleTypeColorList);
            }
            if ((this.onGetVehicleTypeColorListCompletedDelegate == null)) {
                this.onGetVehicleTypeColorListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVehicleTypeColorListCompleted);
            }
            base.InvokeAsync(this.onBeginGetVehicleTypeColorListDelegate, new object[] {
                        typeid}, this.onEndGetVehicleTypeColorListDelegate, this.onGetVehicleTypeColorListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType.BeginGetAllVehicleTypeColorList(string clientID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllVehicleTypeColorList(clientID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehicleTypeColori7Zg_POJ5 Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType.EndGetAllVehicleTypeColorList(System.IAsyncResult result) {
            return base.Channel.EndGetAllVehicleTypeColorList(result);
        }
        
        private System.IAsyncResult OnBeginGetAllVehicleTypeColorList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType)(this)).BeginGetAllVehicleTypeColorList(clientID, callback, asyncState);
        }
        
        private object[] OnEndGetAllVehicleTypeColorList(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehicleTypeColori7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType)(this)).EndGetAllVehicleTypeColorList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllVehicleTypeColorListCompleted(object state) {
            if ((this.GetAllVehicleTypeColorListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllVehicleTypeColorListCompleted(this, new GetAllVehicleTypeColorListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllVehicleTypeColorListAsync(string clientID) {
            this.GetAllVehicleTypeColorListAsync(clientID, null);
        }
        
        public void GetAllVehicleTypeColorListAsync(string clientID, object userState) {
            if ((this.onBeginGetAllVehicleTypeColorListDelegate == null)) {
                this.onBeginGetAllVehicleTypeColorListDelegate = new BeginOperationDelegate(this.OnBeginGetAllVehicleTypeColorList);
            }
            if ((this.onEndGetAllVehicleTypeColorListDelegate == null)) {
                this.onEndGetAllVehicleTypeColorListDelegate = new EndOperationDelegate(this.OnEndGetAllVehicleTypeColorList);
            }
            if ((this.onGetAllVehicleTypeColorListCompletedDelegate == null)) {
                this.onGetAllVehicleTypeColorListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllVehicleTypeColorListCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllVehicleTypeColorListDelegate, new object[] {
                        clientID}, this.onEndGetAllVehicleTypeColorListDelegate, this.onGetAllVehicleTypeColorListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType.BeginInsertVehicleType(Gsafety.PTMS.ServiceReference.VehicleService.VehicleType model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertVehicleType(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType.EndInsertVehicleType(System.IAsyncResult result) {
            return base.Channel.EndInsertVehicleType(result);
        }
        
        private System.IAsyncResult OnBeginInsertVehicleType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.VehicleService.VehicleType model = ((Gsafety.PTMS.ServiceReference.VehicleService.VehicleType)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType)(this)).BeginInsertVehicleType(model, callback, asyncState);
        }
        
        private object[] OnEndInsertVehicleType(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType)(this)).EndInsertVehicleType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertVehicleTypeCompleted(object state) {
            if ((this.InsertVehicleTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertVehicleTypeCompleted(this, new InsertVehicleTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertVehicleTypeAsync(Gsafety.PTMS.ServiceReference.VehicleService.VehicleType model) {
            this.InsertVehicleTypeAsync(model, null);
        }
        
        public void InsertVehicleTypeAsync(Gsafety.PTMS.ServiceReference.VehicleService.VehicleType model, object userState) {
            if ((this.onBeginInsertVehicleTypeDelegate == null)) {
                this.onBeginInsertVehicleTypeDelegate = new BeginOperationDelegate(this.OnBeginInsertVehicleType);
            }
            if ((this.onEndInsertVehicleTypeDelegate == null)) {
                this.onEndInsertVehicleTypeDelegate = new EndOperationDelegate(this.OnEndInsertVehicleType);
            }
            if ((this.onInsertVehicleTypeCompletedDelegate == null)) {
                this.onInsertVehicleTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertVehicleTypeCompleted);
            }
            base.InvokeAsync(this.onBeginInsertVehicleTypeDelegate, new object[] {
                        model}, this.onEndInsertVehicleTypeDelegate, this.onInsertVehicleTypeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType.BeginUpdateVehicleType(Gsafety.PTMS.ServiceReference.VehicleService.VehicleType model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateVehicleType(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType.EndUpdateVehicleType(System.IAsyncResult result) {
            return base.Channel.EndUpdateVehicleType(result);
        }
        
        private System.IAsyncResult OnBeginUpdateVehicleType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.VehicleService.VehicleType model = ((Gsafety.PTMS.ServiceReference.VehicleService.VehicleType)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType)(this)).BeginUpdateVehicleType(model, callback, asyncState);
        }
        
        private object[] OnEndUpdateVehicleType(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType)(this)).EndUpdateVehicleType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateVehicleTypeCompleted(object state) {
            if ((this.UpdateVehicleTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateVehicleTypeCompleted(this, new UpdateVehicleTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateVehicleTypeAsync(Gsafety.PTMS.ServiceReference.VehicleService.VehicleType model) {
            this.UpdateVehicleTypeAsync(model, null);
        }
        
        public void UpdateVehicleTypeAsync(Gsafety.PTMS.ServiceReference.VehicleService.VehicleType model, object userState) {
            if ((this.onBeginUpdateVehicleTypeDelegate == null)) {
                this.onBeginUpdateVehicleTypeDelegate = new BeginOperationDelegate(this.OnBeginUpdateVehicleType);
            }
            if ((this.onEndUpdateVehicleTypeDelegate == null)) {
                this.onEndUpdateVehicleTypeDelegate = new EndOperationDelegate(this.OnEndUpdateVehicleType);
            }
            if ((this.onUpdateVehicleTypeCompletedDelegate == null)) {
                this.onUpdateVehicleTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateVehicleTypeCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateVehicleTypeDelegate, new object[] {
                        model}, this.onEndUpdateVehicleTypeDelegate, this.onUpdateVehicleTypeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType.BeginDeleteVehicleTypeByID(string ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteVehicleTypeByID(ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType.EndDeleteVehicleTypeByID(System.IAsyncResult result) {
            return base.Channel.EndDeleteVehicleTypeByID(result);
        }
        
        private System.IAsyncResult OnBeginDeleteVehicleTypeByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ID = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType)(this)).BeginDeleteVehicleTypeByID(ID, callback, asyncState);
        }
        
        private object[] OnEndDeleteVehicleTypeByID(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType)(this)).EndDeleteVehicleTypeByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteVehicleTypeByIDCompleted(object state) {
            if ((this.DeleteVehicleTypeByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteVehicleTypeByIDCompleted(this, new DeleteVehicleTypeByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteVehicleTypeByIDAsync(string ID) {
            this.DeleteVehicleTypeByIDAsync(ID, null);
        }
        
        public void DeleteVehicleTypeByIDAsync(string ID, object userState) {
            if ((this.onBeginDeleteVehicleTypeByIDDelegate == null)) {
                this.onBeginDeleteVehicleTypeByIDDelegate = new BeginOperationDelegate(this.OnBeginDeleteVehicleTypeByID);
            }
            if ((this.onEndDeleteVehicleTypeByIDDelegate == null)) {
                this.onEndDeleteVehicleTypeByIDDelegate = new EndOperationDelegate(this.OnEndDeleteVehicleTypeByID);
            }
            if ((this.onDeleteVehicleTypeByIDCompletedDelegate == null)) {
                this.onDeleteVehicleTypeByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteVehicleTypeByIDCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteVehicleTypeByIDDelegate, new object[] {
                        ID}, this.onEndDeleteVehicleTypeByIDDelegate, this.onDeleteVehicleTypeByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType.BeginGetByNameVehicleTypeList(int pageIndex, int pageSize, string clientID, string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetByNameVehicleTypeList(pageIndex, pageSize, clientID, name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehicleTypei7Zg_POJ5 Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType.EndGetByNameVehicleTypeList(System.IAsyncResult result) {
            return base.Channel.EndGetByNameVehicleTypeList(result);
        }
        
        private System.IAsyncResult OnBeginGetByNameVehicleTypeList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pageIndex = ((int)(inValues[0]));
            int pageSize = ((int)(inValues[1]));
            string clientID = ((string)(inValues[2]));
            string name = ((string)(inValues[3]));
            return ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType)(this)).BeginGetByNameVehicleTypeList(pageIndex, pageSize, clientID, name, callback, asyncState);
        }
        
        private object[] OnEndGetByNameVehicleTypeList(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehicleTypei7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType)(this)).EndGetByNameVehicleTypeList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetByNameVehicleTypeListCompleted(object state) {
            if ((this.GetByNameVehicleTypeListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetByNameVehicleTypeListCompleted(this, new GetByNameVehicleTypeListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetByNameVehicleTypeListAsync(int pageIndex, int pageSize, string clientID, string name) {
            this.GetByNameVehicleTypeListAsync(pageIndex, pageSize, clientID, name, null);
        }
        
        public void GetByNameVehicleTypeListAsync(int pageIndex, int pageSize, string clientID, string name, object userState) {
            if ((this.onBeginGetByNameVehicleTypeListDelegate == null)) {
                this.onBeginGetByNameVehicleTypeListDelegate = new BeginOperationDelegate(this.OnBeginGetByNameVehicleTypeList);
            }
            if ((this.onEndGetByNameVehicleTypeListDelegate == null)) {
                this.onEndGetByNameVehicleTypeListDelegate = new EndOperationDelegate(this.OnEndGetByNameVehicleTypeList);
            }
            if ((this.onGetByNameVehicleTypeListCompletedDelegate == null)) {
                this.onGetByNameVehicleTypeListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetByNameVehicleTypeListCompleted);
            }
            base.InvokeAsync(this.onBeginGetByNameVehicleTypeListDelegate, new object[] {
                        pageIndex,
                        pageSize,
                        clientID,
                        name}, this.onEndGetByNameVehicleTypeListDelegate, this.onGetByNameVehicleTypeListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType.BeginGetBscVehicleList(int pageIndex, int pageSize, string SearchVehicleId, string SearchOwner, string SearchVehicleType, string orgId, string vehicletypeid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBscVehicleList(pageIndex, pageSize, SearchVehicleId, SearchOwner, SearchVehicleType, orgId, vehicletypeid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehiclei7Zg_POJ5 Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType.EndGetBscVehicleList(System.IAsyncResult result) {
            return base.Channel.EndGetBscVehicleList(result);
        }
        
        private System.IAsyncResult OnBeginGetBscVehicleList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pageIndex = ((int)(inValues[0]));
            int pageSize = ((int)(inValues[1]));
            string SearchVehicleId = ((string)(inValues[2]));
            string SearchOwner = ((string)(inValues[3]));
            string SearchVehicleType = ((string)(inValues[4]));
            string orgId = ((string)(inValues[5]));
            string vehicletypeid = ((string)(inValues[6]));
            return ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType)(this)).BeginGetBscVehicleList(pageIndex, pageSize, SearchVehicleId, SearchOwner, SearchVehicleType, orgId, vehicletypeid, callback, asyncState);
        }
        
        private object[] OnEndGetBscVehicleList(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehiclei7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType)(this)).EndGetBscVehicleList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBscVehicleListCompleted(object state) {
            if ((this.GetBscVehicleListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBscVehicleListCompleted(this, new GetBscVehicleListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBscVehicleListAsync(int pageIndex, int pageSize, string SearchVehicleId, string SearchOwner, string SearchVehicleType, string orgId, string vehicletypeid) {
            this.GetBscVehicleListAsync(pageIndex, pageSize, SearchVehicleId, SearchOwner, SearchVehicleType, orgId, vehicletypeid, null);
        }
        
        public void GetBscVehicleListAsync(int pageIndex, int pageSize, string SearchVehicleId, string SearchOwner, string SearchVehicleType, string orgId, string vehicletypeid, object userState) {
            if ((this.onBeginGetBscVehicleListDelegate == null)) {
                this.onBeginGetBscVehicleListDelegate = new BeginOperationDelegate(this.OnBeginGetBscVehicleList);
            }
            if ((this.onEndGetBscVehicleListDelegate == null)) {
                this.onEndGetBscVehicleListDelegate = new EndOperationDelegate(this.OnEndGetBscVehicleList);
            }
            if ((this.onGetBscVehicleListCompletedDelegate == null)) {
                this.onGetBscVehicleListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBscVehicleListCompleted);
            }
            base.InvokeAsync(this.onBeginGetBscVehicleListDelegate, new object[] {
                        pageIndex,
                        pageSize,
                        SearchVehicleId,
                        SearchOwner,
                        SearchVehicleType,
                        orgId,
                        vehicletypeid}, this.onEndGetBscVehicleListDelegate, this.onGetBscVehicleListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType.BeginGetVehicleTypeList(string clientID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVehicleTypeList(clientID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehicleTypei7Zg_POJ5 Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType.EndGetVehicleTypeList(System.IAsyncResult result) {
            return base.Channel.EndGetVehicleTypeList(result);
        }
        
        private System.IAsyncResult OnBeginGetVehicleTypeList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType)(this)).BeginGetVehicleTypeList(clientID, callback, asyncState);
        }
        
        private object[] OnEndGetVehicleTypeList(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehicleTypei7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType)(this)).EndGetVehicleTypeList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVehicleTypeListCompleted(object state) {
            if ((this.GetVehicleTypeListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVehicleTypeListCompleted(this, new GetVehicleTypeListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVehicleTypeListAsync(string clientID) {
            this.GetVehicleTypeListAsync(clientID, null);
        }
        
        public void GetVehicleTypeListAsync(string clientID, object userState) {
            if ((this.onBeginGetVehicleTypeListDelegate == null)) {
                this.onBeginGetVehicleTypeListDelegate = new BeginOperationDelegate(this.OnBeginGetVehicleTypeList);
            }
            if ((this.onEndGetVehicleTypeListDelegate == null)) {
                this.onEndGetVehicleTypeListDelegate = new EndOperationDelegate(this.OnEndGetVehicleTypeList);
            }
            if ((this.onGetVehicleTypeListCompletedDelegate == null)) {
                this.onGetVehicleTypeListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVehicleTypeListCompleted);
            }
            base.InvokeAsync(this.onBeginGetVehicleTypeListDelegate, new object[] {
                        clientID}, this.onEndGetVehicleTypeListDelegate, this.onGetVehicleTypeListCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType CreateChannel() {
            return new VehicleTypeClientChannel(this);
        }
        
        private class VehicleTypeClientChannel : ChannelBase<Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType>, Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType {
            
            public VehicleTypeClientChannel(System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.VehicleService.IVehicleType> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginInsertVehicleTypeColor(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.VehicleService.VehicleTypeColor> color, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = color;
                System.IAsyncResult _result = base.BeginInvoke("InsertVehicleTypeColor", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean EndInsertVehicleTypeColor(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean)(base.EndInvoke("InsertVehicleTypeColor", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateVehicleTypeColor(Gsafety.PTMS.ServiceReference.VehicleService.VehicleTypeColor model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("UpdateVehicleTypeColor", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean EndUpdateVehicleTypeColor(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean)(base.EndInvoke("UpdateVehicleTypeColor", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteVehicleTypeColor(string id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("DeleteVehicleTypeColor", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean EndDeleteVehicleTypeColor(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean)(base.EndInvoke("DeleteVehicleTypeColor", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetVehicleTypeColorList(string typeid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = typeid;
                System.IAsyncResult _result = base.BeginInvoke("GetVehicleTypeColorList", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehicleTypeColori7Zg_POJ5 EndGetVehicleTypeColorList(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehicleTypeColori7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehicleTypeColori7Zg_POJ5)(base.EndInvoke("GetVehicleTypeColorList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllVehicleTypeColorList(string clientID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = clientID;
                System.IAsyncResult _result = base.BeginInvoke("GetAllVehicleTypeColorList", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehicleTypeColori7Zg_POJ5 EndGetAllVehicleTypeColorList(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehicleTypeColori7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehicleTypeColori7Zg_POJ5)(base.EndInvoke("GetAllVehicleTypeColorList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertVehicleType(Gsafety.PTMS.ServiceReference.VehicleService.VehicleType model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("InsertVehicleType", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean EndInsertVehicleType(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean)(base.EndInvoke("InsertVehicleType", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateVehicleType(Gsafety.PTMS.ServiceReference.VehicleService.VehicleType model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("UpdateVehicleType", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean EndUpdateVehicleType(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean)(base.EndInvoke("UpdateVehicleType", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteVehicleTypeByID(string ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ID;
                System.IAsyncResult _result = base.BeginInvoke("DeleteVehicleTypeByID", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean EndDeleteVehicleTypeByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.VehicleService.SingleMessageOfboolean)(base.EndInvoke("DeleteVehicleTypeByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetByNameVehicleTypeList(int pageIndex, int pageSize, string clientID, string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = pageIndex;
                _args[1] = pageSize;
                _args[2] = clientID;
                _args[3] = name;
                System.IAsyncResult _result = base.BeginInvoke("GetByNameVehicleTypeList", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehicleTypei7Zg_POJ5 EndGetByNameVehicleTypeList(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehicleTypei7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehicleTypei7Zg_POJ5)(base.EndInvoke("GetByNameVehicleTypeList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetBscVehicleList(int pageIndex, int pageSize, string SearchVehicleId, string SearchOwner, string SearchVehicleType, string orgId, string vehicletypeid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = pageIndex;
                _args[1] = pageSize;
                _args[2] = SearchVehicleId;
                _args[3] = SearchOwner;
                _args[4] = SearchVehicleType;
                _args[5] = orgId;
                _args[6] = vehicletypeid;
                System.IAsyncResult _result = base.BeginInvoke("GetBscVehicleList", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehiclei7Zg_POJ5 EndGetBscVehicleList(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehiclei7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehiclei7Zg_POJ5)(base.EndInvoke("GetBscVehicleList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetVehicleTypeList(string clientID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = clientID;
                System.IAsyncResult _result = base.BeginInvoke("GetVehicleTypeList", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehicleTypei7Zg_POJ5 EndGetVehicleTypeList(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehicleTypei7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.VehicleService.MultiMessageOfVehicleTypei7Zg_POJ5)(base.EndInvoke("GetVehicleTypeList", _args, result)));
                return _result;
            }
        }
    }
}
