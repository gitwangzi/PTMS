//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18063
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace Gsafety.PTMS.ServiceReference.InstallStationService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstallStation", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.BaseInformation.Contract.Dat" +
        "a")]
    public partial class InstallStation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AddressField;
        
        private string CityNameField;
        
        private string ClientIDField;
        
        private string ContactField;
        
        private string ContactPhoneField;
        
        private System.DateTime CreateTimeField;
        
        private string DirectorField;
        
        private string DirectorPhoneField;
        
        private string DistrictCodeField;
        
        private string EmailField;
        
        private string IDField;
        
        private string NameField;
        
        private string NoteField;
        
        private string ProvinceNameField;
        
        private decimal ValidField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIDField, value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactPhone {
            get {
                return this.ContactPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactPhoneField, value) != true)) {
                    this.ContactPhoneField = value;
                    this.RaisePropertyChanged("ContactPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Director {
            get {
                return this.DirectorField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectorField, value) != true)) {
                    this.DirectorField = value;
                    this.RaisePropertyChanged("Director");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DirectorPhone {
            get {
                return this.DirectorPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectorPhoneField, value) != true)) {
                    this.DirectorPhoneField = value;
                    this.RaisePropertyChanged("DirectorPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistrictCode {
            get {
                return this.DistrictCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictCodeField, value) != true)) {
                    this.DistrictCodeField = value;
                    this.RaisePropertyChanged("DistrictCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProvinceName {
            get {
                return this.ProvinceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceNameField, value) != true)) {
                    this.ProvinceNameField = value;
                    this.RaisePropertyChanged("ProvinceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((this.ValidField.Equals(value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleMessageOfboolean", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class SingleMessageOfboolean : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private bool ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagingInfo", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class PagingInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfInstallStationh_PhsrrDr", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfInstallStationh_PhsrrDr : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.InstallStationService.InstallStation> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.InstallStationService.InstallStation> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfInstallStationUserh_PhsrrDr", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfInstallStationUserh_PhsrrDr : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.InstallStationService.InstallStationUser> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.InstallStationService.InstallStationUser> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstallStationUser", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.BaseInformation.Contract.Dat" +
        "a")]
    public partial class InstallStationUser : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime CreateTimeField;
        
        private string IDField;
        
        private string InstallStationIDField;
        
        private string UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InstallStationID {
            get {
                return this.InstallStationIDField;
            }
            set {
                if ((object.ReferenceEquals(this.InstallStationIDField, value) != true)) {
                    this.InstallStationIDField = value;
                    this.RaisePropertyChanged("InstallStationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="InstallStationService.IInstallStationService")]
    public interface IInstallStationService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IInstallStationService/BatchAddStation", ReplyAction="http://tempuri.org/IInstallStationService/BatchAddStationResponse")]
        System.IAsyncResult BeginBatchAddStation(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.InstallStationService.InstallStation> installBatchList, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean EndBatchAddStation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IInstallStationService/AddInstallStation", ReplyAction="http://tempuri.org/IInstallStationService/AddInstallStationResponse")]
        System.IAsyncResult BeginAddInstallStation(Gsafety.PTMS.ServiceReference.InstallStationService.InstallStation installStation, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean EndAddInstallStation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IInstallStationService/DeleteInstallStation", ReplyAction="http://tempuri.org/IInstallStationService/DeleteInstallStationResponse")]
        System.IAsyncResult BeginDeleteInstallStation(string id, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean EndDeleteInstallStation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IInstallStationService/UpdateInstallStation", ReplyAction="http://tempuri.org/IInstallStationService/UpdateInstallStationResponse")]
        System.IAsyncResult BeginUpdateInstallStation(Gsafety.PTMS.ServiceReference.InstallStationService.InstallStation installStation, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean EndUpdateInstallStation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IInstallStationService/GetInstallStationsByAlphabet", ReplyAction="http://tempuri.org/IInstallStationService/GetInstallStationsByAlphabetResponse")]
        System.IAsyncResult BeginGetInstallStationsByAlphabet(Gsafety.PTMS.ServiceReference.InstallStationService.PagingInfo page, string clientID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr EndGetInstallStationsByAlphabet(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IInstallStationService/GetInstallStationsFuzzy", ReplyAction="http://tempuri.org/IInstallStationService/GetInstallStationsFuzzyResponse")]
        System.IAsyncResult BeginGetInstallStationsFuzzy(string districtCode, string param, string name, Gsafety.PTMS.ServiceReference.InstallStationService.PagingInfo page, string clientID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr EndGetInstallStationsFuzzy(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IInstallStationService/GetInstallStations", ReplyAction="http://tempuri.org/IInstallStationService/GetInstallStationsResponse")]
        System.IAsyncResult BeginGetInstallStations(string clientID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr EndGetInstallStations(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IInstallStationService/CheckInstallStationExistByName", ReplyAction="http://tempuri.org/IInstallStationService/CheckInstallStationExistByNameResponse")]
        System.IAsyncResult BeginCheckInstallStationExistByName(string name, string clientID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean EndCheckInstallStationExistByName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IInstallStationService/CheckInstallDetailById", ReplyAction="http://tempuri.org/IInstallStationService/CheckInstallDetailByIdResponse")]
        System.IAsyncResult BeginCheckInstallDetailById(string Id, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean EndCheckInstallDetailById(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IInstallStationService/CheckInstallStationExist", ReplyAction="http://tempuri.org/IInstallStationService/CheckInstallStationExistResponse")]
        System.IAsyncResult BeginCheckInstallStationExist(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.InstallStationService.InstallStation> installStationList, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr EndCheckInstallStationExist(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IInstallStationService/GetInstallStationUser", ReplyAction="http://tempuri.org/IInstallStationService/GetInstallStationUserResponse")]
        System.IAsyncResult BeginGetInstallStationUser(string installStationID, string clientID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationUserh_PhsrrDr EndGetInstallStationUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IInstallStationService/SaveInstallStationUser", ReplyAction="http://tempuri.org/IInstallStationService/SaveInstallStationUserResponse")]
        System.IAsyncResult BeginSaveInstallStationUser(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.InstallStationService.InstallStationUser> installStationUser, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean EndSaveInstallStationUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IInstallStationService/GetInstallStationsByUser", ReplyAction="http://tempuri.org/IInstallStationService/GetInstallStationsByUserResponse")]
        System.IAsyncResult BeginGetInstallStationsByUser(string userID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr EndGetInstallStationsByUser(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInstallStationServiceChannel : Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BatchAddStationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BatchAddStationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddInstallStationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddInstallStationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteInstallStationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteInstallStationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateInstallStationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateInstallStationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetInstallStationsByAlphabetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInstallStationsByAlphabetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetInstallStationsFuzzyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInstallStationsFuzzyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetInstallStationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInstallStationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckInstallStationExistByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckInstallStationExistByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckInstallDetailByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckInstallDetailByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckInstallStationExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckInstallStationExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetInstallStationUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInstallStationUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationUserh_PhsrrDr Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationUserh_PhsrrDr)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveInstallStationUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveInstallStationUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetInstallStationsByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInstallStationsByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InstallStationServiceClient : System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService>, Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService {
        
        private BeginOperationDelegate onBeginBatchAddStationDelegate;
        
        private EndOperationDelegate onEndBatchAddStationDelegate;
        
        private System.Threading.SendOrPostCallback onBatchAddStationCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddInstallStationDelegate;
        
        private EndOperationDelegate onEndAddInstallStationDelegate;
        
        private System.Threading.SendOrPostCallback onAddInstallStationCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteInstallStationDelegate;
        
        private EndOperationDelegate onEndDeleteInstallStationDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteInstallStationCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateInstallStationDelegate;
        
        private EndOperationDelegate onEndUpdateInstallStationDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateInstallStationCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInstallStationsByAlphabetDelegate;
        
        private EndOperationDelegate onEndGetInstallStationsByAlphabetDelegate;
        
        private System.Threading.SendOrPostCallback onGetInstallStationsByAlphabetCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInstallStationsFuzzyDelegate;
        
        private EndOperationDelegate onEndGetInstallStationsFuzzyDelegate;
        
        private System.Threading.SendOrPostCallback onGetInstallStationsFuzzyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInstallStationsDelegate;
        
        private EndOperationDelegate onEndGetInstallStationsDelegate;
        
        private System.Threading.SendOrPostCallback onGetInstallStationsCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckInstallStationExistByNameDelegate;
        
        private EndOperationDelegate onEndCheckInstallStationExistByNameDelegate;
        
        private System.Threading.SendOrPostCallback onCheckInstallStationExistByNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckInstallDetailByIdDelegate;
        
        private EndOperationDelegate onEndCheckInstallDetailByIdDelegate;
        
        private System.Threading.SendOrPostCallback onCheckInstallDetailByIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckInstallStationExistDelegate;
        
        private EndOperationDelegate onEndCheckInstallStationExistDelegate;
        
        private System.Threading.SendOrPostCallback onCheckInstallStationExistCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInstallStationUserDelegate;
        
        private EndOperationDelegate onEndGetInstallStationUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetInstallStationUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveInstallStationUserDelegate;
        
        private EndOperationDelegate onEndSaveInstallStationUserDelegate;
        
        private System.Threading.SendOrPostCallback onSaveInstallStationUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInstallStationsByUserDelegate;
        
        private EndOperationDelegate onEndGetInstallStationsByUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetInstallStationsByUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public InstallStationServiceClient() {
        }
        
        public InstallStationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InstallStationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InstallStationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InstallStationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<BatchAddStationCompletedEventArgs> BatchAddStationCompleted;
        
        public event System.EventHandler<AddInstallStationCompletedEventArgs> AddInstallStationCompleted;
        
        public event System.EventHandler<DeleteInstallStationCompletedEventArgs> DeleteInstallStationCompleted;
        
        public event System.EventHandler<UpdateInstallStationCompletedEventArgs> UpdateInstallStationCompleted;
        
        public event System.EventHandler<GetInstallStationsByAlphabetCompletedEventArgs> GetInstallStationsByAlphabetCompleted;
        
        public event System.EventHandler<GetInstallStationsFuzzyCompletedEventArgs> GetInstallStationsFuzzyCompleted;
        
        public event System.EventHandler<GetInstallStationsCompletedEventArgs> GetInstallStationsCompleted;
        
        public event System.EventHandler<CheckInstallStationExistByNameCompletedEventArgs> CheckInstallStationExistByNameCompleted;
        
        public event System.EventHandler<CheckInstallDetailByIdCompletedEventArgs> CheckInstallDetailByIdCompleted;
        
        public event System.EventHandler<CheckInstallStationExistCompletedEventArgs> CheckInstallStationExistCompleted;
        
        public event System.EventHandler<GetInstallStationUserCompletedEventArgs> GetInstallStationUserCompleted;
        
        public event System.EventHandler<SaveInstallStationUserCompletedEventArgs> SaveInstallStationUserCompleted;
        
        public event System.EventHandler<GetInstallStationsByUserCompletedEventArgs> GetInstallStationsByUserCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService.BeginBatchAddStation(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.InstallStationService.InstallStation> installBatchList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBatchAddStation(installBatchList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService.EndBatchAddStation(System.IAsyncResult result) {
            return base.Channel.EndBatchAddStation(result);
        }
        
        private System.IAsyncResult OnBeginBatchAddStation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.InstallStationService.InstallStation> installBatchList = ((System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.InstallStationService.InstallStation>)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService)(this)).BeginBatchAddStation(installBatchList, callback, asyncState);
        }
        
        private object[] OnEndBatchAddStation(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService)(this)).EndBatchAddStation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBatchAddStationCompleted(object state) {
            if ((this.BatchAddStationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BatchAddStationCompleted(this, new BatchAddStationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BatchAddStationAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.InstallStationService.InstallStation> installBatchList) {
            this.BatchAddStationAsync(installBatchList, null);
        }
        
        public void BatchAddStationAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.InstallStationService.InstallStation> installBatchList, object userState) {
            if ((this.onBeginBatchAddStationDelegate == null)) {
                this.onBeginBatchAddStationDelegate = new BeginOperationDelegate(this.OnBeginBatchAddStation);
            }
            if ((this.onEndBatchAddStationDelegate == null)) {
                this.onEndBatchAddStationDelegate = new EndOperationDelegate(this.OnEndBatchAddStation);
            }
            if ((this.onBatchAddStationCompletedDelegate == null)) {
                this.onBatchAddStationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBatchAddStationCompleted);
            }
            base.InvokeAsync(this.onBeginBatchAddStationDelegate, new object[] {
                        installBatchList}, this.onEndBatchAddStationDelegate, this.onBatchAddStationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService.BeginAddInstallStation(Gsafety.PTMS.ServiceReference.InstallStationService.InstallStation installStation, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddInstallStation(installStation, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService.EndAddInstallStation(System.IAsyncResult result) {
            return base.Channel.EndAddInstallStation(result);
        }
        
        private System.IAsyncResult OnBeginAddInstallStation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.InstallStationService.InstallStation installStation = ((Gsafety.PTMS.ServiceReference.InstallStationService.InstallStation)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService)(this)).BeginAddInstallStation(installStation, callback, asyncState);
        }
        
        private object[] OnEndAddInstallStation(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService)(this)).EndAddInstallStation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddInstallStationCompleted(object state) {
            if ((this.AddInstallStationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddInstallStationCompleted(this, new AddInstallStationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddInstallStationAsync(Gsafety.PTMS.ServiceReference.InstallStationService.InstallStation installStation) {
            this.AddInstallStationAsync(installStation, null);
        }
        
        public void AddInstallStationAsync(Gsafety.PTMS.ServiceReference.InstallStationService.InstallStation installStation, object userState) {
            if ((this.onBeginAddInstallStationDelegate == null)) {
                this.onBeginAddInstallStationDelegate = new BeginOperationDelegate(this.OnBeginAddInstallStation);
            }
            if ((this.onEndAddInstallStationDelegate == null)) {
                this.onEndAddInstallStationDelegate = new EndOperationDelegate(this.OnEndAddInstallStation);
            }
            if ((this.onAddInstallStationCompletedDelegate == null)) {
                this.onAddInstallStationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddInstallStationCompleted);
            }
            base.InvokeAsync(this.onBeginAddInstallStationDelegate, new object[] {
                        installStation}, this.onEndAddInstallStationDelegate, this.onAddInstallStationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService.BeginDeleteInstallStation(string id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteInstallStation(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService.EndDeleteInstallStation(System.IAsyncResult result) {
            return base.Channel.EndDeleteInstallStation(result);
        }
        
        private System.IAsyncResult OnBeginDeleteInstallStation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService)(this)).BeginDeleteInstallStation(id, callback, asyncState);
        }
        
        private object[] OnEndDeleteInstallStation(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService)(this)).EndDeleteInstallStation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteInstallStationCompleted(object state) {
            if ((this.DeleteInstallStationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteInstallStationCompleted(this, new DeleteInstallStationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteInstallStationAsync(string id) {
            this.DeleteInstallStationAsync(id, null);
        }
        
        public void DeleteInstallStationAsync(string id, object userState) {
            if ((this.onBeginDeleteInstallStationDelegate == null)) {
                this.onBeginDeleteInstallStationDelegate = new BeginOperationDelegate(this.OnBeginDeleteInstallStation);
            }
            if ((this.onEndDeleteInstallStationDelegate == null)) {
                this.onEndDeleteInstallStationDelegate = new EndOperationDelegate(this.OnEndDeleteInstallStation);
            }
            if ((this.onDeleteInstallStationCompletedDelegate == null)) {
                this.onDeleteInstallStationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteInstallStationCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteInstallStationDelegate, new object[] {
                        id}, this.onEndDeleteInstallStationDelegate, this.onDeleteInstallStationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService.BeginUpdateInstallStation(Gsafety.PTMS.ServiceReference.InstallStationService.InstallStation installStation, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateInstallStation(installStation, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService.EndUpdateInstallStation(System.IAsyncResult result) {
            return base.Channel.EndUpdateInstallStation(result);
        }
        
        private System.IAsyncResult OnBeginUpdateInstallStation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.InstallStationService.InstallStation installStation = ((Gsafety.PTMS.ServiceReference.InstallStationService.InstallStation)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService)(this)).BeginUpdateInstallStation(installStation, callback, asyncState);
        }
        
        private object[] OnEndUpdateInstallStation(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService)(this)).EndUpdateInstallStation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateInstallStationCompleted(object state) {
            if ((this.UpdateInstallStationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateInstallStationCompleted(this, new UpdateInstallStationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateInstallStationAsync(Gsafety.PTMS.ServiceReference.InstallStationService.InstallStation installStation) {
            this.UpdateInstallStationAsync(installStation, null);
        }
        
        public void UpdateInstallStationAsync(Gsafety.PTMS.ServiceReference.InstallStationService.InstallStation installStation, object userState) {
            if ((this.onBeginUpdateInstallStationDelegate == null)) {
                this.onBeginUpdateInstallStationDelegate = new BeginOperationDelegate(this.OnBeginUpdateInstallStation);
            }
            if ((this.onEndUpdateInstallStationDelegate == null)) {
                this.onEndUpdateInstallStationDelegate = new EndOperationDelegate(this.OnEndUpdateInstallStation);
            }
            if ((this.onUpdateInstallStationCompletedDelegate == null)) {
                this.onUpdateInstallStationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateInstallStationCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateInstallStationDelegate, new object[] {
                        installStation}, this.onEndUpdateInstallStationDelegate, this.onUpdateInstallStationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService.BeginGetInstallStationsByAlphabet(Gsafety.PTMS.ServiceReference.InstallStationService.PagingInfo page, string clientID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInstallStationsByAlphabet(page, clientID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService.EndGetInstallStationsByAlphabet(System.IAsyncResult result) {
            return base.Channel.EndGetInstallStationsByAlphabet(result);
        }
        
        private System.IAsyncResult OnBeginGetInstallStationsByAlphabet(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.InstallStationService.PagingInfo page = ((Gsafety.PTMS.ServiceReference.InstallStationService.PagingInfo)(inValues[0]));
            string clientID = ((string)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService)(this)).BeginGetInstallStationsByAlphabet(page, clientID, callback, asyncState);
        }
        
        private object[] OnEndGetInstallStationsByAlphabet(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr retVal = ((Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService)(this)).EndGetInstallStationsByAlphabet(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInstallStationsByAlphabetCompleted(object state) {
            if ((this.GetInstallStationsByAlphabetCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInstallStationsByAlphabetCompleted(this, new GetInstallStationsByAlphabetCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInstallStationsByAlphabetAsync(Gsafety.PTMS.ServiceReference.InstallStationService.PagingInfo page, string clientID) {
            this.GetInstallStationsByAlphabetAsync(page, clientID, null);
        }
        
        public void GetInstallStationsByAlphabetAsync(Gsafety.PTMS.ServiceReference.InstallStationService.PagingInfo page, string clientID, object userState) {
            if ((this.onBeginGetInstallStationsByAlphabetDelegate == null)) {
                this.onBeginGetInstallStationsByAlphabetDelegate = new BeginOperationDelegate(this.OnBeginGetInstallStationsByAlphabet);
            }
            if ((this.onEndGetInstallStationsByAlphabetDelegate == null)) {
                this.onEndGetInstallStationsByAlphabetDelegate = new EndOperationDelegate(this.OnEndGetInstallStationsByAlphabet);
            }
            if ((this.onGetInstallStationsByAlphabetCompletedDelegate == null)) {
                this.onGetInstallStationsByAlphabetCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInstallStationsByAlphabetCompleted);
            }
            base.InvokeAsync(this.onBeginGetInstallStationsByAlphabetDelegate, new object[] {
                        page,
                        clientID}, this.onEndGetInstallStationsByAlphabetDelegate, this.onGetInstallStationsByAlphabetCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService.BeginGetInstallStationsFuzzy(string districtCode, string param, string name, Gsafety.PTMS.ServiceReference.InstallStationService.PagingInfo page, string clientID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInstallStationsFuzzy(districtCode, param, name, page, clientID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService.EndGetInstallStationsFuzzy(System.IAsyncResult result) {
            return base.Channel.EndGetInstallStationsFuzzy(result);
        }
        
        private System.IAsyncResult OnBeginGetInstallStationsFuzzy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string districtCode = ((string)(inValues[0]));
            string param = ((string)(inValues[1]));
            string name = ((string)(inValues[2]));
            Gsafety.PTMS.ServiceReference.InstallStationService.PagingInfo page = ((Gsafety.PTMS.ServiceReference.InstallStationService.PagingInfo)(inValues[3]));
            string clientID = ((string)(inValues[4]));
            return ((Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService)(this)).BeginGetInstallStationsFuzzy(districtCode, param, name, page, clientID, callback, asyncState);
        }
        
        private object[] OnEndGetInstallStationsFuzzy(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr retVal = ((Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService)(this)).EndGetInstallStationsFuzzy(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInstallStationsFuzzyCompleted(object state) {
            if ((this.GetInstallStationsFuzzyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInstallStationsFuzzyCompleted(this, new GetInstallStationsFuzzyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInstallStationsFuzzyAsync(string districtCode, string param, string name, Gsafety.PTMS.ServiceReference.InstallStationService.PagingInfo page, string clientID) {
            this.GetInstallStationsFuzzyAsync(districtCode, param, name, page, clientID, null);
        }
        
        public void GetInstallStationsFuzzyAsync(string districtCode, string param, string name, Gsafety.PTMS.ServiceReference.InstallStationService.PagingInfo page, string clientID, object userState) {
            if ((this.onBeginGetInstallStationsFuzzyDelegate == null)) {
                this.onBeginGetInstallStationsFuzzyDelegate = new BeginOperationDelegate(this.OnBeginGetInstallStationsFuzzy);
            }
            if ((this.onEndGetInstallStationsFuzzyDelegate == null)) {
                this.onEndGetInstallStationsFuzzyDelegate = new EndOperationDelegate(this.OnEndGetInstallStationsFuzzy);
            }
            if ((this.onGetInstallStationsFuzzyCompletedDelegate == null)) {
                this.onGetInstallStationsFuzzyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInstallStationsFuzzyCompleted);
            }
            base.InvokeAsync(this.onBeginGetInstallStationsFuzzyDelegate, new object[] {
                        districtCode,
                        param,
                        name,
                        page,
                        clientID}, this.onEndGetInstallStationsFuzzyDelegate, this.onGetInstallStationsFuzzyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService.BeginGetInstallStations(string clientID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInstallStations(clientID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService.EndGetInstallStations(System.IAsyncResult result) {
            return base.Channel.EndGetInstallStations(result);
        }
        
        private System.IAsyncResult OnBeginGetInstallStations(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService)(this)).BeginGetInstallStations(clientID, callback, asyncState);
        }
        
        private object[] OnEndGetInstallStations(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr retVal = ((Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService)(this)).EndGetInstallStations(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInstallStationsCompleted(object state) {
            if ((this.GetInstallStationsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInstallStationsCompleted(this, new GetInstallStationsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInstallStationsAsync(string clientID) {
            this.GetInstallStationsAsync(clientID, null);
        }
        
        public void GetInstallStationsAsync(string clientID, object userState) {
            if ((this.onBeginGetInstallStationsDelegate == null)) {
                this.onBeginGetInstallStationsDelegate = new BeginOperationDelegate(this.OnBeginGetInstallStations);
            }
            if ((this.onEndGetInstallStationsDelegate == null)) {
                this.onEndGetInstallStationsDelegate = new EndOperationDelegate(this.OnEndGetInstallStations);
            }
            if ((this.onGetInstallStationsCompletedDelegate == null)) {
                this.onGetInstallStationsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInstallStationsCompleted);
            }
            base.InvokeAsync(this.onBeginGetInstallStationsDelegate, new object[] {
                        clientID}, this.onEndGetInstallStationsDelegate, this.onGetInstallStationsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService.BeginCheckInstallStationExistByName(string name, string clientID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckInstallStationExistByName(name, clientID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService.EndCheckInstallStationExistByName(System.IAsyncResult result) {
            return base.Channel.EndCheckInstallStationExistByName(result);
        }
        
        private System.IAsyncResult OnBeginCheckInstallStationExistByName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string clientID = ((string)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService)(this)).BeginCheckInstallStationExistByName(name, clientID, callback, asyncState);
        }
        
        private object[] OnEndCheckInstallStationExistByName(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService)(this)).EndCheckInstallStationExistByName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckInstallStationExistByNameCompleted(object state) {
            if ((this.CheckInstallStationExistByNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckInstallStationExistByNameCompleted(this, new CheckInstallStationExistByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckInstallStationExistByNameAsync(string name, string clientID) {
            this.CheckInstallStationExistByNameAsync(name, clientID, null);
        }
        
        public void CheckInstallStationExistByNameAsync(string name, string clientID, object userState) {
            if ((this.onBeginCheckInstallStationExistByNameDelegate == null)) {
                this.onBeginCheckInstallStationExistByNameDelegate = new BeginOperationDelegate(this.OnBeginCheckInstallStationExistByName);
            }
            if ((this.onEndCheckInstallStationExistByNameDelegate == null)) {
                this.onEndCheckInstallStationExistByNameDelegate = new EndOperationDelegate(this.OnEndCheckInstallStationExistByName);
            }
            if ((this.onCheckInstallStationExistByNameCompletedDelegate == null)) {
                this.onCheckInstallStationExistByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckInstallStationExistByNameCompleted);
            }
            base.InvokeAsync(this.onBeginCheckInstallStationExistByNameDelegate, new object[] {
                        name,
                        clientID}, this.onEndCheckInstallStationExistByNameDelegate, this.onCheckInstallStationExistByNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService.BeginCheckInstallDetailById(string Id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckInstallDetailById(Id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService.EndCheckInstallDetailById(System.IAsyncResult result) {
            return base.Channel.EndCheckInstallDetailById(result);
        }
        
        private System.IAsyncResult OnBeginCheckInstallDetailById(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Id = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService)(this)).BeginCheckInstallDetailById(Id, callback, asyncState);
        }
        
        private object[] OnEndCheckInstallDetailById(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService)(this)).EndCheckInstallDetailById(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckInstallDetailByIdCompleted(object state) {
            if ((this.CheckInstallDetailByIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckInstallDetailByIdCompleted(this, new CheckInstallDetailByIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckInstallDetailByIdAsync(string Id) {
            this.CheckInstallDetailByIdAsync(Id, null);
        }
        
        public void CheckInstallDetailByIdAsync(string Id, object userState) {
            if ((this.onBeginCheckInstallDetailByIdDelegate == null)) {
                this.onBeginCheckInstallDetailByIdDelegate = new BeginOperationDelegate(this.OnBeginCheckInstallDetailById);
            }
            if ((this.onEndCheckInstallDetailByIdDelegate == null)) {
                this.onEndCheckInstallDetailByIdDelegate = new EndOperationDelegate(this.OnEndCheckInstallDetailById);
            }
            if ((this.onCheckInstallDetailByIdCompletedDelegate == null)) {
                this.onCheckInstallDetailByIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckInstallDetailByIdCompleted);
            }
            base.InvokeAsync(this.onBeginCheckInstallDetailByIdDelegate, new object[] {
                        Id}, this.onEndCheckInstallDetailByIdDelegate, this.onCheckInstallDetailByIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService.BeginCheckInstallStationExist(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.InstallStationService.InstallStation> installStationList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckInstallStationExist(installStationList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService.EndCheckInstallStationExist(System.IAsyncResult result) {
            return base.Channel.EndCheckInstallStationExist(result);
        }
        
        private System.IAsyncResult OnBeginCheckInstallStationExist(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.InstallStationService.InstallStation> installStationList = ((System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.InstallStationService.InstallStation>)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService)(this)).BeginCheckInstallStationExist(installStationList, callback, asyncState);
        }
        
        private object[] OnEndCheckInstallStationExist(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr retVal = ((Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService)(this)).EndCheckInstallStationExist(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckInstallStationExistCompleted(object state) {
            if ((this.CheckInstallStationExistCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckInstallStationExistCompleted(this, new CheckInstallStationExistCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckInstallStationExistAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.InstallStationService.InstallStation> installStationList) {
            this.CheckInstallStationExistAsync(installStationList, null);
        }
        
        public void CheckInstallStationExistAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.InstallStationService.InstallStation> installStationList, object userState) {
            if ((this.onBeginCheckInstallStationExistDelegate == null)) {
                this.onBeginCheckInstallStationExistDelegate = new BeginOperationDelegate(this.OnBeginCheckInstallStationExist);
            }
            if ((this.onEndCheckInstallStationExistDelegate == null)) {
                this.onEndCheckInstallStationExistDelegate = new EndOperationDelegate(this.OnEndCheckInstallStationExist);
            }
            if ((this.onCheckInstallStationExistCompletedDelegate == null)) {
                this.onCheckInstallStationExistCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckInstallStationExistCompleted);
            }
            base.InvokeAsync(this.onBeginCheckInstallStationExistDelegate, new object[] {
                        installStationList}, this.onEndCheckInstallStationExistDelegate, this.onCheckInstallStationExistCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService.BeginGetInstallStationUser(string installStationID, string clientID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInstallStationUser(installStationID, clientID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationUserh_PhsrrDr Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService.EndGetInstallStationUser(System.IAsyncResult result) {
            return base.Channel.EndGetInstallStationUser(result);
        }
        
        private System.IAsyncResult OnBeginGetInstallStationUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string installStationID = ((string)(inValues[0]));
            string clientID = ((string)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService)(this)).BeginGetInstallStationUser(installStationID, clientID, callback, asyncState);
        }
        
        private object[] OnEndGetInstallStationUser(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationUserh_PhsrrDr retVal = ((Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService)(this)).EndGetInstallStationUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInstallStationUserCompleted(object state) {
            if ((this.GetInstallStationUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInstallStationUserCompleted(this, new GetInstallStationUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInstallStationUserAsync(string installStationID, string clientID) {
            this.GetInstallStationUserAsync(installStationID, clientID, null);
        }
        
        public void GetInstallStationUserAsync(string installStationID, string clientID, object userState) {
            if ((this.onBeginGetInstallStationUserDelegate == null)) {
                this.onBeginGetInstallStationUserDelegate = new BeginOperationDelegate(this.OnBeginGetInstallStationUser);
            }
            if ((this.onEndGetInstallStationUserDelegate == null)) {
                this.onEndGetInstallStationUserDelegate = new EndOperationDelegate(this.OnEndGetInstallStationUser);
            }
            if ((this.onGetInstallStationUserCompletedDelegate == null)) {
                this.onGetInstallStationUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInstallStationUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetInstallStationUserDelegate, new object[] {
                        installStationID,
                        clientID}, this.onEndGetInstallStationUserDelegate, this.onGetInstallStationUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService.BeginSaveInstallStationUser(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.InstallStationService.InstallStationUser> installStationUser, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveInstallStationUser(installStationUser, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService.EndSaveInstallStationUser(System.IAsyncResult result) {
            return base.Channel.EndSaveInstallStationUser(result);
        }
        
        private System.IAsyncResult OnBeginSaveInstallStationUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.InstallStationService.InstallStationUser> installStationUser = ((System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.InstallStationService.InstallStationUser>)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService)(this)).BeginSaveInstallStationUser(installStationUser, callback, asyncState);
        }
        
        private object[] OnEndSaveInstallStationUser(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService)(this)).EndSaveInstallStationUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveInstallStationUserCompleted(object state) {
            if ((this.SaveInstallStationUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveInstallStationUserCompleted(this, new SaveInstallStationUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveInstallStationUserAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.InstallStationService.InstallStationUser> installStationUser) {
            this.SaveInstallStationUserAsync(installStationUser, null);
        }
        
        public void SaveInstallStationUserAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.InstallStationService.InstallStationUser> installStationUser, object userState) {
            if ((this.onBeginSaveInstallStationUserDelegate == null)) {
                this.onBeginSaveInstallStationUserDelegate = new BeginOperationDelegate(this.OnBeginSaveInstallStationUser);
            }
            if ((this.onEndSaveInstallStationUserDelegate == null)) {
                this.onEndSaveInstallStationUserDelegate = new EndOperationDelegate(this.OnEndSaveInstallStationUser);
            }
            if ((this.onSaveInstallStationUserCompletedDelegate == null)) {
                this.onSaveInstallStationUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveInstallStationUserCompleted);
            }
            base.InvokeAsync(this.onBeginSaveInstallStationUserDelegate, new object[] {
                        installStationUser}, this.onEndSaveInstallStationUserDelegate, this.onSaveInstallStationUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService.BeginGetInstallStationsByUser(string userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInstallStationsByUser(userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService.EndGetInstallStationsByUser(System.IAsyncResult result) {
            return base.Channel.EndGetInstallStationsByUser(result);
        }
        
        private System.IAsyncResult OnBeginGetInstallStationsByUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userID = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService)(this)).BeginGetInstallStationsByUser(userID, callback, asyncState);
        }
        
        private object[] OnEndGetInstallStationsByUser(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr retVal = ((Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService)(this)).EndGetInstallStationsByUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInstallStationsByUserCompleted(object state) {
            if ((this.GetInstallStationsByUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInstallStationsByUserCompleted(this, new GetInstallStationsByUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInstallStationsByUserAsync(string userID) {
            this.GetInstallStationsByUserAsync(userID, null);
        }
        
        public void GetInstallStationsByUserAsync(string userID, object userState) {
            if ((this.onBeginGetInstallStationsByUserDelegate == null)) {
                this.onBeginGetInstallStationsByUserDelegate = new BeginOperationDelegate(this.OnBeginGetInstallStationsByUser);
            }
            if ((this.onEndGetInstallStationsByUserDelegate == null)) {
                this.onEndGetInstallStationsByUserDelegate = new EndOperationDelegate(this.OnEndGetInstallStationsByUser);
            }
            if ((this.onGetInstallStationsByUserCompletedDelegate == null)) {
                this.onGetInstallStationsByUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInstallStationsByUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetInstallStationsByUserDelegate, new object[] {
                        userID}, this.onEndGetInstallStationsByUserDelegate, this.onGetInstallStationsByUserCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService CreateChannel() {
            return new InstallStationServiceClientChannel(this);
        }
        
        private class InstallStationServiceClientChannel : ChannelBase<Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService>, Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService {
            
            public InstallStationServiceClientChannel(System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.InstallStationService.IInstallStationService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginBatchAddStation(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.InstallStationService.InstallStation> installBatchList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = installBatchList;
                System.IAsyncResult _result = base.BeginInvoke("BatchAddStation", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean EndBatchAddStation(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean)(base.EndInvoke("BatchAddStation", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddInstallStation(Gsafety.PTMS.ServiceReference.InstallStationService.InstallStation installStation, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = installStation;
                System.IAsyncResult _result = base.BeginInvoke("AddInstallStation", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean EndAddInstallStation(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean)(base.EndInvoke("AddInstallStation", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteInstallStation(string id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("DeleteInstallStation", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean EndDeleteInstallStation(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean)(base.EndInvoke("DeleteInstallStation", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateInstallStation(Gsafety.PTMS.ServiceReference.InstallStationService.InstallStation installStation, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = installStation;
                System.IAsyncResult _result = base.BeginInvoke("UpdateInstallStation", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean EndUpdateInstallStation(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean)(base.EndInvoke("UpdateInstallStation", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetInstallStationsByAlphabet(Gsafety.PTMS.ServiceReference.InstallStationService.PagingInfo page, string clientID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = page;
                _args[1] = clientID;
                System.IAsyncResult _result = base.BeginInvoke("GetInstallStationsByAlphabet", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr EndGetInstallStationsByAlphabet(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr _result = ((Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr)(base.EndInvoke("GetInstallStationsByAlphabet", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetInstallStationsFuzzy(string districtCode, string param, string name, Gsafety.PTMS.ServiceReference.InstallStationService.PagingInfo page, string clientID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = districtCode;
                _args[1] = param;
                _args[2] = name;
                _args[3] = page;
                _args[4] = clientID;
                System.IAsyncResult _result = base.BeginInvoke("GetInstallStationsFuzzy", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr EndGetInstallStationsFuzzy(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr _result = ((Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr)(base.EndInvoke("GetInstallStationsFuzzy", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetInstallStations(string clientID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = clientID;
                System.IAsyncResult _result = base.BeginInvoke("GetInstallStations", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr EndGetInstallStations(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr _result = ((Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr)(base.EndInvoke("GetInstallStations", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckInstallStationExistByName(string name, string clientID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = name;
                _args[1] = clientID;
                System.IAsyncResult _result = base.BeginInvoke("CheckInstallStationExistByName", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean EndCheckInstallStationExistByName(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean)(base.EndInvoke("CheckInstallStationExistByName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckInstallDetailById(string Id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = Id;
                System.IAsyncResult _result = base.BeginInvoke("CheckInstallDetailById", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean EndCheckInstallDetailById(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean)(base.EndInvoke("CheckInstallDetailById", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckInstallStationExist(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.InstallStationService.InstallStation> installStationList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = installStationList;
                System.IAsyncResult _result = base.BeginInvoke("CheckInstallStationExist", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr EndCheckInstallStationExist(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr _result = ((Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr)(base.EndInvoke("CheckInstallStationExist", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetInstallStationUser(string installStationID, string clientID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = installStationID;
                _args[1] = clientID;
                System.IAsyncResult _result = base.BeginInvoke("GetInstallStationUser", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationUserh_PhsrrDr EndGetInstallStationUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationUserh_PhsrrDr _result = ((Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationUserh_PhsrrDr)(base.EndInvoke("GetInstallStationUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveInstallStationUser(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.InstallStationService.InstallStationUser> installStationUser, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = installStationUser;
                System.IAsyncResult _result = base.BeginInvoke("SaveInstallStationUser", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean EndSaveInstallStationUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.InstallStationService.SingleMessageOfboolean)(base.EndInvoke("SaveInstallStationUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetInstallStationsByUser(string userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userID;
                System.IAsyncResult _result = base.BeginInvoke("GetInstallStationsByUser", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr EndGetInstallStationsByUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr _result = ((Gsafety.PTMS.ServiceReference.InstallStationService.MultiMessageOfInstallStationh_PhsrrDr)(base.EndInvoke("GetInstallStationsByUser", _args, result)));
                return _result;
            }
        }
    }
}
