//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace Gsafety.PTMS.ServiceReference.PTMSLogManageService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagingInfo", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class PagingInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfAlarmDealLogInfo7ZhGgAvu", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfAlarmDealLogInfo7ZhGgAvu : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PTMSLogManageService.AlarmDealLogInfo> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PTMSLogManageService.AlarmDealLogInfo> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AlarmDealLogInfo", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Manager.Contract.Data")]
    public partial class AlarmDealLogInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.DateTime> AlarmTimeField;
        
        private string AlarmVihcleIDField;
        
        private string DealPersonField;
        
        private System.Nullable<System.DateTime> DealTimeField;
        
        private string DescriptionField;
        
        private string VehicleTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AlarmTime {
            get {
                return this.AlarmTimeField;
            }
            set {
                if ((this.AlarmTimeField.Equals(value) != true)) {
                    this.AlarmTimeField = value;
                    this.RaisePropertyChanged("AlarmTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlarmVihcleID {
            get {
                return this.AlarmVihcleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AlarmVihcleIDField, value) != true)) {
                    this.AlarmVihcleIDField = value;
                    this.RaisePropertyChanged("AlarmVihcleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DealPerson {
            get {
                return this.DealPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.DealPersonField, value) != true)) {
                    this.DealPersonField = value;
                    this.RaisePropertyChanged("DealPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DealTime {
            get {
                return this.DealTimeField;
            }
            set {
                if ((this.DealTimeField.Equals(value) != true)) {
                    this.DealTimeField = value;
                    this.RaisePropertyChanged("DealTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleType {
            get {
                return this.VehicleTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleTypeField, value) != true)) {
                    this.VehicleTypeField = value;
                    this.RaisePropertyChanged("VehicleType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfCarAlertLogInfo7ZhGgAvu", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfCarAlertLogInfo7ZhGgAvu : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PTMSLogManageService.CarAlertLogInfo> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PTMSLogManageService.CarAlertLogInfo> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CarAlertLogInfo", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Manager.Contract.Data")]
    public partial class CarAlertLogInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.DateTime> AlertTimeField;
        
        private System.Nullable<int> AlertTypeField;
        
        private string CarNumberField;
        
        private string DealContentField;
        
        private string DealPersonField;
        
        private System.Nullable<System.DateTime> DealTimeField;
        
        private string ShowAlertTypeField;
        
        private string VihcleTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AlertTime {
            get {
                return this.AlertTimeField;
            }
            set {
                if ((this.AlertTimeField.Equals(value) != true)) {
                    this.AlertTimeField = value;
                    this.RaisePropertyChanged("AlertTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AlertType {
            get {
                return this.AlertTypeField;
            }
            set {
                if ((this.AlertTypeField.Equals(value) != true)) {
                    this.AlertTypeField = value;
                    this.RaisePropertyChanged("AlertType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarNumber {
            get {
                return this.CarNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CarNumberField, value) != true)) {
                    this.CarNumberField = value;
                    this.RaisePropertyChanged("CarNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DealContent {
            get {
                return this.DealContentField;
            }
            set {
                if ((object.ReferenceEquals(this.DealContentField, value) != true)) {
                    this.DealContentField = value;
                    this.RaisePropertyChanged("DealContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DealPerson {
            get {
                return this.DealPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.DealPersonField, value) != true)) {
                    this.DealPersonField = value;
                    this.RaisePropertyChanged("DealPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DealTime {
            get {
                return this.DealTimeField;
            }
            set {
                if ((this.DealTimeField.Equals(value) != true)) {
                    this.DealTimeField = value;
                    this.RaisePropertyChanged("DealTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShowAlertType {
            get {
                return this.ShowAlertTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShowAlertTypeField, value) != true)) {
                    this.ShowAlertTypeField = value;
                    this.RaisePropertyChanged("ShowAlertType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VihcleType {
            get {
                return this.VihcleTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.VihcleTypeField, value) != true)) {
                    this.VihcleTypeField = value;
                    this.RaisePropertyChanged("VihcleType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfInstallLogInfo7ZhGgAvu", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfInstallLogInfo7ZhGgAvu : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PTMSLogManageService.InstallLogInfo> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PTMSLogManageService.InstallLogInfo> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstallLogInfo", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Manager.Contract.Data")]
    public partial class InstallLogInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime InstalledTimeField;
        
        private string RecordStaffField;
        
        private string SetupStaffField;
        
        private string SetupStationField;
        
        private System.DateTime StartTimeField;
        
        private string SuiteIDField;
        
        private string Vechicle_IDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InstalledTime {
            get {
                return this.InstalledTimeField;
            }
            set {
                if ((this.InstalledTimeField.Equals(value) != true)) {
                    this.InstalledTimeField = value;
                    this.RaisePropertyChanged("InstalledTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecordStaff {
            get {
                return this.RecordStaffField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordStaffField, value) != true)) {
                    this.RecordStaffField = value;
                    this.RaisePropertyChanged("RecordStaff");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SetupStaff {
            get {
                return this.SetupStaffField;
            }
            set {
                if ((object.ReferenceEquals(this.SetupStaffField, value) != true)) {
                    this.SetupStaffField = value;
                    this.RaisePropertyChanged("SetupStaff");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SetupStation {
            get {
                return this.SetupStationField;
            }
            set {
                if ((object.ReferenceEquals(this.SetupStationField, value) != true)) {
                    this.SetupStationField = value;
                    this.RaisePropertyChanged("SetupStation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuiteID {
            get {
                return this.SuiteIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SuiteIDField, value) != true)) {
                    this.SuiteIDField = value;
                    this.RaisePropertyChanged("SuiteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Vechicle_ID {
            get {
                return this.Vechicle_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.Vechicle_IDField, value) != true)) {
                    this.Vechicle_IDField = value;
                    this.RaisePropertyChanged("Vechicle_ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogAccess", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Common.Data")]
    public partial class LogAccess : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ClientIDField;
        
        private string IDField;
        
        private System.DateTime LoginTimeField;
        
        private string LoginUserField;
        
        private System.Nullable<System.DateTime> LogoutTimeField;
        
        private string SessionIDField;
        
        private string ShowRoleNameField;
        
        private string UserIDField;
        
        private decimal UserTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIDField, value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LoginTime {
            get {
                return this.LoginTimeField;
            }
            set {
                if ((this.LoginTimeField.Equals(value) != true)) {
                    this.LoginTimeField = value;
                    this.RaisePropertyChanged("LoginTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginUser {
            get {
                return this.LoginUserField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginUserField, value) != true)) {
                    this.LoginUserField = value;
                    this.RaisePropertyChanged("LoginUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LogoutTime {
            get {
                return this.LogoutTimeField;
            }
            set {
                if ((this.LogoutTimeField.Equals(value) != true)) {
                    this.LogoutTimeField = value;
                    this.RaisePropertyChanged("LogoutTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionID {
            get {
                return this.SessionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIDField, value) != true)) {
                    this.SessionIDField = value;
                    this.RaisePropertyChanged("SessionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShowRoleName {
            get {
                return this.ShowRoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShowRoleNameField, value) != true)) {
                    this.ShowRoleNameField = value;
                    this.RaisePropertyChanged("ShowRoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((this.UserTypeField.Equals(value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleMessageOfboolean", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class SingleMessageOfboolean : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private bool ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfLogAccessi7Zg_POJ5", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfLogAccessi7Zg_POJ5 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogAccess> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogAccess> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfVideoLogInfo7ZhGgAvu", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfVideoLogInfo7ZhGgAvu : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PTMSLogManageService.VideoLogInfo> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PTMSLogManageService.VideoLogInfo> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VideoLogInfo", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Manager.Contract.Data")]
    public partial class VideoLogInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.DateTime> ActionTimeField;
        
        private string ChannelIdField;
        
        private string Ivoke_TypeField;
        
        private string MDVRIdField;
        
        private string PlayerField;
        
        private string SubTypeField;
        
        private string VehicleIDField;
        
        private System.Nullable<System.DateTime> VideoEndtimeField;
        
        private string VideoFileNameField;
        
        private System.Nullable<System.DateTime> VideoStartTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ActionTime {
            get {
                return this.ActionTimeField;
            }
            set {
                if ((this.ActionTimeField.Equals(value) != true)) {
                    this.ActionTimeField = value;
                    this.RaisePropertyChanged("ActionTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChannelId {
            get {
                return this.ChannelIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelIdField, value) != true)) {
                    this.ChannelIdField = value;
                    this.RaisePropertyChanged("ChannelId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ivoke_Type {
            get {
                return this.Ivoke_TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.Ivoke_TypeField, value) != true)) {
                    this.Ivoke_TypeField = value;
                    this.RaisePropertyChanged("Ivoke_Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MDVRId {
            get {
                return this.MDVRIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MDVRIdField, value) != true)) {
                    this.MDVRIdField = value;
                    this.RaisePropertyChanged("MDVRId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Player {
            get {
                return this.PlayerField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerField, value) != true)) {
                    this.PlayerField = value;
                    this.RaisePropertyChanged("Player");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubType {
            get {
                return this.SubTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SubTypeField, value) != true)) {
                    this.SubTypeField = value;
                    this.RaisePropertyChanged("SubType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleID {
            get {
                return this.VehicleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleIDField, value) != true)) {
                    this.VehicleIDField = value;
                    this.RaisePropertyChanged("VehicleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> VideoEndtime {
            get {
                return this.VideoEndtimeField;
            }
            set {
                if ((this.VideoEndtimeField.Equals(value) != true)) {
                    this.VideoEndtimeField = value;
                    this.RaisePropertyChanged("VideoEndtime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VideoFileName {
            get {
                return this.VideoFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VideoFileNameField, value) != true)) {
                    this.VideoFileNameField = value;
                    this.RaisePropertyChanged("VideoFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> VideoStartTime {
            get {
                return this.VideoStartTimeField;
            }
            set {
                if ((this.VideoStartTimeField.Equals(value) != true)) {
                    this.VideoStartTimeField = value;
                    this.RaisePropertyChanged("VideoStartTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VisitLogInfo", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Manager.Contract.Data")]
    public partial class VisitLogInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> CONTENT_TYPEField;
        
        private string IdField;
        
        private string OrgCodeField;
        
        private string TargetVihcleField;
        
        private System.DateTime VisitTimeField;
        
        private string VisiterContentField;
        
        private string VisitorField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CONTENT_TYPE {
            get {
                return this.CONTENT_TYPEField;
            }
            set {
                if ((this.CONTENT_TYPEField.Equals(value) != true)) {
                    this.CONTENT_TYPEField = value;
                    this.RaisePropertyChanged("CONTENT_TYPE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrgCode {
            get {
                return this.OrgCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrgCodeField, value) != true)) {
                    this.OrgCodeField = value;
                    this.RaisePropertyChanged("OrgCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TargetVihcle {
            get {
                return this.TargetVihcleField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetVihcleField, value) != true)) {
                    this.TargetVihcleField = value;
                    this.RaisePropertyChanged("TargetVihcle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime VisitTime {
            get {
                return this.VisitTimeField;
            }
            set {
                if ((this.VisitTimeField.Equals(value) != true)) {
                    this.VisitTimeField = value;
                    this.RaisePropertyChanged("VisitTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VisiterContent {
            get {
                return this.VisiterContentField;
            }
            set {
                if ((object.ReferenceEquals(this.VisiterContentField, value) != true)) {
                    this.VisiterContentField = value;
                    this.RaisePropertyChanged("VisiterContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Visitor {
            get {
                return this.VisitorField;
            }
            set {
                if ((object.ReferenceEquals(this.VisitorField, value) != true)) {
                    this.VisitorField = value;
                    this.RaisePropertyChanged("Visitor");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfVisitLogInfo7ZhGgAvu", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfVisitLogInfo7ZhGgAvu : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PTMSLogManageService.VisitLogInfo> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PTMSLogManageService.VisitLogInfo> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfSuiteInfoLog7ZhGgAvu", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfSuiteInfoLog7ZhGgAvu : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PTMSLogManageService.SuiteInfoLog> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PTMSLogManageService.SuiteInfoLog> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SuiteInfoLog", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Manager.Contract.Data")]
    public partial class SuiteInfoLog : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ChangedStatusField;
        
        private string CurrentStatusField;
        
        private string OperatingReasonField;
        
        private System.DateTime OperatingTimeField;
        
        private string OperatorField;
        
        private string Suite_IDField;
        
        private string Vehicle_IDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedStatus {
            get {
                return this.ChangedStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedStatusField, value) != true)) {
                    this.ChangedStatusField = value;
                    this.RaisePropertyChanged("ChangedStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentStatus {
            get {
                return this.CurrentStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentStatusField, value) != true)) {
                    this.CurrentStatusField = value;
                    this.RaisePropertyChanged("CurrentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperatingReason {
            get {
                return this.OperatingReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatingReasonField, value) != true)) {
                    this.OperatingReasonField = value;
                    this.RaisePropertyChanged("OperatingReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OperatingTime {
            get {
                return this.OperatingTimeField;
            }
            set {
                if ((this.OperatingTimeField.Equals(value) != true)) {
                    this.OperatingTimeField = value;
                    this.RaisePropertyChanged("OperatingTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operator {
            get {
                return this.OperatorField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorField, value) != true)) {
                    this.OperatorField = value;
                    this.RaisePropertyChanged("Operator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Suite_ID {
            get {
                return this.Suite_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.Suite_IDField, value) != true)) {
                    this.Suite_IDField = value;
                    this.RaisePropertyChanged("Suite_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Vehicle_ID {
            get {
                return this.Vehicle_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.Vehicle_IDField, value) != true)) {
                    this.Vehicle_IDField = value;
                    this.RaisePropertyChanged("Vehicle_ID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfLogOperatei7Zg_POJ5", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfLogOperatei7Zg_POJ5 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogOperate> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogOperate> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogOperate", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Common.Data")]
    public partial class LogOperate : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ClientIDField;
        
        private string IDField;
        
        private string LoginNameField;
        
        private string OperateContentField;
        
        private System.DateTime OperateTimeField;
        
        private int OperateTypeField;
        
        private string OperatorIDField;
        
        private string OperatorNameField;
        
        private string ShowRoleNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIDField, value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginName {
            get {
                return this.LoginNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginNameField, value) != true)) {
                    this.LoginNameField = value;
                    this.RaisePropertyChanged("LoginName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperateContent {
            get {
                return this.OperateContentField;
            }
            set {
                if ((object.ReferenceEquals(this.OperateContentField, value) != true)) {
                    this.OperateContentField = value;
                    this.RaisePropertyChanged("OperateContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OperateTime {
            get {
                return this.OperateTimeField;
            }
            set {
                if ((this.OperateTimeField.Equals(value) != true)) {
                    this.OperateTimeField = value;
                    this.RaisePropertyChanged("OperateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OperateType {
            get {
                return this.OperateTypeField;
            }
            set {
                if ((this.OperateTypeField.Equals(value) != true)) {
                    this.OperateTypeField = value;
                    this.RaisePropertyChanged("OperateType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperatorID {
            get {
                return this.OperatorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorIDField, value) != true)) {
                    this.OperatorIDField = value;
                    this.RaisePropertyChanged("OperatorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperatorName {
            get {
                return this.OperatorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorNameField, value) != true)) {
                    this.OperatorNameField = value;
                    this.RaisePropertyChanged("OperatorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShowRoleName {
            get {
                return this.ShowRoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShowRoleNameField, value) != true)) {
                    this.ShowRoleNameField = value;
                    this.RaisePropertyChanged("ShowRoleName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogVideo", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Common.Data")]
    public partial class LogVideo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int ChannelField;
        
        private string ClientIDField;
        
        private string ContentField;
        
        private string IDField;
        
        private int LogTypeField;
        
        private string MdvrCoreSnField;
        
        private System.DateTime OperateTimeField;
        
        private string OperatorIDField;
        
        private string OperatorNameField;
        
        private string SuiteSnField;
        
        private string VehicleIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Channel {
            get {
                return this.ChannelField;
            }
            set {
                if ((this.ChannelField.Equals(value) != true)) {
                    this.ChannelField = value;
                    this.RaisePropertyChanged("Channel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIDField, value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LogType {
            get {
                return this.LogTypeField;
            }
            set {
                if ((this.LogTypeField.Equals(value) != true)) {
                    this.LogTypeField = value;
                    this.RaisePropertyChanged("LogType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrCoreSn {
            get {
                return this.MdvrCoreSnField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrCoreSnField, value) != true)) {
                    this.MdvrCoreSnField = value;
                    this.RaisePropertyChanged("MdvrCoreSn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OperateTime {
            get {
                return this.OperateTimeField;
            }
            set {
                if ((this.OperateTimeField.Equals(value) != true)) {
                    this.OperateTimeField = value;
                    this.RaisePropertyChanged("OperateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperatorID {
            get {
                return this.OperatorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorIDField, value) != true)) {
                    this.OperatorIDField = value;
                    this.RaisePropertyChanged("OperatorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperatorName {
            get {
                return this.OperatorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorNameField, value) != true)) {
                    this.OperatorNameField = value;
                    this.RaisePropertyChanged("OperatorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuiteSn {
            get {
                return this.SuiteSnField;
            }
            set {
                if ((object.ReferenceEquals(this.SuiteSnField, value) != true)) {
                    this.SuiteSnField = value;
                    this.RaisePropertyChanged("SuiteSn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleID {
            get {
                return this.VehicleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleIDField, value) != true)) {
                    this.VehicleIDField = value;
                    this.RaisePropertyChanged("VehicleID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfLogVideoi7Zg_POJ5", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfLogVideoi7Zg_POJ5 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogVideo> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogVideo> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfLogErrori7Zg_POJ5", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfLogErrori7Zg_POJ5 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogError> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogError> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogError", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Common.Data")]
    public partial class LogError : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ClientIDField;
        
        private System.DateTime CreateTimeField;
        
        private string ErrorReasonField;
        
        private string IDField;
        
        private string LoginUserField;
        
        private string ServiceNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIDField, value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorReason {
            get {
                return this.ErrorReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorReasonField, value) != true)) {
                    this.ErrorReasonField = value;
                    this.RaisePropertyChanged("ErrorReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginUser {
            get {
                return this.LoginUserField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginUserField, value) != true)) {
                    this.LoginUserField = value;
                    this.RaisePropertyChanged("LoginUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceName {
            get {
                return this.ServiceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceNameField, value) != true)) {
                    this.ServiceNameField = value;
                    this.RaisePropertyChanged("ServiceName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PTMSLogManageService.IAlarmDealLogService")]
    public interface IAlarmDealLogService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAlarmDealLogService/GetAlarmDealLog", ReplyAction="http://tempuri.org/IAlarmDealLogService/GetAlarmDealLogResponse")]
        System.IAsyncResult BeginGetAlarmDealLog(string clientID, string vehicleID, string userName, System.DateTime startTime, System.DateTime endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfAlarmDealLogInfo7ZhGgAvu EndGetAlarmDealLog(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAlarmDealLogServiceChannel : Gsafety.PTMS.ServiceReference.PTMSLogManageService.IAlarmDealLogService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAlarmDealLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAlarmDealLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfAlarmDealLogInfo7ZhGgAvu Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfAlarmDealLogInfo7ZhGgAvu)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AlarmDealLogServiceClient : System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.PTMSLogManageService.IAlarmDealLogService>, Gsafety.PTMS.ServiceReference.PTMSLogManageService.IAlarmDealLogService {
        
        private BeginOperationDelegate onBeginGetAlarmDealLogDelegate;
        
        private EndOperationDelegate onEndGetAlarmDealLogDelegate;
        
        private System.Threading.SendOrPostCallback onGetAlarmDealLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public AlarmDealLogServiceClient() {
        }
        
        public AlarmDealLogServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AlarmDealLogServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AlarmDealLogServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AlarmDealLogServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<GetAlarmDealLogCompletedEventArgs> GetAlarmDealLogCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PTMSLogManageService.IAlarmDealLogService.BeginGetAlarmDealLog(string clientID, string vehicleID, string userName, System.DateTime startTime, System.DateTime endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAlarmDealLog(clientID, vehicleID, userName, startTime, endTime, pageInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfAlarmDealLogInfo7ZhGgAvu Gsafety.PTMS.ServiceReference.PTMSLogManageService.IAlarmDealLogService.EndGetAlarmDealLog(System.IAsyncResult result) {
            return base.Channel.EndGetAlarmDealLog(result);
        }
        
        private System.IAsyncResult OnBeginGetAlarmDealLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            string vehicleID = ((string)(inValues[1]));
            string userName = ((string)(inValues[2]));
            System.DateTime startTime = ((System.DateTime)(inValues[3]));
            System.DateTime endTime = ((System.DateTime)(inValues[4]));
            Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo)(inValues[5]));
            return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.IAlarmDealLogService)(this)).BeginGetAlarmDealLog(clientID, vehicleID, userName, startTime, endTime, pageInfo, callback, asyncState);
        }
        
        private object[] OnEndGetAlarmDealLog(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfAlarmDealLogInfo7ZhGgAvu retVal = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.IAlarmDealLogService)(this)).EndGetAlarmDealLog(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAlarmDealLogCompleted(object state) {
            if ((this.GetAlarmDealLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAlarmDealLogCompleted(this, new GetAlarmDealLogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAlarmDealLogAsync(string clientID, string vehicleID, string userName, System.DateTime startTime, System.DateTime endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo) {
            this.GetAlarmDealLogAsync(clientID, vehicleID, userName, startTime, endTime, pageInfo, null);
        }
        
        public void GetAlarmDealLogAsync(string clientID, string vehicleID, string userName, System.DateTime startTime, System.DateTime endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, object userState) {
            if ((this.onBeginGetAlarmDealLogDelegate == null)) {
                this.onBeginGetAlarmDealLogDelegate = new BeginOperationDelegate(this.OnBeginGetAlarmDealLog);
            }
            if ((this.onEndGetAlarmDealLogDelegate == null)) {
                this.onEndGetAlarmDealLogDelegate = new EndOperationDelegate(this.OnEndGetAlarmDealLog);
            }
            if ((this.onGetAlarmDealLogCompletedDelegate == null)) {
                this.onGetAlarmDealLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAlarmDealLogCompleted);
            }
            base.InvokeAsync(this.onBeginGetAlarmDealLogDelegate, new object[] {
                        clientID,
                        vehicleID,
                        userName,
                        startTime,
                        endTime,
                        pageInfo}, this.onEndGetAlarmDealLogDelegate, this.onGetAlarmDealLogCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Gsafety.PTMS.ServiceReference.PTMSLogManageService.IAlarmDealLogService CreateChannel() {
            return new AlarmDealLogServiceClientChannel(this);
        }
        
        private class AlarmDealLogServiceClientChannel : ChannelBase<Gsafety.PTMS.ServiceReference.PTMSLogManageService.IAlarmDealLogService>, Gsafety.PTMS.ServiceReference.PTMSLogManageService.IAlarmDealLogService {
            
            public AlarmDealLogServiceClientChannel(System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.PTMSLogManageService.IAlarmDealLogService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetAlarmDealLog(string clientID, string vehicleID, string userName, System.DateTime startTime, System.DateTime endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = clientID;
                _args[1] = vehicleID;
                _args[2] = userName;
                _args[3] = startTime;
                _args[4] = endTime;
                _args[5] = pageInfo;
                System.IAsyncResult _result = base.BeginInvoke("GetAlarmDealLog", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfAlarmDealLogInfo7ZhGgAvu EndGetAlarmDealLog(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfAlarmDealLogInfo7ZhGgAvu _result = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfAlarmDealLogInfo7ZhGgAvu)(base.EndInvoke("GetAlarmDealLog", _args, result)));
                return _result;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PTMSLogManageService.ICarAlertDealLogService")]
    public interface ICarAlertDealLogService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICarAlertDealLogService/GetCarAlertDealLog", ReplyAction="http://tempuri.org/ICarAlertDealLogService/GetCarAlertDealLogResponse")]
        System.IAsyncResult BeginGetCarAlertDealLog(string clientID, string vehicleId, string userName, System.DateTime startTime, System.DateTime endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfCarAlertLogInfo7ZhGgAvu EndGetCarAlertDealLog(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICarAlertDealLogServiceChannel : Gsafety.PTMS.ServiceReference.PTMSLogManageService.ICarAlertDealLogService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCarAlertDealLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCarAlertDealLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfCarAlertLogInfo7ZhGgAvu Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfCarAlertLogInfo7ZhGgAvu)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CarAlertDealLogServiceClient : System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.PTMSLogManageService.ICarAlertDealLogService>, Gsafety.PTMS.ServiceReference.PTMSLogManageService.ICarAlertDealLogService {
        
        private BeginOperationDelegate onBeginGetCarAlertDealLogDelegate;
        
        private EndOperationDelegate onEndGetCarAlertDealLogDelegate;
        
        private System.Threading.SendOrPostCallback onGetCarAlertDealLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public CarAlertDealLogServiceClient() {
        }
        
        public CarAlertDealLogServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CarAlertDealLogServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CarAlertDealLogServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CarAlertDealLogServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<GetCarAlertDealLogCompletedEventArgs> GetCarAlertDealLogCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PTMSLogManageService.ICarAlertDealLogService.BeginGetCarAlertDealLog(string clientID, string vehicleId, string userName, System.DateTime startTime, System.DateTime endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCarAlertDealLog(clientID, vehicleId, userName, startTime, endTime, pageInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfCarAlertLogInfo7ZhGgAvu Gsafety.PTMS.ServiceReference.PTMSLogManageService.ICarAlertDealLogService.EndGetCarAlertDealLog(System.IAsyncResult result) {
            return base.Channel.EndGetCarAlertDealLog(result);
        }
        
        private System.IAsyncResult OnBeginGetCarAlertDealLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            string vehicleId = ((string)(inValues[1]));
            string userName = ((string)(inValues[2]));
            System.DateTime startTime = ((System.DateTime)(inValues[3]));
            System.DateTime endTime = ((System.DateTime)(inValues[4]));
            Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo)(inValues[5]));
            return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.ICarAlertDealLogService)(this)).BeginGetCarAlertDealLog(clientID, vehicleId, userName, startTime, endTime, pageInfo, callback, asyncState);
        }
        
        private object[] OnEndGetCarAlertDealLog(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfCarAlertLogInfo7ZhGgAvu retVal = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.ICarAlertDealLogService)(this)).EndGetCarAlertDealLog(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCarAlertDealLogCompleted(object state) {
            if ((this.GetCarAlertDealLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCarAlertDealLogCompleted(this, new GetCarAlertDealLogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCarAlertDealLogAsync(string clientID, string vehicleId, string userName, System.DateTime startTime, System.DateTime endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo) {
            this.GetCarAlertDealLogAsync(clientID, vehicleId, userName, startTime, endTime, pageInfo, null);
        }
        
        public void GetCarAlertDealLogAsync(string clientID, string vehicleId, string userName, System.DateTime startTime, System.DateTime endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, object userState) {
            if ((this.onBeginGetCarAlertDealLogDelegate == null)) {
                this.onBeginGetCarAlertDealLogDelegate = new BeginOperationDelegate(this.OnBeginGetCarAlertDealLog);
            }
            if ((this.onEndGetCarAlertDealLogDelegate == null)) {
                this.onEndGetCarAlertDealLogDelegate = new EndOperationDelegate(this.OnEndGetCarAlertDealLog);
            }
            if ((this.onGetCarAlertDealLogCompletedDelegate == null)) {
                this.onGetCarAlertDealLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCarAlertDealLogCompleted);
            }
            base.InvokeAsync(this.onBeginGetCarAlertDealLogDelegate, new object[] {
                        clientID,
                        vehicleId,
                        userName,
                        startTime,
                        endTime,
                        pageInfo}, this.onEndGetCarAlertDealLogDelegate, this.onGetCarAlertDealLogCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Gsafety.PTMS.ServiceReference.PTMSLogManageService.ICarAlertDealLogService CreateChannel() {
            return new CarAlertDealLogServiceClientChannel(this);
        }
        
        private class CarAlertDealLogServiceClientChannel : ChannelBase<Gsafety.PTMS.ServiceReference.PTMSLogManageService.ICarAlertDealLogService>, Gsafety.PTMS.ServiceReference.PTMSLogManageService.ICarAlertDealLogService {
            
            public CarAlertDealLogServiceClientChannel(System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.PTMSLogManageService.ICarAlertDealLogService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetCarAlertDealLog(string clientID, string vehicleId, string userName, System.DateTime startTime, System.DateTime endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = clientID;
                _args[1] = vehicleId;
                _args[2] = userName;
                _args[3] = startTime;
                _args[4] = endTime;
                _args[5] = pageInfo;
                System.IAsyncResult _result = base.BeginInvoke("GetCarAlertDealLog", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfCarAlertLogInfo7ZhGgAvu EndGetCarAlertDealLog(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfCarAlertLogInfo7ZhGgAvu _result = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfCarAlertLogInfo7ZhGgAvu)(base.EndInvoke("GetCarAlertDealLog", _args, result)));
                return _result;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PTMSLogManageService.IInstallLogService")]
    public interface IInstallLogService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IInstallLogService/GetInstallLog", ReplyAction="http://tempuri.org/IInstallLogService/GetInstallLogResponse")]
        System.IAsyncResult BeginGetInstallLog(string clientID, string installStation, string installStaff, System.DateTime startTime, System.DateTime endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfInstallLogInfo7ZhGgAvu EndGetInstallLog(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInstallLogServiceChannel : Gsafety.PTMS.ServiceReference.PTMSLogManageService.IInstallLogService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetInstallLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInstallLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfInstallLogInfo7ZhGgAvu Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfInstallLogInfo7ZhGgAvu)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InstallLogServiceClient : System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.PTMSLogManageService.IInstallLogService>, Gsafety.PTMS.ServiceReference.PTMSLogManageService.IInstallLogService {
        
        private BeginOperationDelegate onBeginGetInstallLogDelegate;
        
        private EndOperationDelegate onEndGetInstallLogDelegate;
        
        private System.Threading.SendOrPostCallback onGetInstallLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public InstallLogServiceClient() {
        }
        
        public InstallLogServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InstallLogServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InstallLogServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InstallLogServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<GetInstallLogCompletedEventArgs> GetInstallLogCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PTMSLogManageService.IInstallLogService.BeginGetInstallLog(string clientID, string installStation, string installStaff, System.DateTime startTime, System.DateTime endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInstallLog(clientID, installStation, installStaff, startTime, endTime, pageInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfInstallLogInfo7ZhGgAvu Gsafety.PTMS.ServiceReference.PTMSLogManageService.IInstallLogService.EndGetInstallLog(System.IAsyncResult result) {
            return base.Channel.EndGetInstallLog(result);
        }
        
        private System.IAsyncResult OnBeginGetInstallLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            string installStation = ((string)(inValues[1]));
            string installStaff = ((string)(inValues[2]));
            System.DateTime startTime = ((System.DateTime)(inValues[3]));
            System.DateTime endTime = ((System.DateTime)(inValues[4]));
            Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo)(inValues[5]));
            return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.IInstallLogService)(this)).BeginGetInstallLog(clientID, installStation, installStaff, startTime, endTime, pageInfo, callback, asyncState);
        }
        
        private object[] OnEndGetInstallLog(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfInstallLogInfo7ZhGgAvu retVal = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.IInstallLogService)(this)).EndGetInstallLog(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInstallLogCompleted(object state) {
            if ((this.GetInstallLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInstallLogCompleted(this, new GetInstallLogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInstallLogAsync(string clientID, string installStation, string installStaff, System.DateTime startTime, System.DateTime endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo) {
            this.GetInstallLogAsync(clientID, installStation, installStaff, startTime, endTime, pageInfo, null);
        }
        
        public void GetInstallLogAsync(string clientID, string installStation, string installStaff, System.DateTime startTime, System.DateTime endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, object userState) {
            if ((this.onBeginGetInstallLogDelegate == null)) {
                this.onBeginGetInstallLogDelegate = new BeginOperationDelegate(this.OnBeginGetInstallLog);
            }
            if ((this.onEndGetInstallLogDelegate == null)) {
                this.onEndGetInstallLogDelegate = new EndOperationDelegate(this.OnEndGetInstallLog);
            }
            if ((this.onGetInstallLogCompletedDelegate == null)) {
                this.onGetInstallLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInstallLogCompleted);
            }
            base.InvokeAsync(this.onBeginGetInstallLogDelegate, new object[] {
                        clientID,
                        installStation,
                        installStaff,
                        startTime,
                        endTime,
                        pageInfo}, this.onEndGetInstallLogDelegate, this.onGetInstallLogCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Gsafety.PTMS.ServiceReference.PTMSLogManageService.IInstallLogService CreateChannel() {
            return new InstallLogServiceClientChannel(this);
        }
        
        private class InstallLogServiceClientChannel : ChannelBase<Gsafety.PTMS.ServiceReference.PTMSLogManageService.IInstallLogService>, Gsafety.PTMS.ServiceReference.PTMSLogManageService.IInstallLogService {
            
            public InstallLogServiceClientChannel(System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.PTMSLogManageService.IInstallLogService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetInstallLog(string clientID, string installStation, string installStaff, System.DateTime startTime, System.DateTime endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = clientID;
                _args[1] = installStation;
                _args[2] = installStaff;
                _args[3] = startTime;
                _args[4] = endTime;
                _args[5] = pageInfo;
                System.IAsyncResult _result = base.BeginInvoke("GetInstallLog", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfInstallLogInfo7ZhGgAvu EndGetInstallLog(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfInstallLogInfo7ZhGgAvu _result = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfInstallLogInfo7ZhGgAvu)(base.EndInvoke("GetInstallLog", _args, result)));
                return _result;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PTMSLogManageService.ILoginLogService")]
    public interface ILoginLogService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILoginLogService/AddLoginLog", ReplyAction="http://tempuri.org/ILoginLogService/AddLoginLogResponse")]
        System.IAsyncResult BeginAddLoginLog(Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogAccess access, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean EndAddLoginLog(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILoginLogService/GetLoginLog", ReplyAction="http://tempuri.org/ILoginLogService/GetLoginLogResponse")]
        System.IAsyncResult BeginGetLoginLog(string clientID, string userName, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogAccessi7Zg_POJ5 EndGetLoginLog(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILoginLogService/ClearLoginLog", ReplyAction="http://tempuri.org/ILoginLogService/ClearLoginLogResponse")]
        System.IAsyncResult BeginClearLoginLog(string clientID, string userID, string username, string content, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean EndClearLoginLog(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILoginLogServiceChannel : Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILoginLogService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddLoginLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddLoginLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLoginLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLoginLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogAccessi7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogAccessi7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClearLoginLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ClearLoginLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginLogServiceClient : System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILoginLogService>, Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILoginLogService {
        
        private BeginOperationDelegate onBeginAddLoginLogDelegate;
        
        private EndOperationDelegate onEndAddLoginLogDelegate;
        
        private System.Threading.SendOrPostCallback onAddLoginLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLoginLogDelegate;
        
        private EndOperationDelegate onEndGetLoginLogDelegate;
        
        private System.Threading.SendOrPostCallback onGetLoginLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginClearLoginLogDelegate;
        
        private EndOperationDelegate onEndClearLoginLogDelegate;
        
        private System.Threading.SendOrPostCallback onClearLoginLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public LoginLogServiceClient() {
        }
        
        public LoginLogServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoginLogServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginLogServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginLogServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<AddLoginLogCompletedEventArgs> AddLoginLogCompleted;
        
        public event System.EventHandler<GetLoginLogCompletedEventArgs> GetLoginLogCompleted;
        
        public event System.EventHandler<ClearLoginLogCompletedEventArgs> ClearLoginLogCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILoginLogService.BeginAddLoginLog(Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogAccess access, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddLoginLog(access, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILoginLogService.EndAddLoginLog(System.IAsyncResult result) {
            return base.Channel.EndAddLoginLog(result);
        }
        
        private System.IAsyncResult OnBeginAddLoginLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogAccess access = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogAccess)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILoginLogService)(this)).BeginAddLoginLog(access, callback, asyncState);
        }
        
        private object[] OnEndAddLoginLog(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILoginLogService)(this)).EndAddLoginLog(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddLoginLogCompleted(object state) {
            if ((this.AddLoginLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddLoginLogCompleted(this, new AddLoginLogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddLoginLogAsync(Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogAccess access) {
            this.AddLoginLogAsync(access, null);
        }
        
        public void AddLoginLogAsync(Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogAccess access, object userState) {
            if ((this.onBeginAddLoginLogDelegate == null)) {
                this.onBeginAddLoginLogDelegate = new BeginOperationDelegate(this.OnBeginAddLoginLog);
            }
            if ((this.onEndAddLoginLogDelegate == null)) {
                this.onEndAddLoginLogDelegate = new EndOperationDelegate(this.OnEndAddLoginLog);
            }
            if ((this.onAddLoginLogCompletedDelegate == null)) {
                this.onAddLoginLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddLoginLogCompleted);
            }
            base.InvokeAsync(this.onBeginAddLoginLogDelegate, new object[] {
                        access}, this.onEndAddLoginLogDelegate, this.onAddLoginLogCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILoginLogService.BeginGetLoginLog(string clientID, string userName, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLoginLog(clientID, userName, startTime, endTime, pageInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogAccessi7Zg_POJ5 Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILoginLogService.EndGetLoginLog(System.IAsyncResult result) {
            return base.Channel.EndGetLoginLog(result);
        }
        
        private System.IAsyncResult OnBeginGetLoginLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            string userName = ((string)(inValues[1]));
            System.Nullable<System.DateTime> startTime = ((System.Nullable<System.DateTime>)(inValues[2]));
            System.Nullable<System.DateTime> endTime = ((System.Nullable<System.DateTime>)(inValues[3]));
            Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo)(inValues[4]));
            return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILoginLogService)(this)).BeginGetLoginLog(clientID, userName, startTime, endTime, pageInfo, callback, asyncState);
        }
        
        private object[] OnEndGetLoginLog(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogAccessi7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILoginLogService)(this)).EndGetLoginLog(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLoginLogCompleted(object state) {
            if ((this.GetLoginLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLoginLogCompleted(this, new GetLoginLogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLoginLogAsync(string clientID, string userName, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo) {
            this.GetLoginLogAsync(clientID, userName, startTime, endTime, pageInfo, null);
        }
        
        public void GetLoginLogAsync(string clientID, string userName, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, object userState) {
            if ((this.onBeginGetLoginLogDelegate == null)) {
                this.onBeginGetLoginLogDelegate = new BeginOperationDelegate(this.OnBeginGetLoginLog);
            }
            if ((this.onEndGetLoginLogDelegate == null)) {
                this.onEndGetLoginLogDelegate = new EndOperationDelegate(this.OnEndGetLoginLog);
            }
            if ((this.onGetLoginLogCompletedDelegate == null)) {
                this.onGetLoginLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLoginLogCompleted);
            }
            base.InvokeAsync(this.onBeginGetLoginLogDelegate, new object[] {
                        clientID,
                        userName,
                        startTime,
                        endTime,
                        pageInfo}, this.onEndGetLoginLogDelegate, this.onGetLoginLogCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILoginLogService.BeginClearLoginLog(string clientID, string userID, string username, string content, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginClearLoginLog(clientID, userID, username, content, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILoginLogService.EndClearLoginLog(System.IAsyncResult result) {
            return base.Channel.EndClearLoginLog(result);
        }
        
        private System.IAsyncResult OnBeginClearLoginLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            string userID = ((string)(inValues[1]));
            string username = ((string)(inValues[2]));
            string content = ((string)(inValues[3]));
            return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILoginLogService)(this)).BeginClearLoginLog(clientID, userID, username, content, callback, asyncState);
        }
        
        private object[] OnEndClearLoginLog(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILoginLogService)(this)).EndClearLoginLog(result);
            return new object[] {
                    retVal};
        }
        
        private void OnClearLoginLogCompleted(object state) {
            if ((this.ClearLoginLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ClearLoginLogCompleted(this, new ClearLoginLogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ClearLoginLogAsync(string clientID, string userID, string username, string content) {
            this.ClearLoginLogAsync(clientID, userID, username, content, null);
        }
        
        public void ClearLoginLogAsync(string clientID, string userID, string username, string content, object userState) {
            if ((this.onBeginClearLoginLogDelegate == null)) {
                this.onBeginClearLoginLogDelegate = new BeginOperationDelegate(this.OnBeginClearLoginLog);
            }
            if ((this.onEndClearLoginLogDelegate == null)) {
                this.onEndClearLoginLogDelegate = new EndOperationDelegate(this.OnEndClearLoginLog);
            }
            if ((this.onClearLoginLogCompletedDelegate == null)) {
                this.onClearLoginLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnClearLoginLogCompleted);
            }
            base.InvokeAsync(this.onBeginClearLoginLogDelegate, new object[] {
                        clientID,
                        userID,
                        username,
                        content}, this.onEndClearLoginLogDelegate, this.onClearLoginLogCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILoginLogService CreateChannel() {
            return new LoginLogServiceClientChannel(this);
        }
        
        private class LoginLogServiceClientChannel : ChannelBase<Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILoginLogService>, Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILoginLogService {
            
            public LoginLogServiceClientChannel(System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILoginLogService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginAddLoginLog(Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogAccess access, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = access;
                System.IAsyncResult _result = base.BeginInvoke("AddLoginLog", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean EndAddLoginLog(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean)(base.EndInvoke("AddLoginLog", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLoginLog(string clientID, string userName, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = clientID;
                _args[1] = userName;
                _args[2] = startTime;
                _args[3] = endTime;
                _args[4] = pageInfo;
                System.IAsyncResult _result = base.BeginInvoke("GetLoginLog", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogAccessi7Zg_POJ5 EndGetLoginLog(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogAccessi7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogAccessi7Zg_POJ5)(base.EndInvoke("GetLoginLog", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginClearLoginLog(string clientID, string userID, string username, string content, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = clientID;
                _args[1] = userID;
                _args[2] = username;
                _args[3] = content;
                System.IAsyncResult _result = base.BeginInvoke("ClearLoginLog", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean EndClearLoginLog(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean)(base.EndInvoke("ClearLoginLog", _args, result)));
                return _result;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PTMSLogManageService.IVideoDowmloadLogService")]
    public interface IVideoDowmloadLogService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVideoDowmloadLogService/GetVideoDownloadLog", ReplyAction="http://tempuri.org/IVideoDowmloadLogService/GetVideoDownloadLogResponse")]
        System.IAsyncResult BeginGetVideoDownloadLog(string downloader, string type, System.DateTime startTime, System.DateTime endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfVideoLogInfo7ZhGgAvu EndGetVideoDownloadLog(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVideoDowmloadLogServiceChannel : Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVideoDowmloadLogService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVideoDownloadLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVideoDownloadLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfVideoLogInfo7ZhGgAvu Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfVideoLogInfo7ZhGgAvu)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VideoDowmloadLogServiceClient : System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVideoDowmloadLogService>, Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVideoDowmloadLogService {
        
        private BeginOperationDelegate onBeginGetVideoDownloadLogDelegate;
        
        private EndOperationDelegate onEndGetVideoDownloadLogDelegate;
        
        private System.Threading.SendOrPostCallback onGetVideoDownloadLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public VideoDowmloadLogServiceClient() {
        }
        
        public VideoDowmloadLogServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VideoDowmloadLogServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VideoDowmloadLogServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VideoDowmloadLogServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<GetVideoDownloadLogCompletedEventArgs> GetVideoDownloadLogCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVideoDowmloadLogService.BeginGetVideoDownloadLog(string downloader, string type, System.DateTime startTime, System.DateTime endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVideoDownloadLog(downloader, type, startTime, endTime, pageInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfVideoLogInfo7ZhGgAvu Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVideoDowmloadLogService.EndGetVideoDownloadLog(System.IAsyncResult result) {
            return base.Channel.EndGetVideoDownloadLog(result);
        }
        
        private System.IAsyncResult OnBeginGetVideoDownloadLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string downloader = ((string)(inValues[0]));
            string type = ((string)(inValues[1]));
            System.DateTime startTime = ((System.DateTime)(inValues[2]));
            System.DateTime endTime = ((System.DateTime)(inValues[3]));
            Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo)(inValues[4]));
            return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVideoDowmloadLogService)(this)).BeginGetVideoDownloadLog(downloader, type, startTime, endTime, pageInfo, callback, asyncState);
        }
        
        private object[] OnEndGetVideoDownloadLog(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfVideoLogInfo7ZhGgAvu retVal = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVideoDowmloadLogService)(this)).EndGetVideoDownloadLog(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVideoDownloadLogCompleted(object state) {
            if ((this.GetVideoDownloadLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVideoDownloadLogCompleted(this, new GetVideoDownloadLogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVideoDownloadLogAsync(string downloader, string type, System.DateTime startTime, System.DateTime endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo) {
            this.GetVideoDownloadLogAsync(downloader, type, startTime, endTime, pageInfo, null);
        }
        
        public void GetVideoDownloadLogAsync(string downloader, string type, System.DateTime startTime, System.DateTime endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, object userState) {
            if ((this.onBeginGetVideoDownloadLogDelegate == null)) {
                this.onBeginGetVideoDownloadLogDelegate = new BeginOperationDelegate(this.OnBeginGetVideoDownloadLog);
            }
            if ((this.onEndGetVideoDownloadLogDelegate == null)) {
                this.onEndGetVideoDownloadLogDelegate = new EndOperationDelegate(this.OnEndGetVideoDownloadLog);
            }
            if ((this.onGetVideoDownloadLogCompletedDelegate == null)) {
                this.onGetVideoDownloadLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVideoDownloadLogCompleted);
            }
            base.InvokeAsync(this.onBeginGetVideoDownloadLogDelegate, new object[] {
                        downloader,
                        type,
                        startTime,
                        endTime,
                        pageInfo}, this.onEndGetVideoDownloadLogDelegate, this.onGetVideoDownloadLogCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVideoDowmloadLogService CreateChannel() {
            return new VideoDowmloadLogServiceClientChannel(this);
        }
        
        private class VideoDowmloadLogServiceClientChannel : ChannelBase<Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVideoDowmloadLogService>, Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVideoDowmloadLogService {
            
            public VideoDowmloadLogServiceClientChannel(System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVideoDowmloadLogService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetVideoDownloadLog(string downloader, string type, System.DateTime startTime, System.DateTime endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = downloader;
                _args[1] = type;
                _args[2] = startTime;
                _args[3] = endTime;
                _args[4] = pageInfo;
                System.IAsyncResult _result = base.BeginInvoke("GetVideoDownloadLog", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfVideoLogInfo7ZhGgAvu EndGetVideoDownloadLog(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfVideoLogInfo7ZhGgAvu _result = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfVideoLogInfo7ZhGgAvu)(base.EndInvoke("GetVideoDownloadLog", _args, result)));
                return _result;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PTMSLogManageService.IVideoLogSerVice")]
    public interface IVideoLogSerVice {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVideoLogSerVice/GetVideoLog", ReplyAction="http://tempuri.org/IVideoLogSerVice/GetVideoLogResponse")]
        System.IAsyncResult BeginGetVideoLog(string player, string type, System.DateTime startTime, System.DateTime endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfVideoLogInfo7ZhGgAvu EndGetVideoLog(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVideoLogSerViceChannel : Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVideoLogSerVice, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVideoLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVideoLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfVideoLogInfo7ZhGgAvu Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfVideoLogInfo7ZhGgAvu)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VideoLogSerViceClient : System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVideoLogSerVice>, Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVideoLogSerVice {
        
        private BeginOperationDelegate onBeginGetVideoLogDelegate;
        
        private EndOperationDelegate onEndGetVideoLogDelegate;
        
        private System.Threading.SendOrPostCallback onGetVideoLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public VideoLogSerViceClient() {
        }
        
        public VideoLogSerViceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VideoLogSerViceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VideoLogSerViceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VideoLogSerViceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<GetVideoLogCompletedEventArgs> GetVideoLogCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVideoLogSerVice.BeginGetVideoLog(string player, string type, System.DateTime startTime, System.DateTime endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVideoLog(player, type, startTime, endTime, pageInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfVideoLogInfo7ZhGgAvu Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVideoLogSerVice.EndGetVideoLog(System.IAsyncResult result) {
            return base.Channel.EndGetVideoLog(result);
        }
        
        private System.IAsyncResult OnBeginGetVideoLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string player = ((string)(inValues[0]));
            string type = ((string)(inValues[1]));
            System.DateTime startTime = ((System.DateTime)(inValues[2]));
            System.DateTime endTime = ((System.DateTime)(inValues[3]));
            Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo)(inValues[4]));
            return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVideoLogSerVice)(this)).BeginGetVideoLog(player, type, startTime, endTime, pageInfo, callback, asyncState);
        }
        
        private object[] OnEndGetVideoLog(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfVideoLogInfo7ZhGgAvu retVal = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVideoLogSerVice)(this)).EndGetVideoLog(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVideoLogCompleted(object state) {
            if ((this.GetVideoLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVideoLogCompleted(this, new GetVideoLogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVideoLogAsync(string player, string type, System.DateTime startTime, System.DateTime endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo) {
            this.GetVideoLogAsync(player, type, startTime, endTime, pageInfo, null);
        }
        
        public void GetVideoLogAsync(string player, string type, System.DateTime startTime, System.DateTime endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, object userState) {
            if ((this.onBeginGetVideoLogDelegate == null)) {
                this.onBeginGetVideoLogDelegate = new BeginOperationDelegate(this.OnBeginGetVideoLog);
            }
            if ((this.onEndGetVideoLogDelegate == null)) {
                this.onEndGetVideoLogDelegate = new EndOperationDelegate(this.OnEndGetVideoLog);
            }
            if ((this.onGetVideoLogCompletedDelegate == null)) {
                this.onGetVideoLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVideoLogCompleted);
            }
            base.InvokeAsync(this.onBeginGetVideoLogDelegate, new object[] {
                        player,
                        type,
                        startTime,
                        endTime,
                        pageInfo}, this.onEndGetVideoLogDelegate, this.onGetVideoLogCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVideoLogSerVice CreateChannel() {
            return new VideoLogSerViceClientChannel(this);
        }
        
        private class VideoLogSerViceClientChannel : ChannelBase<Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVideoLogSerVice>, Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVideoLogSerVice {
            
            public VideoLogSerViceClientChannel(System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVideoLogSerVice> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetVideoLog(string player, string type, System.DateTime startTime, System.DateTime endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = player;
                _args[1] = type;
                _args[2] = startTime;
                _args[3] = endTime;
                _args[4] = pageInfo;
                System.IAsyncResult _result = base.BeginInvoke("GetVideoLog", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfVideoLogInfo7ZhGgAvu EndGetVideoLog(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfVideoLogInfo7ZhGgAvu _result = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfVideoLogInfo7ZhGgAvu)(base.EndInvoke("GetVideoLog", _args, result)));
                return _result;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PTMSLogManageService.IVisitLogService")]
    public interface IVisitLogService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVisitLogService/AddVisitLog", ReplyAction="http://tempuri.org/IVisitLogService/AddVisitLogResponse")]
        System.IAsyncResult BeginAddVisitLog(Gsafety.PTMS.ServiceReference.PTMSLogManageService.VisitLogInfo visitLog, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean EndAddVisitLog(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVisitLogService/GetVisitLog", ReplyAction="http://tempuri.org/IVisitLogService/GetVisitLogResponse")]
        System.IAsyncResult BeginGetVisitLog(string visitor, int type, System.DateTime startTime, System.DateTime endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfVisitLogInfo7ZhGgAvu EndGetVisitLog(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVisitLogService/ClearVisitLog", ReplyAction="http://tempuri.org/IVisitLogService/ClearVisitLogResponse")]
        System.IAsyncResult BeginClearVisitLog(System.DateTime startTime, System.DateTime endTime, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean EndClearVisitLog(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVisitLogServiceChannel : Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVisitLogService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddVisitLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddVisitLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVisitLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVisitLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfVisitLogInfo7ZhGgAvu Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfVisitLogInfo7ZhGgAvu)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClearVisitLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ClearVisitLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VisitLogServiceClient : System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVisitLogService>, Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVisitLogService {
        
        private BeginOperationDelegate onBeginAddVisitLogDelegate;
        
        private EndOperationDelegate onEndAddVisitLogDelegate;
        
        private System.Threading.SendOrPostCallback onAddVisitLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVisitLogDelegate;
        
        private EndOperationDelegate onEndGetVisitLogDelegate;
        
        private System.Threading.SendOrPostCallback onGetVisitLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginClearVisitLogDelegate;
        
        private EndOperationDelegate onEndClearVisitLogDelegate;
        
        private System.Threading.SendOrPostCallback onClearVisitLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public VisitLogServiceClient() {
        }
        
        public VisitLogServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VisitLogServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VisitLogServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VisitLogServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<AddVisitLogCompletedEventArgs> AddVisitLogCompleted;
        
        public event System.EventHandler<GetVisitLogCompletedEventArgs> GetVisitLogCompleted;
        
        public event System.EventHandler<ClearVisitLogCompletedEventArgs> ClearVisitLogCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVisitLogService.BeginAddVisitLog(Gsafety.PTMS.ServiceReference.PTMSLogManageService.VisitLogInfo visitLog, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddVisitLog(visitLog, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVisitLogService.EndAddVisitLog(System.IAsyncResult result) {
            return base.Channel.EndAddVisitLog(result);
        }
        
        private System.IAsyncResult OnBeginAddVisitLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.PTMSLogManageService.VisitLogInfo visitLog = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.VisitLogInfo)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVisitLogService)(this)).BeginAddVisitLog(visitLog, callback, asyncState);
        }
        
        private object[] OnEndAddVisitLog(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVisitLogService)(this)).EndAddVisitLog(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddVisitLogCompleted(object state) {
            if ((this.AddVisitLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddVisitLogCompleted(this, new AddVisitLogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddVisitLogAsync(Gsafety.PTMS.ServiceReference.PTMSLogManageService.VisitLogInfo visitLog) {
            this.AddVisitLogAsync(visitLog, null);
        }
        
        public void AddVisitLogAsync(Gsafety.PTMS.ServiceReference.PTMSLogManageService.VisitLogInfo visitLog, object userState) {
            if ((this.onBeginAddVisitLogDelegate == null)) {
                this.onBeginAddVisitLogDelegate = new BeginOperationDelegate(this.OnBeginAddVisitLog);
            }
            if ((this.onEndAddVisitLogDelegate == null)) {
                this.onEndAddVisitLogDelegate = new EndOperationDelegate(this.OnEndAddVisitLog);
            }
            if ((this.onAddVisitLogCompletedDelegate == null)) {
                this.onAddVisitLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddVisitLogCompleted);
            }
            base.InvokeAsync(this.onBeginAddVisitLogDelegate, new object[] {
                        visitLog}, this.onEndAddVisitLogDelegate, this.onAddVisitLogCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVisitLogService.BeginGetVisitLog(string visitor, int type, System.DateTime startTime, System.DateTime endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVisitLog(visitor, type, startTime, endTime, pageInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfVisitLogInfo7ZhGgAvu Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVisitLogService.EndGetVisitLog(System.IAsyncResult result) {
            return base.Channel.EndGetVisitLog(result);
        }
        
        private System.IAsyncResult OnBeginGetVisitLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string visitor = ((string)(inValues[0]));
            int type = ((int)(inValues[1]));
            System.DateTime startTime = ((System.DateTime)(inValues[2]));
            System.DateTime endTime = ((System.DateTime)(inValues[3]));
            Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo)(inValues[4]));
            return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVisitLogService)(this)).BeginGetVisitLog(visitor, type, startTime, endTime, pageInfo, callback, asyncState);
        }
        
        private object[] OnEndGetVisitLog(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfVisitLogInfo7ZhGgAvu retVal = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVisitLogService)(this)).EndGetVisitLog(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVisitLogCompleted(object state) {
            if ((this.GetVisitLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVisitLogCompleted(this, new GetVisitLogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVisitLogAsync(string visitor, int type, System.DateTime startTime, System.DateTime endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo) {
            this.GetVisitLogAsync(visitor, type, startTime, endTime, pageInfo, null);
        }
        
        public void GetVisitLogAsync(string visitor, int type, System.DateTime startTime, System.DateTime endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, object userState) {
            if ((this.onBeginGetVisitLogDelegate == null)) {
                this.onBeginGetVisitLogDelegate = new BeginOperationDelegate(this.OnBeginGetVisitLog);
            }
            if ((this.onEndGetVisitLogDelegate == null)) {
                this.onEndGetVisitLogDelegate = new EndOperationDelegate(this.OnEndGetVisitLog);
            }
            if ((this.onGetVisitLogCompletedDelegate == null)) {
                this.onGetVisitLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVisitLogCompleted);
            }
            base.InvokeAsync(this.onBeginGetVisitLogDelegate, new object[] {
                        visitor,
                        type,
                        startTime,
                        endTime,
                        pageInfo}, this.onEndGetVisitLogDelegate, this.onGetVisitLogCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVisitLogService.BeginClearVisitLog(System.DateTime startTime, System.DateTime endTime, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginClearVisitLog(startTime, endTime, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVisitLogService.EndClearVisitLog(System.IAsyncResult result) {
            return base.Channel.EndClearVisitLog(result);
        }
        
        private System.IAsyncResult OnBeginClearVisitLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.DateTime startTime = ((System.DateTime)(inValues[0]));
            System.DateTime endTime = ((System.DateTime)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVisitLogService)(this)).BeginClearVisitLog(startTime, endTime, callback, asyncState);
        }
        
        private object[] OnEndClearVisitLog(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVisitLogService)(this)).EndClearVisitLog(result);
            return new object[] {
                    retVal};
        }
        
        private void OnClearVisitLogCompleted(object state) {
            if ((this.ClearVisitLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ClearVisitLogCompleted(this, new ClearVisitLogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ClearVisitLogAsync(System.DateTime startTime, System.DateTime endTime) {
            this.ClearVisitLogAsync(startTime, endTime, null);
        }
        
        public void ClearVisitLogAsync(System.DateTime startTime, System.DateTime endTime, object userState) {
            if ((this.onBeginClearVisitLogDelegate == null)) {
                this.onBeginClearVisitLogDelegate = new BeginOperationDelegate(this.OnBeginClearVisitLog);
            }
            if ((this.onEndClearVisitLogDelegate == null)) {
                this.onEndClearVisitLogDelegate = new EndOperationDelegate(this.OnEndClearVisitLog);
            }
            if ((this.onClearVisitLogCompletedDelegate == null)) {
                this.onClearVisitLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnClearVisitLogCompleted);
            }
            base.InvokeAsync(this.onBeginClearVisitLogDelegate, new object[] {
                        startTime,
                        endTime}, this.onEndClearVisitLogDelegate, this.onClearVisitLogCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVisitLogService CreateChannel() {
            return new VisitLogServiceClientChannel(this);
        }
        
        private class VisitLogServiceClientChannel : ChannelBase<Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVisitLogService>, Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVisitLogService {
            
            public VisitLogServiceClientChannel(System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.PTMSLogManageService.IVisitLogService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginAddVisitLog(Gsafety.PTMS.ServiceReference.PTMSLogManageService.VisitLogInfo visitLog, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = visitLog;
                System.IAsyncResult _result = base.BeginInvoke("AddVisitLog", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean EndAddVisitLog(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean)(base.EndInvoke("AddVisitLog", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetVisitLog(string visitor, int type, System.DateTime startTime, System.DateTime endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = visitor;
                _args[1] = type;
                _args[2] = startTime;
                _args[3] = endTime;
                _args[4] = pageInfo;
                System.IAsyncResult _result = base.BeginInvoke("GetVisitLog", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfVisitLogInfo7ZhGgAvu EndGetVisitLog(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfVisitLogInfo7ZhGgAvu _result = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfVisitLogInfo7ZhGgAvu)(base.EndInvoke("GetVisitLog", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginClearVisitLog(System.DateTime startTime, System.DateTime endTime, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = startTime;
                _args[1] = endTime;
                System.IAsyncResult _result = base.BeginInvoke("ClearVisitLog", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean EndClearVisitLog(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean)(base.EndInvoke("ClearVisitLog", _args, result)));
                return _result;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PTMSLogManageService.IGetSuiteInfoService")]
    public interface IGetSuiteInfoService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IGetSuiteInfoService/GetSuitInfo", ReplyAction="http://tempuri.org/IGetSuiteInfoService/GetSuitInfoResponse")]
        System.IAsyncResult BeginGetSuitInfo(string suiteID, System.DateTime startTime, System.DateTime endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfSuiteInfoLog7ZhGgAvu EndGetSuitInfo(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGetSuiteInfoServiceChannel : Gsafety.PTMS.ServiceReference.PTMSLogManageService.IGetSuiteInfoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSuitInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSuitInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfSuiteInfoLog7ZhGgAvu Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfSuiteInfoLog7ZhGgAvu)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSuiteInfoServiceClient : System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.PTMSLogManageService.IGetSuiteInfoService>, Gsafety.PTMS.ServiceReference.PTMSLogManageService.IGetSuiteInfoService {
        
        private BeginOperationDelegate onBeginGetSuitInfoDelegate;
        
        private EndOperationDelegate onEndGetSuitInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetSuitInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public GetSuiteInfoServiceClient() {
        }
        
        public GetSuiteInfoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GetSuiteInfoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GetSuiteInfoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GetSuiteInfoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<GetSuitInfoCompletedEventArgs> GetSuitInfoCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PTMSLogManageService.IGetSuiteInfoService.BeginGetSuitInfo(string suiteID, System.DateTime startTime, System.DateTime endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSuitInfo(suiteID, startTime, endTime, pageInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfSuiteInfoLog7ZhGgAvu Gsafety.PTMS.ServiceReference.PTMSLogManageService.IGetSuiteInfoService.EndGetSuitInfo(System.IAsyncResult result) {
            return base.Channel.EndGetSuitInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetSuitInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string suiteID = ((string)(inValues[0]));
            System.DateTime startTime = ((System.DateTime)(inValues[1]));
            System.DateTime endTime = ((System.DateTime)(inValues[2]));
            Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo)(inValues[3]));
            return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.IGetSuiteInfoService)(this)).BeginGetSuitInfo(suiteID, startTime, endTime, pageInfo, callback, asyncState);
        }
        
        private object[] OnEndGetSuitInfo(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfSuiteInfoLog7ZhGgAvu retVal = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.IGetSuiteInfoService)(this)).EndGetSuitInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSuitInfoCompleted(object state) {
            if ((this.GetSuitInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSuitInfoCompleted(this, new GetSuitInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSuitInfoAsync(string suiteID, System.DateTime startTime, System.DateTime endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo) {
            this.GetSuitInfoAsync(suiteID, startTime, endTime, pageInfo, null);
        }
        
        public void GetSuitInfoAsync(string suiteID, System.DateTime startTime, System.DateTime endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, object userState) {
            if ((this.onBeginGetSuitInfoDelegate == null)) {
                this.onBeginGetSuitInfoDelegate = new BeginOperationDelegate(this.OnBeginGetSuitInfo);
            }
            if ((this.onEndGetSuitInfoDelegate == null)) {
                this.onEndGetSuitInfoDelegate = new EndOperationDelegate(this.OnEndGetSuitInfo);
            }
            if ((this.onGetSuitInfoCompletedDelegate == null)) {
                this.onGetSuitInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSuitInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetSuitInfoDelegate, new object[] {
                        suiteID,
                        startTime,
                        endTime,
                        pageInfo}, this.onEndGetSuitInfoDelegate, this.onGetSuitInfoCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Gsafety.PTMS.ServiceReference.PTMSLogManageService.IGetSuiteInfoService CreateChannel() {
            return new GetSuiteInfoServiceClientChannel(this);
        }
        
        private class GetSuiteInfoServiceClientChannel : ChannelBase<Gsafety.PTMS.ServiceReference.PTMSLogManageService.IGetSuiteInfoService>, Gsafety.PTMS.ServiceReference.PTMSLogManageService.IGetSuiteInfoService {
            
            public GetSuiteInfoServiceClientChannel(System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.PTMSLogManageService.IGetSuiteInfoService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetSuitInfo(string suiteID, System.DateTime startTime, System.DateTime endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = suiteID;
                _args[1] = startTime;
                _args[2] = endTime;
                _args[3] = pageInfo;
                System.IAsyncResult _result = base.BeginInvoke("GetSuitInfo", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfSuiteInfoLog7ZhGgAvu EndGetSuitInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfSuiteInfoLog7ZhGgAvu _result = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfSuiteInfoLog7ZhGgAvu)(base.EndInvoke("GetSuitInfo", _args, result)));
                return _result;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PTMSLogManageService.ILogOperate")]
    public interface ILogOperate {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILogOperate/GetOperationLogList", ReplyAction="http://tempuri.org/ILogOperate/GetOperationLogListResponse")]
        System.IAsyncResult BeginGetOperationLogList(string userName, string clientID, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogOperatei7Zg_POJ5 EndGetOperationLogList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILogOperate/ClearOperateLog", ReplyAction="http://tempuri.org/ILogOperate/ClearOperateLogResponse")]
        System.IAsyncResult BeginClearOperateLog(string clientID, Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogOperate log, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean EndClearOperateLog(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILogOperateChannel : Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogOperate, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOperationLogListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOperationLogListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogOperatei7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogOperatei7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClearOperateLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ClearOperateLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LogOperateClient : System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogOperate>, Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogOperate {
        
        private BeginOperationDelegate onBeginGetOperationLogListDelegate;
        
        private EndOperationDelegate onEndGetOperationLogListDelegate;
        
        private System.Threading.SendOrPostCallback onGetOperationLogListCompletedDelegate;
        
        private BeginOperationDelegate onBeginClearOperateLogDelegate;
        
        private EndOperationDelegate onEndClearOperateLogDelegate;
        
        private System.Threading.SendOrPostCallback onClearOperateLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public LogOperateClient() {
        }
        
        public LogOperateClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LogOperateClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LogOperateClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LogOperateClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<GetOperationLogListCompletedEventArgs> GetOperationLogListCompleted;
        
        public event System.EventHandler<ClearOperateLogCompletedEventArgs> ClearOperateLogCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogOperate.BeginGetOperationLogList(string userName, string clientID, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOperationLogList(userName, clientID, startTime, endTime, pageIndex, pageSize, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogOperatei7Zg_POJ5 Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogOperate.EndGetOperationLogList(System.IAsyncResult result) {
            return base.Channel.EndGetOperationLogList(result);
        }
        
        private System.IAsyncResult OnBeginGetOperationLogList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            string clientID = ((string)(inValues[1]));
            System.Nullable<System.DateTime> startTime = ((System.Nullable<System.DateTime>)(inValues[2]));
            System.Nullable<System.DateTime> endTime = ((System.Nullable<System.DateTime>)(inValues[3]));
            int pageIndex = ((int)(inValues[4]));
            int pageSize = ((int)(inValues[5]));
            return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogOperate)(this)).BeginGetOperationLogList(userName, clientID, startTime, endTime, pageIndex, pageSize, callback, asyncState);
        }
        
        private object[] OnEndGetOperationLogList(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogOperatei7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogOperate)(this)).EndGetOperationLogList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOperationLogListCompleted(object state) {
            if ((this.GetOperationLogListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOperationLogListCompleted(this, new GetOperationLogListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOperationLogListAsync(string userName, string clientID, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, int pageIndex, int pageSize) {
            this.GetOperationLogListAsync(userName, clientID, startTime, endTime, pageIndex, pageSize, null);
        }
        
        public void GetOperationLogListAsync(string userName, string clientID, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, int pageIndex, int pageSize, object userState) {
            if ((this.onBeginGetOperationLogListDelegate == null)) {
                this.onBeginGetOperationLogListDelegate = new BeginOperationDelegate(this.OnBeginGetOperationLogList);
            }
            if ((this.onEndGetOperationLogListDelegate == null)) {
                this.onEndGetOperationLogListDelegate = new EndOperationDelegate(this.OnEndGetOperationLogList);
            }
            if ((this.onGetOperationLogListCompletedDelegate == null)) {
                this.onGetOperationLogListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOperationLogListCompleted);
            }
            base.InvokeAsync(this.onBeginGetOperationLogListDelegate, new object[] {
                        userName,
                        clientID,
                        startTime,
                        endTime,
                        pageIndex,
                        pageSize}, this.onEndGetOperationLogListDelegate, this.onGetOperationLogListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogOperate.BeginClearOperateLog(string clientID, Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogOperate log, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginClearOperateLog(clientID, log, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogOperate.EndClearOperateLog(System.IAsyncResult result) {
            return base.Channel.EndClearOperateLog(result);
        }
        
        private System.IAsyncResult OnBeginClearOperateLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogOperate log = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogOperate)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogOperate)(this)).BeginClearOperateLog(clientID, log, callback, asyncState);
        }
        
        private object[] OnEndClearOperateLog(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogOperate)(this)).EndClearOperateLog(result);
            return new object[] {
                    retVal};
        }
        
        private void OnClearOperateLogCompleted(object state) {
            if ((this.ClearOperateLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ClearOperateLogCompleted(this, new ClearOperateLogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ClearOperateLogAsync(string clientID, Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogOperate log) {
            this.ClearOperateLogAsync(clientID, log, null);
        }
        
        public void ClearOperateLogAsync(string clientID, Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogOperate log, object userState) {
            if ((this.onBeginClearOperateLogDelegate == null)) {
                this.onBeginClearOperateLogDelegate = new BeginOperationDelegate(this.OnBeginClearOperateLog);
            }
            if ((this.onEndClearOperateLogDelegate == null)) {
                this.onEndClearOperateLogDelegate = new EndOperationDelegate(this.OnEndClearOperateLog);
            }
            if ((this.onClearOperateLogCompletedDelegate == null)) {
                this.onClearOperateLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnClearOperateLogCompleted);
            }
            base.InvokeAsync(this.onBeginClearOperateLogDelegate, new object[] {
                        clientID,
                        log}, this.onEndClearOperateLogDelegate, this.onClearOperateLogCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogOperate CreateChannel() {
            return new LogOperateClientChannel(this);
        }
        
        private class LogOperateClientChannel : ChannelBase<Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogOperate>, Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogOperate {
            
            public LogOperateClientChannel(System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogOperate> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetOperationLogList(string userName, string clientID, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = userName;
                _args[1] = clientID;
                _args[2] = startTime;
                _args[3] = endTime;
                _args[4] = pageIndex;
                _args[5] = pageSize;
                System.IAsyncResult _result = base.BeginInvoke("GetOperationLogList", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogOperatei7Zg_POJ5 EndGetOperationLogList(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogOperatei7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogOperatei7Zg_POJ5)(base.EndInvoke("GetOperationLogList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginClearOperateLog(string clientID, Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogOperate log, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = clientID;
                _args[1] = log;
                System.IAsyncResult _result = base.BeginInvoke("ClearOperateLog", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean EndClearOperateLog(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean)(base.EndInvoke("ClearOperateLog", _args, result)));
                return _result;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PTMSLogManageService.ILogVideo")]
    public interface ILogVideo {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILogVideo/InsertVideoDownloadLog", ReplyAction="http://tempuri.org/ILogVideo/InsertVideoDownloadLogResponse")]
        System.IAsyncResult BeginInsertVideoDownloadLog(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogVideo> models, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean EndInsertVideoDownloadLog(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILogVideo/InsertVideoPlayLog", ReplyAction="http://tempuri.org/ILogVideo/InsertVideoPlayLogResponse")]
        System.IAsyncResult BeginInsertVideoPlayLog(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogVideo> models, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean EndInsertVideoPlayLog(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILogVideo/ClearVideoDownloadLog", ReplyAction="http://tempuri.org/ILogVideo/ClearVideoDownloadLogResponse")]
        System.IAsyncResult BeginClearVideoDownloadLog(string ClientID, Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogOperate log, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean EndClearVideoDownloadLog(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILogVideo/ClearVideoPlayLog", ReplyAction="http://tempuri.org/ILogVideo/ClearVideoPlayLogResponse")]
        System.IAsyncResult BeginClearVideoPlayLog(string ClientID, Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogOperate log, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean EndClearVideoPlayLog(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILogVideo/GetVideoPlayLogList", ReplyAction="http://tempuri.org/ILogVideo/GetVideoPlayLogListResponse")]
        System.IAsyncResult BeginGetVideoPlayLogList(string clientID, string vehicleID, string userName, string mdvrCoreSN, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogVideoi7Zg_POJ5 EndGetVideoPlayLogList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILogVideo/GetVideoDownloadLogList", ReplyAction="http://tempuri.org/ILogVideo/GetVideoDownloadLogListResponse")]
        System.IAsyncResult BeginGetVideoDownloadLogList(string clientID, string vehicleID, string userName, string mdvrCoreSN, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogVideoi7Zg_POJ5 EndGetVideoDownloadLogList(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILogVideoChannel : Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogVideo, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertVideoDownloadLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertVideoDownloadLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertVideoPlayLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertVideoPlayLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClearVideoDownloadLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ClearVideoDownloadLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClearVideoPlayLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ClearVideoPlayLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVideoPlayLogListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVideoPlayLogListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogVideoi7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogVideoi7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVideoDownloadLogListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVideoDownloadLogListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogVideoi7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogVideoi7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LogVideoClient : System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogVideo>, Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogVideo {
        
        private BeginOperationDelegate onBeginInsertVideoDownloadLogDelegate;
        
        private EndOperationDelegate onEndInsertVideoDownloadLogDelegate;
        
        private System.Threading.SendOrPostCallback onInsertVideoDownloadLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertVideoPlayLogDelegate;
        
        private EndOperationDelegate onEndInsertVideoPlayLogDelegate;
        
        private System.Threading.SendOrPostCallback onInsertVideoPlayLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginClearVideoDownloadLogDelegate;
        
        private EndOperationDelegate onEndClearVideoDownloadLogDelegate;
        
        private System.Threading.SendOrPostCallback onClearVideoDownloadLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginClearVideoPlayLogDelegate;
        
        private EndOperationDelegate onEndClearVideoPlayLogDelegate;
        
        private System.Threading.SendOrPostCallback onClearVideoPlayLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVideoPlayLogListDelegate;
        
        private EndOperationDelegate onEndGetVideoPlayLogListDelegate;
        
        private System.Threading.SendOrPostCallback onGetVideoPlayLogListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVideoDownloadLogListDelegate;
        
        private EndOperationDelegate onEndGetVideoDownloadLogListDelegate;
        
        private System.Threading.SendOrPostCallback onGetVideoDownloadLogListCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public LogVideoClient() {
        }
        
        public LogVideoClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LogVideoClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LogVideoClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LogVideoClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<InsertVideoDownloadLogCompletedEventArgs> InsertVideoDownloadLogCompleted;
        
        public event System.EventHandler<InsertVideoPlayLogCompletedEventArgs> InsertVideoPlayLogCompleted;
        
        public event System.EventHandler<ClearVideoDownloadLogCompletedEventArgs> ClearVideoDownloadLogCompleted;
        
        public event System.EventHandler<ClearVideoPlayLogCompletedEventArgs> ClearVideoPlayLogCompleted;
        
        public event System.EventHandler<GetVideoPlayLogListCompletedEventArgs> GetVideoPlayLogListCompleted;
        
        public event System.EventHandler<GetVideoDownloadLogListCompletedEventArgs> GetVideoDownloadLogListCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogVideo.BeginInsertVideoDownloadLog(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogVideo> models, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertVideoDownloadLog(models, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogVideo.EndInsertVideoDownloadLog(System.IAsyncResult result) {
            return base.Channel.EndInsertVideoDownloadLog(result);
        }
        
        private System.IAsyncResult OnBeginInsertVideoDownloadLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogVideo> models = ((System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogVideo>)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogVideo)(this)).BeginInsertVideoDownloadLog(models, callback, asyncState);
        }
        
        private object[] OnEndInsertVideoDownloadLog(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogVideo)(this)).EndInsertVideoDownloadLog(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertVideoDownloadLogCompleted(object state) {
            if ((this.InsertVideoDownloadLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertVideoDownloadLogCompleted(this, new InsertVideoDownloadLogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertVideoDownloadLogAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogVideo> models) {
            this.InsertVideoDownloadLogAsync(models, null);
        }
        
        public void InsertVideoDownloadLogAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogVideo> models, object userState) {
            if ((this.onBeginInsertVideoDownloadLogDelegate == null)) {
                this.onBeginInsertVideoDownloadLogDelegate = new BeginOperationDelegate(this.OnBeginInsertVideoDownloadLog);
            }
            if ((this.onEndInsertVideoDownloadLogDelegate == null)) {
                this.onEndInsertVideoDownloadLogDelegate = new EndOperationDelegate(this.OnEndInsertVideoDownloadLog);
            }
            if ((this.onInsertVideoDownloadLogCompletedDelegate == null)) {
                this.onInsertVideoDownloadLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertVideoDownloadLogCompleted);
            }
            base.InvokeAsync(this.onBeginInsertVideoDownloadLogDelegate, new object[] {
                        models}, this.onEndInsertVideoDownloadLogDelegate, this.onInsertVideoDownloadLogCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogVideo.BeginInsertVideoPlayLog(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogVideo> models, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertVideoPlayLog(models, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogVideo.EndInsertVideoPlayLog(System.IAsyncResult result) {
            return base.Channel.EndInsertVideoPlayLog(result);
        }
        
        private System.IAsyncResult OnBeginInsertVideoPlayLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogVideo> models = ((System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogVideo>)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogVideo)(this)).BeginInsertVideoPlayLog(models, callback, asyncState);
        }
        
        private object[] OnEndInsertVideoPlayLog(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogVideo)(this)).EndInsertVideoPlayLog(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertVideoPlayLogCompleted(object state) {
            if ((this.InsertVideoPlayLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertVideoPlayLogCompleted(this, new InsertVideoPlayLogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertVideoPlayLogAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogVideo> models) {
            this.InsertVideoPlayLogAsync(models, null);
        }
        
        public void InsertVideoPlayLogAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogVideo> models, object userState) {
            if ((this.onBeginInsertVideoPlayLogDelegate == null)) {
                this.onBeginInsertVideoPlayLogDelegate = new BeginOperationDelegate(this.OnBeginInsertVideoPlayLog);
            }
            if ((this.onEndInsertVideoPlayLogDelegate == null)) {
                this.onEndInsertVideoPlayLogDelegate = new EndOperationDelegate(this.OnEndInsertVideoPlayLog);
            }
            if ((this.onInsertVideoPlayLogCompletedDelegate == null)) {
                this.onInsertVideoPlayLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertVideoPlayLogCompleted);
            }
            base.InvokeAsync(this.onBeginInsertVideoPlayLogDelegate, new object[] {
                        models}, this.onEndInsertVideoPlayLogDelegate, this.onInsertVideoPlayLogCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogVideo.BeginClearVideoDownloadLog(string ClientID, Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogOperate log, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginClearVideoDownloadLog(ClientID, log, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogVideo.EndClearVideoDownloadLog(System.IAsyncResult result) {
            return base.Channel.EndClearVideoDownloadLog(result);
        }
        
        private System.IAsyncResult OnBeginClearVideoDownloadLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ClientID = ((string)(inValues[0]));
            Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogOperate log = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogOperate)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogVideo)(this)).BeginClearVideoDownloadLog(ClientID, log, callback, asyncState);
        }
        
        private object[] OnEndClearVideoDownloadLog(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogVideo)(this)).EndClearVideoDownloadLog(result);
            return new object[] {
                    retVal};
        }
        
        private void OnClearVideoDownloadLogCompleted(object state) {
            if ((this.ClearVideoDownloadLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ClearVideoDownloadLogCompleted(this, new ClearVideoDownloadLogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ClearVideoDownloadLogAsync(string ClientID, Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogOperate log) {
            this.ClearVideoDownloadLogAsync(ClientID, log, null);
        }
        
        public void ClearVideoDownloadLogAsync(string ClientID, Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogOperate log, object userState) {
            if ((this.onBeginClearVideoDownloadLogDelegate == null)) {
                this.onBeginClearVideoDownloadLogDelegate = new BeginOperationDelegate(this.OnBeginClearVideoDownloadLog);
            }
            if ((this.onEndClearVideoDownloadLogDelegate == null)) {
                this.onEndClearVideoDownloadLogDelegate = new EndOperationDelegate(this.OnEndClearVideoDownloadLog);
            }
            if ((this.onClearVideoDownloadLogCompletedDelegate == null)) {
                this.onClearVideoDownloadLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnClearVideoDownloadLogCompleted);
            }
            base.InvokeAsync(this.onBeginClearVideoDownloadLogDelegate, new object[] {
                        ClientID,
                        log}, this.onEndClearVideoDownloadLogDelegate, this.onClearVideoDownloadLogCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogVideo.BeginClearVideoPlayLog(string ClientID, Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogOperate log, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginClearVideoPlayLog(ClientID, log, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogVideo.EndClearVideoPlayLog(System.IAsyncResult result) {
            return base.Channel.EndClearVideoPlayLog(result);
        }
        
        private System.IAsyncResult OnBeginClearVideoPlayLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ClientID = ((string)(inValues[0]));
            Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogOperate log = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogOperate)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogVideo)(this)).BeginClearVideoPlayLog(ClientID, log, callback, asyncState);
        }
        
        private object[] OnEndClearVideoPlayLog(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogVideo)(this)).EndClearVideoPlayLog(result);
            return new object[] {
                    retVal};
        }
        
        private void OnClearVideoPlayLogCompleted(object state) {
            if ((this.ClearVideoPlayLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ClearVideoPlayLogCompleted(this, new ClearVideoPlayLogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ClearVideoPlayLogAsync(string ClientID, Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogOperate log) {
            this.ClearVideoPlayLogAsync(ClientID, log, null);
        }
        
        public void ClearVideoPlayLogAsync(string ClientID, Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogOperate log, object userState) {
            if ((this.onBeginClearVideoPlayLogDelegate == null)) {
                this.onBeginClearVideoPlayLogDelegate = new BeginOperationDelegate(this.OnBeginClearVideoPlayLog);
            }
            if ((this.onEndClearVideoPlayLogDelegate == null)) {
                this.onEndClearVideoPlayLogDelegate = new EndOperationDelegate(this.OnEndClearVideoPlayLog);
            }
            if ((this.onClearVideoPlayLogCompletedDelegate == null)) {
                this.onClearVideoPlayLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnClearVideoPlayLogCompleted);
            }
            base.InvokeAsync(this.onBeginClearVideoPlayLogDelegate, new object[] {
                        ClientID,
                        log}, this.onEndClearVideoPlayLogDelegate, this.onClearVideoPlayLogCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogVideo.BeginGetVideoPlayLogList(string clientID, string vehicleID, string userName, string mdvrCoreSN, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVideoPlayLogList(clientID, vehicleID, userName, mdvrCoreSN, startTime, endTime, pageIndex, pageSize, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogVideoi7Zg_POJ5 Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogVideo.EndGetVideoPlayLogList(System.IAsyncResult result) {
            return base.Channel.EndGetVideoPlayLogList(result);
        }
        
        private System.IAsyncResult OnBeginGetVideoPlayLogList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            string vehicleID = ((string)(inValues[1]));
            string userName = ((string)(inValues[2]));
            string mdvrCoreSN = ((string)(inValues[3]));
            System.Nullable<System.DateTime> startTime = ((System.Nullable<System.DateTime>)(inValues[4]));
            System.Nullable<System.DateTime> endTime = ((System.Nullable<System.DateTime>)(inValues[5]));
            int pageIndex = ((int)(inValues[6]));
            int pageSize = ((int)(inValues[7]));
            return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogVideo)(this)).BeginGetVideoPlayLogList(clientID, vehicleID, userName, mdvrCoreSN, startTime, endTime, pageIndex, pageSize, callback, asyncState);
        }
        
        private object[] OnEndGetVideoPlayLogList(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogVideoi7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogVideo)(this)).EndGetVideoPlayLogList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVideoPlayLogListCompleted(object state) {
            if ((this.GetVideoPlayLogListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVideoPlayLogListCompleted(this, new GetVideoPlayLogListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVideoPlayLogListAsync(string clientID, string vehicleID, string userName, string mdvrCoreSN, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, int pageIndex, int pageSize) {
            this.GetVideoPlayLogListAsync(clientID, vehicleID, userName, mdvrCoreSN, startTime, endTime, pageIndex, pageSize, null);
        }
        
        public void GetVideoPlayLogListAsync(string clientID, string vehicleID, string userName, string mdvrCoreSN, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, int pageIndex, int pageSize, object userState) {
            if ((this.onBeginGetVideoPlayLogListDelegate == null)) {
                this.onBeginGetVideoPlayLogListDelegate = new BeginOperationDelegate(this.OnBeginGetVideoPlayLogList);
            }
            if ((this.onEndGetVideoPlayLogListDelegate == null)) {
                this.onEndGetVideoPlayLogListDelegate = new EndOperationDelegate(this.OnEndGetVideoPlayLogList);
            }
            if ((this.onGetVideoPlayLogListCompletedDelegate == null)) {
                this.onGetVideoPlayLogListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVideoPlayLogListCompleted);
            }
            base.InvokeAsync(this.onBeginGetVideoPlayLogListDelegate, new object[] {
                        clientID,
                        vehicleID,
                        userName,
                        mdvrCoreSN,
                        startTime,
                        endTime,
                        pageIndex,
                        pageSize}, this.onEndGetVideoPlayLogListDelegate, this.onGetVideoPlayLogListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogVideo.BeginGetVideoDownloadLogList(string clientID, string vehicleID, string userName, string mdvrCoreSN, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVideoDownloadLogList(clientID, vehicleID, userName, mdvrCoreSN, startTime, endTime, pageIndex, pageSize, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogVideoi7Zg_POJ5 Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogVideo.EndGetVideoDownloadLogList(System.IAsyncResult result) {
            return base.Channel.EndGetVideoDownloadLogList(result);
        }
        
        private System.IAsyncResult OnBeginGetVideoDownloadLogList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            string vehicleID = ((string)(inValues[1]));
            string userName = ((string)(inValues[2]));
            string mdvrCoreSN = ((string)(inValues[3]));
            System.Nullable<System.DateTime> startTime = ((System.Nullable<System.DateTime>)(inValues[4]));
            System.Nullable<System.DateTime> endTime = ((System.Nullable<System.DateTime>)(inValues[5]));
            int pageIndex = ((int)(inValues[6]));
            int pageSize = ((int)(inValues[7]));
            return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogVideo)(this)).BeginGetVideoDownloadLogList(clientID, vehicleID, userName, mdvrCoreSN, startTime, endTime, pageIndex, pageSize, callback, asyncState);
        }
        
        private object[] OnEndGetVideoDownloadLogList(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogVideoi7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogVideo)(this)).EndGetVideoDownloadLogList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVideoDownloadLogListCompleted(object state) {
            if ((this.GetVideoDownloadLogListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVideoDownloadLogListCompleted(this, new GetVideoDownloadLogListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVideoDownloadLogListAsync(string clientID, string vehicleID, string userName, string mdvrCoreSN, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, int pageIndex, int pageSize) {
            this.GetVideoDownloadLogListAsync(clientID, vehicleID, userName, mdvrCoreSN, startTime, endTime, pageIndex, pageSize, null);
        }
        
        public void GetVideoDownloadLogListAsync(string clientID, string vehicleID, string userName, string mdvrCoreSN, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, int pageIndex, int pageSize, object userState) {
            if ((this.onBeginGetVideoDownloadLogListDelegate == null)) {
                this.onBeginGetVideoDownloadLogListDelegate = new BeginOperationDelegate(this.OnBeginGetVideoDownloadLogList);
            }
            if ((this.onEndGetVideoDownloadLogListDelegate == null)) {
                this.onEndGetVideoDownloadLogListDelegate = new EndOperationDelegate(this.OnEndGetVideoDownloadLogList);
            }
            if ((this.onGetVideoDownloadLogListCompletedDelegate == null)) {
                this.onGetVideoDownloadLogListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVideoDownloadLogListCompleted);
            }
            base.InvokeAsync(this.onBeginGetVideoDownloadLogListDelegate, new object[] {
                        clientID,
                        vehicleID,
                        userName,
                        mdvrCoreSN,
                        startTime,
                        endTime,
                        pageIndex,
                        pageSize}, this.onEndGetVideoDownloadLogListDelegate, this.onGetVideoDownloadLogListCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogVideo CreateChannel() {
            return new LogVideoClientChannel(this);
        }
        
        private class LogVideoClientChannel : ChannelBase<Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogVideo>, Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogVideo {
            
            public LogVideoClientChannel(System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.PTMSLogManageService.ILogVideo> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginInsertVideoDownloadLog(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogVideo> models, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = models;
                System.IAsyncResult _result = base.BeginInvoke("InsertVideoDownloadLog", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean EndInsertVideoDownloadLog(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean)(base.EndInvoke("InsertVideoDownloadLog", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertVideoPlayLog(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogVideo> models, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = models;
                System.IAsyncResult _result = base.BeginInvoke("InsertVideoPlayLog", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean EndInsertVideoPlayLog(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean)(base.EndInvoke("InsertVideoPlayLog", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginClearVideoDownloadLog(string ClientID, Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogOperate log, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = ClientID;
                _args[1] = log;
                System.IAsyncResult _result = base.BeginInvoke("ClearVideoDownloadLog", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean EndClearVideoDownloadLog(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean)(base.EndInvoke("ClearVideoDownloadLog", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginClearVideoPlayLog(string ClientID, Gsafety.PTMS.ServiceReference.PTMSLogManageService.LogOperate log, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = ClientID;
                _args[1] = log;
                System.IAsyncResult _result = base.BeginInvoke("ClearVideoPlayLog", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean EndClearVideoPlayLog(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.SingleMessageOfboolean)(base.EndInvoke("ClearVideoPlayLog", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetVideoPlayLogList(string clientID, string vehicleID, string userName, string mdvrCoreSN, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[8];
                _args[0] = clientID;
                _args[1] = vehicleID;
                _args[2] = userName;
                _args[3] = mdvrCoreSN;
                _args[4] = startTime;
                _args[5] = endTime;
                _args[6] = pageIndex;
                _args[7] = pageSize;
                System.IAsyncResult _result = base.BeginInvoke("GetVideoPlayLogList", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogVideoi7Zg_POJ5 EndGetVideoPlayLogList(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogVideoi7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogVideoi7Zg_POJ5)(base.EndInvoke("GetVideoPlayLogList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetVideoDownloadLogList(string clientID, string vehicleID, string userName, string mdvrCoreSN, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[8];
                _args[0] = clientID;
                _args[1] = vehicleID;
                _args[2] = userName;
                _args[3] = mdvrCoreSN;
                _args[4] = startTime;
                _args[5] = endTime;
                _args[6] = pageIndex;
                _args[7] = pageSize;
                System.IAsyncResult _result = base.BeginInvoke("GetVideoDownloadLogList", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogVideoi7Zg_POJ5 EndGetVideoDownloadLogList(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogVideoi7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogVideoi7Zg_POJ5)(base.EndInvoke("GetVideoDownloadLogList", _args, result)));
                return _result;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PTMSLogManageService.IPTMSLogError")]
    public interface IPTMSLogError {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPTMSLogError/GetErrorLog", ReplyAction="http://tempuri.org/IPTMSLogError/GetErrorLogResponse")]
        System.IAsyncResult BeginGetErrorLog(string clientID, string content, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogErrori7Zg_POJ5 EndGetErrorLog(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPTMSLogErrorChannel : Gsafety.PTMS.ServiceReference.PTMSLogManageService.IPTMSLogError, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetErrorLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetErrorLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogErrori7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogErrori7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PTMSLogErrorClient : System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.PTMSLogManageService.IPTMSLogError>, Gsafety.PTMS.ServiceReference.PTMSLogManageService.IPTMSLogError {
        
        private BeginOperationDelegate onBeginGetErrorLogDelegate;
        
        private EndOperationDelegate onEndGetErrorLogDelegate;
        
        private System.Threading.SendOrPostCallback onGetErrorLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public PTMSLogErrorClient() {
        }
        
        public PTMSLogErrorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PTMSLogErrorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PTMSLogErrorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PTMSLogErrorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<GetErrorLogCompletedEventArgs> GetErrorLogCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PTMSLogManageService.IPTMSLogError.BeginGetErrorLog(string clientID, string content, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetErrorLog(clientID, content, startTime, endTime, pageInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogErrori7Zg_POJ5 Gsafety.PTMS.ServiceReference.PTMSLogManageService.IPTMSLogError.EndGetErrorLog(System.IAsyncResult result) {
            return base.Channel.EndGetErrorLog(result);
        }
        
        private System.IAsyncResult OnBeginGetErrorLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            string content = ((string)(inValues[1]));
            System.Nullable<System.DateTime> startTime = ((System.Nullable<System.DateTime>)(inValues[2]));
            System.Nullable<System.DateTime> endTime = ((System.Nullable<System.DateTime>)(inValues[3]));
            Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo)(inValues[4]));
            return ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.IPTMSLogError)(this)).BeginGetErrorLog(clientID, content, startTime, endTime, pageInfo, callback, asyncState);
        }
        
        private object[] OnEndGetErrorLog(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogErrori7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.IPTMSLogError)(this)).EndGetErrorLog(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetErrorLogCompleted(object state) {
            if ((this.GetErrorLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetErrorLogCompleted(this, new GetErrorLogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetErrorLogAsync(string clientID, string content, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo) {
            this.GetErrorLogAsync(clientID, content, startTime, endTime, pageInfo, null);
        }
        
        public void GetErrorLogAsync(string clientID, string content, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, object userState) {
            if ((this.onBeginGetErrorLogDelegate == null)) {
                this.onBeginGetErrorLogDelegate = new BeginOperationDelegate(this.OnBeginGetErrorLog);
            }
            if ((this.onEndGetErrorLogDelegate == null)) {
                this.onEndGetErrorLogDelegate = new EndOperationDelegate(this.OnEndGetErrorLog);
            }
            if ((this.onGetErrorLogCompletedDelegate == null)) {
                this.onGetErrorLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetErrorLogCompleted);
            }
            base.InvokeAsync(this.onBeginGetErrorLogDelegate, new object[] {
                        clientID,
                        content,
                        startTime,
                        endTime,
                        pageInfo}, this.onEndGetErrorLogDelegate, this.onGetErrorLogCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Gsafety.PTMS.ServiceReference.PTMSLogManageService.IPTMSLogError CreateChannel() {
            return new PTMSLogErrorClientChannel(this);
        }
        
        private class PTMSLogErrorClientChannel : ChannelBase<Gsafety.PTMS.ServiceReference.PTMSLogManageService.IPTMSLogError>, Gsafety.PTMS.ServiceReference.PTMSLogManageService.IPTMSLogError {
            
            public PTMSLogErrorClientChannel(System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.PTMSLogManageService.IPTMSLogError> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetErrorLog(string clientID, string content, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, Gsafety.PTMS.ServiceReference.PTMSLogManageService.PagingInfo pageInfo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = clientID;
                _args[1] = content;
                _args[2] = startTime;
                _args[3] = endTime;
                _args[4] = pageInfo;
                System.IAsyncResult _result = base.BeginInvoke("GetErrorLog", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogErrori7Zg_POJ5 EndGetErrorLog(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogErrori7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.PTMSLogManageService.MultiMessageOfLogErrori7Zg_POJ5)(base.EndInvoke("GetErrorLog", _args, result)));
                return _result;
            }
        }
    }
}
