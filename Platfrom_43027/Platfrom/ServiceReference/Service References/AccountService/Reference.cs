//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace Gsafety.PTMS.ServiceReference.AccountService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GUser", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Manager.Contract.Data")]
    public partial class GUser : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AccountField;
        
        private string AddressField;
        
        private string ClientIDField;
        
        private System.DateTime CreateTimeField;
        
        private string CreatorField;
        
        private string DepartmentField;
        
        private string DescriptionField;
        
        private string EmailField;
        
        private string IDField;
        
        private bool IsClientCreateField;
        
        private string MobileField;
        
        private string PasswordField;
        
        private string PhoneField;
        
        private int RoleCategoryField;
        
        private string RoleIDField;
        
        private string RoleNameField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Account {
            get {
                return this.AccountField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountField, value) != true)) {
                    this.AccountField = value;
                    this.RaisePropertyChanged("Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIDField, value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Department {
            get {
                return this.DepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentField, value) != true)) {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsClientCreate {
            get {
                return this.IsClientCreateField;
            }
            set {
                if ((this.IsClientCreateField.Equals(value) != true)) {
                    this.IsClientCreateField = value;
                    this.RaisePropertyChanged("IsClientCreate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleCategory {
            get {
                return this.RoleCategoryField;
            }
            set {
                if ((this.RoleCategoryField.Equals(value) != true)) {
                    this.RoleCategoryField = value;
                    this.RaisePropertyChanged("RoleCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleID {
            get {
                return this.RoleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleIDField, value) != true)) {
                    this.RoleIDField = value;
                    this.RaisePropertyChanged("RoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogOperate", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Common.Data")]
    public partial class LogOperate : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ClientIDField;
        
        private string IDField;
        
        private string LoginNameField;
        
        private string OperateContentField;
        
        private System.DateTime OperateTimeField;
        
        private int OperateTypeField;
        
        private string OperatorIDField;
        
        private string OperatorNameField;
        
        private string ShowRoleNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIDField, value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginName {
            get {
                return this.LoginNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginNameField, value) != true)) {
                    this.LoginNameField = value;
                    this.RaisePropertyChanged("LoginName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperateContent {
            get {
                return this.OperateContentField;
            }
            set {
                if ((object.ReferenceEquals(this.OperateContentField, value) != true)) {
                    this.OperateContentField = value;
                    this.RaisePropertyChanged("OperateContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OperateTime {
            get {
                return this.OperateTimeField;
            }
            set {
                if ((this.OperateTimeField.Equals(value) != true)) {
                    this.OperateTimeField = value;
                    this.RaisePropertyChanged("OperateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OperateType {
            get {
                return this.OperateTypeField;
            }
            set {
                if ((this.OperateTypeField.Equals(value) != true)) {
                    this.OperateTypeField = value;
                    this.RaisePropertyChanged("OperateType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperatorID {
            get {
                return this.OperatorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorIDField, value) != true)) {
                    this.OperatorIDField = value;
                    this.RaisePropertyChanged("OperatorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperatorName {
            get {
                return this.OperatorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorNameField, value) != true)) {
                    this.OperatorNameField = value;
                    this.RaisePropertyChanged("OperatorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShowRoleName {
            get {
                return this.ShowRoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShowRoleNameField, value) != true)) {
                    this.ShowRoleNameField = value;
                    this.RaisePropertyChanged("ShowRoleName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleMessageOfboolean", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class SingleMessageOfboolean : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private bool ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleMessageOfGUser7ZhGgAvu", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class SingleMessageOfGUser7ZhGgAvu : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private Gsafety.PTMS.ServiceReference.AccountService.GUser ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.AccountService.GUser Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfGUser7ZhGgAvu", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfGUser7ZhGgAvu : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.AccountService.GUser> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.AccountService.GUser> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleMessageOfAccountInfo7ZhGgAvu", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class SingleMessageOfAccountInfo7ZhGgAvu : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private Gsafety.PTMS.ServiceReference.AccountService.AccountInfo ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.AccountService.AccountInfo Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountInfo", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Manager.Contract.Data")]
    public partial class AccountInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool AllowedField;
        
        private string MessageField;
        
        private Gsafety.PTMS.ServiceReference.AccountService.Role RoleField;
        
        private short TransferModeField;
        
        private Gsafety.PTMS.ServiceReference.AccountService.GUser UserField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Allowed {
            get {
                return this.AllowedField;
            }
            set {
                if ((this.AllowedField.Equals(value) != true)) {
                    this.AllowedField = value;
                    this.RaisePropertyChanged("Allowed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.AccountService.Role Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short TransferMode {
            get {
                return this.TransferModeField;
            }
            set {
                if ((this.TransferModeField.Equals(value) != true)) {
                    this.TransferModeField = value;
                    this.RaisePropertyChanged("TransferMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.AccountService.GUser User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Manager.Contract.Data")]
    public partial class Role : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ClientIDField;
        
        private System.DateTime CreateTimeField;
        
        private string CreatorField;
        
        private string DescriptionField;
        
        private bool EditableField;
        
        private System.Collections.ObjectModel.ObservableCollection<string> FuncItemsField;
        
        private string IDField;
        
        private bool IsPredefinedField;
        
        private string NameField;
        
        private int RoleCategoryField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIDField, value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Editable {
            get {
                return this.EditableField;
            }
            set {
                if ((this.EditableField.Equals(value) != true)) {
                    this.EditableField = value;
                    this.RaisePropertyChanged("Editable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> FuncItems {
            get {
                return this.FuncItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.FuncItemsField, value) != true)) {
                    this.FuncItemsField = value;
                    this.RaisePropertyChanged("FuncItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPredefined {
            get {
                return this.IsPredefinedField;
            }
            set {
                if ((this.IsPredefinedField.Equals(value) != true)) {
                    this.IsPredefinedField = value;
                    this.RaisePropertyChanged("IsPredefined");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleCategory {
            get {
                return this.RoleCategoryField;
            }
            set {
                if ((this.RoleCategoryField.Equals(value) != true)) {
                    this.RoleCategoryField = value;
                    this.RaisePropertyChanged("RoleCategory");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfOrganizationUsernBlkyCYJ", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfOrganizationUsernBlkyCYJ : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.AccountService.OrganizationUser> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.AccountService.OrganizationUser> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrganizationUser", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract")]
    public partial class OrganizationUser : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime CreateTimeField;
        
        private string IDField;
        
        private string OrganizationIdField;
        
        private string UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrganizationId {
            get {
                return this.OrganizationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationIdField, value) != true)) {
                    this.OrganizationIdField = value;
                    this.RaisePropertyChanged("OrganizationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfRole7ZhGgAvu", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfRole7ZhGgAvu : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.AccountService.Role> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.AccountService.Role> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfstring", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfstring : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<string> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfFuncItem7ZhGgAvu", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfFuncItem7ZhGgAvu : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.AccountService.FuncItem> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.AccountService.FuncItem> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FuncItem", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Manager.Contract.Data")]
    public partial class FuncItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string IDField;
        
        private string ModuleField;
        
        private string NameField;
        
        private string NoteField;
        
        private string VersionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Module {
            get {
                return this.ModuleField;
            }
            set {
                if ((object.ReferenceEquals(this.ModuleField, value) != true)) {
                    this.ModuleField = value;
                    this.RaisePropertyChanged("Module");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Version {
            get {
                return this.VersionField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionField, value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UsrDepartment", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Manager.Contract.Data")]
    public partial class UsrDepartment : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ClientIDField;
        
        private string ContactField;
        
        private System.DateTime CreateTimeField;
        
        private string CreatorField;
        
        private string EmailField;
        
        private string IDField;
        
        private string NameField;
        
        private string ParentIDField;
        
        private string PhoneField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIDField, value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentID {
            get {
                return this.ParentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentIDField, value) != true)) {
                    this.ParentIDField = value;
                    this.RaisePropertyChanged("ParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleMessageOfUsrDepartment7ZhGgAvu", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class SingleMessageOfUsrDepartment7ZhGgAvu : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private Gsafety.PTMS.ServiceReference.AccountService.UsrDepartment ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.AccountService.UsrDepartment Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfUsrDepartment7ZhGgAvu", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfUsrDepartment7ZhGgAvu : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.AccountService.UsrDepartment> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.AccountService.UsrDepartment> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfUserOnlinei7Zg_POJ5", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfUserOnlinei7Zg_POJ5 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.AccountService.UserOnline> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.AccountService.UserOnline> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserOnline", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Common.Data")]
    public partial class UserOnline : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ClientIDField;
        
        private System.DateTime OnlineTimeField;
        
        private string RoleNameField;
        
        private string UserIDField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIDField, value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OnlineTime {
            get {
                return this.OnlineTimeField;
            }
            set {
                if ((this.OnlineTimeField.Equals(value) != true)) {
                    this.OnlineTimeField = value;
                    this.RaisePropertyChanged("OnlineTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIDField, value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountService.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserService/InsertGUser", ReplyAction="http://tempuri.org/IUserService/InsertGUserResponse")]
        System.IAsyncResult BeginInsertGUser(Gsafety.PTMS.ServiceReference.AccountService.GUser model, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean EndInsertGUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserService/InsertOrderClientSystemAdmin", ReplyAction="http://tempuri.org/IUserService/InsertOrderClientSystemAdminResponse")]
        System.IAsyncResult BeginInsertOrderClientSystemAdmin(Gsafety.PTMS.ServiceReference.AccountService.GUser model, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean EndInsertOrderClientSystemAdmin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserService/UpdateGUser", ReplyAction="http://tempuri.org/IUserService/UpdateGUserResponse")]
        System.IAsyncResult BeginUpdateGUser(Gsafety.PTMS.ServiceReference.AccountService.GUser model, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean EndUpdateGUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserService/DeleteGUser", ReplyAction="http://tempuri.org/IUserService/DeleteGUserResponse")]
        System.IAsyncResult BeginDeleteGUser(string userID, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean EndDeleteGUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserService/GetUserByAccoutName", ReplyAction="http://tempuri.org/IUserService/GetUserByAccoutNameResponse")]
        System.IAsyncResult BeginGetUserByAccoutName(string account, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfGUser7ZhGgAvu EndGetUserByAccoutName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserService/GetGUserList", ReplyAction="http://tempuri.org/IUserService/GetGUserListResponse")]
        System.IAsyncResult BeginGetGUserList(string clientID, string userDepartmentID, string qureyUserName, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfGUser7ZhGgAvu EndGetGUserList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserService/GetAccountInfo", ReplyAction="http://tempuri.org/IUserService/GetAccountInfoResponse")]
        System.IAsyncResult BeginGetAccountInfo(string account, string password, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfAccountInfo7ZhGgAvu EndGetAccountInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserService/IsUserNameExist", ReplyAction="http://tempuri.org/IUserService/IsUserNameExistResponse")]
        System.IAsyncResult BeginIsUserNameExist(string userName, string userID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean EndIsUserNameExist(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserService/GetOrderClientGUserByClientID", ReplyAction="http://tempuri.org/IUserService/GetOrderClientGUserByClientIDResponse")]
        System.IAsyncResult BeginGetOrderClientGUserByClientID(string clientid, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfGUser7ZhGgAvu EndGetOrderClientGUserByClientID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserService/ModifyPassword", ReplyAction="http://tempuri.org/IUserService/ModifyPasswordResponse")]
        System.IAsyncResult BeginModifyPassword(string userID, string password, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean EndModifyPassword(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserService/UpdateDepartment", ReplyAction="http://tempuri.org/IUserService/UpdateDepartmentResponse")]
        System.IAsyncResult BeginUpdateDepartment(string userID, string departmentID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean EndUpdateDepartment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserService/GetInstallStationUser", ReplyAction="http://tempuri.org/IUserService/GetInstallStationUserResponse")]
        System.IAsyncResult BeginGetInstallStationUser(string clientID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfGUser7ZhGgAvu EndGetInstallStationUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserService/GetUserVehicleOrg", ReplyAction="http://tempuri.org/IUserService/GetUserVehicleOrgResponse")]
        System.IAsyncResult BeginGetUserVehicleOrg(string userID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfOrganizationUsernBlkyCYJ EndGetUserVehicleOrg(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserService/InsertUserVehicleOrg", ReplyAction="http://tempuri.org/IUserService/InsertUserVehicleOrgResponse")]
        System.IAsyncResult BeginInsertUserVehicleOrg(System.Collections.ObjectModel.ObservableCollection<string> orgIds, string userID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean EndInsertUserVehicleOrg(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserService/GetInstallStationUserByPage", ReplyAction="http://tempuri.org/IUserService/GetInstallStationUserByPageResponse")]
        System.IAsyncResult BeginGetInstallStationUserByPage(string clientID, int pageSize, int pageIndex, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfGUser7ZhGgAvu EndGetInstallStationUserByPage(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : Gsafety.PTMS.ServiceReference.AccountService.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertGUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertGUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertOrderClientSystemAdminCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertOrderClientSystemAdminCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateGUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateGUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteGUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteGUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserByAccoutNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserByAccoutNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfGUser7ZhGgAvu Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfGUser7ZhGgAvu)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGUserListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGUserListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfGUser7ZhGgAvu Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfGUser7ZhGgAvu)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAccountInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAccountInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfAccountInfo7ZhGgAvu Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfAccountInfo7ZhGgAvu)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsUserNameExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsUserNameExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOrderClientGUserByClientIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOrderClientGUserByClientIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfGUser7ZhGgAvu Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfGUser7ZhGgAvu)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ModifyPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ModifyPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetInstallStationUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInstallStationUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfGUser7ZhGgAvu Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfGUser7ZhGgAvu)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserVehicleOrgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserVehicleOrgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfOrganizationUsernBlkyCYJ Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfOrganizationUsernBlkyCYJ)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertUserVehicleOrgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertUserVehicleOrgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetInstallStationUserByPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInstallStationUserByPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfGUser7ZhGgAvu Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfGUser7ZhGgAvu)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.AccountService.IUserService>, Gsafety.PTMS.ServiceReference.AccountService.IUserService {
        
        private BeginOperationDelegate onBeginInsertGUserDelegate;
        
        private EndOperationDelegate onEndInsertGUserDelegate;
        
        private System.Threading.SendOrPostCallback onInsertGUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertOrderClientSystemAdminDelegate;
        
        private EndOperationDelegate onEndInsertOrderClientSystemAdminDelegate;
        
        private System.Threading.SendOrPostCallback onInsertOrderClientSystemAdminCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateGUserDelegate;
        
        private EndOperationDelegate onEndUpdateGUserDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateGUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteGUserDelegate;
        
        private EndOperationDelegate onEndDeleteGUserDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteGUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserByAccoutNameDelegate;
        
        private EndOperationDelegate onEndGetUserByAccoutNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserByAccoutNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetGUserListDelegate;
        
        private EndOperationDelegate onEndGetGUserListDelegate;
        
        private System.Threading.SendOrPostCallback onGetGUserListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAccountInfoDelegate;
        
        private EndOperationDelegate onEndGetAccountInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetAccountInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsUserNameExistDelegate;
        
        private EndOperationDelegate onEndIsUserNameExistDelegate;
        
        private System.Threading.SendOrPostCallback onIsUserNameExistCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOrderClientGUserByClientIDDelegate;
        
        private EndOperationDelegate onEndGetOrderClientGUserByClientIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetOrderClientGUserByClientIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginModifyPasswordDelegate;
        
        private EndOperationDelegate onEndModifyPasswordDelegate;
        
        private System.Threading.SendOrPostCallback onModifyPasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateDepartmentDelegate;
        
        private EndOperationDelegate onEndUpdateDepartmentDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateDepartmentCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInstallStationUserDelegate;
        
        private EndOperationDelegate onEndGetInstallStationUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetInstallStationUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserVehicleOrgDelegate;
        
        private EndOperationDelegate onEndGetUserVehicleOrgDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserVehicleOrgCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertUserVehicleOrgDelegate;
        
        private EndOperationDelegate onEndInsertUserVehicleOrgDelegate;
        
        private System.Threading.SendOrPostCallback onInsertUserVehicleOrgCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInstallStationUserByPageDelegate;
        
        private EndOperationDelegate onEndGetInstallStationUserByPageDelegate;
        
        private System.Threading.SendOrPostCallback onGetInstallStationUserByPageCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<InsertGUserCompletedEventArgs> InsertGUserCompleted;
        
        public event System.EventHandler<InsertOrderClientSystemAdminCompletedEventArgs> InsertOrderClientSystemAdminCompleted;
        
        public event System.EventHandler<UpdateGUserCompletedEventArgs> UpdateGUserCompleted;
        
        public event System.EventHandler<DeleteGUserCompletedEventArgs> DeleteGUserCompleted;
        
        public event System.EventHandler<GetUserByAccoutNameCompletedEventArgs> GetUserByAccoutNameCompleted;
        
        public event System.EventHandler<GetGUserListCompletedEventArgs> GetGUserListCompleted;
        
        public event System.EventHandler<GetAccountInfoCompletedEventArgs> GetAccountInfoCompleted;
        
        public event System.EventHandler<IsUserNameExistCompletedEventArgs> IsUserNameExistCompleted;
        
        public event System.EventHandler<GetOrderClientGUserByClientIDCompletedEventArgs> GetOrderClientGUserByClientIDCompleted;
        
        public event System.EventHandler<ModifyPasswordCompletedEventArgs> ModifyPasswordCompleted;
        
        public event System.EventHandler<UpdateDepartmentCompletedEventArgs> UpdateDepartmentCompleted;
        
        public event System.EventHandler<GetInstallStationUserCompletedEventArgs> GetInstallStationUserCompleted;
        
        public event System.EventHandler<GetUserVehicleOrgCompletedEventArgs> GetUserVehicleOrgCompleted;
        
        public event System.EventHandler<InsertUserVehicleOrgCompletedEventArgs> InsertUserVehicleOrgCompleted;
        
        public event System.EventHandler<GetInstallStationUserByPageCompletedEventArgs> GetInstallStationUserByPageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.AccountService.IUserService.BeginInsertGUser(Gsafety.PTMS.ServiceReference.AccountService.GUser model, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertGUser(model, logOperate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.AccountService.IUserService.EndInsertGUser(System.IAsyncResult result) {
            return base.Channel.EndInsertGUser(result);
        }
        
        private System.IAsyncResult OnBeginInsertGUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.AccountService.GUser model = ((Gsafety.PTMS.ServiceReference.AccountService.GUser)(inValues[0]));
            Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate = ((Gsafety.PTMS.ServiceReference.AccountService.LogOperate)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.AccountService.IUserService)(this)).BeginInsertGUser(model, logOperate, callback, asyncState);
        }
        
        private object[] OnEndInsertGUser(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.AccountService.IUserService)(this)).EndInsertGUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertGUserCompleted(object state) {
            if ((this.InsertGUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertGUserCompleted(this, new InsertGUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertGUserAsync(Gsafety.PTMS.ServiceReference.AccountService.GUser model, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate) {
            this.InsertGUserAsync(model, logOperate, null);
        }
        
        public void InsertGUserAsync(Gsafety.PTMS.ServiceReference.AccountService.GUser model, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate, object userState) {
            if ((this.onBeginInsertGUserDelegate == null)) {
                this.onBeginInsertGUserDelegate = new BeginOperationDelegate(this.OnBeginInsertGUser);
            }
            if ((this.onEndInsertGUserDelegate == null)) {
                this.onEndInsertGUserDelegate = new EndOperationDelegate(this.OnEndInsertGUser);
            }
            if ((this.onInsertGUserCompletedDelegate == null)) {
                this.onInsertGUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertGUserCompleted);
            }
            base.InvokeAsync(this.onBeginInsertGUserDelegate, new object[] {
                        model,
                        logOperate}, this.onEndInsertGUserDelegate, this.onInsertGUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.AccountService.IUserService.BeginInsertOrderClientSystemAdmin(Gsafety.PTMS.ServiceReference.AccountService.GUser model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertOrderClientSystemAdmin(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.AccountService.IUserService.EndInsertOrderClientSystemAdmin(System.IAsyncResult result) {
            return base.Channel.EndInsertOrderClientSystemAdmin(result);
        }
        
        private System.IAsyncResult OnBeginInsertOrderClientSystemAdmin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.AccountService.GUser model = ((Gsafety.PTMS.ServiceReference.AccountService.GUser)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.AccountService.IUserService)(this)).BeginInsertOrderClientSystemAdmin(model, callback, asyncState);
        }
        
        private object[] OnEndInsertOrderClientSystemAdmin(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.AccountService.IUserService)(this)).EndInsertOrderClientSystemAdmin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertOrderClientSystemAdminCompleted(object state) {
            if ((this.InsertOrderClientSystemAdminCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertOrderClientSystemAdminCompleted(this, new InsertOrderClientSystemAdminCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertOrderClientSystemAdminAsync(Gsafety.PTMS.ServiceReference.AccountService.GUser model) {
            this.InsertOrderClientSystemAdminAsync(model, null);
        }
        
        public void InsertOrderClientSystemAdminAsync(Gsafety.PTMS.ServiceReference.AccountService.GUser model, object userState) {
            if ((this.onBeginInsertOrderClientSystemAdminDelegate == null)) {
                this.onBeginInsertOrderClientSystemAdminDelegate = new BeginOperationDelegate(this.OnBeginInsertOrderClientSystemAdmin);
            }
            if ((this.onEndInsertOrderClientSystemAdminDelegate == null)) {
                this.onEndInsertOrderClientSystemAdminDelegate = new EndOperationDelegate(this.OnEndInsertOrderClientSystemAdmin);
            }
            if ((this.onInsertOrderClientSystemAdminCompletedDelegate == null)) {
                this.onInsertOrderClientSystemAdminCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertOrderClientSystemAdminCompleted);
            }
            base.InvokeAsync(this.onBeginInsertOrderClientSystemAdminDelegate, new object[] {
                        model}, this.onEndInsertOrderClientSystemAdminDelegate, this.onInsertOrderClientSystemAdminCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.AccountService.IUserService.BeginUpdateGUser(Gsafety.PTMS.ServiceReference.AccountService.GUser model, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateGUser(model, logOperate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.AccountService.IUserService.EndUpdateGUser(System.IAsyncResult result) {
            return base.Channel.EndUpdateGUser(result);
        }
        
        private System.IAsyncResult OnBeginUpdateGUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.AccountService.GUser model = ((Gsafety.PTMS.ServiceReference.AccountService.GUser)(inValues[0]));
            Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate = ((Gsafety.PTMS.ServiceReference.AccountService.LogOperate)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.AccountService.IUserService)(this)).BeginUpdateGUser(model, logOperate, callback, asyncState);
        }
        
        private object[] OnEndUpdateGUser(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.AccountService.IUserService)(this)).EndUpdateGUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateGUserCompleted(object state) {
            if ((this.UpdateGUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateGUserCompleted(this, new UpdateGUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateGUserAsync(Gsafety.PTMS.ServiceReference.AccountService.GUser model, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate) {
            this.UpdateGUserAsync(model, logOperate, null);
        }
        
        public void UpdateGUserAsync(Gsafety.PTMS.ServiceReference.AccountService.GUser model, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate, object userState) {
            if ((this.onBeginUpdateGUserDelegate == null)) {
                this.onBeginUpdateGUserDelegate = new BeginOperationDelegate(this.OnBeginUpdateGUser);
            }
            if ((this.onEndUpdateGUserDelegate == null)) {
                this.onEndUpdateGUserDelegate = new EndOperationDelegate(this.OnEndUpdateGUser);
            }
            if ((this.onUpdateGUserCompletedDelegate == null)) {
                this.onUpdateGUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateGUserCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateGUserDelegate, new object[] {
                        model,
                        logOperate}, this.onEndUpdateGUserDelegate, this.onUpdateGUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.AccountService.IUserService.BeginDeleteGUser(string userID, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteGUser(userID, logOperate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.AccountService.IUserService.EndDeleteGUser(System.IAsyncResult result) {
            return base.Channel.EndDeleteGUser(result);
        }
        
        private System.IAsyncResult OnBeginDeleteGUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userID = ((string)(inValues[0]));
            Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate = ((Gsafety.PTMS.ServiceReference.AccountService.LogOperate)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.AccountService.IUserService)(this)).BeginDeleteGUser(userID, logOperate, callback, asyncState);
        }
        
        private object[] OnEndDeleteGUser(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.AccountService.IUserService)(this)).EndDeleteGUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteGUserCompleted(object state) {
            if ((this.DeleteGUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteGUserCompleted(this, new DeleteGUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteGUserAsync(string userID, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate) {
            this.DeleteGUserAsync(userID, logOperate, null);
        }
        
        public void DeleteGUserAsync(string userID, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate, object userState) {
            if ((this.onBeginDeleteGUserDelegate == null)) {
                this.onBeginDeleteGUserDelegate = new BeginOperationDelegate(this.OnBeginDeleteGUser);
            }
            if ((this.onEndDeleteGUserDelegate == null)) {
                this.onEndDeleteGUserDelegate = new EndOperationDelegate(this.OnEndDeleteGUser);
            }
            if ((this.onDeleteGUserCompletedDelegate == null)) {
                this.onDeleteGUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteGUserCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteGUserDelegate, new object[] {
                        userID,
                        logOperate}, this.onEndDeleteGUserDelegate, this.onDeleteGUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.AccountService.IUserService.BeginGetUserByAccoutName(string account, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserByAccoutName(account, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfGUser7ZhGgAvu Gsafety.PTMS.ServiceReference.AccountService.IUserService.EndGetUserByAccoutName(System.IAsyncResult result) {
            return base.Channel.EndGetUserByAccoutName(result);
        }
        
        private System.IAsyncResult OnBeginGetUserByAccoutName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string account = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.AccountService.IUserService)(this)).BeginGetUserByAccoutName(account, callback, asyncState);
        }
        
        private object[] OnEndGetUserByAccoutName(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfGUser7ZhGgAvu retVal = ((Gsafety.PTMS.ServiceReference.AccountService.IUserService)(this)).EndGetUserByAccoutName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserByAccoutNameCompleted(object state) {
            if ((this.GetUserByAccoutNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserByAccoutNameCompleted(this, new GetUserByAccoutNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserByAccoutNameAsync(string account) {
            this.GetUserByAccoutNameAsync(account, null);
        }
        
        public void GetUserByAccoutNameAsync(string account, object userState) {
            if ((this.onBeginGetUserByAccoutNameDelegate == null)) {
                this.onBeginGetUserByAccoutNameDelegate = new BeginOperationDelegate(this.OnBeginGetUserByAccoutName);
            }
            if ((this.onEndGetUserByAccoutNameDelegate == null)) {
                this.onEndGetUserByAccoutNameDelegate = new EndOperationDelegate(this.OnEndGetUserByAccoutName);
            }
            if ((this.onGetUserByAccoutNameCompletedDelegate == null)) {
                this.onGetUserByAccoutNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserByAccoutNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserByAccoutNameDelegate, new object[] {
                        account}, this.onEndGetUserByAccoutNameDelegate, this.onGetUserByAccoutNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.AccountService.IUserService.BeginGetGUserList(string clientID, string userDepartmentID, string qureyUserName, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGUserList(clientID, userDepartmentID, qureyUserName, pageIndex, pageSize, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfGUser7ZhGgAvu Gsafety.PTMS.ServiceReference.AccountService.IUserService.EndGetGUserList(System.IAsyncResult result) {
            return base.Channel.EndGetGUserList(result);
        }
        
        private System.IAsyncResult OnBeginGetGUserList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            string userDepartmentID = ((string)(inValues[1]));
            string qureyUserName = ((string)(inValues[2]));
            int pageIndex = ((int)(inValues[3]));
            int pageSize = ((int)(inValues[4]));
            return ((Gsafety.PTMS.ServiceReference.AccountService.IUserService)(this)).BeginGetGUserList(clientID, userDepartmentID, qureyUserName, pageIndex, pageSize, callback, asyncState);
        }
        
        private object[] OnEndGetGUserList(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfGUser7ZhGgAvu retVal = ((Gsafety.PTMS.ServiceReference.AccountService.IUserService)(this)).EndGetGUserList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGUserListCompleted(object state) {
            if ((this.GetGUserListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGUserListCompleted(this, new GetGUserListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGUserListAsync(string clientID, string userDepartmentID, string qureyUserName, int pageIndex, int pageSize) {
            this.GetGUserListAsync(clientID, userDepartmentID, qureyUserName, pageIndex, pageSize, null);
        }
        
        public void GetGUserListAsync(string clientID, string userDepartmentID, string qureyUserName, int pageIndex, int pageSize, object userState) {
            if ((this.onBeginGetGUserListDelegate == null)) {
                this.onBeginGetGUserListDelegate = new BeginOperationDelegate(this.OnBeginGetGUserList);
            }
            if ((this.onEndGetGUserListDelegate == null)) {
                this.onEndGetGUserListDelegate = new EndOperationDelegate(this.OnEndGetGUserList);
            }
            if ((this.onGetGUserListCompletedDelegate == null)) {
                this.onGetGUserListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGUserListCompleted);
            }
            base.InvokeAsync(this.onBeginGetGUserListDelegate, new object[] {
                        clientID,
                        userDepartmentID,
                        qureyUserName,
                        pageIndex,
                        pageSize}, this.onEndGetGUserListDelegate, this.onGetGUserListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.AccountService.IUserService.BeginGetAccountInfo(string account, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAccountInfo(account, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfAccountInfo7ZhGgAvu Gsafety.PTMS.ServiceReference.AccountService.IUserService.EndGetAccountInfo(System.IAsyncResult result) {
            return base.Channel.EndGetAccountInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetAccountInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string account = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.AccountService.IUserService)(this)).BeginGetAccountInfo(account, password, callback, asyncState);
        }
        
        private object[] OnEndGetAccountInfo(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfAccountInfo7ZhGgAvu retVal = ((Gsafety.PTMS.ServiceReference.AccountService.IUserService)(this)).EndGetAccountInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAccountInfoCompleted(object state) {
            if ((this.GetAccountInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAccountInfoCompleted(this, new GetAccountInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAccountInfoAsync(string account, string password) {
            this.GetAccountInfoAsync(account, password, null);
        }
        
        public void GetAccountInfoAsync(string account, string password, object userState) {
            if ((this.onBeginGetAccountInfoDelegate == null)) {
                this.onBeginGetAccountInfoDelegate = new BeginOperationDelegate(this.OnBeginGetAccountInfo);
            }
            if ((this.onEndGetAccountInfoDelegate == null)) {
                this.onEndGetAccountInfoDelegate = new EndOperationDelegate(this.OnEndGetAccountInfo);
            }
            if ((this.onGetAccountInfoCompletedDelegate == null)) {
                this.onGetAccountInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAccountInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetAccountInfoDelegate, new object[] {
                        account,
                        password}, this.onEndGetAccountInfoDelegate, this.onGetAccountInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.AccountService.IUserService.BeginIsUserNameExist(string userName, string userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsUserNameExist(userName, userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.AccountService.IUserService.EndIsUserNameExist(System.IAsyncResult result) {
            return base.Channel.EndIsUserNameExist(result);
        }
        
        private System.IAsyncResult OnBeginIsUserNameExist(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userName = ((string)(inValues[0]));
            string userID = ((string)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.AccountService.IUserService)(this)).BeginIsUserNameExist(userName, userID, callback, asyncState);
        }
        
        private object[] OnEndIsUserNameExist(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.AccountService.IUserService)(this)).EndIsUserNameExist(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsUserNameExistCompleted(object state) {
            if ((this.IsUserNameExistCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsUserNameExistCompleted(this, new IsUserNameExistCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsUserNameExistAsync(string userName, string userID) {
            this.IsUserNameExistAsync(userName, userID, null);
        }
        
        public void IsUserNameExistAsync(string userName, string userID, object userState) {
            if ((this.onBeginIsUserNameExistDelegate == null)) {
                this.onBeginIsUserNameExistDelegate = new BeginOperationDelegate(this.OnBeginIsUserNameExist);
            }
            if ((this.onEndIsUserNameExistDelegate == null)) {
                this.onEndIsUserNameExistDelegate = new EndOperationDelegate(this.OnEndIsUserNameExist);
            }
            if ((this.onIsUserNameExistCompletedDelegate == null)) {
                this.onIsUserNameExistCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsUserNameExistCompleted);
            }
            base.InvokeAsync(this.onBeginIsUserNameExistDelegate, new object[] {
                        userName,
                        userID}, this.onEndIsUserNameExistDelegate, this.onIsUserNameExistCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.AccountService.IUserService.BeginGetOrderClientGUserByClientID(string clientid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOrderClientGUserByClientID(clientid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfGUser7ZhGgAvu Gsafety.PTMS.ServiceReference.AccountService.IUserService.EndGetOrderClientGUserByClientID(System.IAsyncResult result) {
            return base.Channel.EndGetOrderClientGUserByClientID(result);
        }
        
        private System.IAsyncResult OnBeginGetOrderClientGUserByClientID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientid = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.AccountService.IUserService)(this)).BeginGetOrderClientGUserByClientID(clientid, callback, asyncState);
        }
        
        private object[] OnEndGetOrderClientGUserByClientID(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfGUser7ZhGgAvu retVal = ((Gsafety.PTMS.ServiceReference.AccountService.IUserService)(this)).EndGetOrderClientGUserByClientID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOrderClientGUserByClientIDCompleted(object state) {
            if ((this.GetOrderClientGUserByClientIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOrderClientGUserByClientIDCompleted(this, new GetOrderClientGUserByClientIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOrderClientGUserByClientIDAsync(string clientid) {
            this.GetOrderClientGUserByClientIDAsync(clientid, null);
        }
        
        public void GetOrderClientGUserByClientIDAsync(string clientid, object userState) {
            if ((this.onBeginGetOrderClientGUserByClientIDDelegate == null)) {
                this.onBeginGetOrderClientGUserByClientIDDelegate = new BeginOperationDelegate(this.OnBeginGetOrderClientGUserByClientID);
            }
            if ((this.onEndGetOrderClientGUserByClientIDDelegate == null)) {
                this.onEndGetOrderClientGUserByClientIDDelegate = new EndOperationDelegate(this.OnEndGetOrderClientGUserByClientID);
            }
            if ((this.onGetOrderClientGUserByClientIDCompletedDelegate == null)) {
                this.onGetOrderClientGUserByClientIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOrderClientGUserByClientIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetOrderClientGUserByClientIDDelegate, new object[] {
                        clientid}, this.onEndGetOrderClientGUserByClientIDDelegate, this.onGetOrderClientGUserByClientIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.AccountService.IUserService.BeginModifyPassword(string userID, string password, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginModifyPassword(userID, password, logOperate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.AccountService.IUserService.EndModifyPassword(System.IAsyncResult result) {
            return base.Channel.EndModifyPassword(result);
        }
        
        private System.IAsyncResult OnBeginModifyPassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userID = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate = ((Gsafety.PTMS.ServiceReference.AccountService.LogOperate)(inValues[2]));
            return ((Gsafety.PTMS.ServiceReference.AccountService.IUserService)(this)).BeginModifyPassword(userID, password, logOperate, callback, asyncState);
        }
        
        private object[] OnEndModifyPassword(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.AccountService.IUserService)(this)).EndModifyPassword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnModifyPasswordCompleted(object state) {
            if ((this.ModifyPasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ModifyPasswordCompleted(this, new ModifyPasswordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ModifyPasswordAsync(string userID, string password, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate) {
            this.ModifyPasswordAsync(userID, password, logOperate, null);
        }
        
        public void ModifyPasswordAsync(string userID, string password, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate, object userState) {
            if ((this.onBeginModifyPasswordDelegate == null)) {
                this.onBeginModifyPasswordDelegate = new BeginOperationDelegate(this.OnBeginModifyPassword);
            }
            if ((this.onEndModifyPasswordDelegate == null)) {
                this.onEndModifyPasswordDelegate = new EndOperationDelegate(this.OnEndModifyPassword);
            }
            if ((this.onModifyPasswordCompletedDelegate == null)) {
                this.onModifyPasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnModifyPasswordCompleted);
            }
            base.InvokeAsync(this.onBeginModifyPasswordDelegate, new object[] {
                        userID,
                        password,
                        logOperate}, this.onEndModifyPasswordDelegate, this.onModifyPasswordCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.AccountService.IUserService.BeginUpdateDepartment(string userID, string departmentID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateDepartment(userID, departmentID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.AccountService.IUserService.EndUpdateDepartment(System.IAsyncResult result) {
            return base.Channel.EndUpdateDepartment(result);
        }
        
        private System.IAsyncResult OnBeginUpdateDepartment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userID = ((string)(inValues[0]));
            string departmentID = ((string)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.AccountService.IUserService)(this)).BeginUpdateDepartment(userID, departmentID, callback, asyncState);
        }
        
        private object[] OnEndUpdateDepartment(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.AccountService.IUserService)(this)).EndUpdateDepartment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateDepartmentCompleted(object state) {
            if ((this.UpdateDepartmentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateDepartmentCompleted(this, new UpdateDepartmentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateDepartmentAsync(string userID, string departmentID) {
            this.UpdateDepartmentAsync(userID, departmentID, null);
        }
        
        public void UpdateDepartmentAsync(string userID, string departmentID, object userState) {
            if ((this.onBeginUpdateDepartmentDelegate == null)) {
                this.onBeginUpdateDepartmentDelegate = new BeginOperationDelegate(this.OnBeginUpdateDepartment);
            }
            if ((this.onEndUpdateDepartmentDelegate == null)) {
                this.onEndUpdateDepartmentDelegate = new EndOperationDelegate(this.OnEndUpdateDepartment);
            }
            if ((this.onUpdateDepartmentCompletedDelegate == null)) {
                this.onUpdateDepartmentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateDepartmentCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateDepartmentDelegate, new object[] {
                        userID,
                        departmentID}, this.onEndUpdateDepartmentDelegate, this.onUpdateDepartmentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.AccountService.IUserService.BeginGetInstallStationUser(string clientID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInstallStationUser(clientID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfGUser7ZhGgAvu Gsafety.PTMS.ServiceReference.AccountService.IUserService.EndGetInstallStationUser(System.IAsyncResult result) {
            return base.Channel.EndGetInstallStationUser(result);
        }
        
        private System.IAsyncResult OnBeginGetInstallStationUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.AccountService.IUserService)(this)).BeginGetInstallStationUser(clientID, callback, asyncState);
        }
        
        private object[] OnEndGetInstallStationUser(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfGUser7ZhGgAvu retVal = ((Gsafety.PTMS.ServiceReference.AccountService.IUserService)(this)).EndGetInstallStationUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInstallStationUserCompleted(object state) {
            if ((this.GetInstallStationUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInstallStationUserCompleted(this, new GetInstallStationUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInstallStationUserAsync(string clientID) {
            this.GetInstallStationUserAsync(clientID, null);
        }
        
        public void GetInstallStationUserAsync(string clientID, object userState) {
            if ((this.onBeginGetInstallStationUserDelegate == null)) {
                this.onBeginGetInstallStationUserDelegate = new BeginOperationDelegate(this.OnBeginGetInstallStationUser);
            }
            if ((this.onEndGetInstallStationUserDelegate == null)) {
                this.onEndGetInstallStationUserDelegate = new EndOperationDelegate(this.OnEndGetInstallStationUser);
            }
            if ((this.onGetInstallStationUserCompletedDelegate == null)) {
                this.onGetInstallStationUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInstallStationUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetInstallStationUserDelegate, new object[] {
                        clientID}, this.onEndGetInstallStationUserDelegate, this.onGetInstallStationUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.AccountService.IUserService.BeginGetUserVehicleOrg(string userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserVehicleOrg(userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfOrganizationUsernBlkyCYJ Gsafety.PTMS.ServiceReference.AccountService.IUserService.EndGetUserVehicleOrg(System.IAsyncResult result) {
            return base.Channel.EndGetUserVehicleOrg(result);
        }
        
        private System.IAsyncResult OnBeginGetUserVehicleOrg(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userID = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.AccountService.IUserService)(this)).BeginGetUserVehicleOrg(userID, callback, asyncState);
        }
        
        private object[] OnEndGetUserVehicleOrg(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfOrganizationUsernBlkyCYJ retVal = ((Gsafety.PTMS.ServiceReference.AccountService.IUserService)(this)).EndGetUserVehicleOrg(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserVehicleOrgCompleted(object state) {
            if ((this.GetUserVehicleOrgCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserVehicleOrgCompleted(this, new GetUserVehicleOrgCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserVehicleOrgAsync(string userID) {
            this.GetUserVehicleOrgAsync(userID, null);
        }
        
        public void GetUserVehicleOrgAsync(string userID, object userState) {
            if ((this.onBeginGetUserVehicleOrgDelegate == null)) {
                this.onBeginGetUserVehicleOrgDelegate = new BeginOperationDelegate(this.OnBeginGetUserVehicleOrg);
            }
            if ((this.onEndGetUserVehicleOrgDelegate == null)) {
                this.onEndGetUserVehicleOrgDelegate = new EndOperationDelegate(this.OnEndGetUserVehicleOrg);
            }
            if ((this.onGetUserVehicleOrgCompletedDelegate == null)) {
                this.onGetUserVehicleOrgCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserVehicleOrgCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserVehicleOrgDelegate, new object[] {
                        userID}, this.onEndGetUserVehicleOrgDelegate, this.onGetUserVehicleOrgCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.AccountService.IUserService.BeginInsertUserVehicleOrg(System.Collections.ObjectModel.ObservableCollection<string> orgIds, string userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertUserVehicleOrg(orgIds, userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.AccountService.IUserService.EndInsertUserVehicleOrg(System.IAsyncResult result) {
            return base.Channel.EndInsertUserVehicleOrg(result);
        }
        
        private System.IAsyncResult OnBeginInsertUserVehicleOrg(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<string> orgIds = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[0]));
            string userID = ((string)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.AccountService.IUserService)(this)).BeginInsertUserVehicleOrg(orgIds, userID, callback, asyncState);
        }
        
        private object[] OnEndInsertUserVehicleOrg(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.AccountService.IUserService)(this)).EndInsertUserVehicleOrg(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertUserVehicleOrgCompleted(object state) {
            if ((this.InsertUserVehicleOrgCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertUserVehicleOrgCompleted(this, new InsertUserVehicleOrgCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertUserVehicleOrgAsync(System.Collections.ObjectModel.ObservableCollection<string> orgIds, string userID) {
            this.InsertUserVehicleOrgAsync(orgIds, userID, null);
        }
        
        public void InsertUserVehicleOrgAsync(System.Collections.ObjectModel.ObservableCollection<string> orgIds, string userID, object userState) {
            if ((this.onBeginInsertUserVehicleOrgDelegate == null)) {
                this.onBeginInsertUserVehicleOrgDelegate = new BeginOperationDelegate(this.OnBeginInsertUserVehicleOrg);
            }
            if ((this.onEndInsertUserVehicleOrgDelegate == null)) {
                this.onEndInsertUserVehicleOrgDelegate = new EndOperationDelegate(this.OnEndInsertUserVehicleOrg);
            }
            if ((this.onInsertUserVehicleOrgCompletedDelegate == null)) {
                this.onInsertUserVehicleOrgCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertUserVehicleOrgCompleted);
            }
            base.InvokeAsync(this.onBeginInsertUserVehicleOrgDelegate, new object[] {
                        orgIds,
                        userID}, this.onEndInsertUserVehicleOrgDelegate, this.onInsertUserVehicleOrgCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.AccountService.IUserService.BeginGetInstallStationUserByPage(string clientID, int pageSize, int pageIndex, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInstallStationUserByPage(clientID, pageSize, pageIndex, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfGUser7ZhGgAvu Gsafety.PTMS.ServiceReference.AccountService.IUserService.EndGetInstallStationUserByPage(System.IAsyncResult result) {
            return base.Channel.EndGetInstallStationUserByPage(result);
        }
        
        private System.IAsyncResult OnBeginGetInstallStationUserByPage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            int pageSize = ((int)(inValues[1]));
            int pageIndex = ((int)(inValues[2]));
            return ((Gsafety.PTMS.ServiceReference.AccountService.IUserService)(this)).BeginGetInstallStationUserByPage(clientID, pageSize, pageIndex, callback, asyncState);
        }
        
        private object[] OnEndGetInstallStationUserByPage(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfGUser7ZhGgAvu retVal = ((Gsafety.PTMS.ServiceReference.AccountService.IUserService)(this)).EndGetInstallStationUserByPage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInstallStationUserByPageCompleted(object state) {
            if ((this.GetInstallStationUserByPageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInstallStationUserByPageCompleted(this, new GetInstallStationUserByPageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInstallStationUserByPageAsync(string clientID, int pageSize, int pageIndex) {
            this.GetInstallStationUserByPageAsync(clientID, pageSize, pageIndex, null);
        }
        
        public void GetInstallStationUserByPageAsync(string clientID, int pageSize, int pageIndex, object userState) {
            if ((this.onBeginGetInstallStationUserByPageDelegate == null)) {
                this.onBeginGetInstallStationUserByPageDelegate = new BeginOperationDelegate(this.OnBeginGetInstallStationUserByPage);
            }
            if ((this.onEndGetInstallStationUserByPageDelegate == null)) {
                this.onEndGetInstallStationUserByPageDelegate = new EndOperationDelegate(this.OnEndGetInstallStationUserByPage);
            }
            if ((this.onGetInstallStationUserByPageCompletedDelegate == null)) {
                this.onGetInstallStationUserByPageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInstallStationUserByPageCompleted);
            }
            base.InvokeAsync(this.onBeginGetInstallStationUserByPageDelegate, new object[] {
                        clientID,
                        pageSize,
                        pageIndex}, this.onEndGetInstallStationUserByPageDelegate, this.onGetInstallStationUserByPageCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Gsafety.PTMS.ServiceReference.AccountService.IUserService CreateChannel() {
            return new UserServiceClientChannel(this);
        }
        
        private class UserServiceClientChannel : ChannelBase<Gsafety.PTMS.ServiceReference.AccountService.IUserService>, Gsafety.PTMS.ServiceReference.AccountService.IUserService {
            
            public UserServiceClientChannel(System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.AccountService.IUserService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginInsertGUser(Gsafety.PTMS.ServiceReference.AccountService.GUser model, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = model;
                _args[1] = logOperate;
                System.IAsyncResult _result = base.BeginInvoke("InsertGUser", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean EndInsertGUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean)(base.EndInvoke("InsertGUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertOrderClientSystemAdmin(Gsafety.PTMS.ServiceReference.AccountService.GUser model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("InsertOrderClientSystemAdmin", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean EndInsertOrderClientSystemAdmin(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean)(base.EndInvoke("InsertOrderClientSystemAdmin", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateGUser(Gsafety.PTMS.ServiceReference.AccountService.GUser model, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = model;
                _args[1] = logOperate;
                System.IAsyncResult _result = base.BeginInvoke("UpdateGUser", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean EndUpdateGUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean)(base.EndInvoke("UpdateGUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteGUser(string userID, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userID;
                _args[1] = logOperate;
                System.IAsyncResult _result = base.BeginInvoke("DeleteGUser", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean EndDeleteGUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean)(base.EndInvoke("DeleteGUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUserByAccoutName(string account, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = account;
                System.IAsyncResult _result = base.BeginInvoke("GetUserByAccoutName", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfGUser7ZhGgAvu EndGetUserByAccoutName(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfGUser7ZhGgAvu _result = ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfGUser7ZhGgAvu)(base.EndInvoke("GetUserByAccoutName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetGUserList(string clientID, string userDepartmentID, string qureyUserName, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = clientID;
                _args[1] = userDepartmentID;
                _args[2] = qureyUserName;
                _args[3] = pageIndex;
                _args[4] = pageSize;
                System.IAsyncResult _result = base.BeginInvoke("GetGUserList", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfGUser7ZhGgAvu EndGetGUserList(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfGUser7ZhGgAvu _result = ((Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfGUser7ZhGgAvu)(base.EndInvoke("GetGUserList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAccountInfo(string account, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = account;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("GetAccountInfo", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfAccountInfo7ZhGgAvu EndGetAccountInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfAccountInfo7ZhGgAvu _result = ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfAccountInfo7ZhGgAvu)(base.EndInvoke("GetAccountInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginIsUserNameExist(string userName, string userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userName;
                _args[1] = userID;
                System.IAsyncResult _result = base.BeginInvoke("IsUserNameExist", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean EndIsUserNameExist(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean)(base.EndInvoke("IsUserNameExist", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetOrderClientGUserByClientID(string clientid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = clientid;
                System.IAsyncResult _result = base.BeginInvoke("GetOrderClientGUserByClientID", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfGUser7ZhGgAvu EndGetOrderClientGUserByClientID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfGUser7ZhGgAvu _result = ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfGUser7ZhGgAvu)(base.EndInvoke("GetOrderClientGUserByClientID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginModifyPassword(string userID, string password, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = userID;
                _args[1] = password;
                _args[2] = logOperate;
                System.IAsyncResult _result = base.BeginInvoke("ModifyPassword", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean EndModifyPassword(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean)(base.EndInvoke("ModifyPassword", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateDepartment(string userID, string departmentID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userID;
                _args[1] = departmentID;
                System.IAsyncResult _result = base.BeginInvoke("UpdateDepartment", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean EndUpdateDepartment(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean)(base.EndInvoke("UpdateDepartment", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetInstallStationUser(string clientID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = clientID;
                System.IAsyncResult _result = base.BeginInvoke("GetInstallStationUser", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfGUser7ZhGgAvu EndGetInstallStationUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfGUser7ZhGgAvu _result = ((Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfGUser7ZhGgAvu)(base.EndInvoke("GetInstallStationUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUserVehicleOrg(string userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userID;
                System.IAsyncResult _result = base.BeginInvoke("GetUserVehicleOrg", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfOrganizationUsernBlkyCYJ EndGetUserVehicleOrg(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfOrganizationUsernBlkyCYJ _result = ((Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfOrganizationUsernBlkyCYJ)(base.EndInvoke("GetUserVehicleOrg", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertUserVehicleOrg(System.Collections.ObjectModel.ObservableCollection<string> orgIds, string userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = orgIds;
                _args[1] = userID;
                System.IAsyncResult _result = base.BeginInvoke("InsertUserVehicleOrg", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean EndInsertUserVehicleOrg(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean)(base.EndInvoke("InsertUserVehicleOrg", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetInstallStationUserByPage(string clientID, int pageSize, int pageIndex, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = clientID;
                _args[1] = pageSize;
                _args[2] = pageIndex;
                System.IAsyncResult _result = base.BeginInvoke("GetInstallStationUserByPage", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfGUser7ZhGgAvu EndGetInstallStationUserByPage(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfGUser7ZhGgAvu _result = ((Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfGUser7ZhGgAvu)(base.EndInvoke("GetInstallStationUserByPage", _args, result)));
                return _result;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountService.IRoleService")]
    public interface IRoleService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRoleService/InsertRole", ReplyAction="http://tempuri.org/IRoleService/InsertRoleResponse")]
        System.IAsyncResult BeginInsertRole(Gsafety.PTMS.ServiceReference.AccountService.Role model, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean EndInsertRole(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRoleService/UpdateRole", ReplyAction="http://tempuri.org/IRoleService/UpdateRoleResponse")]
        System.IAsyncResult BeginUpdateRole(Gsafety.PTMS.ServiceReference.AccountService.Role model, bool IsUpdateRole, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean EndUpdateRole(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRoleService/DeleteRoleByID", ReplyAction="http://tempuri.org/IRoleService/DeleteRoleByIDResponse")]
        System.IAsyncResult BeginDeleteRoleByID(string ID, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean EndDeleteRoleByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRoleService/GetRoleList", ReplyAction="http://tempuri.org/IRoleService/GetRoleListResponse")]
        System.IAsyncResult BeginGetRoleList(string clientID, string roleName, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfRole7ZhGgAvu EndGetRoleList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRoleService/UpdateRoleFunItems", ReplyAction="http://tempuri.org/IRoleService/UpdateRoleFunItemsResponse")]
        System.IAsyncResult BeginUpdateRoleFunItems(string roleID, System.Collections.ObjectModel.ObservableCollection<string> funItemIDs, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean EndUpdateRoleFunItems(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRoleService/GetFunItemsByRoleID", ReplyAction="http://tempuri.org/IRoleService/GetFunItemsByRoleIDResponse")]
        System.IAsyncResult BeginGetFunItemsByRoleID(string roleID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfstring EndGetFunItemsByRoleID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRoleService/GetAllFunItems", ReplyAction="http://tempuri.org/IRoleService/GetAllFunItemsResponse")]
        System.IAsyncResult BeginGetAllFunItems(System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfFuncItem7ZhGgAvu EndGetAllFunItems(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRoleServiceChannel : Gsafety.PTMS.ServiceReference.AccountService.IRoleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteRoleByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteRoleByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRoleListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRoleListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfRole7ZhGgAvu Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfRole7ZhGgAvu)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateRoleFunItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateRoleFunItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFunItemsByRoleIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFunItemsByRoleIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfstring Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfstring)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllFunItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllFunItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfFuncItem7ZhGgAvu Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfFuncItem7ZhGgAvu)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RoleServiceClient : System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.AccountService.IRoleService>, Gsafety.PTMS.ServiceReference.AccountService.IRoleService {
        
        private BeginOperationDelegate onBeginInsertRoleDelegate;
        
        private EndOperationDelegate onEndInsertRoleDelegate;
        
        private System.Threading.SendOrPostCallback onInsertRoleCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateRoleDelegate;
        
        private EndOperationDelegate onEndUpdateRoleDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateRoleCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteRoleByIDDelegate;
        
        private EndOperationDelegate onEndDeleteRoleByIDDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteRoleByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRoleListDelegate;
        
        private EndOperationDelegate onEndGetRoleListDelegate;
        
        private System.Threading.SendOrPostCallback onGetRoleListCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateRoleFunItemsDelegate;
        
        private EndOperationDelegate onEndUpdateRoleFunItemsDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateRoleFunItemsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFunItemsByRoleIDDelegate;
        
        private EndOperationDelegate onEndGetFunItemsByRoleIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetFunItemsByRoleIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllFunItemsDelegate;
        
        private EndOperationDelegate onEndGetAllFunItemsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllFunItemsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public RoleServiceClient() {
        }
        
        public RoleServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RoleServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoleServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RoleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<InsertRoleCompletedEventArgs> InsertRoleCompleted;
        
        public event System.EventHandler<UpdateRoleCompletedEventArgs> UpdateRoleCompleted;
        
        public event System.EventHandler<DeleteRoleByIDCompletedEventArgs> DeleteRoleByIDCompleted;
        
        public event System.EventHandler<GetRoleListCompletedEventArgs> GetRoleListCompleted;
        
        public event System.EventHandler<UpdateRoleFunItemsCompletedEventArgs> UpdateRoleFunItemsCompleted;
        
        public event System.EventHandler<GetFunItemsByRoleIDCompletedEventArgs> GetFunItemsByRoleIDCompleted;
        
        public event System.EventHandler<GetAllFunItemsCompletedEventArgs> GetAllFunItemsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.AccountService.IRoleService.BeginInsertRole(Gsafety.PTMS.ServiceReference.AccountService.Role model, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertRole(model, logOperate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.AccountService.IRoleService.EndInsertRole(System.IAsyncResult result) {
            return base.Channel.EndInsertRole(result);
        }
        
        private System.IAsyncResult OnBeginInsertRole(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.AccountService.Role model = ((Gsafety.PTMS.ServiceReference.AccountService.Role)(inValues[0]));
            Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate = ((Gsafety.PTMS.ServiceReference.AccountService.LogOperate)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.AccountService.IRoleService)(this)).BeginInsertRole(model, logOperate, callback, asyncState);
        }
        
        private object[] OnEndInsertRole(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.AccountService.IRoleService)(this)).EndInsertRole(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertRoleCompleted(object state) {
            if ((this.InsertRoleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertRoleCompleted(this, new InsertRoleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertRoleAsync(Gsafety.PTMS.ServiceReference.AccountService.Role model, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate) {
            this.InsertRoleAsync(model, logOperate, null);
        }
        
        public void InsertRoleAsync(Gsafety.PTMS.ServiceReference.AccountService.Role model, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate, object userState) {
            if ((this.onBeginInsertRoleDelegate == null)) {
                this.onBeginInsertRoleDelegate = new BeginOperationDelegate(this.OnBeginInsertRole);
            }
            if ((this.onEndInsertRoleDelegate == null)) {
                this.onEndInsertRoleDelegate = new EndOperationDelegate(this.OnEndInsertRole);
            }
            if ((this.onInsertRoleCompletedDelegate == null)) {
                this.onInsertRoleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertRoleCompleted);
            }
            base.InvokeAsync(this.onBeginInsertRoleDelegate, new object[] {
                        model,
                        logOperate}, this.onEndInsertRoleDelegate, this.onInsertRoleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.AccountService.IRoleService.BeginUpdateRole(Gsafety.PTMS.ServiceReference.AccountService.Role model, bool IsUpdateRole, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateRole(model, IsUpdateRole, logOperate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.AccountService.IRoleService.EndUpdateRole(System.IAsyncResult result) {
            return base.Channel.EndUpdateRole(result);
        }
        
        private System.IAsyncResult OnBeginUpdateRole(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.AccountService.Role model = ((Gsafety.PTMS.ServiceReference.AccountService.Role)(inValues[0]));
            bool IsUpdateRole = ((bool)(inValues[1]));
            Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate = ((Gsafety.PTMS.ServiceReference.AccountService.LogOperate)(inValues[2]));
            return ((Gsafety.PTMS.ServiceReference.AccountService.IRoleService)(this)).BeginUpdateRole(model, IsUpdateRole, logOperate, callback, asyncState);
        }
        
        private object[] OnEndUpdateRole(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.AccountService.IRoleService)(this)).EndUpdateRole(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateRoleCompleted(object state) {
            if ((this.UpdateRoleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateRoleCompleted(this, new UpdateRoleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateRoleAsync(Gsafety.PTMS.ServiceReference.AccountService.Role model, bool IsUpdateRole, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate) {
            this.UpdateRoleAsync(model, IsUpdateRole, logOperate, null);
        }
        
        public void UpdateRoleAsync(Gsafety.PTMS.ServiceReference.AccountService.Role model, bool IsUpdateRole, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate, object userState) {
            if ((this.onBeginUpdateRoleDelegate == null)) {
                this.onBeginUpdateRoleDelegate = new BeginOperationDelegate(this.OnBeginUpdateRole);
            }
            if ((this.onEndUpdateRoleDelegate == null)) {
                this.onEndUpdateRoleDelegate = new EndOperationDelegate(this.OnEndUpdateRole);
            }
            if ((this.onUpdateRoleCompletedDelegate == null)) {
                this.onUpdateRoleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateRoleCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateRoleDelegate, new object[] {
                        model,
                        IsUpdateRole,
                        logOperate}, this.onEndUpdateRoleDelegate, this.onUpdateRoleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.AccountService.IRoleService.BeginDeleteRoleByID(string ID, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteRoleByID(ID, logOperate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.AccountService.IRoleService.EndDeleteRoleByID(System.IAsyncResult result) {
            return base.Channel.EndDeleteRoleByID(result);
        }
        
        private System.IAsyncResult OnBeginDeleteRoleByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ID = ((string)(inValues[0]));
            Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate = ((Gsafety.PTMS.ServiceReference.AccountService.LogOperate)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.AccountService.IRoleService)(this)).BeginDeleteRoleByID(ID, logOperate, callback, asyncState);
        }
        
        private object[] OnEndDeleteRoleByID(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.AccountService.IRoleService)(this)).EndDeleteRoleByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteRoleByIDCompleted(object state) {
            if ((this.DeleteRoleByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteRoleByIDCompleted(this, new DeleteRoleByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteRoleByIDAsync(string ID, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate) {
            this.DeleteRoleByIDAsync(ID, logOperate, null);
        }
        
        public void DeleteRoleByIDAsync(string ID, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate, object userState) {
            if ((this.onBeginDeleteRoleByIDDelegate == null)) {
                this.onBeginDeleteRoleByIDDelegate = new BeginOperationDelegate(this.OnBeginDeleteRoleByID);
            }
            if ((this.onEndDeleteRoleByIDDelegate == null)) {
                this.onEndDeleteRoleByIDDelegate = new EndOperationDelegate(this.OnEndDeleteRoleByID);
            }
            if ((this.onDeleteRoleByIDCompletedDelegate == null)) {
                this.onDeleteRoleByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteRoleByIDCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteRoleByIDDelegate, new object[] {
                        ID,
                        logOperate}, this.onEndDeleteRoleByIDDelegate, this.onDeleteRoleByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.AccountService.IRoleService.BeginGetRoleList(string clientID, string roleName, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRoleList(clientID, roleName, pageIndex, pageSize, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfRole7ZhGgAvu Gsafety.PTMS.ServiceReference.AccountService.IRoleService.EndGetRoleList(System.IAsyncResult result) {
            return base.Channel.EndGetRoleList(result);
        }
        
        private System.IAsyncResult OnBeginGetRoleList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            string roleName = ((string)(inValues[1]));
            int pageIndex = ((int)(inValues[2]));
            int pageSize = ((int)(inValues[3]));
            return ((Gsafety.PTMS.ServiceReference.AccountService.IRoleService)(this)).BeginGetRoleList(clientID, roleName, pageIndex, pageSize, callback, asyncState);
        }
        
        private object[] OnEndGetRoleList(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfRole7ZhGgAvu retVal = ((Gsafety.PTMS.ServiceReference.AccountService.IRoleService)(this)).EndGetRoleList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRoleListCompleted(object state) {
            if ((this.GetRoleListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRoleListCompleted(this, new GetRoleListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRoleListAsync(string clientID, string roleName, int pageIndex, int pageSize) {
            this.GetRoleListAsync(clientID, roleName, pageIndex, pageSize, null);
        }
        
        public void GetRoleListAsync(string clientID, string roleName, int pageIndex, int pageSize, object userState) {
            if ((this.onBeginGetRoleListDelegate == null)) {
                this.onBeginGetRoleListDelegate = new BeginOperationDelegate(this.OnBeginGetRoleList);
            }
            if ((this.onEndGetRoleListDelegate == null)) {
                this.onEndGetRoleListDelegate = new EndOperationDelegate(this.OnEndGetRoleList);
            }
            if ((this.onGetRoleListCompletedDelegate == null)) {
                this.onGetRoleListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRoleListCompleted);
            }
            base.InvokeAsync(this.onBeginGetRoleListDelegate, new object[] {
                        clientID,
                        roleName,
                        pageIndex,
                        pageSize}, this.onEndGetRoleListDelegate, this.onGetRoleListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.AccountService.IRoleService.BeginUpdateRoleFunItems(string roleID, System.Collections.ObjectModel.ObservableCollection<string> funItemIDs, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateRoleFunItems(roleID, funItemIDs, logOperate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.AccountService.IRoleService.EndUpdateRoleFunItems(System.IAsyncResult result) {
            return base.Channel.EndUpdateRoleFunItems(result);
        }
        
        private System.IAsyncResult OnBeginUpdateRoleFunItems(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string roleID = ((string)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<string> funItemIDs = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[1]));
            Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate = ((Gsafety.PTMS.ServiceReference.AccountService.LogOperate)(inValues[2]));
            return ((Gsafety.PTMS.ServiceReference.AccountService.IRoleService)(this)).BeginUpdateRoleFunItems(roleID, funItemIDs, logOperate, callback, asyncState);
        }
        
        private object[] OnEndUpdateRoleFunItems(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.AccountService.IRoleService)(this)).EndUpdateRoleFunItems(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateRoleFunItemsCompleted(object state) {
            if ((this.UpdateRoleFunItemsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateRoleFunItemsCompleted(this, new UpdateRoleFunItemsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateRoleFunItemsAsync(string roleID, System.Collections.ObjectModel.ObservableCollection<string> funItemIDs, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate) {
            this.UpdateRoleFunItemsAsync(roleID, funItemIDs, logOperate, null);
        }
        
        public void UpdateRoleFunItemsAsync(string roleID, System.Collections.ObjectModel.ObservableCollection<string> funItemIDs, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate, object userState) {
            if ((this.onBeginUpdateRoleFunItemsDelegate == null)) {
                this.onBeginUpdateRoleFunItemsDelegate = new BeginOperationDelegate(this.OnBeginUpdateRoleFunItems);
            }
            if ((this.onEndUpdateRoleFunItemsDelegate == null)) {
                this.onEndUpdateRoleFunItemsDelegate = new EndOperationDelegate(this.OnEndUpdateRoleFunItems);
            }
            if ((this.onUpdateRoleFunItemsCompletedDelegate == null)) {
                this.onUpdateRoleFunItemsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateRoleFunItemsCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateRoleFunItemsDelegate, new object[] {
                        roleID,
                        funItemIDs,
                        logOperate}, this.onEndUpdateRoleFunItemsDelegate, this.onUpdateRoleFunItemsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.AccountService.IRoleService.BeginGetFunItemsByRoleID(string roleID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFunItemsByRoleID(roleID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfstring Gsafety.PTMS.ServiceReference.AccountService.IRoleService.EndGetFunItemsByRoleID(System.IAsyncResult result) {
            return base.Channel.EndGetFunItemsByRoleID(result);
        }
        
        private System.IAsyncResult OnBeginGetFunItemsByRoleID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string roleID = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.AccountService.IRoleService)(this)).BeginGetFunItemsByRoleID(roleID, callback, asyncState);
        }
        
        private object[] OnEndGetFunItemsByRoleID(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfstring retVal = ((Gsafety.PTMS.ServiceReference.AccountService.IRoleService)(this)).EndGetFunItemsByRoleID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFunItemsByRoleIDCompleted(object state) {
            if ((this.GetFunItemsByRoleIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFunItemsByRoleIDCompleted(this, new GetFunItemsByRoleIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFunItemsByRoleIDAsync(string roleID) {
            this.GetFunItemsByRoleIDAsync(roleID, null);
        }
        
        public void GetFunItemsByRoleIDAsync(string roleID, object userState) {
            if ((this.onBeginGetFunItemsByRoleIDDelegate == null)) {
                this.onBeginGetFunItemsByRoleIDDelegate = new BeginOperationDelegate(this.OnBeginGetFunItemsByRoleID);
            }
            if ((this.onEndGetFunItemsByRoleIDDelegate == null)) {
                this.onEndGetFunItemsByRoleIDDelegate = new EndOperationDelegate(this.OnEndGetFunItemsByRoleID);
            }
            if ((this.onGetFunItemsByRoleIDCompletedDelegate == null)) {
                this.onGetFunItemsByRoleIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFunItemsByRoleIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetFunItemsByRoleIDDelegate, new object[] {
                        roleID}, this.onEndGetFunItemsByRoleIDDelegate, this.onGetFunItemsByRoleIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.AccountService.IRoleService.BeginGetAllFunItems(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllFunItems(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfFuncItem7ZhGgAvu Gsafety.PTMS.ServiceReference.AccountService.IRoleService.EndGetAllFunItems(System.IAsyncResult result) {
            return base.Channel.EndGetAllFunItems(result);
        }
        
        private System.IAsyncResult OnBeginGetAllFunItems(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Gsafety.PTMS.ServiceReference.AccountService.IRoleService)(this)).BeginGetAllFunItems(callback, asyncState);
        }
        
        private object[] OnEndGetAllFunItems(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfFuncItem7ZhGgAvu retVal = ((Gsafety.PTMS.ServiceReference.AccountService.IRoleService)(this)).EndGetAllFunItems(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllFunItemsCompleted(object state) {
            if ((this.GetAllFunItemsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllFunItemsCompleted(this, new GetAllFunItemsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllFunItemsAsync() {
            this.GetAllFunItemsAsync(null);
        }
        
        public void GetAllFunItemsAsync(object userState) {
            if ((this.onBeginGetAllFunItemsDelegate == null)) {
                this.onBeginGetAllFunItemsDelegate = new BeginOperationDelegate(this.OnBeginGetAllFunItems);
            }
            if ((this.onEndGetAllFunItemsDelegate == null)) {
                this.onEndGetAllFunItemsDelegate = new EndOperationDelegate(this.OnEndGetAllFunItems);
            }
            if ((this.onGetAllFunItemsCompletedDelegate == null)) {
                this.onGetAllFunItemsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllFunItemsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllFunItemsDelegate, null, this.onEndGetAllFunItemsDelegate, this.onGetAllFunItemsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Gsafety.PTMS.ServiceReference.AccountService.IRoleService CreateChannel() {
            return new RoleServiceClientChannel(this);
        }
        
        private class RoleServiceClientChannel : ChannelBase<Gsafety.PTMS.ServiceReference.AccountService.IRoleService>, Gsafety.PTMS.ServiceReference.AccountService.IRoleService {
            
            public RoleServiceClientChannel(System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.AccountService.IRoleService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginInsertRole(Gsafety.PTMS.ServiceReference.AccountService.Role model, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = model;
                _args[1] = logOperate;
                System.IAsyncResult _result = base.BeginInvoke("InsertRole", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean EndInsertRole(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean)(base.EndInvoke("InsertRole", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateRole(Gsafety.PTMS.ServiceReference.AccountService.Role model, bool IsUpdateRole, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = model;
                _args[1] = IsUpdateRole;
                _args[2] = logOperate;
                System.IAsyncResult _result = base.BeginInvoke("UpdateRole", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean EndUpdateRole(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean)(base.EndInvoke("UpdateRole", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteRoleByID(string ID, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = ID;
                _args[1] = logOperate;
                System.IAsyncResult _result = base.BeginInvoke("DeleteRoleByID", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean EndDeleteRoleByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean)(base.EndInvoke("DeleteRoleByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRoleList(string clientID, string roleName, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = clientID;
                _args[1] = roleName;
                _args[2] = pageIndex;
                _args[3] = pageSize;
                System.IAsyncResult _result = base.BeginInvoke("GetRoleList", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfRole7ZhGgAvu EndGetRoleList(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfRole7ZhGgAvu _result = ((Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfRole7ZhGgAvu)(base.EndInvoke("GetRoleList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateRoleFunItems(string roleID, System.Collections.ObjectModel.ObservableCollection<string> funItemIDs, Gsafety.PTMS.ServiceReference.AccountService.LogOperate logOperate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = roleID;
                _args[1] = funItemIDs;
                _args[2] = logOperate;
                System.IAsyncResult _result = base.BeginInvoke("UpdateRoleFunItems", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean EndUpdateRoleFunItems(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean)(base.EndInvoke("UpdateRoleFunItems", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetFunItemsByRoleID(string roleID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = roleID;
                System.IAsyncResult _result = base.BeginInvoke("GetFunItemsByRoleID", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfstring EndGetFunItemsByRoleID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfstring _result = ((Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfstring)(base.EndInvoke("GetFunItemsByRoleID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllFunItems(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllFunItems", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfFuncItem7ZhGgAvu EndGetAllFunItems(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfFuncItem7ZhGgAvu _result = ((Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfFuncItem7ZhGgAvu)(base.EndInvoke("GetAllFunItems", _args, result)));
                return _result;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountService.IUsrDepartment")]
    public interface IUsrDepartment {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUsrDepartment/InsertUsrDepartment", ReplyAction="http://tempuri.org/IUsrDepartment/InsertUsrDepartmentResponse")]
        System.IAsyncResult BeginInsertUsrDepartment(Gsafety.PTMS.ServiceReference.AccountService.UsrDepartment model, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean EndInsertUsrDepartment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUsrDepartment/UpdateUsrDepartment", ReplyAction="http://tempuri.org/IUsrDepartment/UpdateUsrDepartmentResponse")]
        System.IAsyncResult BeginUpdateUsrDepartment(Gsafety.PTMS.ServiceReference.AccountService.UsrDepartment model, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean EndUpdateUsrDepartment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUsrDepartment/DeleteUsrDepartmentByID", ReplyAction="http://tempuri.org/IUsrDepartment/DeleteUsrDepartmentByIDResponse")]
        System.IAsyncResult BeginDeleteUsrDepartmentByID(string ID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean EndDeleteUsrDepartmentByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUsrDepartment/GetUsrDepartment", ReplyAction="http://tempuri.org/IUsrDepartment/GetUsrDepartmentResponse")]
        System.IAsyncResult BeginGetUsrDepartment(string ID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfUsrDepartment7ZhGgAvu EndGetUsrDepartment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUsrDepartment/GetUsrDepartmentList", ReplyAction="http://tempuri.org/IUsrDepartment/GetUsrDepartmentListResponse")]
        System.IAsyncResult BeginGetUsrDepartmentList(int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfUsrDepartment7ZhGgAvu EndGetUsrDepartmentList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUsrDepartment/GetUserDepartmentList", ReplyAction="http://tempuri.org/IUsrDepartment/GetUserDepartmentListResponse")]
        System.IAsyncResult BeginGetUserDepartmentList(string name, string clientId, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfUsrDepartment7ZhGgAvu EndGetUserDepartmentList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUsrDepartment/IsCanDeleteUsrDepartment", ReplyAction="http://tempuri.org/IUsrDepartment/IsCanDeleteUsrDepartmentResponse")]
        System.IAsyncResult BeginIsCanDeleteUsrDepartment(string ID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean EndIsCanDeleteUsrDepartment(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUsrDepartmentChannel : Gsafety.PTMS.ServiceReference.AccountService.IUsrDepartment, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertUsrDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertUsrDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateUsrDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateUsrDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteUsrDepartmentByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteUsrDepartmentByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUsrDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUsrDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfUsrDepartment7ZhGgAvu Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfUsrDepartment7ZhGgAvu)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUsrDepartmentListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUsrDepartmentListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfUsrDepartment7ZhGgAvu Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfUsrDepartment7ZhGgAvu)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserDepartmentListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserDepartmentListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfUsrDepartment7ZhGgAvu Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfUsrDepartment7ZhGgAvu)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsCanDeleteUsrDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsCanDeleteUsrDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UsrDepartmentClient : System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.AccountService.IUsrDepartment>, Gsafety.PTMS.ServiceReference.AccountService.IUsrDepartment {
        
        private BeginOperationDelegate onBeginInsertUsrDepartmentDelegate;
        
        private EndOperationDelegate onEndInsertUsrDepartmentDelegate;
        
        private System.Threading.SendOrPostCallback onInsertUsrDepartmentCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateUsrDepartmentDelegate;
        
        private EndOperationDelegate onEndUpdateUsrDepartmentDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateUsrDepartmentCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteUsrDepartmentByIDDelegate;
        
        private EndOperationDelegate onEndDeleteUsrDepartmentByIDDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteUsrDepartmentByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUsrDepartmentDelegate;
        
        private EndOperationDelegate onEndGetUsrDepartmentDelegate;
        
        private System.Threading.SendOrPostCallback onGetUsrDepartmentCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUsrDepartmentListDelegate;
        
        private EndOperationDelegate onEndGetUsrDepartmentListDelegate;
        
        private System.Threading.SendOrPostCallback onGetUsrDepartmentListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserDepartmentListDelegate;
        
        private EndOperationDelegate onEndGetUserDepartmentListDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserDepartmentListCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsCanDeleteUsrDepartmentDelegate;
        
        private EndOperationDelegate onEndIsCanDeleteUsrDepartmentDelegate;
        
        private System.Threading.SendOrPostCallback onIsCanDeleteUsrDepartmentCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public UsrDepartmentClient() {
        }
        
        public UsrDepartmentClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UsrDepartmentClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UsrDepartmentClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UsrDepartmentClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<InsertUsrDepartmentCompletedEventArgs> InsertUsrDepartmentCompleted;
        
        public event System.EventHandler<UpdateUsrDepartmentCompletedEventArgs> UpdateUsrDepartmentCompleted;
        
        public event System.EventHandler<DeleteUsrDepartmentByIDCompletedEventArgs> DeleteUsrDepartmentByIDCompleted;
        
        public event System.EventHandler<GetUsrDepartmentCompletedEventArgs> GetUsrDepartmentCompleted;
        
        public event System.EventHandler<GetUsrDepartmentListCompletedEventArgs> GetUsrDepartmentListCompleted;
        
        public event System.EventHandler<GetUserDepartmentListCompletedEventArgs> GetUserDepartmentListCompleted;
        
        public event System.EventHandler<IsCanDeleteUsrDepartmentCompletedEventArgs> IsCanDeleteUsrDepartmentCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.AccountService.IUsrDepartment.BeginInsertUsrDepartment(Gsafety.PTMS.ServiceReference.AccountService.UsrDepartment model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertUsrDepartment(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.AccountService.IUsrDepartment.EndInsertUsrDepartment(System.IAsyncResult result) {
            return base.Channel.EndInsertUsrDepartment(result);
        }
        
        private System.IAsyncResult OnBeginInsertUsrDepartment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.AccountService.UsrDepartment model = ((Gsafety.PTMS.ServiceReference.AccountService.UsrDepartment)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.AccountService.IUsrDepartment)(this)).BeginInsertUsrDepartment(model, callback, asyncState);
        }
        
        private object[] OnEndInsertUsrDepartment(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.AccountService.IUsrDepartment)(this)).EndInsertUsrDepartment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertUsrDepartmentCompleted(object state) {
            if ((this.InsertUsrDepartmentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertUsrDepartmentCompleted(this, new InsertUsrDepartmentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertUsrDepartmentAsync(Gsafety.PTMS.ServiceReference.AccountService.UsrDepartment model) {
            this.InsertUsrDepartmentAsync(model, null);
        }
        
        public void InsertUsrDepartmentAsync(Gsafety.PTMS.ServiceReference.AccountService.UsrDepartment model, object userState) {
            if ((this.onBeginInsertUsrDepartmentDelegate == null)) {
                this.onBeginInsertUsrDepartmentDelegate = new BeginOperationDelegate(this.OnBeginInsertUsrDepartment);
            }
            if ((this.onEndInsertUsrDepartmentDelegate == null)) {
                this.onEndInsertUsrDepartmentDelegate = new EndOperationDelegate(this.OnEndInsertUsrDepartment);
            }
            if ((this.onInsertUsrDepartmentCompletedDelegate == null)) {
                this.onInsertUsrDepartmentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertUsrDepartmentCompleted);
            }
            base.InvokeAsync(this.onBeginInsertUsrDepartmentDelegate, new object[] {
                        model}, this.onEndInsertUsrDepartmentDelegate, this.onInsertUsrDepartmentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.AccountService.IUsrDepartment.BeginUpdateUsrDepartment(Gsafety.PTMS.ServiceReference.AccountService.UsrDepartment model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateUsrDepartment(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.AccountService.IUsrDepartment.EndUpdateUsrDepartment(System.IAsyncResult result) {
            return base.Channel.EndUpdateUsrDepartment(result);
        }
        
        private System.IAsyncResult OnBeginUpdateUsrDepartment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.AccountService.UsrDepartment model = ((Gsafety.PTMS.ServiceReference.AccountService.UsrDepartment)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.AccountService.IUsrDepartment)(this)).BeginUpdateUsrDepartment(model, callback, asyncState);
        }
        
        private object[] OnEndUpdateUsrDepartment(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.AccountService.IUsrDepartment)(this)).EndUpdateUsrDepartment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateUsrDepartmentCompleted(object state) {
            if ((this.UpdateUsrDepartmentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateUsrDepartmentCompleted(this, new UpdateUsrDepartmentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateUsrDepartmentAsync(Gsafety.PTMS.ServiceReference.AccountService.UsrDepartment model) {
            this.UpdateUsrDepartmentAsync(model, null);
        }
        
        public void UpdateUsrDepartmentAsync(Gsafety.PTMS.ServiceReference.AccountService.UsrDepartment model, object userState) {
            if ((this.onBeginUpdateUsrDepartmentDelegate == null)) {
                this.onBeginUpdateUsrDepartmentDelegate = new BeginOperationDelegate(this.OnBeginUpdateUsrDepartment);
            }
            if ((this.onEndUpdateUsrDepartmentDelegate == null)) {
                this.onEndUpdateUsrDepartmentDelegate = new EndOperationDelegate(this.OnEndUpdateUsrDepartment);
            }
            if ((this.onUpdateUsrDepartmentCompletedDelegate == null)) {
                this.onUpdateUsrDepartmentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateUsrDepartmentCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateUsrDepartmentDelegate, new object[] {
                        model}, this.onEndUpdateUsrDepartmentDelegate, this.onUpdateUsrDepartmentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.AccountService.IUsrDepartment.BeginDeleteUsrDepartmentByID(string ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteUsrDepartmentByID(ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.AccountService.IUsrDepartment.EndDeleteUsrDepartmentByID(System.IAsyncResult result) {
            return base.Channel.EndDeleteUsrDepartmentByID(result);
        }
        
        private System.IAsyncResult OnBeginDeleteUsrDepartmentByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ID = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.AccountService.IUsrDepartment)(this)).BeginDeleteUsrDepartmentByID(ID, callback, asyncState);
        }
        
        private object[] OnEndDeleteUsrDepartmentByID(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.AccountService.IUsrDepartment)(this)).EndDeleteUsrDepartmentByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteUsrDepartmentByIDCompleted(object state) {
            if ((this.DeleteUsrDepartmentByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteUsrDepartmentByIDCompleted(this, new DeleteUsrDepartmentByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteUsrDepartmentByIDAsync(string ID) {
            this.DeleteUsrDepartmentByIDAsync(ID, null);
        }
        
        public void DeleteUsrDepartmentByIDAsync(string ID, object userState) {
            if ((this.onBeginDeleteUsrDepartmentByIDDelegate == null)) {
                this.onBeginDeleteUsrDepartmentByIDDelegate = new BeginOperationDelegate(this.OnBeginDeleteUsrDepartmentByID);
            }
            if ((this.onEndDeleteUsrDepartmentByIDDelegate == null)) {
                this.onEndDeleteUsrDepartmentByIDDelegate = new EndOperationDelegate(this.OnEndDeleteUsrDepartmentByID);
            }
            if ((this.onDeleteUsrDepartmentByIDCompletedDelegate == null)) {
                this.onDeleteUsrDepartmentByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteUsrDepartmentByIDCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteUsrDepartmentByIDDelegate, new object[] {
                        ID}, this.onEndDeleteUsrDepartmentByIDDelegate, this.onDeleteUsrDepartmentByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.AccountService.IUsrDepartment.BeginGetUsrDepartment(string ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUsrDepartment(ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfUsrDepartment7ZhGgAvu Gsafety.PTMS.ServiceReference.AccountService.IUsrDepartment.EndGetUsrDepartment(System.IAsyncResult result) {
            return base.Channel.EndGetUsrDepartment(result);
        }
        
        private System.IAsyncResult OnBeginGetUsrDepartment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ID = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.AccountService.IUsrDepartment)(this)).BeginGetUsrDepartment(ID, callback, asyncState);
        }
        
        private object[] OnEndGetUsrDepartment(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfUsrDepartment7ZhGgAvu retVal = ((Gsafety.PTMS.ServiceReference.AccountService.IUsrDepartment)(this)).EndGetUsrDepartment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUsrDepartmentCompleted(object state) {
            if ((this.GetUsrDepartmentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUsrDepartmentCompleted(this, new GetUsrDepartmentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUsrDepartmentAsync(string ID) {
            this.GetUsrDepartmentAsync(ID, null);
        }
        
        public void GetUsrDepartmentAsync(string ID, object userState) {
            if ((this.onBeginGetUsrDepartmentDelegate == null)) {
                this.onBeginGetUsrDepartmentDelegate = new BeginOperationDelegate(this.OnBeginGetUsrDepartment);
            }
            if ((this.onEndGetUsrDepartmentDelegate == null)) {
                this.onEndGetUsrDepartmentDelegate = new EndOperationDelegate(this.OnEndGetUsrDepartment);
            }
            if ((this.onGetUsrDepartmentCompletedDelegate == null)) {
                this.onGetUsrDepartmentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUsrDepartmentCompleted);
            }
            base.InvokeAsync(this.onBeginGetUsrDepartmentDelegate, new object[] {
                        ID}, this.onEndGetUsrDepartmentDelegate, this.onGetUsrDepartmentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.AccountService.IUsrDepartment.BeginGetUsrDepartmentList(int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUsrDepartmentList(pageIndex, pageSize, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfUsrDepartment7ZhGgAvu Gsafety.PTMS.ServiceReference.AccountService.IUsrDepartment.EndGetUsrDepartmentList(System.IAsyncResult result) {
            return base.Channel.EndGetUsrDepartmentList(result);
        }
        
        private System.IAsyncResult OnBeginGetUsrDepartmentList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pageIndex = ((int)(inValues[0]));
            int pageSize = ((int)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.AccountService.IUsrDepartment)(this)).BeginGetUsrDepartmentList(pageIndex, pageSize, callback, asyncState);
        }
        
        private object[] OnEndGetUsrDepartmentList(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfUsrDepartment7ZhGgAvu retVal = ((Gsafety.PTMS.ServiceReference.AccountService.IUsrDepartment)(this)).EndGetUsrDepartmentList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUsrDepartmentListCompleted(object state) {
            if ((this.GetUsrDepartmentListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUsrDepartmentListCompleted(this, new GetUsrDepartmentListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUsrDepartmentListAsync(int pageIndex, int pageSize) {
            this.GetUsrDepartmentListAsync(pageIndex, pageSize, null);
        }
        
        public void GetUsrDepartmentListAsync(int pageIndex, int pageSize, object userState) {
            if ((this.onBeginGetUsrDepartmentListDelegate == null)) {
                this.onBeginGetUsrDepartmentListDelegate = new BeginOperationDelegate(this.OnBeginGetUsrDepartmentList);
            }
            if ((this.onEndGetUsrDepartmentListDelegate == null)) {
                this.onEndGetUsrDepartmentListDelegate = new EndOperationDelegate(this.OnEndGetUsrDepartmentList);
            }
            if ((this.onGetUsrDepartmentListCompletedDelegate == null)) {
                this.onGetUsrDepartmentListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUsrDepartmentListCompleted);
            }
            base.InvokeAsync(this.onBeginGetUsrDepartmentListDelegate, new object[] {
                        pageIndex,
                        pageSize}, this.onEndGetUsrDepartmentListDelegate, this.onGetUsrDepartmentListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.AccountService.IUsrDepartment.BeginGetUserDepartmentList(string name, string clientId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserDepartmentList(name, clientId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfUsrDepartment7ZhGgAvu Gsafety.PTMS.ServiceReference.AccountService.IUsrDepartment.EndGetUserDepartmentList(System.IAsyncResult result) {
            return base.Channel.EndGetUserDepartmentList(result);
        }
        
        private System.IAsyncResult OnBeginGetUserDepartmentList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string clientId = ((string)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.AccountService.IUsrDepartment)(this)).BeginGetUserDepartmentList(name, clientId, callback, asyncState);
        }
        
        private object[] OnEndGetUserDepartmentList(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfUsrDepartment7ZhGgAvu retVal = ((Gsafety.PTMS.ServiceReference.AccountService.IUsrDepartment)(this)).EndGetUserDepartmentList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserDepartmentListCompleted(object state) {
            if ((this.GetUserDepartmentListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserDepartmentListCompleted(this, new GetUserDepartmentListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserDepartmentListAsync(string name, string clientId) {
            this.GetUserDepartmentListAsync(name, clientId, null);
        }
        
        public void GetUserDepartmentListAsync(string name, string clientId, object userState) {
            if ((this.onBeginGetUserDepartmentListDelegate == null)) {
                this.onBeginGetUserDepartmentListDelegate = new BeginOperationDelegate(this.OnBeginGetUserDepartmentList);
            }
            if ((this.onEndGetUserDepartmentListDelegate == null)) {
                this.onEndGetUserDepartmentListDelegate = new EndOperationDelegate(this.OnEndGetUserDepartmentList);
            }
            if ((this.onGetUserDepartmentListCompletedDelegate == null)) {
                this.onGetUserDepartmentListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserDepartmentListCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserDepartmentListDelegate, new object[] {
                        name,
                        clientId}, this.onEndGetUserDepartmentListDelegate, this.onGetUserDepartmentListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.AccountService.IUsrDepartment.BeginIsCanDeleteUsrDepartment(string ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsCanDeleteUsrDepartment(ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.AccountService.IUsrDepartment.EndIsCanDeleteUsrDepartment(System.IAsyncResult result) {
            return base.Channel.EndIsCanDeleteUsrDepartment(result);
        }
        
        private System.IAsyncResult OnBeginIsCanDeleteUsrDepartment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ID = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.AccountService.IUsrDepartment)(this)).BeginIsCanDeleteUsrDepartment(ID, callback, asyncState);
        }
        
        private object[] OnEndIsCanDeleteUsrDepartment(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.AccountService.IUsrDepartment)(this)).EndIsCanDeleteUsrDepartment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsCanDeleteUsrDepartmentCompleted(object state) {
            if ((this.IsCanDeleteUsrDepartmentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsCanDeleteUsrDepartmentCompleted(this, new IsCanDeleteUsrDepartmentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsCanDeleteUsrDepartmentAsync(string ID) {
            this.IsCanDeleteUsrDepartmentAsync(ID, null);
        }
        
        public void IsCanDeleteUsrDepartmentAsync(string ID, object userState) {
            if ((this.onBeginIsCanDeleteUsrDepartmentDelegate == null)) {
                this.onBeginIsCanDeleteUsrDepartmentDelegate = new BeginOperationDelegate(this.OnBeginIsCanDeleteUsrDepartment);
            }
            if ((this.onEndIsCanDeleteUsrDepartmentDelegate == null)) {
                this.onEndIsCanDeleteUsrDepartmentDelegate = new EndOperationDelegate(this.OnEndIsCanDeleteUsrDepartment);
            }
            if ((this.onIsCanDeleteUsrDepartmentCompletedDelegate == null)) {
                this.onIsCanDeleteUsrDepartmentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsCanDeleteUsrDepartmentCompleted);
            }
            base.InvokeAsync(this.onBeginIsCanDeleteUsrDepartmentDelegate, new object[] {
                        ID}, this.onEndIsCanDeleteUsrDepartmentDelegate, this.onIsCanDeleteUsrDepartmentCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Gsafety.PTMS.ServiceReference.AccountService.IUsrDepartment CreateChannel() {
            return new UsrDepartmentClientChannel(this);
        }
        
        private class UsrDepartmentClientChannel : ChannelBase<Gsafety.PTMS.ServiceReference.AccountService.IUsrDepartment>, Gsafety.PTMS.ServiceReference.AccountService.IUsrDepartment {
            
            public UsrDepartmentClientChannel(System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.AccountService.IUsrDepartment> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginInsertUsrDepartment(Gsafety.PTMS.ServiceReference.AccountService.UsrDepartment model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("InsertUsrDepartment", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean EndInsertUsrDepartment(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean)(base.EndInvoke("InsertUsrDepartment", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateUsrDepartment(Gsafety.PTMS.ServiceReference.AccountService.UsrDepartment model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("UpdateUsrDepartment", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean EndUpdateUsrDepartment(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean)(base.EndInvoke("UpdateUsrDepartment", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteUsrDepartmentByID(string ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ID;
                System.IAsyncResult _result = base.BeginInvoke("DeleteUsrDepartmentByID", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean EndDeleteUsrDepartmentByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean)(base.EndInvoke("DeleteUsrDepartmentByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUsrDepartment(string ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ID;
                System.IAsyncResult _result = base.BeginInvoke("GetUsrDepartment", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfUsrDepartment7ZhGgAvu EndGetUsrDepartment(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfUsrDepartment7ZhGgAvu _result = ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfUsrDepartment7ZhGgAvu)(base.EndInvoke("GetUsrDepartment", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUsrDepartmentList(int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = pageIndex;
                _args[1] = pageSize;
                System.IAsyncResult _result = base.BeginInvoke("GetUsrDepartmentList", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfUsrDepartment7ZhGgAvu EndGetUsrDepartmentList(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfUsrDepartment7ZhGgAvu _result = ((Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfUsrDepartment7ZhGgAvu)(base.EndInvoke("GetUsrDepartmentList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUserDepartmentList(string name, string clientId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = name;
                _args[1] = clientId;
                System.IAsyncResult _result = base.BeginInvoke("GetUserDepartmentList", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfUsrDepartment7ZhGgAvu EndGetUserDepartmentList(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfUsrDepartment7ZhGgAvu _result = ((Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfUsrDepartment7ZhGgAvu)(base.EndInvoke("GetUserDepartmentList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginIsCanDeleteUsrDepartment(string ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ID;
                System.IAsyncResult _result = base.BeginInvoke("IsCanDeleteUsrDepartment", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean EndIsCanDeleteUsrDepartment(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.AccountService.SingleMessageOfboolean)(base.EndInvoke("IsCanDeleteUsrDepartment", _args, result)));
                return _result;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AccountService.IUserOnline")]
    public interface IUserOnline {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserOnline/GetUserOnlineList", ReplyAction="http://tempuri.org/IUserOnline/GetUserOnlineListResponse")]
        System.IAsyncResult BeginGetUserOnlineList(string clientID, string userName, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfUserOnlinei7Zg_POJ5 EndGetUserOnlineList(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserOnlineChannel : Gsafety.PTMS.ServiceReference.AccountService.IUserOnline, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserOnlineListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserOnlineListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfUserOnlinei7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfUserOnlinei7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserOnlineClient : System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.AccountService.IUserOnline>, Gsafety.PTMS.ServiceReference.AccountService.IUserOnline {
        
        private BeginOperationDelegate onBeginGetUserOnlineListDelegate;
        
        private EndOperationDelegate onEndGetUserOnlineListDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserOnlineListCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public UserOnlineClient() {
        }
        
        public UserOnlineClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserOnlineClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserOnlineClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserOnlineClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<GetUserOnlineListCompletedEventArgs> GetUserOnlineListCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.AccountService.IUserOnline.BeginGetUserOnlineList(string clientID, string userName, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserOnlineList(clientID, userName, pageIndex, pageSize, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfUserOnlinei7Zg_POJ5 Gsafety.PTMS.ServiceReference.AccountService.IUserOnline.EndGetUserOnlineList(System.IAsyncResult result) {
            return base.Channel.EndGetUserOnlineList(result);
        }
        
        private System.IAsyncResult OnBeginGetUserOnlineList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            string userName = ((string)(inValues[1]));
            int pageIndex = ((int)(inValues[2]));
            int pageSize = ((int)(inValues[3]));
            return ((Gsafety.PTMS.ServiceReference.AccountService.IUserOnline)(this)).BeginGetUserOnlineList(clientID, userName, pageIndex, pageSize, callback, asyncState);
        }
        
        private object[] OnEndGetUserOnlineList(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfUserOnlinei7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.AccountService.IUserOnline)(this)).EndGetUserOnlineList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserOnlineListCompleted(object state) {
            if ((this.GetUserOnlineListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserOnlineListCompleted(this, new GetUserOnlineListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserOnlineListAsync(string clientID, string userName, int pageIndex, int pageSize) {
            this.GetUserOnlineListAsync(clientID, userName, pageIndex, pageSize, null);
        }
        
        public void GetUserOnlineListAsync(string clientID, string userName, int pageIndex, int pageSize, object userState) {
            if ((this.onBeginGetUserOnlineListDelegate == null)) {
                this.onBeginGetUserOnlineListDelegate = new BeginOperationDelegate(this.OnBeginGetUserOnlineList);
            }
            if ((this.onEndGetUserOnlineListDelegate == null)) {
                this.onEndGetUserOnlineListDelegate = new EndOperationDelegate(this.OnEndGetUserOnlineList);
            }
            if ((this.onGetUserOnlineListCompletedDelegate == null)) {
                this.onGetUserOnlineListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserOnlineListCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserOnlineListDelegate, new object[] {
                        clientID,
                        userName,
                        pageIndex,
                        pageSize}, this.onEndGetUserOnlineListDelegate, this.onGetUserOnlineListCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Gsafety.PTMS.ServiceReference.AccountService.IUserOnline CreateChannel() {
            return new UserOnlineClientChannel(this);
        }
        
        private class UserOnlineClientChannel : ChannelBase<Gsafety.PTMS.ServiceReference.AccountService.IUserOnline>, Gsafety.PTMS.ServiceReference.AccountService.IUserOnline {
            
            public UserOnlineClientChannel(System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.AccountService.IUserOnline> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetUserOnlineList(string clientID, string userName, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = clientID;
                _args[1] = userName;
                _args[2] = pageIndex;
                _args[3] = pageSize;
                System.IAsyncResult _result = base.BeginInvoke("GetUserOnlineList", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfUserOnlinei7Zg_POJ5 EndGetUserOnlineList(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfUserOnlinei7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.AccountService.MultiMessageOfUserOnlinei7Zg_POJ5)(base.EndInvoke("GetUserOnlineList", _args, result)));
                return _result;
            }
        }
    }
}
