//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace Gsafety.PTMS.ServiceReference.ChauffeurService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Chauffeur", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.BaseInformation.Contract.Dat" +
        "a")]
    public partial class Chauffeur : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AddressField;
        
        private string CellPhoneField;
        
        private string ClientIDField;
        
        private System.DateTime CreateTimeField;
        
        private string CreatorField;
        
        private string DriverLicenseField;
        
        private string EmailField;
        
        private string ICardIDField;
        
        private string IDField;
        
        private string NameField;
        
        private string NoteField;
        
        private string PhoneField;
        
        private decimal ValidField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CellPhone {
            get {
                return this.CellPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.CellPhoneField, value) != true)) {
                    this.CellPhoneField = value;
                    this.RaisePropertyChanged("CellPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIDField, value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DriverLicense {
            get {
                return this.DriverLicenseField;
            }
            set {
                if ((object.ReferenceEquals(this.DriverLicenseField, value) != true)) {
                    this.DriverLicenseField = value;
                    this.RaisePropertyChanged("DriverLicense");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ICardID {
            get {
                return this.ICardIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ICardIDField, value) != true)) {
                    this.ICardIDField = value;
                    this.RaisePropertyChanged("ICardID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((this.ValidField.Equals(value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleMessageOfboolean", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class SingleMessageOfboolean : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private bool ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfChauffeurh_PhsrrDr", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfChauffeurh_PhsrrDr : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagingInfo", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class PagingInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfChauffeurVehicleh_PhsrrDr", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfChauffeurVehicleh_PhsrrDr : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.ChauffeurService.ChauffeurVehicle> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.ChauffeurService.ChauffeurVehicle> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChauffeurVehicle", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.BaseInformation.Contract.Dat" +
        "a")]
    public partial class ChauffeurVehicle : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int ActivateField;
        
        private string ChauffeurIDField;
        
        private System.DateTime CreateTimeField;
        
        private string IDField;
        
        private string VehicleIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Activate {
            get {
                return this.ActivateField;
            }
            set {
                if ((this.ActivateField.Equals(value) != true)) {
                    this.ActivateField = value;
                    this.RaisePropertyChanged("Activate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChauffeurID {
            get {
                return this.ChauffeurIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ChauffeurIDField, value) != true)) {
                    this.ChauffeurIDField = value;
                    this.RaisePropertyChanged("ChauffeurID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleID {
            get {
                return this.VehicleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleIDField, value) != true)) {
                    this.VehicleIDField = value;
                    this.RaisePropertyChanged("VehicleID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ChauffeurService.IChauffeurService")]
    public interface IChauffeurService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IChauffeurService/AddChauffeurList", ReplyAction="http://tempuri.org/IChauffeurService/AddChauffeurListResponse")]
        System.IAsyncResult BeginAddChauffeurList(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur> chauffeurList, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean EndAddChauffeurList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IChauffeurService/BatchAddChauffeur", ReplyAction="http://tempuri.org/IChauffeurService/BatchAddChauffeurResponse")]
        System.IAsyncResult BeginBatchAddChauffeur(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur> chauffeurList, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean EndBatchAddChauffeur(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IChauffeurService/CheckChauffeurExist", ReplyAction="http://tempuri.org/IChauffeurService/CheckChauffeurExistResponse")]
        System.IAsyncResult BeginCheckChauffeurExist(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur> chauffeurList, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurh_PhsrrDr EndCheckChauffeurExist(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IChauffeurService/AddChauffeur", ReplyAction="http://tempuri.org/IChauffeurService/AddChauffeurResponse")]
        System.IAsyncResult BeginAddChauffeur(Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur chauffeur, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean EndAddChauffeur(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IChauffeurService/DeleteChauffeur", ReplyAction="http://tempuri.org/IChauffeurService/DeleteChauffeurResponse")]
        System.IAsyncResult BeginDeleteChauffeur(string id, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean EndDeleteChauffeur(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IChauffeurService/UpdateChauffeur", ReplyAction="http://tempuri.org/IChauffeurService/UpdateChauffeurResponse")]
        System.IAsyncResult BeginUpdateChauffeur(Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur chauffeur, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean EndUpdateChauffeur(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IChauffeurService/GetChauffeurByPage", ReplyAction="http://tempuri.org/IChauffeurService/GetChauffeurByPageResponse")]
        System.IAsyncResult BeginGetChauffeurByPage(Gsafety.PTMS.ServiceReference.ChauffeurService.PagingInfo page, string clientID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurh_PhsrrDr EndGetChauffeurByPage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IChauffeurService/GetChauffeurByCondition", ReplyAction="http://tempuri.org/IChauffeurService/GetChauffeurByConditionResponse")]
        System.IAsyncResult BeginGetChauffeurByCondition(string name, string licence, string icard, Gsafety.PTMS.ServiceReference.ChauffeurService.PagingInfo page, string clientID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurh_PhsrrDr EndGetChauffeurByCondition(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IChauffeurService/GetChauffeurVehicle", ReplyAction="http://tempuri.org/IChauffeurService/GetChauffeurVehicleResponse")]
        System.IAsyncResult BeginGetChauffeurVehicle(string chauffeurID, string clientID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurVehicleh_PhsrrDr EndGetChauffeurVehicle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IChauffeurService/SaveChauffeurVehicle", ReplyAction="http://tempuri.org/IChauffeurService/SaveChauffeurVehicleResponse")]
        System.IAsyncResult BeginSaveChauffeurVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.ChauffeurService.ChauffeurVehicle> chauffeurVehicle, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean EndSaveChauffeurVehicle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IChauffeurService/GetChauffeurByVehicle", ReplyAction="http://tempuri.org/IChauffeurService/GetChauffeurByVehicleResponse")]
        System.IAsyncResult BeginGetChauffeurByVehicle(string vehicleID, string clientID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurh_PhsrrDr EndGetChauffeurByVehicle(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChauffeurServiceChannel : Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddChauffeurListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddChauffeurListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BatchAddChauffeurCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BatchAddChauffeurCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckChauffeurExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckChauffeurExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurh_PhsrrDr Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurh_PhsrrDr)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddChauffeurCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddChauffeurCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteChauffeurCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteChauffeurCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateChauffeurCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateChauffeurCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetChauffeurByPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetChauffeurByPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurh_PhsrrDr Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurh_PhsrrDr)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetChauffeurByConditionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetChauffeurByConditionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurh_PhsrrDr Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurh_PhsrrDr)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetChauffeurVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetChauffeurVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurVehicleh_PhsrrDr Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurVehicleh_PhsrrDr)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveChauffeurVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveChauffeurVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetChauffeurByVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetChauffeurByVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurh_PhsrrDr Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurh_PhsrrDr)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChauffeurServiceClient : System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService>, Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService {
        
        private BeginOperationDelegate onBeginAddChauffeurListDelegate;
        
        private EndOperationDelegate onEndAddChauffeurListDelegate;
        
        private System.Threading.SendOrPostCallback onAddChauffeurListCompletedDelegate;
        
        private BeginOperationDelegate onBeginBatchAddChauffeurDelegate;
        
        private EndOperationDelegate onEndBatchAddChauffeurDelegate;
        
        private System.Threading.SendOrPostCallback onBatchAddChauffeurCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckChauffeurExistDelegate;
        
        private EndOperationDelegate onEndCheckChauffeurExistDelegate;
        
        private System.Threading.SendOrPostCallback onCheckChauffeurExistCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddChauffeurDelegate;
        
        private EndOperationDelegate onEndAddChauffeurDelegate;
        
        private System.Threading.SendOrPostCallback onAddChauffeurCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteChauffeurDelegate;
        
        private EndOperationDelegate onEndDeleteChauffeurDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteChauffeurCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateChauffeurDelegate;
        
        private EndOperationDelegate onEndUpdateChauffeurDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateChauffeurCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetChauffeurByPageDelegate;
        
        private EndOperationDelegate onEndGetChauffeurByPageDelegate;
        
        private System.Threading.SendOrPostCallback onGetChauffeurByPageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetChauffeurByConditionDelegate;
        
        private EndOperationDelegate onEndGetChauffeurByConditionDelegate;
        
        private System.Threading.SendOrPostCallback onGetChauffeurByConditionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetChauffeurVehicleDelegate;
        
        private EndOperationDelegate onEndGetChauffeurVehicleDelegate;
        
        private System.Threading.SendOrPostCallback onGetChauffeurVehicleCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveChauffeurVehicleDelegate;
        
        private EndOperationDelegate onEndSaveChauffeurVehicleDelegate;
        
        private System.Threading.SendOrPostCallback onSaveChauffeurVehicleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetChauffeurByVehicleDelegate;
        
        private EndOperationDelegate onEndGetChauffeurByVehicleDelegate;
        
        private System.Threading.SendOrPostCallback onGetChauffeurByVehicleCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ChauffeurServiceClient() {
        }
        
        public ChauffeurServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ChauffeurServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChauffeurServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChauffeurServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<AddChauffeurListCompletedEventArgs> AddChauffeurListCompleted;
        
        public event System.EventHandler<BatchAddChauffeurCompletedEventArgs> BatchAddChauffeurCompleted;
        
        public event System.EventHandler<CheckChauffeurExistCompletedEventArgs> CheckChauffeurExistCompleted;
        
        public event System.EventHandler<AddChauffeurCompletedEventArgs> AddChauffeurCompleted;
        
        public event System.EventHandler<DeleteChauffeurCompletedEventArgs> DeleteChauffeurCompleted;
        
        public event System.EventHandler<UpdateChauffeurCompletedEventArgs> UpdateChauffeurCompleted;
        
        public event System.EventHandler<GetChauffeurByPageCompletedEventArgs> GetChauffeurByPageCompleted;
        
        public event System.EventHandler<GetChauffeurByConditionCompletedEventArgs> GetChauffeurByConditionCompleted;
        
        public event System.EventHandler<GetChauffeurVehicleCompletedEventArgs> GetChauffeurVehicleCompleted;
        
        public event System.EventHandler<SaveChauffeurVehicleCompletedEventArgs> SaveChauffeurVehicleCompleted;
        
        public event System.EventHandler<GetChauffeurByVehicleCompletedEventArgs> GetChauffeurByVehicleCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService.BeginAddChauffeurList(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur> chauffeurList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddChauffeurList(chauffeurList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService.EndAddChauffeurList(System.IAsyncResult result) {
            return base.Channel.EndAddChauffeurList(result);
        }
        
        private System.IAsyncResult OnBeginAddChauffeurList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur> chauffeurList = ((System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur>)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService)(this)).BeginAddChauffeurList(chauffeurList, callback, asyncState);
        }
        
        private object[] OnEndAddChauffeurList(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService)(this)).EndAddChauffeurList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddChauffeurListCompleted(object state) {
            if ((this.AddChauffeurListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddChauffeurListCompleted(this, new AddChauffeurListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddChauffeurListAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur> chauffeurList) {
            this.AddChauffeurListAsync(chauffeurList, null);
        }
        
        public void AddChauffeurListAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur> chauffeurList, object userState) {
            if ((this.onBeginAddChauffeurListDelegate == null)) {
                this.onBeginAddChauffeurListDelegate = new BeginOperationDelegate(this.OnBeginAddChauffeurList);
            }
            if ((this.onEndAddChauffeurListDelegate == null)) {
                this.onEndAddChauffeurListDelegate = new EndOperationDelegate(this.OnEndAddChauffeurList);
            }
            if ((this.onAddChauffeurListCompletedDelegate == null)) {
                this.onAddChauffeurListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddChauffeurListCompleted);
            }
            base.InvokeAsync(this.onBeginAddChauffeurListDelegate, new object[] {
                        chauffeurList}, this.onEndAddChauffeurListDelegate, this.onAddChauffeurListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService.BeginBatchAddChauffeur(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur> chauffeurList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBatchAddChauffeur(chauffeurList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService.EndBatchAddChauffeur(System.IAsyncResult result) {
            return base.Channel.EndBatchAddChauffeur(result);
        }
        
        private System.IAsyncResult OnBeginBatchAddChauffeur(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur> chauffeurList = ((System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur>)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService)(this)).BeginBatchAddChauffeur(chauffeurList, callback, asyncState);
        }
        
        private object[] OnEndBatchAddChauffeur(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService)(this)).EndBatchAddChauffeur(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBatchAddChauffeurCompleted(object state) {
            if ((this.BatchAddChauffeurCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BatchAddChauffeurCompleted(this, new BatchAddChauffeurCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BatchAddChauffeurAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur> chauffeurList) {
            this.BatchAddChauffeurAsync(chauffeurList, null);
        }
        
        public void BatchAddChauffeurAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur> chauffeurList, object userState) {
            if ((this.onBeginBatchAddChauffeurDelegate == null)) {
                this.onBeginBatchAddChauffeurDelegate = new BeginOperationDelegate(this.OnBeginBatchAddChauffeur);
            }
            if ((this.onEndBatchAddChauffeurDelegate == null)) {
                this.onEndBatchAddChauffeurDelegate = new EndOperationDelegate(this.OnEndBatchAddChauffeur);
            }
            if ((this.onBatchAddChauffeurCompletedDelegate == null)) {
                this.onBatchAddChauffeurCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBatchAddChauffeurCompleted);
            }
            base.InvokeAsync(this.onBeginBatchAddChauffeurDelegate, new object[] {
                        chauffeurList}, this.onEndBatchAddChauffeurDelegate, this.onBatchAddChauffeurCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService.BeginCheckChauffeurExist(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur> chauffeurList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckChauffeurExist(chauffeurList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurh_PhsrrDr Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService.EndCheckChauffeurExist(System.IAsyncResult result) {
            return base.Channel.EndCheckChauffeurExist(result);
        }
        
        private System.IAsyncResult OnBeginCheckChauffeurExist(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur> chauffeurList = ((System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur>)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService)(this)).BeginCheckChauffeurExist(chauffeurList, callback, asyncState);
        }
        
        private object[] OnEndCheckChauffeurExist(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurh_PhsrrDr retVal = ((Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService)(this)).EndCheckChauffeurExist(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckChauffeurExistCompleted(object state) {
            if ((this.CheckChauffeurExistCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckChauffeurExistCompleted(this, new CheckChauffeurExistCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckChauffeurExistAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur> chauffeurList) {
            this.CheckChauffeurExistAsync(chauffeurList, null);
        }
        
        public void CheckChauffeurExistAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur> chauffeurList, object userState) {
            if ((this.onBeginCheckChauffeurExistDelegate == null)) {
                this.onBeginCheckChauffeurExistDelegate = new BeginOperationDelegate(this.OnBeginCheckChauffeurExist);
            }
            if ((this.onEndCheckChauffeurExistDelegate == null)) {
                this.onEndCheckChauffeurExistDelegate = new EndOperationDelegate(this.OnEndCheckChauffeurExist);
            }
            if ((this.onCheckChauffeurExistCompletedDelegate == null)) {
                this.onCheckChauffeurExistCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckChauffeurExistCompleted);
            }
            base.InvokeAsync(this.onBeginCheckChauffeurExistDelegate, new object[] {
                        chauffeurList}, this.onEndCheckChauffeurExistDelegate, this.onCheckChauffeurExistCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService.BeginAddChauffeur(Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur chauffeur, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddChauffeur(chauffeur, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService.EndAddChauffeur(System.IAsyncResult result) {
            return base.Channel.EndAddChauffeur(result);
        }
        
        private System.IAsyncResult OnBeginAddChauffeur(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur chauffeur = ((Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService)(this)).BeginAddChauffeur(chauffeur, callback, asyncState);
        }
        
        private object[] OnEndAddChauffeur(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService)(this)).EndAddChauffeur(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddChauffeurCompleted(object state) {
            if ((this.AddChauffeurCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddChauffeurCompleted(this, new AddChauffeurCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddChauffeurAsync(Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur chauffeur) {
            this.AddChauffeurAsync(chauffeur, null);
        }
        
        public void AddChauffeurAsync(Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur chauffeur, object userState) {
            if ((this.onBeginAddChauffeurDelegate == null)) {
                this.onBeginAddChauffeurDelegate = new BeginOperationDelegate(this.OnBeginAddChauffeur);
            }
            if ((this.onEndAddChauffeurDelegate == null)) {
                this.onEndAddChauffeurDelegate = new EndOperationDelegate(this.OnEndAddChauffeur);
            }
            if ((this.onAddChauffeurCompletedDelegate == null)) {
                this.onAddChauffeurCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddChauffeurCompleted);
            }
            base.InvokeAsync(this.onBeginAddChauffeurDelegate, new object[] {
                        chauffeur}, this.onEndAddChauffeurDelegate, this.onAddChauffeurCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService.BeginDeleteChauffeur(string id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteChauffeur(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService.EndDeleteChauffeur(System.IAsyncResult result) {
            return base.Channel.EndDeleteChauffeur(result);
        }
        
        private System.IAsyncResult OnBeginDeleteChauffeur(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService)(this)).BeginDeleteChauffeur(id, callback, asyncState);
        }
        
        private object[] OnEndDeleteChauffeur(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService)(this)).EndDeleteChauffeur(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteChauffeurCompleted(object state) {
            if ((this.DeleteChauffeurCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteChauffeurCompleted(this, new DeleteChauffeurCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteChauffeurAsync(string id) {
            this.DeleteChauffeurAsync(id, null);
        }
        
        public void DeleteChauffeurAsync(string id, object userState) {
            if ((this.onBeginDeleteChauffeurDelegate == null)) {
                this.onBeginDeleteChauffeurDelegate = new BeginOperationDelegate(this.OnBeginDeleteChauffeur);
            }
            if ((this.onEndDeleteChauffeurDelegate == null)) {
                this.onEndDeleteChauffeurDelegate = new EndOperationDelegate(this.OnEndDeleteChauffeur);
            }
            if ((this.onDeleteChauffeurCompletedDelegate == null)) {
                this.onDeleteChauffeurCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteChauffeurCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteChauffeurDelegate, new object[] {
                        id}, this.onEndDeleteChauffeurDelegate, this.onDeleteChauffeurCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService.BeginUpdateChauffeur(Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur chauffeur, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateChauffeur(chauffeur, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService.EndUpdateChauffeur(System.IAsyncResult result) {
            return base.Channel.EndUpdateChauffeur(result);
        }
        
        private System.IAsyncResult OnBeginUpdateChauffeur(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur chauffeur = ((Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService)(this)).BeginUpdateChauffeur(chauffeur, callback, asyncState);
        }
        
        private object[] OnEndUpdateChauffeur(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService)(this)).EndUpdateChauffeur(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateChauffeurCompleted(object state) {
            if ((this.UpdateChauffeurCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateChauffeurCompleted(this, new UpdateChauffeurCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateChauffeurAsync(Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur chauffeur) {
            this.UpdateChauffeurAsync(chauffeur, null);
        }
        
        public void UpdateChauffeurAsync(Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur chauffeur, object userState) {
            if ((this.onBeginUpdateChauffeurDelegate == null)) {
                this.onBeginUpdateChauffeurDelegate = new BeginOperationDelegate(this.OnBeginUpdateChauffeur);
            }
            if ((this.onEndUpdateChauffeurDelegate == null)) {
                this.onEndUpdateChauffeurDelegate = new EndOperationDelegate(this.OnEndUpdateChauffeur);
            }
            if ((this.onUpdateChauffeurCompletedDelegate == null)) {
                this.onUpdateChauffeurCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateChauffeurCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateChauffeurDelegate, new object[] {
                        chauffeur}, this.onEndUpdateChauffeurDelegate, this.onUpdateChauffeurCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService.BeginGetChauffeurByPage(Gsafety.PTMS.ServiceReference.ChauffeurService.PagingInfo page, string clientID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetChauffeurByPage(page, clientID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurh_PhsrrDr Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService.EndGetChauffeurByPage(System.IAsyncResult result) {
            return base.Channel.EndGetChauffeurByPage(result);
        }
        
        private System.IAsyncResult OnBeginGetChauffeurByPage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.ChauffeurService.PagingInfo page = ((Gsafety.PTMS.ServiceReference.ChauffeurService.PagingInfo)(inValues[0]));
            string clientID = ((string)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService)(this)).BeginGetChauffeurByPage(page, clientID, callback, asyncState);
        }
        
        private object[] OnEndGetChauffeurByPage(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurh_PhsrrDr retVal = ((Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService)(this)).EndGetChauffeurByPage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetChauffeurByPageCompleted(object state) {
            if ((this.GetChauffeurByPageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetChauffeurByPageCompleted(this, new GetChauffeurByPageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetChauffeurByPageAsync(Gsafety.PTMS.ServiceReference.ChauffeurService.PagingInfo page, string clientID) {
            this.GetChauffeurByPageAsync(page, clientID, null);
        }
        
        public void GetChauffeurByPageAsync(Gsafety.PTMS.ServiceReference.ChauffeurService.PagingInfo page, string clientID, object userState) {
            if ((this.onBeginGetChauffeurByPageDelegate == null)) {
                this.onBeginGetChauffeurByPageDelegate = new BeginOperationDelegate(this.OnBeginGetChauffeurByPage);
            }
            if ((this.onEndGetChauffeurByPageDelegate == null)) {
                this.onEndGetChauffeurByPageDelegate = new EndOperationDelegate(this.OnEndGetChauffeurByPage);
            }
            if ((this.onGetChauffeurByPageCompletedDelegate == null)) {
                this.onGetChauffeurByPageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetChauffeurByPageCompleted);
            }
            base.InvokeAsync(this.onBeginGetChauffeurByPageDelegate, new object[] {
                        page,
                        clientID}, this.onEndGetChauffeurByPageDelegate, this.onGetChauffeurByPageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService.BeginGetChauffeurByCondition(string name, string licence, string icard, Gsafety.PTMS.ServiceReference.ChauffeurService.PagingInfo page, string clientID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetChauffeurByCondition(name, licence, icard, page, clientID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurh_PhsrrDr Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService.EndGetChauffeurByCondition(System.IAsyncResult result) {
            return base.Channel.EndGetChauffeurByCondition(result);
        }
        
        private System.IAsyncResult OnBeginGetChauffeurByCondition(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string licence = ((string)(inValues[1]));
            string icard = ((string)(inValues[2]));
            Gsafety.PTMS.ServiceReference.ChauffeurService.PagingInfo page = ((Gsafety.PTMS.ServiceReference.ChauffeurService.PagingInfo)(inValues[3]));
            string clientID = ((string)(inValues[4]));
            return ((Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService)(this)).BeginGetChauffeurByCondition(name, licence, icard, page, clientID, callback, asyncState);
        }
        
        private object[] OnEndGetChauffeurByCondition(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurh_PhsrrDr retVal = ((Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService)(this)).EndGetChauffeurByCondition(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetChauffeurByConditionCompleted(object state) {
            if ((this.GetChauffeurByConditionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetChauffeurByConditionCompleted(this, new GetChauffeurByConditionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetChauffeurByConditionAsync(string name, string licence, string icard, Gsafety.PTMS.ServiceReference.ChauffeurService.PagingInfo page, string clientID) {
            this.GetChauffeurByConditionAsync(name, licence, icard, page, clientID, null);
        }
        
        public void GetChauffeurByConditionAsync(string name, string licence, string icard, Gsafety.PTMS.ServiceReference.ChauffeurService.PagingInfo page, string clientID, object userState) {
            if ((this.onBeginGetChauffeurByConditionDelegate == null)) {
                this.onBeginGetChauffeurByConditionDelegate = new BeginOperationDelegate(this.OnBeginGetChauffeurByCondition);
            }
            if ((this.onEndGetChauffeurByConditionDelegate == null)) {
                this.onEndGetChauffeurByConditionDelegate = new EndOperationDelegate(this.OnEndGetChauffeurByCondition);
            }
            if ((this.onGetChauffeurByConditionCompletedDelegate == null)) {
                this.onGetChauffeurByConditionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetChauffeurByConditionCompleted);
            }
            base.InvokeAsync(this.onBeginGetChauffeurByConditionDelegate, new object[] {
                        name,
                        licence,
                        icard,
                        page,
                        clientID}, this.onEndGetChauffeurByConditionDelegate, this.onGetChauffeurByConditionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService.BeginGetChauffeurVehicle(string chauffeurID, string clientID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetChauffeurVehicle(chauffeurID, clientID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurVehicleh_PhsrrDr Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService.EndGetChauffeurVehicle(System.IAsyncResult result) {
            return base.Channel.EndGetChauffeurVehicle(result);
        }
        
        private System.IAsyncResult OnBeginGetChauffeurVehicle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string chauffeurID = ((string)(inValues[0]));
            string clientID = ((string)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService)(this)).BeginGetChauffeurVehicle(chauffeurID, clientID, callback, asyncState);
        }
        
        private object[] OnEndGetChauffeurVehicle(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurVehicleh_PhsrrDr retVal = ((Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService)(this)).EndGetChauffeurVehicle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetChauffeurVehicleCompleted(object state) {
            if ((this.GetChauffeurVehicleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetChauffeurVehicleCompleted(this, new GetChauffeurVehicleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetChauffeurVehicleAsync(string chauffeurID, string clientID) {
            this.GetChauffeurVehicleAsync(chauffeurID, clientID, null);
        }
        
        public void GetChauffeurVehicleAsync(string chauffeurID, string clientID, object userState) {
            if ((this.onBeginGetChauffeurVehicleDelegate == null)) {
                this.onBeginGetChauffeurVehicleDelegate = new BeginOperationDelegate(this.OnBeginGetChauffeurVehicle);
            }
            if ((this.onEndGetChauffeurVehicleDelegate == null)) {
                this.onEndGetChauffeurVehicleDelegate = new EndOperationDelegate(this.OnEndGetChauffeurVehicle);
            }
            if ((this.onGetChauffeurVehicleCompletedDelegate == null)) {
                this.onGetChauffeurVehicleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetChauffeurVehicleCompleted);
            }
            base.InvokeAsync(this.onBeginGetChauffeurVehicleDelegate, new object[] {
                        chauffeurID,
                        clientID}, this.onEndGetChauffeurVehicleDelegate, this.onGetChauffeurVehicleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService.BeginSaveChauffeurVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.ChauffeurService.ChauffeurVehicle> chauffeurVehicle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveChauffeurVehicle(chauffeurVehicle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService.EndSaveChauffeurVehicle(System.IAsyncResult result) {
            return base.Channel.EndSaveChauffeurVehicle(result);
        }
        
        private System.IAsyncResult OnBeginSaveChauffeurVehicle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.ChauffeurService.ChauffeurVehicle> chauffeurVehicle = ((System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.ChauffeurService.ChauffeurVehicle>)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService)(this)).BeginSaveChauffeurVehicle(chauffeurVehicle, callback, asyncState);
        }
        
        private object[] OnEndSaveChauffeurVehicle(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService)(this)).EndSaveChauffeurVehicle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveChauffeurVehicleCompleted(object state) {
            if ((this.SaveChauffeurVehicleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveChauffeurVehicleCompleted(this, new SaveChauffeurVehicleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveChauffeurVehicleAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.ChauffeurService.ChauffeurVehicle> chauffeurVehicle) {
            this.SaveChauffeurVehicleAsync(chauffeurVehicle, null);
        }
        
        public void SaveChauffeurVehicleAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.ChauffeurService.ChauffeurVehicle> chauffeurVehicle, object userState) {
            if ((this.onBeginSaveChauffeurVehicleDelegate == null)) {
                this.onBeginSaveChauffeurVehicleDelegate = new BeginOperationDelegate(this.OnBeginSaveChauffeurVehicle);
            }
            if ((this.onEndSaveChauffeurVehicleDelegate == null)) {
                this.onEndSaveChauffeurVehicleDelegate = new EndOperationDelegate(this.OnEndSaveChauffeurVehicle);
            }
            if ((this.onSaveChauffeurVehicleCompletedDelegate == null)) {
                this.onSaveChauffeurVehicleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveChauffeurVehicleCompleted);
            }
            base.InvokeAsync(this.onBeginSaveChauffeurVehicleDelegate, new object[] {
                        chauffeurVehicle}, this.onEndSaveChauffeurVehicleDelegate, this.onSaveChauffeurVehicleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService.BeginGetChauffeurByVehicle(string vehicleID, string clientID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetChauffeurByVehicle(vehicleID, clientID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurh_PhsrrDr Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService.EndGetChauffeurByVehicle(System.IAsyncResult result) {
            return base.Channel.EndGetChauffeurByVehicle(result);
        }
        
        private System.IAsyncResult OnBeginGetChauffeurByVehicle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vehicleID = ((string)(inValues[0]));
            string clientID = ((string)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService)(this)).BeginGetChauffeurByVehicle(vehicleID, clientID, callback, asyncState);
        }
        
        private object[] OnEndGetChauffeurByVehicle(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurh_PhsrrDr retVal = ((Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService)(this)).EndGetChauffeurByVehicle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetChauffeurByVehicleCompleted(object state) {
            if ((this.GetChauffeurByVehicleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetChauffeurByVehicleCompleted(this, new GetChauffeurByVehicleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetChauffeurByVehicleAsync(string vehicleID, string clientID) {
            this.GetChauffeurByVehicleAsync(vehicleID, clientID, null);
        }
        
        public void GetChauffeurByVehicleAsync(string vehicleID, string clientID, object userState) {
            if ((this.onBeginGetChauffeurByVehicleDelegate == null)) {
                this.onBeginGetChauffeurByVehicleDelegate = new BeginOperationDelegate(this.OnBeginGetChauffeurByVehicle);
            }
            if ((this.onEndGetChauffeurByVehicleDelegate == null)) {
                this.onEndGetChauffeurByVehicleDelegate = new EndOperationDelegate(this.OnEndGetChauffeurByVehicle);
            }
            if ((this.onGetChauffeurByVehicleCompletedDelegate == null)) {
                this.onGetChauffeurByVehicleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetChauffeurByVehicleCompleted);
            }
            base.InvokeAsync(this.onBeginGetChauffeurByVehicleDelegate, new object[] {
                        vehicleID,
                        clientID}, this.onEndGetChauffeurByVehicleDelegate, this.onGetChauffeurByVehicleCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService CreateChannel() {
            return new ChauffeurServiceClientChannel(this);
        }
        
        private class ChauffeurServiceClientChannel : ChannelBase<Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService>, Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService {
            
            public ChauffeurServiceClientChannel(System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.ChauffeurService.IChauffeurService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginAddChauffeurList(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur> chauffeurList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = chauffeurList;
                System.IAsyncResult _result = base.BeginInvoke("AddChauffeurList", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean EndAddChauffeurList(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean)(base.EndInvoke("AddChauffeurList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginBatchAddChauffeur(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur> chauffeurList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = chauffeurList;
                System.IAsyncResult _result = base.BeginInvoke("BatchAddChauffeur", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean EndBatchAddChauffeur(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean)(base.EndInvoke("BatchAddChauffeur", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckChauffeurExist(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur> chauffeurList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = chauffeurList;
                System.IAsyncResult _result = base.BeginInvoke("CheckChauffeurExist", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurh_PhsrrDr EndCheckChauffeurExist(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurh_PhsrrDr _result = ((Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurh_PhsrrDr)(base.EndInvoke("CheckChauffeurExist", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddChauffeur(Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur chauffeur, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = chauffeur;
                System.IAsyncResult _result = base.BeginInvoke("AddChauffeur", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean EndAddChauffeur(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean)(base.EndInvoke("AddChauffeur", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteChauffeur(string id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("DeleteChauffeur", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean EndDeleteChauffeur(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean)(base.EndInvoke("DeleteChauffeur", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateChauffeur(Gsafety.PTMS.ServiceReference.ChauffeurService.Chauffeur chauffeur, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = chauffeur;
                System.IAsyncResult _result = base.BeginInvoke("UpdateChauffeur", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean EndUpdateChauffeur(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean)(base.EndInvoke("UpdateChauffeur", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetChauffeurByPage(Gsafety.PTMS.ServiceReference.ChauffeurService.PagingInfo page, string clientID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = page;
                _args[1] = clientID;
                System.IAsyncResult _result = base.BeginInvoke("GetChauffeurByPage", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurh_PhsrrDr EndGetChauffeurByPage(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurh_PhsrrDr _result = ((Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurh_PhsrrDr)(base.EndInvoke("GetChauffeurByPage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetChauffeurByCondition(string name, string licence, string icard, Gsafety.PTMS.ServiceReference.ChauffeurService.PagingInfo page, string clientID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = name;
                _args[1] = licence;
                _args[2] = icard;
                _args[3] = page;
                _args[4] = clientID;
                System.IAsyncResult _result = base.BeginInvoke("GetChauffeurByCondition", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurh_PhsrrDr EndGetChauffeurByCondition(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurh_PhsrrDr _result = ((Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurh_PhsrrDr)(base.EndInvoke("GetChauffeurByCondition", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetChauffeurVehicle(string chauffeurID, string clientID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = chauffeurID;
                _args[1] = clientID;
                System.IAsyncResult _result = base.BeginInvoke("GetChauffeurVehicle", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurVehicleh_PhsrrDr EndGetChauffeurVehicle(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurVehicleh_PhsrrDr _result = ((Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurVehicleh_PhsrrDr)(base.EndInvoke("GetChauffeurVehicle", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveChauffeurVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.ChauffeurService.ChauffeurVehicle> chauffeurVehicle, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = chauffeurVehicle;
                System.IAsyncResult _result = base.BeginInvoke("SaveChauffeurVehicle", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean EndSaveChauffeurVehicle(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.ChauffeurService.SingleMessageOfboolean)(base.EndInvoke("SaveChauffeurVehicle", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetChauffeurByVehicle(string vehicleID, string clientID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = vehicleID;
                _args[1] = clientID;
                System.IAsyncResult _result = base.BeginInvoke("GetChauffeurByVehicle", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurh_PhsrrDr EndGetChauffeurByVehicle(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurh_PhsrrDr _result = ((Gsafety.PTMS.ServiceReference.ChauffeurService.MultiMessageOfChauffeurh_PhsrrDr)(base.EndInvoke("GetChauffeurByVehicle", _args, result)));
                return _result;
            }
        }
    }
}
