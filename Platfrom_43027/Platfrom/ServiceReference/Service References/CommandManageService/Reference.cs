//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace Gsafety.PTMS.ServiceReference.CommandManageService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HeartbeatRule", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Common.Data")]
    public partial class HeartbeatRule : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ClientIDField;
        
        private System.DateTime CreateTimeField;
        
        private string CreatorField;
        
        private string IDField;
        
        private decimal IntervalField;
        
        private bool IsEnableField;
        
        private bool IsVisibleField;
        
        private string NameField;
        
        private bool ValidField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIDField, value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Interval {
            get {
                return this.IntervalField;
            }
            set {
                if ((this.IntervalField.Equals(value) != true)) {
                    this.IntervalField = value;
                    this.RaisePropertyChanged("Interval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEnable {
            get {
                return this.IsEnableField;
            }
            set {
                if ((this.IsEnableField.Equals(value) != true)) {
                    this.IsEnableField = value;
                    this.RaisePropertyChanged("IsEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsVisible {
            get {
                return this.IsVisibleField;
            }
            set {
                if ((this.IsVisibleField.Equals(value) != true)) {
                    this.IsVisibleField = value;
                    this.RaisePropertyChanged("IsVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((this.ValidField.Equals(value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleMessageOfboolean", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class SingleMessageOfboolean : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private bool ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfHeartbeatRulei7Zg_POJ5", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfHeartbeatRulei7Zg_POJ5 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.HeartbeatRule> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.HeartbeatRule> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HeartbeatVehicle", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Common.Data")]
    public partial class HeartbeatVehicle : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime CreateTimeField;
        
        private string CreatorField;
        
        private string HeartbeatIDField;
        
        private string IDField;
        
        private int IntervalField;
        
        private string MdvrCoreSnField;
        
        private string OrganizationField;
        
        private decimal PacketSeqField;
        
        private System.Nullable<System.DateTime> SendTimeField;
        
        private string ShowStateField;
        
        private short StatusField;
        
        private bool VehicleBtnEnableField;
        
        private string VehicleIDField;
        
        private string VehicleTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HeartbeatID {
            get {
                return this.HeartbeatIDField;
            }
            set {
                if ((object.ReferenceEquals(this.HeartbeatIDField, value) != true)) {
                    this.HeartbeatIDField = value;
                    this.RaisePropertyChanged("HeartbeatID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Interval {
            get {
                return this.IntervalField;
            }
            set {
                if ((this.IntervalField.Equals(value) != true)) {
                    this.IntervalField = value;
                    this.RaisePropertyChanged("Interval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrCoreSn {
            get {
                return this.MdvrCoreSnField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrCoreSnField, value) != true)) {
                    this.MdvrCoreSnField = value;
                    this.RaisePropertyChanged("MdvrCoreSn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Organization {
            get {
                return this.OrganizationField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationField, value) != true)) {
                    this.OrganizationField = value;
                    this.RaisePropertyChanged("Organization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PacketSeq {
            get {
                return this.PacketSeqField;
            }
            set {
                if ((this.PacketSeqField.Equals(value) != true)) {
                    this.PacketSeqField = value;
                    this.RaisePropertyChanged("PacketSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SendTime {
            get {
                return this.SendTimeField;
            }
            set {
                if ((this.SendTimeField.Equals(value) != true)) {
                    this.SendTimeField = value;
                    this.RaisePropertyChanged("SendTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShowState {
            get {
                return this.ShowStateField;
            }
            set {
                if ((object.ReferenceEquals(this.ShowStateField, value) != true)) {
                    this.ShowStateField = value;
                    this.RaisePropertyChanged("ShowState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool VehicleBtnEnable {
            get {
                return this.VehicleBtnEnableField;
            }
            set {
                if ((this.VehicleBtnEnableField.Equals(value) != true)) {
                    this.VehicleBtnEnableField = value;
                    this.RaisePropertyChanged("VehicleBtnEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleID {
            get {
                return this.VehicleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleIDField, value) != true)) {
                    this.VehicleIDField = value;
                    this.RaisePropertyChanged("VehicleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleType {
            get {
                return this.VehicleTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleTypeField, value) != true)) {
                    this.VehicleTypeField = value;
                    this.RaisePropertyChanged("VehicleType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfHeartbeatVehiclei7Zg_POJ5", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfHeartbeatVehiclei7Zg_POJ5 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.HeartbeatVehicle> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.HeartbeatVehicle> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationReportRule", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Common.Data")]
    public partial class LocationReportRule : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ClientIDField;
        
        private System.DateTime CreateTimeField;
        
        private string CreatorField;
        
        private string IDField;
        
        private int IntervalField;
        
        private bool IsVisibleField;
        
        private int LengthField;
        
        private string NameField;
        
        private int ReportStrategyField;
        
        private int ValidField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIDField, value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Interval {
            get {
                return this.IntervalField;
            }
            set {
                if ((this.IntervalField.Equals(value) != true)) {
                    this.IntervalField = value;
                    this.RaisePropertyChanged("Interval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsVisible {
            get {
                return this.IsVisibleField;
            }
            set {
                if ((this.IsVisibleField.Equals(value) != true)) {
                    this.IsVisibleField = value;
                    this.RaisePropertyChanged("IsVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Length {
            get {
                return this.LengthField;
            }
            set {
                if ((this.LengthField.Equals(value) != true)) {
                    this.LengthField = value;
                    this.RaisePropertyChanged("Length");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReportStrategy {
            get {
                return this.ReportStrategyField;
            }
            set {
                if ((this.ReportStrategyField.Equals(value) != true)) {
                    this.ReportStrategyField = value;
                    this.RaisePropertyChanged("ReportStrategy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((this.ValidField.Equals(value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagingInfo", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class PagingInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfLocationReportRulei7Zg_POJ5", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfLocationReportRulei7Zg_POJ5 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.LocationReportRule> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.LocationReportRule> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VideoRule", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Common.Data")]
    public partial class VideoRule : object, System.ComponentModel.INotifyPropertyChanged {
        
        private decimal BrightnessField;
        
        private string ClientIDField;
        
        private decimal ContrastField;
        
        private System.DateTime CreateTimeField;
        
        private string CreatorField;
        
        private string IDField;
        
        private bool IsVisibleField;
        
        private string NameField;
        
        private decimal ValidField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Brightness {
            get {
                return this.BrightnessField;
            }
            set {
                if ((this.BrightnessField.Equals(value) != true)) {
                    this.BrightnessField = value;
                    this.RaisePropertyChanged("Brightness");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIDField, value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Contrast {
            get {
                return this.ContrastField;
            }
            set {
                if ((this.ContrastField.Equals(value) != true)) {
                    this.ContrastField = value;
                    this.RaisePropertyChanged("Contrast");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsVisible {
            get {
                return this.IsVisibleField;
            }
            set {
                if ((this.IsVisibleField.Equals(value) != true)) {
                    this.IsVisibleField = value;
                    this.RaisePropertyChanged("IsVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((this.ValidField.Equals(value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfVideoRulei7Zg_POJ5", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfVideoRulei7Zg_POJ5 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.VideoRule> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.VideoRule> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocationReportVehicle", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Common.Data")]
    public partial class LocationReportVehicle : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime CreateTimeField;
        
        private string CreatorField;
        
        private string IDField;
        
        private bool IsTrueField;
        
        private string LocationReportIDField;
        
        private string MdvrCoreSnField;
        
        private string OrganizationField;
        
        private decimal PacketSeqField;
        
        private System.Nullable<System.DateTime> SendTimeField;
        
        private string ShowStateField;
        
        private decimal StatusField;
        
        private string VehicleIDField;
        
        private string VehicleTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTrue {
            get {
                return this.IsTrueField;
            }
            set {
                if ((this.IsTrueField.Equals(value) != true)) {
                    this.IsTrueField = value;
                    this.RaisePropertyChanged("IsTrue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationReportID {
            get {
                return this.LocationReportIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationReportIDField, value) != true)) {
                    this.LocationReportIDField = value;
                    this.RaisePropertyChanged("LocationReportID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrCoreSn {
            get {
                return this.MdvrCoreSnField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrCoreSnField, value) != true)) {
                    this.MdvrCoreSnField = value;
                    this.RaisePropertyChanged("MdvrCoreSn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Organization {
            get {
                return this.OrganizationField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationField, value) != true)) {
                    this.OrganizationField = value;
                    this.RaisePropertyChanged("Organization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PacketSeq {
            get {
                return this.PacketSeqField;
            }
            set {
                if ((this.PacketSeqField.Equals(value) != true)) {
                    this.PacketSeqField = value;
                    this.RaisePropertyChanged("PacketSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SendTime {
            get {
                return this.SendTimeField;
            }
            set {
                if ((this.SendTimeField.Equals(value) != true)) {
                    this.SendTimeField = value;
                    this.RaisePropertyChanged("SendTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShowState {
            get {
                return this.ShowStateField;
            }
            set {
                if ((object.ReferenceEquals(this.ShowStateField, value) != true)) {
                    this.ShowStateField = value;
                    this.RaisePropertyChanged("ShowState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleID {
            get {
                return this.VehicleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleIDField, value) != true)) {
                    this.VehicleIDField = value;
                    this.RaisePropertyChanged("VehicleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleType {
            get {
                return this.VehicleTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleTypeField, value) != true)) {
                    this.VehicleTypeField = value;
                    this.RaisePropertyChanged("VehicleType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfLocationReportVehiclei7Zg_POJ5", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfLocationReportVehiclei7Zg_POJ5 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.LocationReportVehicle> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.LocationReportVehicle> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VideoRuleVehicle", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Common.Data")]
    public partial class VideoRuleVehicle : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime CreateTimeField;
        
        private string CreatorField;
        
        private string IDField;
        
        private string MdvrCoreSnField;
        
        private string OrganizationField;
        
        private decimal PacketSeqField;
        
        private System.DateTime SendTimeField;
        
        private string ShowStateField;
        
        private decimal StatusField;
        
        private bool VehicleBtnEnableField;
        
        private string VehicleIDField;
        
        private string VehicleTypeField;
        
        private string VideoRuleIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrCoreSn {
            get {
                return this.MdvrCoreSnField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrCoreSnField, value) != true)) {
                    this.MdvrCoreSnField = value;
                    this.RaisePropertyChanged("MdvrCoreSn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Organization {
            get {
                return this.OrganizationField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationField, value) != true)) {
                    this.OrganizationField = value;
                    this.RaisePropertyChanged("Organization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PacketSeq {
            get {
                return this.PacketSeqField;
            }
            set {
                if ((this.PacketSeqField.Equals(value) != true)) {
                    this.PacketSeqField = value;
                    this.RaisePropertyChanged("PacketSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SendTime {
            get {
                return this.SendTimeField;
            }
            set {
                if ((this.SendTimeField.Equals(value) != true)) {
                    this.SendTimeField = value;
                    this.RaisePropertyChanged("SendTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShowState {
            get {
                return this.ShowStateField;
            }
            set {
                if ((object.ReferenceEquals(this.ShowStateField, value) != true)) {
                    this.ShowStateField = value;
                    this.RaisePropertyChanged("ShowState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool VehicleBtnEnable {
            get {
                return this.VehicleBtnEnableField;
            }
            set {
                if ((this.VehicleBtnEnableField.Equals(value) != true)) {
                    this.VehicleBtnEnableField = value;
                    this.RaisePropertyChanged("VehicleBtnEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleID {
            get {
                return this.VehicleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleIDField, value) != true)) {
                    this.VehicleIDField = value;
                    this.RaisePropertyChanged("VehicleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleType {
            get {
                return this.VehicleTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleTypeField, value) != true)) {
                    this.VehicleTypeField = value;
                    this.RaisePropertyChanged("VehicleType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VideoRuleID {
            get {
                return this.VideoRuleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VideoRuleIDField, value) != true)) {
                    this.VideoRuleIDField = value;
                    this.RaisePropertyChanged("VideoRuleID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfVideoRuleVehiclei7Zg_POJ5", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfVideoRuleVehiclei7Zg_POJ5 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.VideoRuleVehicle> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.VideoRuleVehicle> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SpeedLimit", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Common.Data")]
    public partial class SpeedLimit : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ClientIDField;
        
        private System.DateTime CreateTimeField;
        
        private string CreatorField;
        
        private decimal DurationField;
        
        private string IDField;
        
        private bool IsVisibleField;
        
        private decimal MaxSpeedField;
        
        private string NameField;
        
        private bool ValidField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIDField, value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((this.DurationField.Equals(value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsVisible {
            get {
                return this.IsVisibleField;
            }
            set {
                if ((this.IsVisibleField.Equals(value) != true)) {
                    this.IsVisibleField = value;
                    this.RaisePropertyChanged("IsVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MaxSpeed {
            get {
                return this.MaxSpeedField;
            }
            set {
                if ((this.MaxSpeedField.Equals(value) != true)) {
                    this.MaxSpeedField = value;
                    this.RaisePropertyChanged("MaxSpeed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((this.ValidField.Equals(value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfSpeedLimiti7Zg_POJ5", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfSpeedLimiti7Zg_POJ5 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.SpeedLimit> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.SpeedLimit> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VehicleSpeed", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Common.Data")]
    public partial class VehicleSpeed : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ClientIDField;
        
        private System.Nullable<System.DateTime> CreateTimeField;
        
        private string CreatorField;
        
        private string IDField;
        
        private string MdvrCoreSnField;
        
        private string OrganizationField;
        
        private decimal PacketSeqField;
        
        private System.Nullable<System.DateTime> SendTimeField;
        
        private string ShowStateField;
        
        private string SpeedIDField;
        
        private decimal StatusField;
        
        private bool VehicleBtnEnableField;
        
        private string VehicleIDField;
        
        private string VehicleTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIDField, value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrCoreSn {
            get {
                return this.MdvrCoreSnField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrCoreSnField, value) != true)) {
                    this.MdvrCoreSnField = value;
                    this.RaisePropertyChanged("MdvrCoreSn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Organization {
            get {
                return this.OrganizationField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationField, value) != true)) {
                    this.OrganizationField = value;
                    this.RaisePropertyChanged("Organization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PacketSeq {
            get {
                return this.PacketSeqField;
            }
            set {
                if ((this.PacketSeqField.Equals(value) != true)) {
                    this.PacketSeqField = value;
                    this.RaisePropertyChanged("PacketSeq");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SendTime {
            get {
                return this.SendTimeField;
            }
            set {
                if ((this.SendTimeField.Equals(value) != true)) {
                    this.SendTimeField = value;
                    this.RaisePropertyChanged("SendTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShowState {
            get {
                return this.ShowStateField;
            }
            set {
                if ((object.ReferenceEquals(this.ShowStateField, value) != true)) {
                    this.ShowStateField = value;
                    this.RaisePropertyChanged("ShowState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpeedID {
            get {
                return this.SpeedIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SpeedIDField, value) != true)) {
                    this.SpeedIDField = value;
                    this.RaisePropertyChanged("SpeedID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool VehicleBtnEnable {
            get {
                return this.VehicleBtnEnableField;
            }
            set {
                if ((this.VehicleBtnEnableField.Equals(value) != true)) {
                    this.VehicleBtnEnableField = value;
                    this.RaisePropertyChanged("VehicleBtnEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleID {
            get {
                return this.VehicleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleIDField, value) != true)) {
                    this.VehicleIDField = value;
                    this.RaisePropertyChanged("VehicleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleType {
            get {
                return this.VehicleTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleTypeField, value) != true)) {
                    this.VehicleTypeField = value;
                    this.RaisePropertyChanged("VehicleType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfVehicleSpeedi7Zg_POJ5", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfVehicleSpeedi7Zg_POJ5 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.VehicleSpeed> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.VehicleSpeed> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CommandManageService.ICommandManageService")]
    public interface ICommandManageService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IHeartbeatRule/InsertHeartbeatRule", ReplyAction="http://tempuri.org/IHeartbeatRule/InsertHeartbeatRuleResponse")]
        System.IAsyncResult BeginInsertHeartbeatRule(Gsafety.PTMS.ServiceReference.CommandManageService.HeartbeatRule model, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndInsertHeartbeatRule(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IHeartbeatRule/UpdateHeartbeatRule", ReplyAction="http://tempuri.org/IHeartbeatRule/UpdateHeartbeatRuleResponse")]
        System.IAsyncResult BeginUpdateHeartbeatRule(Gsafety.PTMS.ServiceReference.CommandManageService.HeartbeatRule model, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndUpdateHeartbeatRule(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IHeartbeatRule/DeleteHeartbeatRuleByID", ReplyAction="http://tempuri.org/IHeartbeatRule/DeleteHeartbeatRuleByIDResponse")]
        System.IAsyncResult BeginDeleteHeartbeatRuleByID(string ID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndDeleteHeartbeatRuleByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IHeartbeatRule/GetHeartbeatRuleList", ReplyAction="http://tempuri.org/IHeartbeatRule/GetHeartbeatRuleListResponse")]
        System.IAsyncResult BeginGetHeartbeatRuleList(int pageIndex, int pageSize, string clientid, string name, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfHeartbeatRulei7Zg_POJ5 EndGetHeartbeatRuleList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IHeartbeatVehicle/InsertHeartbeatVehicle", ReplyAction="http://tempuri.org/IHeartbeatVehicle/InsertHeartbeatVehicleResponse")]
        System.IAsyncResult BeginInsertHeartbeatVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.HeartbeatVehicle> models, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndInsertHeartbeatVehicle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IHeartbeatVehicle/DeleteHeartbeatVehicleByID", ReplyAction="http://tempuri.org/IHeartbeatVehicle/DeleteHeartbeatVehicleByIDResponse")]
        System.IAsyncResult BeginDeleteHeartbeatVehicleByID(string ID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndDeleteHeartbeatVehicleByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IHeartbeatVehicle/GetHeartbeatVehicleListByHeartBeatID", ReplyAction="http://tempuri.org/IHeartbeatVehicle/GetHeartbeatVehicleListByHeartBeatIDResponse" +
            "")]
        System.IAsyncResult BeginGetHeartbeatVehicleListByHeartBeatID(string clientID, string heartBeatRuleID, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfHeartbeatVehiclei7Zg_POJ5 EndGetHeartbeatVehicleListByHeartBeatID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IHeartbeatVehicle/GetAllHeartbeatVehicleListByHeartBeatID", ReplyAction="http://tempuri.org/IHeartbeatVehicle/GetAllHeartbeatVehicleListByHeartBeatIDRespo" +
            "nse")]
        System.IAsyncResult BeginGetAllHeartbeatVehicleListByHeartBeatID(string clientID, string heartBeatRuleID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfHeartbeatVehiclei7Zg_POJ5 EndGetAllHeartbeatVehicleListByHeartBeatID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IHeartbeatVehicle/DeliverHeartBeatRuleToVehicle", ReplyAction="http://tempuri.org/IHeartbeatVehicle/DeliverHeartBeatRuleToVehicleResponse")]
        System.IAsyncResult BeginDeliverHeartBeatRuleToVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.HeartbeatVehicle> vehicles, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndDeliverHeartBeatRuleToVehicle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILocationReportRuleService/InsertLocationReportRule", ReplyAction="http://tempuri.org/ILocationReportRuleService/InsertLocationReportRuleResponse")]
        System.IAsyncResult BeginInsertLocationReportRule(Gsafety.PTMS.ServiceReference.CommandManageService.LocationReportRule model, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndInsertLocationReportRule(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILocationReportRuleService/UpdateLocationReportRule", ReplyAction="http://tempuri.org/ILocationReportRuleService/UpdateLocationReportRuleResponse")]
        System.IAsyncResult BeginUpdateLocationReportRule(Gsafety.PTMS.ServiceReference.CommandManageService.LocationReportRule model, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndUpdateLocationReportRule(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILocationReportRuleService/DeleteLocationReportRuleByID", ReplyAction="http://tempuri.org/ILocationReportRuleService/DeleteLocationReportRuleByIDRespons" +
            "e")]
        System.IAsyncResult BeginDeleteLocationReportRuleByID(string ID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndDeleteLocationReportRuleByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILocationReportRuleService/GetByNameLocationReportRuleList", ReplyAction="http://tempuri.org/ILocationReportRuleService/GetByNameLocationReportRuleListResp" +
            "onse")]
        System.IAsyncResult BeginGetByNameLocationReportRuleList(Gsafety.PTMS.ServiceReference.CommandManageService.PagingInfo page, string clientID, string name, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfLocationReportRulei7Zg_POJ5 EndGetByNameLocationReportRuleList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVideoRule/InsertVideoRule", ReplyAction="http://tempuri.org/IVideoRule/InsertVideoRuleResponse")]
        System.IAsyncResult BeginInsertVideoRule(Gsafety.PTMS.ServiceReference.CommandManageService.VideoRule model, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndInsertVideoRule(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVideoRule/UpdateVideoRule", ReplyAction="http://tempuri.org/IVideoRule/UpdateVideoRuleResponse")]
        System.IAsyncResult BeginUpdateVideoRule(Gsafety.PTMS.ServiceReference.CommandManageService.VideoRule model, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndUpdateVideoRule(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVideoRule/DeleteVideoRuleByID", ReplyAction="http://tempuri.org/IVideoRule/DeleteVideoRuleByIDResponse")]
        System.IAsyncResult BeginDeleteVideoRuleByID(string ID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndDeleteVideoRuleByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVideoRule/GetVideoRuleListByName", ReplyAction="http://tempuri.org/IVideoRule/GetVideoRuleListByNameResponse")]
        System.IAsyncResult BeginGetVideoRuleListByName(Gsafety.PTMS.ServiceReference.CommandManageService.PagingInfo page, string clientID, string name, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVideoRulei7Zg_POJ5 EndGetVideoRuleListByName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILocationReportVehicle/InsertLocationReportVehicle", ReplyAction="http://tempuri.org/ILocationReportVehicle/InsertLocationReportVehicleResponse")]
        System.IAsyncResult BeginInsertLocationReportVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.LocationReportVehicle> model, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndInsertLocationReportVehicle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILocationReportVehicle/DeleteLocationReportVehicleByID", ReplyAction="http://tempuri.org/ILocationReportVehicle/DeleteLocationReportVehicleByIDResponse" +
            "")]
        System.IAsyncResult BeginDeleteLocationReportVehicleByID(string ID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndDeleteLocationReportVehicleByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILocationReportVehicle/GetLocationReportVehicleListByLocationR" +
            "eportID", ReplyAction="http://tempuri.org/ILocationReportVehicle/GetLocationReportVehicleListByLocationR" +
            "eportIDResponse")]
        System.IAsyncResult BeginGetLocationReportVehicleListByLocationReportID(string clientID, string locationReportID, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfLocationReportVehiclei7Zg_POJ5 EndGetLocationReportVehicleListByLocationReportID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILocationReportVehicle/GetAllLocationReportVehicleListByLocati" +
            "onReportID", ReplyAction="http://tempuri.org/ILocationReportVehicle/GetAllLocationReportVehicleListByLocati" +
            "onReportIDResponse")]
        System.IAsyncResult BeginGetAllLocationReportVehicleListByLocationReportID(string clientID, string locationReportID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfLocationReportVehiclei7Zg_POJ5 EndGetAllLocationReportVehicleListByLocationReportID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILocationReportVehicle/DeliverLocationReportRuleToVehicle", ReplyAction="http://tempuri.org/ILocationReportVehicle/DeliverLocationReportRuleToVehicleRespo" +
            "nse")]
        System.IAsyncResult BeginDeliverLocationReportRuleToVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.LocationReportVehicle> vehicles, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndDeliverLocationReportRuleToVehicle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVideoRuleVehicle/InsertVideoRuleVehicle", ReplyAction="http://tempuri.org/IVideoRuleVehicle/InsertVideoRuleVehicleResponse")]
        System.IAsyncResult BeginInsertVideoRuleVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.VideoRuleVehicle> models, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndInsertVideoRuleVehicle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVideoRuleVehicle/DeleteVideoRuleVehicleByID", ReplyAction="http://tempuri.org/IVideoRuleVehicle/DeleteVideoRuleVehicleByIDResponse")]
        System.IAsyncResult BeginDeleteVideoRuleVehicleByID(string ID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndDeleteVideoRuleVehicleByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVideoRuleVehicle/GetVideoRuleVehicleListByVideoRuleID", ReplyAction="http://tempuri.org/IVideoRuleVehicle/GetVideoRuleVehicleListByVideoRuleIDResponse" +
            "")]
        System.IAsyncResult BeginGetVideoRuleVehicleListByVideoRuleID(string clientID, string locationReportID, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVideoRuleVehiclei7Zg_POJ5 EndGetVideoRuleVehicleListByVideoRuleID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVideoRuleVehicle/GetAllVideoRuleVehicleListByVideoRuleID", ReplyAction="http://tempuri.org/IVideoRuleVehicle/GetAllVideoRuleVehicleListByVideoRuleIDRespo" +
            "nse")]
        System.IAsyncResult BeginGetAllVideoRuleVehicleListByVideoRuleID(string clientID, string locationReportID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVideoRuleVehiclei7Zg_POJ5 EndGetAllVideoRuleVehicleListByVideoRuleID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVideoRuleVehicle/DeliverVideoRuleToVehicle", ReplyAction="http://tempuri.org/IVideoRuleVehicle/DeliverVideoRuleToVehicleResponse")]
        System.IAsyncResult BeginDeliverVideoRuleToVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.VideoRuleVehicle> vehicles, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndDeliverVideoRuleToVehicle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISpeedLimit/InsertSpeedLimit", ReplyAction="http://tempuri.org/ISpeedLimit/InsertSpeedLimitResponse")]
        System.IAsyncResult BeginInsertSpeedLimit(Gsafety.PTMS.ServiceReference.CommandManageService.SpeedLimit model, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndInsertSpeedLimit(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISpeedLimit/UpdateSpeedLimit", ReplyAction="http://tempuri.org/ISpeedLimit/UpdateSpeedLimitResponse")]
        System.IAsyncResult BeginUpdateSpeedLimit(Gsafety.PTMS.ServiceReference.CommandManageService.SpeedLimit model, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndUpdateSpeedLimit(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISpeedLimit/DeleteSpeedLimitByID", ReplyAction="http://tempuri.org/ISpeedLimit/DeleteSpeedLimitByIDResponse")]
        System.IAsyncResult BeginDeleteSpeedLimitByID(string ID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndDeleteSpeedLimitByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISpeedLimit/GetSpeedLimitListByName", ReplyAction="http://tempuri.org/ISpeedLimit/GetSpeedLimitListByNameResponse")]
        System.IAsyncResult BeginGetSpeedLimitListByName(string clientID, string name, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfSpeedLimiti7Zg_POJ5 EndGetSpeedLimitListByName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVehicleSpeed/InsertVehicleSpeed", ReplyAction="http://tempuri.org/IVehicleSpeed/InsertVehicleSpeedResponse")]
        System.IAsyncResult BeginInsertVehicleSpeed(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.VehicleSpeed> models, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndInsertVehicleSpeed(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVehicleSpeed/DeleteVehicleSpeedByID", ReplyAction="http://tempuri.org/IVehicleSpeed/DeleteVehicleSpeedByIDResponse")]
        System.IAsyncResult BeginDeleteVehicleSpeedByID(string ID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndDeleteVehicleSpeedByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVehicleSpeed/GetAllVehicleSpeedListBySpeedID", ReplyAction="http://tempuri.org/IVehicleSpeed/GetAllVehicleSpeedListBySpeedIDResponse")]
        System.IAsyncResult BeginGetAllVehicleSpeedListBySpeedID(string clientID, string speedID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVehicleSpeedi7Zg_POJ5 EndGetAllVehicleSpeedListBySpeedID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVehicleSpeed/GetVehicleSpeedListBySpeedID", ReplyAction="http://tempuri.org/IVehicleSpeed/GetVehicleSpeedListBySpeedIDResponse")]
        System.IAsyncResult BeginGetVehicleSpeedListBySpeedID(string clientID, string speedID, string vehicleName, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVehicleSpeedi7Zg_POJ5 EndGetVehicleSpeedListBySpeedID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IVehicleSpeed/DeliverSpeedLimitToVehicle", ReplyAction="http://tempuri.org/IVehicleSpeed/DeliverSpeedLimitToVehicleResponse")]
        System.IAsyncResult BeginDeliverSpeedLimitToVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.VehicleSpeed> vehicles, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndDeliverSpeedLimitToVehicle(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICommandManageServiceChannel : Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertHeartbeatRuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertHeartbeatRuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateHeartbeatRuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateHeartbeatRuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteHeartbeatRuleByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteHeartbeatRuleByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetHeartbeatRuleListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHeartbeatRuleListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfHeartbeatRulei7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfHeartbeatRulei7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertHeartbeatVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertHeartbeatVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteHeartbeatVehicleByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteHeartbeatVehicleByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetHeartbeatVehicleListByHeartBeatIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHeartbeatVehicleListByHeartBeatIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfHeartbeatVehiclei7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfHeartbeatVehiclei7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllHeartbeatVehicleListByHeartBeatIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllHeartbeatVehicleListByHeartBeatIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfHeartbeatVehiclei7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfHeartbeatVehiclei7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeliverHeartBeatRuleToVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeliverHeartBeatRuleToVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertLocationReportRuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertLocationReportRuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateLocationReportRuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateLocationReportRuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteLocationReportRuleByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteLocationReportRuleByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetByNameLocationReportRuleListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetByNameLocationReportRuleListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfLocationReportRulei7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfLocationReportRulei7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertVideoRuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertVideoRuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateVideoRuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateVideoRuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteVideoRuleByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteVideoRuleByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVideoRuleListByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVideoRuleListByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVideoRulei7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVideoRulei7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertLocationReportVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertLocationReportVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteLocationReportVehicleByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteLocationReportVehicleByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLocationReportVehicleListByLocationReportIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLocationReportVehicleListByLocationReportIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfLocationReportVehiclei7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfLocationReportVehiclei7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllLocationReportVehicleListByLocationReportIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllLocationReportVehicleListByLocationReportIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfLocationReportVehiclei7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfLocationReportVehiclei7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeliverLocationReportRuleToVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeliverLocationReportRuleToVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertVideoRuleVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertVideoRuleVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteVideoRuleVehicleByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteVideoRuleVehicleByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVideoRuleVehicleListByVideoRuleIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVideoRuleVehicleListByVideoRuleIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVideoRuleVehiclei7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVideoRuleVehiclei7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllVideoRuleVehicleListByVideoRuleIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllVideoRuleVehicleListByVideoRuleIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVideoRuleVehiclei7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVideoRuleVehiclei7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeliverVideoRuleToVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeliverVideoRuleToVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertSpeedLimitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertSpeedLimitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateSpeedLimitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateSpeedLimitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteSpeedLimitByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteSpeedLimitByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSpeedLimitListByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSpeedLimitListByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfSpeedLimiti7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfSpeedLimiti7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertVehicleSpeedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertVehicleSpeedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteVehicleSpeedByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteVehicleSpeedByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllVehicleSpeedListBySpeedIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllVehicleSpeedListBySpeedIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVehicleSpeedi7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVehicleSpeedi7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVehicleSpeedListBySpeedIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVehicleSpeedListBySpeedIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVehicleSpeedi7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVehicleSpeedi7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeliverSpeedLimitToVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeliverSpeedLimitToVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CommandManageServiceClient : System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService>, Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService {
        
        private BeginOperationDelegate onBeginInsertHeartbeatRuleDelegate;
        
        private EndOperationDelegate onEndInsertHeartbeatRuleDelegate;
        
        private System.Threading.SendOrPostCallback onInsertHeartbeatRuleCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateHeartbeatRuleDelegate;
        
        private EndOperationDelegate onEndUpdateHeartbeatRuleDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateHeartbeatRuleCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteHeartbeatRuleByIDDelegate;
        
        private EndOperationDelegate onEndDeleteHeartbeatRuleByIDDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteHeartbeatRuleByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHeartbeatRuleListDelegate;
        
        private EndOperationDelegate onEndGetHeartbeatRuleListDelegate;
        
        private System.Threading.SendOrPostCallback onGetHeartbeatRuleListCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertHeartbeatVehicleDelegate;
        
        private EndOperationDelegate onEndInsertHeartbeatVehicleDelegate;
        
        private System.Threading.SendOrPostCallback onInsertHeartbeatVehicleCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteHeartbeatVehicleByIDDelegate;
        
        private EndOperationDelegate onEndDeleteHeartbeatVehicleByIDDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteHeartbeatVehicleByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHeartbeatVehicleListByHeartBeatIDDelegate;
        
        private EndOperationDelegate onEndGetHeartbeatVehicleListByHeartBeatIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetHeartbeatVehicleListByHeartBeatIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllHeartbeatVehicleListByHeartBeatIDDelegate;
        
        private EndOperationDelegate onEndGetAllHeartbeatVehicleListByHeartBeatIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllHeartbeatVehicleListByHeartBeatIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeliverHeartBeatRuleToVehicleDelegate;
        
        private EndOperationDelegate onEndDeliverHeartBeatRuleToVehicleDelegate;
        
        private System.Threading.SendOrPostCallback onDeliverHeartBeatRuleToVehicleCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertLocationReportRuleDelegate;
        
        private EndOperationDelegate onEndInsertLocationReportRuleDelegate;
        
        private System.Threading.SendOrPostCallback onInsertLocationReportRuleCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateLocationReportRuleDelegate;
        
        private EndOperationDelegate onEndUpdateLocationReportRuleDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateLocationReportRuleCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteLocationReportRuleByIDDelegate;
        
        private EndOperationDelegate onEndDeleteLocationReportRuleByIDDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteLocationReportRuleByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetByNameLocationReportRuleListDelegate;
        
        private EndOperationDelegate onEndGetByNameLocationReportRuleListDelegate;
        
        private System.Threading.SendOrPostCallback onGetByNameLocationReportRuleListCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertVideoRuleDelegate;
        
        private EndOperationDelegate onEndInsertVideoRuleDelegate;
        
        private System.Threading.SendOrPostCallback onInsertVideoRuleCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateVideoRuleDelegate;
        
        private EndOperationDelegate onEndUpdateVideoRuleDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateVideoRuleCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteVideoRuleByIDDelegate;
        
        private EndOperationDelegate onEndDeleteVideoRuleByIDDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteVideoRuleByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVideoRuleListByNameDelegate;
        
        private EndOperationDelegate onEndGetVideoRuleListByNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetVideoRuleListByNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertLocationReportVehicleDelegate;
        
        private EndOperationDelegate onEndInsertLocationReportVehicleDelegate;
        
        private System.Threading.SendOrPostCallback onInsertLocationReportVehicleCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteLocationReportVehicleByIDDelegate;
        
        private EndOperationDelegate onEndDeleteLocationReportVehicleByIDDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteLocationReportVehicleByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLocationReportVehicleListByLocationReportIDDelegate;
        
        private EndOperationDelegate onEndGetLocationReportVehicleListByLocationReportIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetLocationReportVehicleListByLocationReportIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllLocationReportVehicleListByLocationReportIDDelegate;
        
        private EndOperationDelegate onEndGetAllLocationReportVehicleListByLocationReportIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllLocationReportVehicleListByLocationReportIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeliverLocationReportRuleToVehicleDelegate;
        
        private EndOperationDelegate onEndDeliverLocationReportRuleToVehicleDelegate;
        
        private System.Threading.SendOrPostCallback onDeliverLocationReportRuleToVehicleCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertVideoRuleVehicleDelegate;
        
        private EndOperationDelegate onEndInsertVideoRuleVehicleDelegate;
        
        private System.Threading.SendOrPostCallback onInsertVideoRuleVehicleCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteVideoRuleVehicleByIDDelegate;
        
        private EndOperationDelegate onEndDeleteVideoRuleVehicleByIDDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteVideoRuleVehicleByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVideoRuleVehicleListByVideoRuleIDDelegate;
        
        private EndOperationDelegate onEndGetVideoRuleVehicleListByVideoRuleIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetVideoRuleVehicleListByVideoRuleIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllVideoRuleVehicleListByVideoRuleIDDelegate;
        
        private EndOperationDelegate onEndGetAllVideoRuleVehicleListByVideoRuleIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllVideoRuleVehicleListByVideoRuleIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeliverVideoRuleToVehicleDelegate;
        
        private EndOperationDelegate onEndDeliverVideoRuleToVehicleDelegate;
        
        private System.Threading.SendOrPostCallback onDeliverVideoRuleToVehicleCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertSpeedLimitDelegate;
        
        private EndOperationDelegate onEndInsertSpeedLimitDelegate;
        
        private System.Threading.SendOrPostCallback onInsertSpeedLimitCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateSpeedLimitDelegate;
        
        private EndOperationDelegate onEndUpdateSpeedLimitDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateSpeedLimitCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteSpeedLimitByIDDelegate;
        
        private EndOperationDelegate onEndDeleteSpeedLimitByIDDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteSpeedLimitByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSpeedLimitListByNameDelegate;
        
        private EndOperationDelegate onEndGetSpeedLimitListByNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetSpeedLimitListByNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertVehicleSpeedDelegate;
        
        private EndOperationDelegate onEndInsertVehicleSpeedDelegate;
        
        private System.Threading.SendOrPostCallback onInsertVehicleSpeedCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteVehicleSpeedByIDDelegate;
        
        private EndOperationDelegate onEndDeleteVehicleSpeedByIDDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteVehicleSpeedByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllVehicleSpeedListBySpeedIDDelegate;
        
        private EndOperationDelegate onEndGetAllVehicleSpeedListBySpeedIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllVehicleSpeedListBySpeedIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVehicleSpeedListBySpeedIDDelegate;
        
        private EndOperationDelegate onEndGetVehicleSpeedListBySpeedIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetVehicleSpeedListBySpeedIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeliverSpeedLimitToVehicleDelegate;
        
        private EndOperationDelegate onEndDeliverSpeedLimitToVehicleDelegate;
        
        private System.Threading.SendOrPostCallback onDeliverSpeedLimitToVehicleCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public CommandManageServiceClient() {
        }
        
        public CommandManageServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CommandManageServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommandManageServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommandManageServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<InsertHeartbeatRuleCompletedEventArgs> InsertHeartbeatRuleCompleted;
        
        public event System.EventHandler<UpdateHeartbeatRuleCompletedEventArgs> UpdateHeartbeatRuleCompleted;
        
        public event System.EventHandler<DeleteHeartbeatRuleByIDCompletedEventArgs> DeleteHeartbeatRuleByIDCompleted;
        
        public event System.EventHandler<GetHeartbeatRuleListCompletedEventArgs> GetHeartbeatRuleListCompleted;
        
        public event System.EventHandler<InsertHeartbeatVehicleCompletedEventArgs> InsertHeartbeatVehicleCompleted;
        
        public event System.EventHandler<DeleteHeartbeatVehicleByIDCompletedEventArgs> DeleteHeartbeatVehicleByIDCompleted;
        
        public event System.EventHandler<GetHeartbeatVehicleListByHeartBeatIDCompletedEventArgs> GetHeartbeatVehicleListByHeartBeatIDCompleted;
        
        public event System.EventHandler<GetAllHeartbeatVehicleListByHeartBeatIDCompletedEventArgs> GetAllHeartbeatVehicleListByHeartBeatIDCompleted;
        
        public event System.EventHandler<DeliverHeartBeatRuleToVehicleCompletedEventArgs> DeliverHeartBeatRuleToVehicleCompleted;
        
        public event System.EventHandler<InsertLocationReportRuleCompletedEventArgs> InsertLocationReportRuleCompleted;
        
        public event System.EventHandler<UpdateLocationReportRuleCompletedEventArgs> UpdateLocationReportRuleCompleted;
        
        public event System.EventHandler<DeleteLocationReportRuleByIDCompletedEventArgs> DeleteLocationReportRuleByIDCompleted;
        
        public event System.EventHandler<GetByNameLocationReportRuleListCompletedEventArgs> GetByNameLocationReportRuleListCompleted;
        
        public event System.EventHandler<InsertVideoRuleCompletedEventArgs> InsertVideoRuleCompleted;
        
        public event System.EventHandler<UpdateVideoRuleCompletedEventArgs> UpdateVideoRuleCompleted;
        
        public event System.EventHandler<DeleteVideoRuleByIDCompletedEventArgs> DeleteVideoRuleByIDCompleted;
        
        public event System.EventHandler<GetVideoRuleListByNameCompletedEventArgs> GetVideoRuleListByNameCompleted;
        
        public event System.EventHandler<InsertLocationReportVehicleCompletedEventArgs> InsertLocationReportVehicleCompleted;
        
        public event System.EventHandler<DeleteLocationReportVehicleByIDCompletedEventArgs> DeleteLocationReportVehicleByIDCompleted;
        
        public event System.EventHandler<GetLocationReportVehicleListByLocationReportIDCompletedEventArgs> GetLocationReportVehicleListByLocationReportIDCompleted;
        
        public event System.EventHandler<GetAllLocationReportVehicleListByLocationReportIDCompletedEventArgs> GetAllLocationReportVehicleListByLocationReportIDCompleted;
        
        public event System.EventHandler<DeliverLocationReportRuleToVehicleCompletedEventArgs> DeliverLocationReportRuleToVehicleCompleted;
        
        public event System.EventHandler<InsertVideoRuleVehicleCompletedEventArgs> InsertVideoRuleVehicleCompleted;
        
        public event System.EventHandler<DeleteVideoRuleVehicleByIDCompletedEventArgs> DeleteVideoRuleVehicleByIDCompleted;
        
        public event System.EventHandler<GetVideoRuleVehicleListByVideoRuleIDCompletedEventArgs> GetVideoRuleVehicleListByVideoRuleIDCompleted;
        
        public event System.EventHandler<GetAllVideoRuleVehicleListByVideoRuleIDCompletedEventArgs> GetAllVideoRuleVehicleListByVideoRuleIDCompleted;
        
        public event System.EventHandler<DeliverVideoRuleToVehicleCompletedEventArgs> DeliverVideoRuleToVehicleCompleted;
        
        public event System.EventHandler<InsertSpeedLimitCompletedEventArgs> InsertSpeedLimitCompleted;
        
        public event System.EventHandler<UpdateSpeedLimitCompletedEventArgs> UpdateSpeedLimitCompleted;
        
        public event System.EventHandler<DeleteSpeedLimitByIDCompletedEventArgs> DeleteSpeedLimitByIDCompleted;
        
        public event System.EventHandler<GetSpeedLimitListByNameCompletedEventArgs> GetSpeedLimitListByNameCompleted;
        
        public event System.EventHandler<InsertVehicleSpeedCompletedEventArgs> InsertVehicleSpeedCompleted;
        
        public event System.EventHandler<DeleteVehicleSpeedByIDCompletedEventArgs> DeleteVehicleSpeedByIDCompleted;
        
        public event System.EventHandler<GetAllVehicleSpeedListBySpeedIDCompletedEventArgs> GetAllVehicleSpeedListBySpeedIDCompleted;
        
        public event System.EventHandler<GetVehicleSpeedListBySpeedIDCompletedEventArgs> GetVehicleSpeedListBySpeedIDCompleted;
        
        public event System.EventHandler<DeliverSpeedLimitToVehicleCompletedEventArgs> DeliverSpeedLimitToVehicleCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginInsertHeartbeatRule(Gsafety.PTMS.ServiceReference.CommandManageService.HeartbeatRule model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertHeartbeatRule(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndInsertHeartbeatRule(System.IAsyncResult result) {
            return base.Channel.EndInsertHeartbeatRule(result);
        }
        
        private System.IAsyncResult OnBeginInsertHeartbeatRule(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.CommandManageService.HeartbeatRule model = ((Gsafety.PTMS.ServiceReference.CommandManageService.HeartbeatRule)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginInsertHeartbeatRule(model, callback, asyncState);
        }
        
        private object[] OnEndInsertHeartbeatRule(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndInsertHeartbeatRule(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertHeartbeatRuleCompleted(object state) {
            if ((this.InsertHeartbeatRuleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertHeartbeatRuleCompleted(this, new InsertHeartbeatRuleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertHeartbeatRuleAsync(Gsafety.PTMS.ServiceReference.CommandManageService.HeartbeatRule model) {
            this.InsertHeartbeatRuleAsync(model, null);
        }
        
        public void InsertHeartbeatRuleAsync(Gsafety.PTMS.ServiceReference.CommandManageService.HeartbeatRule model, object userState) {
            if ((this.onBeginInsertHeartbeatRuleDelegate == null)) {
                this.onBeginInsertHeartbeatRuleDelegate = new BeginOperationDelegate(this.OnBeginInsertHeartbeatRule);
            }
            if ((this.onEndInsertHeartbeatRuleDelegate == null)) {
                this.onEndInsertHeartbeatRuleDelegate = new EndOperationDelegate(this.OnEndInsertHeartbeatRule);
            }
            if ((this.onInsertHeartbeatRuleCompletedDelegate == null)) {
                this.onInsertHeartbeatRuleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertHeartbeatRuleCompleted);
            }
            base.InvokeAsync(this.onBeginInsertHeartbeatRuleDelegate, new object[] {
                        model}, this.onEndInsertHeartbeatRuleDelegate, this.onInsertHeartbeatRuleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginUpdateHeartbeatRule(Gsafety.PTMS.ServiceReference.CommandManageService.HeartbeatRule model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateHeartbeatRule(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndUpdateHeartbeatRule(System.IAsyncResult result) {
            return base.Channel.EndUpdateHeartbeatRule(result);
        }
        
        private System.IAsyncResult OnBeginUpdateHeartbeatRule(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.CommandManageService.HeartbeatRule model = ((Gsafety.PTMS.ServiceReference.CommandManageService.HeartbeatRule)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginUpdateHeartbeatRule(model, callback, asyncState);
        }
        
        private object[] OnEndUpdateHeartbeatRule(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndUpdateHeartbeatRule(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateHeartbeatRuleCompleted(object state) {
            if ((this.UpdateHeartbeatRuleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateHeartbeatRuleCompleted(this, new UpdateHeartbeatRuleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateHeartbeatRuleAsync(Gsafety.PTMS.ServiceReference.CommandManageService.HeartbeatRule model) {
            this.UpdateHeartbeatRuleAsync(model, null);
        }
        
        public void UpdateHeartbeatRuleAsync(Gsafety.PTMS.ServiceReference.CommandManageService.HeartbeatRule model, object userState) {
            if ((this.onBeginUpdateHeartbeatRuleDelegate == null)) {
                this.onBeginUpdateHeartbeatRuleDelegate = new BeginOperationDelegate(this.OnBeginUpdateHeartbeatRule);
            }
            if ((this.onEndUpdateHeartbeatRuleDelegate == null)) {
                this.onEndUpdateHeartbeatRuleDelegate = new EndOperationDelegate(this.OnEndUpdateHeartbeatRule);
            }
            if ((this.onUpdateHeartbeatRuleCompletedDelegate == null)) {
                this.onUpdateHeartbeatRuleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateHeartbeatRuleCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateHeartbeatRuleDelegate, new object[] {
                        model}, this.onEndUpdateHeartbeatRuleDelegate, this.onUpdateHeartbeatRuleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginDeleteHeartbeatRuleByID(string ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteHeartbeatRuleByID(ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndDeleteHeartbeatRuleByID(System.IAsyncResult result) {
            return base.Channel.EndDeleteHeartbeatRuleByID(result);
        }
        
        private System.IAsyncResult OnBeginDeleteHeartbeatRuleByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ID = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginDeleteHeartbeatRuleByID(ID, callback, asyncState);
        }
        
        private object[] OnEndDeleteHeartbeatRuleByID(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndDeleteHeartbeatRuleByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteHeartbeatRuleByIDCompleted(object state) {
            if ((this.DeleteHeartbeatRuleByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteHeartbeatRuleByIDCompleted(this, new DeleteHeartbeatRuleByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteHeartbeatRuleByIDAsync(string ID) {
            this.DeleteHeartbeatRuleByIDAsync(ID, null);
        }
        
        public void DeleteHeartbeatRuleByIDAsync(string ID, object userState) {
            if ((this.onBeginDeleteHeartbeatRuleByIDDelegate == null)) {
                this.onBeginDeleteHeartbeatRuleByIDDelegate = new BeginOperationDelegate(this.OnBeginDeleteHeartbeatRuleByID);
            }
            if ((this.onEndDeleteHeartbeatRuleByIDDelegate == null)) {
                this.onEndDeleteHeartbeatRuleByIDDelegate = new EndOperationDelegate(this.OnEndDeleteHeartbeatRuleByID);
            }
            if ((this.onDeleteHeartbeatRuleByIDCompletedDelegate == null)) {
                this.onDeleteHeartbeatRuleByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteHeartbeatRuleByIDCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteHeartbeatRuleByIDDelegate, new object[] {
                        ID}, this.onEndDeleteHeartbeatRuleByIDDelegate, this.onDeleteHeartbeatRuleByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginGetHeartbeatRuleList(int pageIndex, int pageSize, string clientid, string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHeartbeatRuleList(pageIndex, pageSize, clientid, name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfHeartbeatRulei7Zg_POJ5 Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndGetHeartbeatRuleList(System.IAsyncResult result) {
            return base.Channel.EndGetHeartbeatRuleList(result);
        }
        
        private System.IAsyncResult OnBeginGetHeartbeatRuleList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int pageIndex = ((int)(inValues[0]));
            int pageSize = ((int)(inValues[1]));
            string clientid = ((string)(inValues[2]));
            string name = ((string)(inValues[3]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginGetHeartbeatRuleList(pageIndex, pageSize, clientid, name, callback, asyncState);
        }
        
        private object[] OnEndGetHeartbeatRuleList(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfHeartbeatRulei7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndGetHeartbeatRuleList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHeartbeatRuleListCompleted(object state) {
            if ((this.GetHeartbeatRuleListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHeartbeatRuleListCompleted(this, new GetHeartbeatRuleListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHeartbeatRuleListAsync(int pageIndex, int pageSize, string clientid, string name) {
            this.GetHeartbeatRuleListAsync(pageIndex, pageSize, clientid, name, null);
        }
        
        public void GetHeartbeatRuleListAsync(int pageIndex, int pageSize, string clientid, string name, object userState) {
            if ((this.onBeginGetHeartbeatRuleListDelegate == null)) {
                this.onBeginGetHeartbeatRuleListDelegate = new BeginOperationDelegate(this.OnBeginGetHeartbeatRuleList);
            }
            if ((this.onEndGetHeartbeatRuleListDelegate == null)) {
                this.onEndGetHeartbeatRuleListDelegate = new EndOperationDelegate(this.OnEndGetHeartbeatRuleList);
            }
            if ((this.onGetHeartbeatRuleListCompletedDelegate == null)) {
                this.onGetHeartbeatRuleListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHeartbeatRuleListCompleted);
            }
            base.InvokeAsync(this.onBeginGetHeartbeatRuleListDelegate, new object[] {
                        pageIndex,
                        pageSize,
                        clientid,
                        name}, this.onEndGetHeartbeatRuleListDelegate, this.onGetHeartbeatRuleListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginInsertHeartbeatVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.HeartbeatVehicle> models, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertHeartbeatVehicle(models, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndInsertHeartbeatVehicle(System.IAsyncResult result) {
            return base.Channel.EndInsertHeartbeatVehicle(result);
        }
        
        private System.IAsyncResult OnBeginInsertHeartbeatVehicle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.HeartbeatVehicle> models = ((System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.HeartbeatVehicle>)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginInsertHeartbeatVehicle(models, callback, asyncState);
        }
        
        private object[] OnEndInsertHeartbeatVehicle(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndInsertHeartbeatVehicle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertHeartbeatVehicleCompleted(object state) {
            if ((this.InsertHeartbeatVehicleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertHeartbeatVehicleCompleted(this, new InsertHeartbeatVehicleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertHeartbeatVehicleAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.HeartbeatVehicle> models) {
            this.InsertHeartbeatVehicleAsync(models, null);
        }
        
        public void InsertHeartbeatVehicleAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.HeartbeatVehicle> models, object userState) {
            if ((this.onBeginInsertHeartbeatVehicleDelegate == null)) {
                this.onBeginInsertHeartbeatVehicleDelegate = new BeginOperationDelegate(this.OnBeginInsertHeartbeatVehicle);
            }
            if ((this.onEndInsertHeartbeatVehicleDelegate == null)) {
                this.onEndInsertHeartbeatVehicleDelegate = new EndOperationDelegate(this.OnEndInsertHeartbeatVehicle);
            }
            if ((this.onInsertHeartbeatVehicleCompletedDelegate == null)) {
                this.onInsertHeartbeatVehicleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertHeartbeatVehicleCompleted);
            }
            base.InvokeAsync(this.onBeginInsertHeartbeatVehicleDelegate, new object[] {
                        models}, this.onEndInsertHeartbeatVehicleDelegate, this.onInsertHeartbeatVehicleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginDeleteHeartbeatVehicleByID(string ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteHeartbeatVehicleByID(ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndDeleteHeartbeatVehicleByID(System.IAsyncResult result) {
            return base.Channel.EndDeleteHeartbeatVehicleByID(result);
        }
        
        private System.IAsyncResult OnBeginDeleteHeartbeatVehicleByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ID = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginDeleteHeartbeatVehicleByID(ID, callback, asyncState);
        }
        
        private object[] OnEndDeleteHeartbeatVehicleByID(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndDeleteHeartbeatVehicleByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteHeartbeatVehicleByIDCompleted(object state) {
            if ((this.DeleteHeartbeatVehicleByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteHeartbeatVehicleByIDCompleted(this, new DeleteHeartbeatVehicleByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteHeartbeatVehicleByIDAsync(string ID) {
            this.DeleteHeartbeatVehicleByIDAsync(ID, null);
        }
        
        public void DeleteHeartbeatVehicleByIDAsync(string ID, object userState) {
            if ((this.onBeginDeleteHeartbeatVehicleByIDDelegate == null)) {
                this.onBeginDeleteHeartbeatVehicleByIDDelegate = new BeginOperationDelegate(this.OnBeginDeleteHeartbeatVehicleByID);
            }
            if ((this.onEndDeleteHeartbeatVehicleByIDDelegate == null)) {
                this.onEndDeleteHeartbeatVehicleByIDDelegate = new EndOperationDelegate(this.OnEndDeleteHeartbeatVehicleByID);
            }
            if ((this.onDeleteHeartbeatVehicleByIDCompletedDelegate == null)) {
                this.onDeleteHeartbeatVehicleByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteHeartbeatVehicleByIDCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteHeartbeatVehicleByIDDelegate, new object[] {
                        ID}, this.onEndDeleteHeartbeatVehicleByIDDelegate, this.onDeleteHeartbeatVehicleByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginGetHeartbeatVehicleListByHeartBeatID(string clientID, string heartBeatRuleID, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHeartbeatVehicleListByHeartBeatID(clientID, heartBeatRuleID, pageIndex, pageSize, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfHeartbeatVehiclei7Zg_POJ5 Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndGetHeartbeatVehicleListByHeartBeatID(System.IAsyncResult result) {
            return base.Channel.EndGetHeartbeatVehicleListByHeartBeatID(result);
        }
        
        private System.IAsyncResult OnBeginGetHeartbeatVehicleListByHeartBeatID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            string heartBeatRuleID = ((string)(inValues[1]));
            int pageIndex = ((int)(inValues[2]));
            int pageSize = ((int)(inValues[3]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginGetHeartbeatVehicleListByHeartBeatID(clientID, heartBeatRuleID, pageIndex, pageSize, callback, asyncState);
        }
        
        private object[] OnEndGetHeartbeatVehicleListByHeartBeatID(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfHeartbeatVehiclei7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndGetHeartbeatVehicleListByHeartBeatID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHeartbeatVehicleListByHeartBeatIDCompleted(object state) {
            if ((this.GetHeartbeatVehicleListByHeartBeatIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHeartbeatVehicleListByHeartBeatIDCompleted(this, new GetHeartbeatVehicleListByHeartBeatIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHeartbeatVehicleListByHeartBeatIDAsync(string clientID, string heartBeatRuleID, int pageIndex, int pageSize) {
            this.GetHeartbeatVehicleListByHeartBeatIDAsync(clientID, heartBeatRuleID, pageIndex, pageSize, null);
        }
        
        public void GetHeartbeatVehicleListByHeartBeatIDAsync(string clientID, string heartBeatRuleID, int pageIndex, int pageSize, object userState) {
            if ((this.onBeginGetHeartbeatVehicleListByHeartBeatIDDelegate == null)) {
                this.onBeginGetHeartbeatVehicleListByHeartBeatIDDelegate = new BeginOperationDelegate(this.OnBeginGetHeartbeatVehicleListByHeartBeatID);
            }
            if ((this.onEndGetHeartbeatVehicleListByHeartBeatIDDelegate == null)) {
                this.onEndGetHeartbeatVehicleListByHeartBeatIDDelegate = new EndOperationDelegate(this.OnEndGetHeartbeatVehicleListByHeartBeatID);
            }
            if ((this.onGetHeartbeatVehicleListByHeartBeatIDCompletedDelegate == null)) {
                this.onGetHeartbeatVehicleListByHeartBeatIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHeartbeatVehicleListByHeartBeatIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetHeartbeatVehicleListByHeartBeatIDDelegate, new object[] {
                        clientID,
                        heartBeatRuleID,
                        pageIndex,
                        pageSize}, this.onEndGetHeartbeatVehicleListByHeartBeatIDDelegate, this.onGetHeartbeatVehicleListByHeartBeatIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginGetAllHeartbeatVehicleListByHeartBeatID(string clientID, string heartBeatRuleID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllHeartbeatVehicleListByHeartBeatID(clientID, heartBeatRuleID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfHeartbeatVehiclei7Zg_POJ5 Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndGetAllHeartbeatVehicleListByHeartBeatID(System.IAsyncResult result) {
            return base.Channel.EndGetAllHeartbeatVehicleListByHeartBeatID(result);
        }
        
        private System.IAsyncResult OnBeginGetAllHeartbeatVehicleListByHeartBeatID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            string heartBeatRuleID = ((string)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginGetAllHeartbeatVehicleListByHeartBeatID(clientID, heartBeatRuleID, callback, asyncState);
        }
        
        private object[] OnEndGetAllHeartbeatVehicleListByHeartBeatID(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfHeartbeatVehiclei7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndGetAllHeartbeatVehicleListByHeartBeatID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllHeartbeatVehicleListByHeartBeatIDCompleted(object state) {
            if ((this.GetAllHeartbeatVehicleListByHeartBeatIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllHeartbeatVehicleListByHeartBeatIDCompleted(this, new GetAllHeartbeatVehicleListByHeartBeatIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllHeartbeatVehicleListByHeartBeatIDAsync(string clientID, string heartBeatRuleID) {
            this.GetAllHeartbeatVehicleListByHeartBeatIDAsync(clientID, heartBeatRuleID, null);
        }
        
        public void GetAllHeartbeatVehicleListByHeartBeatIDAsync(string clientID, string heartBeatRuleID, object userState) {
            if ((this.onBeginGetAllHeartbeatVehicleListByHeartBeatIDDelegate == null)) {
                this.onBeginGetAllHeartbeatVehicleListByHeartBeatIDDelegate = new BeginOperationDelegate(this.OnBeginGetAllHeartbeatVehicleListByHeartBeatID);
            }
            if ((this.onEndGetAllHeartbeatVehicleListByHeartBeatIDDelegate == null)) {
                this.onEndGetAllHeartbeatVehicleListByHeartBeatIDDelegate = new EndOperationDelegate(this.OnEndGetAllHeartbeatVehicleListByHeartBeatID);
            }
            if ((this.onGetAllHeartbeatVehicleListByHeartBeatIDCompletedDelegate == null)) {
                this.onGetAllHeartbeatVehicleListByHeartBeatIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllHeartbeatVehicleListByHeartBeatIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllHeartbeatVehicleListByHeartBeatIDDelegate, new object[] {
                        clientID,
                        heartBeatRuleID}, this.onEndGetAllHeartbeatVehicleListByHeartBeatIDDelegate, this.onGetAllHeartbeatVehicleListByHeartBeatIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginDeliverHeartBeatRuleToVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.HeartbeatVehicle> vehicles, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeliverHeartBeatRuleToVehicle(vehicles, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndDeliverHeartBeatRuleToVehicle(System.IAsyncResult result) {
            return base.Channel.EndDeliverHeartBeatRuleToVehicle(result);
        }
        
        private System.IAsyncResult OnBeginDeliverHeartBeatRuleToVehicle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.HeartbeatVehicle> vehicles = ((System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.HeartbeatVehicle>)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginDeliverHeartBeatRuleToVehicle(vehicles, callback, asyncState);
        }
        
        private object[] OnEndDeliverHeartBeatRuleToVehicle(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndDeliverHeartBeatRuleToVehicle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeliverHeartBeatRuleToVehicleCompleted(object state) {
            if ((this.DeliverHeartBeatRuleToVehicleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeliverHeartBeatRuleToVehicleCompleted(this, new DeliverHeartBeatRuleToVehicleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeliverHeartBeatRuleToVehicleAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.HeartbeatVehicle> vehicles) {
            this.DeliverHeartBeatRuleToVehicleAsync(vehicles, null);
        }
        
        public void DeliverHeartBeatRuleToVehicleAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.HeartbeatVehicle> vehicles, object userState) {
            if ((this.onBeginDeliverHeartBeatRuleToVehicleDelegate == null)) {
                this.onBeginDeliverHeartBeatRuleToVehicleDelegate = new BeginOperationDelegate(this.OnBeginDeliverHeartBeatRuleToVehicle);
            }
            if ((this.onEndDeliverHeartBeatRuleToVehicleDelegate == null)) {
                this.onEndDeliverHeartBeatRuleToVehicleDelegate = new EndOperationDelegate(this.OnEndDeliverHeartBeatRuleToVehicle);
            }
            if ((this.onDeliverHeartBeatRuleToVehicleCompletedDelegate == null)) {
                this.onDeliverHeartBeatRuleToVehicleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeliverHeartBeatRuleToVehicleCompleted);
            }
            base.InvokeAsync(this.onBeginDeliverHeartBeatRuleToVehicleDelegate, new object[] {
                        vehicles}, this.onEndDeliverHeartBeatRuleToVehicleDelegate, this.onDeliverHeartBeatRuleToVehicleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginInsertLocationReportRule(Gsafety.PTMS.ServiceReference.CommandManageService.LocationReportRule model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertLocationReportRule(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndInsertLocationReportRule(System.IAsyncResult result) {
            return base.Channel.EndInsertLocationReportRule(result);
        }
        
        private System.IAsyncResult OnBeginInsertLocationReportRule(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.CommandManageService.LocationReportRule model = ((Gsafety.PTMS.ServiceReference.CommandManageService.LocationReportRule)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginInsertLocationReportRule(model, callback, asyncState);
        }
        
        private object[] OnEndInsertLocationReportRule(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndInsertLocationReportRule(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertLocationReportRuleCompleted(object state) {
            if ((this.InsertLocationReportRuleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertLocationReportRuleCompleted(this, new InsertLocationReportRuleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertLocationReportRuleAsync(Gsafety.PTMS.ServiceReference.CommandManageService.LocationReportRule model) {
            this.InsertLocationReportRuleAsync(model, null);
        }
        
        public void InsertLocationReportRuleAsync(Gsafety.PTMS.ServiceReference.CommandManageService.LocationReportRule model, object userState) {
            if ((this.onBeginInsertLocationReportRuleDelegate == null)) {
                this.onBeginInsertLocationReportRuleDelegate = new BeginOperationDelegate(this.OnBeginInsertLocationReportRule);
            }
            if ((this.onEndInsertLocationReportRuleDelegate == null)) {
                this.onEndInsertLocationReportRuleDelegate = new EndOperationDelegate(this.OnEndInsertLocationReportRule);
            }
            if ((this.onInsertLocationReportRuleCompletedDelegate == null)) {
                this.onInsertLocationReportRuleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertLocationReportRuleCompleted);
            }
            base.InvokeAsync(this.onBeginInsertLocationReportRuleDelegate, new object[] {
                        model}, this.onEndInsertLocationReportRuleDelegate, this.onInsertLocationReportRuleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginUpdateLocationReportRule(Gsafety.PTMS.ServiceReference.CommandManageService.LocationReportRule model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateLocationReportRule(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndUpdateLocationReportRule(System.IAsyncResult result) {
            return base.Channel.EndUpdateLocationReportRule(result);
        }
        
        private System.IAsyncResult OnBeginUpdateLocationReportRule(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.CommandManageService.LocationReportRule model = ((Gsafety.PTMS.ServiceReference.CommandManageService.LocationReportRule)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginUpdateLocationReportRule(model, callback, asyncState);
        }
        
        private object[] OnEndUpdateLocationReportRule(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndUpdateLocationReportRule(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateLocationReportRuleCompleted(object state) {
            if ((this.UpdateLocationReportRuleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateLocationReportRuleCompleted(this, new UpdateLocationReportRuleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateLocationReportRuleAsync(Gsafety.PTMS.ServiceReference.CommandManageService.LocationReportRule model) {
            this.UpdateLocationReportRuleAsync(model, null);
        }
        
        public void UpdateLocationReportRuleAsync(Gsafety.PTMS.ServiceReference.CommandManageService.LocationReportRule model, object userState) {
            if ((this.onBeginUpdateLocationReportRuleDelegate == null)) {
                this.onBeginUpdateLocationReportRuleDelegate = new BeginOperationDelegate(this.OnBeginUpdateLocationReportRule);
            }
            if ((this.onEndUpdateLocationReportRuleDelegate == null)) {
                this.onEndUpdateLocationReportRuleDelegate = new EndOperationDelegate(this.OnEndUpdateLocationReportRule);
            }
            if ((this.onUpdateLocationReportRuleCompletedDelegate == null)) {
                this.onUpdateLocationReportRuleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateLocationReportRuleCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateLocationReportRuleDelegate, new object[] {
                        model}, this.onEndUpdateLocationReportRuleDelegate, this.onUpdateLocationReportRuleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginDeleteLocationReportRuleByID(string ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteLocationReportRuleByID(ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndDeleteLocationReportRuleByID(System.IAsyncResult result) {
            return base.Channel.EndDeleteLocationReportRuleByID(result);
        }
        
        private System.IAsyncResult OnBeginDeleteLocationReportRuleByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ID = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginDeleteLocationReportRuleByID(ID, callback, asyncState);
        }
        
        private object[] OnEndDeleteLocationReportRuleByID(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndDeleteLocationReportRuleByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteLocationReportRuleByIDCompleted(object state) {
            if ((this.DeleteLocationReportRuleByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteLocationReportRuleByIDCompleted(this, new DeleteLocationReportRuleByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteLocationReportRuleByIDAsync(string ID) {
            this.DeleteLocationReportRuleByIDAsync(ID, null);
        }
        
        public void DeleteLocationReportRuleByIDAsync(string ID, object userState) {
            if ((this.onBeginDeleteLocationReportRuleByIDDelegate == null)) {
                this.onBeginDeleteLocationReportRuleByIDDelegate = new BeginOperationDelegate(this.OnBeginDeleteLocationReportRuleByID);
            }
            if ((this.onEndDeleteLocationReportRuleByIDDelegate == null)) {
                this.onEndDeleteLocationReportRuleByIDDelegate = new EndOperationDelegate(this.OnEndDeleteLocationReportRuleByID);
            }
            if ((this.onDeleteLocationReportRuleByIDCompletedDelegate == null)) {
                this.onDeleteLocationReportRuleByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteLocationReportRuleByIDCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteLocationReportRuleByIDDelegate, new object[] {
                        ID}, this.onEndDeleteLocationReportRuleByIDDelegate, this.onDeleteLocationReportRuleByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginGetByNameLocationReportRuleList(Gsafety.PTMS.ServiceReference.CommandManageService.PagingInfo page, string clientID, string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetByNameLocationReportRuleList(page, clientID, name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfLocationReportRulei7Zg_POJ5 Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndGetByNameLocationReportRuleList(System.IAsyncResult result) {
            return base.Channel.EndGetByNameLocationReportRuleList(result);
        }
        
        private System.IAsyncResult OnBeginGetByNameLocationReportRuleList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.CommandManageService.PagingInfo page = ((Gsafety.PTMS.ServiceReference.CommandManageService.PagingInfo)(inValues[0]));
            string clientID = ((string)(inValues[1]));
            string name = ((string)(inValues[2]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginGetByNameLocationReportRuleList(page, clientID, name, callback, asyncState);
        }
        
        private object[] OnEndGetByNameLocationReportRuleList(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfLocationReportRulei7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndGetByNameLocationReportRuleList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetByNameLocationReportRuleListCompleted(object state) {
            if ((this.GetByNameLocationReportRuleListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetByNameLocationReportRuleListCompleted(this, new GetByNameLocationReportRuleListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetByNameLocationReportRuleListAsync(Gsafety.PTMS.ServiceReference.CommandManageService.PagingInfo page, string clientID, string name) {
            this.GetByNameLocationReportRuleListAsync(page, clientID, name, null);
        }
        
        public void GetByNameLocationReportRuleListAsync(Gsafety.PTMS.ServiceReference.CommandManageService.PagingInfo page, string clientID, string name, object userState) {
            if ((this.onBeginGetByNameLocationReportRuleListDelegate == null)) {
                this.onBeginGetByNameLocationReportRuleListDelegate = new BeginOperationDelegate(this.OnBeginGetByNameLocationReportRuleList);
            }
            if ((this.onEndGetByNameLocationReportRuleListDelegate == null)) {
                this.onEndGetByNameLocationReportRuleListDelegate = new EndOperationDelegate(this.OnEndGetByNameLocationReportRuleList);
            }
            if ((this.onGetByNameLocationReportRuleListCompletedDelegate == null)) {
                this.onGetByNameLocationReportRuleListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetByNameLocationReportRuleListCompleted);
            }
            base.InvokeAsync(this.onBeginGetByNameLocationReportRuleListDelegate, new object[] {
                        page,
                        clientID,
                        name}, this.onEndGetByNameLocationReportRuleListDelegate, this.onGetByNameLocationReportRuleListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginInsertVideoRule(Gsafety.PTMS.ServiceReference.CommandManageService.VideoRule model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertVideoRule(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndInsertVideoRule(System.IAsyncResult result) {
            return base.Channel.EndInsertVideoRule(result);
        }
        
        private System.IAsyncResult OnBeginInsertVideoRule(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.CommandManageService.VideoRule model = ((Gsafety.PTMS.ServiceReference.CommandManageService.VideoRule)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginInsertVideoRule(model, callback, asyncState);
        }
        
        private object[] OnEndInsertVideoRule(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndInsertVideoRule(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertVideoRuleCompleted(object state) {
            if ((this.InsertVideoRuleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertVideoRuleCompleted(this, new InsertVideoRuleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertVideoRuleAsync(Gsafety.PTMS.ServiceReference.CommandManageService.VideoRule model) {
            this.InsertVideoRuleAsync(model, null);
        }
        
        public void InsertVideoRuleAsync(Gsafety.PTMS.ServiceReference.CommandManageService.VideoRule model, object userState) {
            if ((this.onBeginInsertVideoRuleDelegate == null)) {
                this.onBeginInsertVideoRuleDelegate = new BeginOperationDelegate(this.OnBeginInsertVideoRule);
            }
            if ((this.onEndInsertVideoRuleDelegate == null)) {
                this.onEndInsertVideoRuleDelegate = new EndOperationDelegate(this.OnEndInsertVideoRule);
            }
            if ((this.onInsertVideoRuleCompletedDelegate == null)) {
                this.onInsertVideoRuleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertVideoRuleCompleted);
            }
            base.InvokeAsync(this.onBeginInsertVideoRuleDelegate, new object[] {
                        model}, this.onEndInsertVideoRuleDelegate, this.onInsertVideoRuleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginUpdateVideoRule(Gsafety.PTMS.ServiceReference.CommandManageService.VideoRule model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateVideoRule(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndUpdateVideoRule(System.IAsyncResult result) {
            return base.Channel.EndUpdateVideoRule(result);
        }
        
        private System.IAsyncResult OnBeginUpdateVideoRule(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.CommandManageService.VideoRule model = ((Gsafety.PTMS.ServiceReference.CommandManageService.VideoRule)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginUpdateVideoRule(model, callback, asyncState);
        }
        
        private object[] OnEndUpdateVideoRule(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndUpdateVideoRule(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateVideoRuleCompleted(object state) {
            if ((this.UpdateVideoRuleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateVideoRuleCompleted(this, new UpdateVideoRuleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateVideoRuleAsync(Gsafety.PTMS.ServiceReference.CommandManageService.VideoRule model) {
            this.UpdateVideoRuleAsync(model, null);
        }
        
        public void UpdateVideoRuleAsync(Gsafety.PTMS.ServiceReference.CommandManageService.VideoRule model, object userState) {
            if ((this.onBeginUpdateVideoRuleDelegate == null)) {
                this.onBeginUpdateVideoRuleDelegate = new BeginOperationDelegate(this.OnBeginUpdateVideoRule);
            }
            if ((this.onEndUpdateVideoRuleDelegate == null)) {
                this.onEndUpdateVideoRuleDelegate = new EndOperationDelegate(this.OnEndUpdateVideoRule);
            }
            if ((this.onUpdateVideoRuleCompletedDelegate == null)) {
                this.onUpdateVideoRuleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateVideoRuleCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateVideoRuleDelegate, new object[] {
                        model}, this.onEndUpdateVideoRuleDelegate, this.onUpdateVideoRuleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginDeleteVideoRuleByID(string ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteVideoRuleByID(ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndDeleteVideoRuleByID(System.IAsyncResult result) {
            return base.Channel.EndDeleteVideoRuleByID(result);
        }
        
        private System.IAsyncResult OnBeginDeleteVideoRuleByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ID = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginDeleteVideoRuleByID(ID, callback, asyncState);
        }
        
        private object[] OnEndDeleteVideoRuleByID(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndDeleteVideoRuleByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteVideoRuleByIDCompleted(object state) {
            if ((this.DeleteVideoRuleByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteVideoRuleByIDCompleted(this, new DeleteVideoRuleByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteVideoRuleByIDAsync(string ID) {
            this.DeleteVideoRuleByIDAsync(ID, null);
        }
        
        public void DeleteVideoRuleByIDAsync(string ID, object userState) {
            if ((this.onBeginDeleteVideoRuleByIDDelegate == null)) {
                this.onBeginDeleteVideoRuleByIDDelegate = new BeginOperationDelegate(this.OnBeginDeleteVideoRuleByID);
            }
            if ((this.onEndDeleteVideoRuleByIDDelegate == null)) {
                this.onEndDeleteVideoRuleByIDDelegate = new EndOperationDelegate(this.OnEndDeleteVideoRuleByID);
            }
            if ((this.onDeleteVideoRuleByIDCompletedDelegate == null)) {
                this.onDeleteVideoRuleByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteVideoRuleByIDCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteVideoRuleByIDDelegate, new object[] {
                        ID}, this.onEndDeleteVideoRuleByIDDelegate, this.onDeleteVideoRuleByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginGetVideoRuleListByName(Gsafety.PTMS.ServiceReference.CommandManageService.PagingInfo page, string clientID, string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVideoRuleListByName(page, clientID, name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVideoRulei7Zg_POJ5 Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndGetVideoRuleListByName(System.IAsyncResult result) {
            return base.Channel.EndGetVideoRuleListByName(result);
        }
        
        private System.IAsyncResult OnBeginGetVideoRuleListByName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.CommandManageService.PagingInfo page = ((Gsafety.PTMS.ServiceReference.CommandManageService.PagingInfo)(inValues[0]));
            string clientID = ((string)(inValues[1]));
            string name = ((string)(inValues[2]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginGetVideoRuleListByName(page, clientID, name, callback, asyncState);
        }
        
        private object[] OnEndGetVideoRuleListByName(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVideoRulei7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndGetVideoRuleListByName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVideoRuleListByNameCompleted(object state) {
            if ((this.GetVideoRuleListByNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVideoRuleListByNameCompleted(this, new GetVideoRuleListByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVideoRuleListByNameAsync(Gsafety.PTMS.ServiceReference.CommandManageService.PagingInfo page, string clientID, string name) {
            this.GetVideoRuleListByNameAsync(page, clientID, name, null);
        }
        
        public void GetVideoRuleListByNameAsync(Gsafety.PTMS.ServiceReference.CommandManageService.PagingInfo page, string clientID, string name, object userState) {
            if ((this.onBeginGetVideoRuleListByNameDelegate == null)) {
                this.onBeginGetVideoRuleListByNameDelegate = new BeginOperationDelegate(this.OnBeginGetVideoRuleListByName);
            }
            if ((this.onEndGetVideoRuleListByNameDelegate == null)) {
                this.onEndGetVideoRuleListByNameDelegate = new EndOperationDelegate(this.OnEndGetVideoRuleListByName);
            }
            if ((this.onGetVideoRuleListByNameCompletedDelegate == null)) {
                this.onGetVideoRuleListByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVideoRuleListByNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetVideoRuleListByNameDelegate, new object[] {
                        page,
                        clientID,
                        name}, this.onEndGetVideoRuleListByNameDelegate, this.onGetVideoRuleListByNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginInsertLocationReportVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.LocationReportVehicle> model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertLocationReportVehicle(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndInsertLocationReportVehicle(System.IAsyncResult result) {
            return base.Channel.EndInsertLocationReportVehicle(result);
        }
        
        private System.IAsyncResult OnBeginInsertLocationReportVehicle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.LocationReportVehicle> model = ((System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.LocationReportVehicle>)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginInsertLocationReportVehicle(model, callback, asyncState);
        }
        
        private object[] OnEndInsertLocationReportVehicle(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndInsertLocationReportVehicle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertLocationReportVehicleCompleted(object state) {
            if ((this.InsertLocationReportVehicleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertLocationReportVehicleCompleted(this, new InsertLocationReportVehicleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertLocationReportVehicleAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.LocationReportVehicle> model) {
            this.InsertLocationReportVehicleAsync(model, null);
        }
        
        public void InsertLocationReportVehicleAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.LocationReportVehicle> model, object userState) {
            if ((this.onBeginInsertLocationReportVehicleDelegate == null)) {
                this.onBeginInsertLocationReportVehicleDelegate = new BeginOperationDelegate(this.OnBeginInsertLocationReportVehicle);
            }
            if ((this.onEndInsertLocationReportVehicleDelegate == null)) {
                this.onEndInsertLocationReportVehicleDelegate = new EndOperationDelegate(this.OnEndInsertLocationReportVehicle);
            }
            if ((this.onInsertLocationReportVehicleCompletedDelegate == null)) {
                this.onInsertLocationReportVehicleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertLocationReportVehicleCompleted);
            }
            base.InvokeAsync(this.onBeginInsertLocationReportVehicleDelegate, new object[] {
                        model}, this.onEndInsertLocationReportVehicleDelegate, this.onInsertLocationReportVehicleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginDeleteLocationReportVehicleByID(string ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteLocationReportVehicleByID(ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndDeleteLocationReportVehicleByID(System.IAsyncResult result) {
            return base.Channel.EndDeleteLocationReportVehicleByID(result);
        }
        
        private System.IAsyncResult OnBeginDeleteLocationReportVehicleByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ID = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginDeleteLocationReportVehicleByID(ID, callback, asyncState);
        }
        
        private object[] OnEndDeleteLocationReportVehicleByID(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndDeleteLocationReportVehicleByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteLocationReportVehicleByIDCompleted(object state) {
            if ((this.DeleteLocationReportVehicleByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteLocationReportVehicleByIDCompleted(this, new DeleteLocationReportVehicleByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteLocationReportVehicleByIDAsync(string ID) {
            this.DeleteLocationReportVehicleByIDAsync(ID, null);
        }
        
        public void DeleteLocationReportVehicleByIDAsync(string ID, object userState) {
            if ((this.onBeginDeleteLocationReportVehicleByIDDelegate == null)) {
                this.onBeginDeleteLocationReportVehicleByIDDelegate = new BeginOperationDelegate(this.OnBeginDeleteLocationReportVehicleByID);
            }
            if ((this.onEndDeleteLocationReportVehicleByIDDelegate == null)) {
                this.onEndDeleteLocationReportVehicleByIDDelegate = new EndOperationDelegate(this.OnEndDeleteLocationReportVehicleByID);
            }
            if ((this.onDeleteLocationReportVehicleByIDCompletedDelegate == null)) {
                this.onDeleteLocationReportVehicleByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteLocationReportVehicleByIDCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteLocationReportVehicleByIDDelegate, new object[] {
                        ID}, this.onEndDeleteLocationReportVehicleByIDDelegate, this.onDeleteLocationReportVehicleByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginGetLocationReportVehicleListByLocationReportID(string clientID, string locationReportID, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLocationReportVehicleListByLocationReportID(clientID, locationReportID, pageIndex, pageSize, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfLocationReportVehiclei7Zg_POJ5 Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndGetLocationReportVehicleListByLocationReportID(System.IAsyncResult result) {
            return base.Channel.EndGetLocationReportVehicleListByLocationReportID(result);
        }
        
        private System.IAsyncResult OnBeginGetLocationReportVehicleListByLocationReportID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            string locationReportID = ((string)(inValues[1]));
            int pageIndex = ((int)(inValues[2]));
            int pageSize = ((int)(inValues[3]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginGetLocationReportVehicleListByLocationReportID(clientID, locationReportID, pageIndex, pageSize, callback, asyncState);
        }
        
        private object[] OnEndGetLocationReportVehicleListByLocationReportID(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfLocationReportVehiclei7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndGetLocationReportVehicleListByLocationReportID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLocationReportVehicleListByLocationReportIDCompleted(object state) {
            if ((this.GetLocationReportVehicleListByLocationReportIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLocationReportVehicleListByLocationReportIDCompleted(this, new GetLocationReportVehicleListByLocationReportIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLocationReportVehicleListByLocationReportIDAsync(string clientID, string locationReportID, int pageIndex, int pageSize) {
            this.GetLocationReportVehicleListByLocationReportIDAsync(clientID, locationReportID, pageIndex, pageSize, null);
        }
        
        public void GetLocationReportVehicleListByLocationReportIDAsync(string clientID, string locationReportID, int pageIndex, int pageSize, object userState) {
            if ((this.onBeginGetLocationReportVehicleListByLocationReportIDDelegate == null)) {
                this.onBeginGetLocationReportVehicleListByLocationReportIDDelegate = new BeginOperationDelegate(this.OnBeginGetLocationReportVehicleListByLocationReportID);
            }
            if ((this.onEndGetLocationReportVehicleListByLocationReportIDDelegate == null)) {
                this.onEndGetLocationReportVehicleListByLocationReportIDDelegate = new EndOperationDelegate(this.OnEndGetLocationReportVehicleListByLocationReportID);
            }
            if ((this.onGetLocationReportVehicleListByLocationReportIDCompletedDelegate == null)) {
                this.onGetLocationReportVehicleListByLocationReportIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLocationReportVehicleListByLocationReportIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetLocationReportVehicleListByLocationReportIDDelegate, new object[] {
                        clientID,
                        locationReportID,
                        pageIndex,
                        pageSize}, this.onEndGetLocationReportVehicleListByLocationReportIDDelegate, this.onGetLocationReportVehicleListByLocationReportIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginGetAllLocationReportVehicleListByLocationReportID(string clientID, string locationReportID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllLocationReportVehicleListByLocationReportID(clientID, locationReportID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfLocationReportVehiclei7Zg_POJ5 Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndGetAllLocationReportVehicleListByLocationReportID(System.IAsyncResult result) {
            return base.Channel.EndGetAllLocationReportVehicleListByLocationReportID(result);
        }
        
        private System.IAsyncResult OnBeginGetAllLocationReportVehicleListByLocationReportID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            string locationReportID = ((string)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginGetAllLocationReportVehicleListByLocationReportID(clientID, locationReportID, callback, asyncState);
        }
        
        private object[] OnEndGetAllLocationReportVehicleListByLocationReportID(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfLocationReportVehiclei7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndGetAllLocationReportVehicleListByLocationReportID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllLocationReportVehicleListByLocationReportIDCompleted(object state) {
            if ((this.GetAllLocationReportVehicleListByLocationReportIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllLocationReportVehicleListByLocationReportIDCompleted(this, new GetAllLocationReportVehicleListByLocationReportIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllLocationReportVehicleListByLocationReportIDAsync(string clientID, string locationReportID) {
            this.GetAllLocationReportVehicleListByLocationReportIDAsync(clientID, locationReportID, null);
        }
        
        public void GetAllLocationReportVehicleListByLocationReportIDAsync(string clientID, string locationReportID, object userState) {
            if ((this.onBeginGetAllLocationReportVehicleListByLocationReportIDDelegate == null)) {
                this.onBeginGetAllLocationReportVehicleListByLocationReportIDDelegate = new BeginOperationDelegate(this.OnBeginGetAllLocationReportVehicleListByLocationReportID);
            }
            if ((this.onEndGetAllLocationReportVehicleListByLocationReportIDDelegate == null)) {
                this.onEndGetAllLocationReportVehicleListByLocationReportIDDelegate = new EndOperationDelegate(this.OnEndGetAllLocationReportVehicleListByLocationReportID);
            }
            if ((this.onGetAllLocationReportVehicleListByLocationReportIDCompletedDelegate == null)) {
                this.onGetAllLocationReportVehicleListByLocationReportIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllLocationReportVehicleListByLocationReportIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllLocationReportVehicleListByLocationReportIDDelegate, new object[] {
                        clientID,
                        locationReportID}, this.onEndGetAllLocationReportVehicleListByLocationReportIDDelegate, this.onGetAllLocationReportVehicleListByLocationReportIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginDeliverLocationReportRuleToVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.LocationReportVehicle> vehicles, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeliverLocationReportRuleToVehicle(vehicles, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndDeliverLocationReportRuleToVehicle(System.IAsyncResult result) {
            return base.Channel.EndDeliverLocationReportRuleToVehicle(result);
        }
        
        private System.IAsyncResult OnBeginDeliverLocationReportRuleToVehicle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.LocationReportVehicle> vehicles = ((System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.LocationReportVehicle>)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginDeliverLocationReportRuleToVehicle(vehicles, callback, asyncState);
        }
        
        private object[] OnEndDeliverLocationReportRuleToVehicle(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndDeliverLocationReportRuleToVehicle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeliverLocationReportRuleToVehicleCompleted(object state) {
            if ((this.DeliverLocationReportRuleToVehicleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeliverLocationReportRuleToVehicleCompleted(this, new DeliverLocationReportRuleToVehicleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeliverLocationReportRuleToVehicleAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.LocationReportVehicle> vehicles) {
            this.DeliverLocationReportRuleToVehicleAsync(vehicles, null);
        }
        
        public void DeliverLocationReportRuleToVehicleAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.LocationReportVehicle> vehicles, object userState) {
            if ((this.onBeginDeliverLocationReportRuleToVehicleDelegate == null)) {
                this.onBeginDeliverLocationReportRuleToVehicleDelegate = new BeginOperationDelegate(this.OnBeginDeliverLocationReportRuleToVehicle);
            }
            if ((this.onEndDeliverLocationReportRuleToVehicleDelegate == null)) {
                this.onEndDeliverLocationReportRuleToVehicleDelegate = new EndOperationDelegate(this.OnEndDeliverLocationReportRuleToVehicle);
            }
            if ((this.onDeliverLocationReportRuleToVehicleCompletedDelegate == null)) {
                this.onDeliverLocationReportRuleToVehicleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeliverLocationReportRuleToVehicleCompleted);
            }
            base.InvokeAsync(this.onBeginDeliverLocationReportRuleToVehicleDelegate, new object[] {
                        vehicles}, this.onEndDeliverLocationReportRuleToVehicleDelegate, this.onDeliverLocationReportRuleToVehicleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginInsertVideoRuleVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.VideoRuleVehicle> models, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertVideoRuleVehicle(models, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndInsertVideoRuleVehicle(System.IAsyncResult result) {
            return base.Channel.EndInsertVideoRuleVehicle(result);
        }
        
        private System.IAsyncResult OnBeginInsertVideoRuleVehicle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.VideoRuleVehicle> models = ((System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.VideoRuleVehicle>)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginInsertVideoRuleVehicle(models, callback, asyncState);
        }
        
        private object[] OnEndInsertVideoRuleVehicle(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndInsertVideoRuleVehicle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertVideoRuleVehicleCompleted(object state) {
            if ((this.InsertVideoRuleVehicleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertVideoRuleVehicleCompleted(this, new InsertVideoRuleVehicleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertVideoRuleVehicleAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.VideoRuleVehicle> models) {
            this.InsertVideoRuleVehicleAsync(models, null);
        }
        
        public void InsertVideoRuleVehicleAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.VideoRuleVehicle> models, object userState) {
            if ((this.onBeginInsertVideoRuleVehicleDelegate == null)) {
                this.onBeginInsertVideoRuleVehicleDelegate = new BeginOperationDelegate(this.OnBeginInsertVideoRuleVehicle);
            }
            if ((this.onEndInsertVideoRuleVehicleDelegate == null)) {
                this.onEndInsertVideoRuleVehicleDelegate = new EndOperationDelegate(this.OnEndInsertVideoRuleVehicle);
            }
            if ((this.onInsertVideoRuleVehicleCompletedDelegate == null)) {
                this.onInsertVideoRuleVehicleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertVideoRuleVehicleCompleted);
            }
            base.InvokeAsync(this.onBeginInsertVideoRuleVehicleDelegate, new object[] {
                        models}, this.onEndInsertVideoRuleVehicleDelegate, this.onInsertVideoRuleVehicleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginDeleteVideoRuleVehicleByID(string ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteVideoRuleVehicleByID(ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndDeleteVideoRuleVehicleByID(System.IAsyncResult result) {
            return base.Channel.EndDeleteVideoRuleVehicleByID(result);
        }
        
        private System.IAsyncResult OnBeginDeleteVideoRuleVehicleByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ID = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginDeleteVideoRuleVehicleByID(ID, callback, asyncState);
        }
        
        private object[] OnEndDeleteVideoRuleVehicleByID(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndDeleteVideoRuleVehicleByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteVideoRuleVehicleByIDCompleted(object state) {
            if ((this.DeleteVideoRuleVehicleByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteVideoRuleVehicleByIDCompleted(this, new DeleteVideoRuleVehicleByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteVideoRuleVehicleByIDAsync(string ID) {
            this.DeleteVideoRuleVehicleByIDAsync(ID, null);
        }
        
        public void DeleteVideoRuleVehicleByIDAsync(string ID, object userState) {
            if ((this.onBeginDeleteVideoRuleVehicleByIDDelegate == null)) {
                this.onBeginDeleteVideoRuleVehicleByIDDelegate = new BeginOperationDelegate(this.OnBeginDeleteVideoRuleVehicleByID);
            }
            if ((this.onEndDeleteVideoRuleVehicleByIDDelegate == null)) {
                this.onEndDeleteVideoRuleVehicleByIDDelegate = new EndOperationDelegate(this.OnEndDeleteVideoRuleVehicleByID);
            }
            if ((this.onDeleteVideoRuleVehicleByIDCompletedDelegate == null)) {
                this.onDeleteVideoRuleVehicleByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteVideoRuleVehicleByIDCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteVideoRuleVehicleByIDDelegate, new object[] {
                        ID}, this.onEndDeleteVideoRuleVehicleByIDDelegate, this.onDeleteVideoRuleVehicleByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginGetVideoRuleVehicleListByVideoRuleID(string clientID, string locationReportID, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVideoRuleVehicleListByVideoRuleID(clientID, locationReportID, pageIndex, pageSize, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVideoRuleVehiclei7Zg_POJ5 Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndGetVideoRuleVehicleListByVideoRuleID(System.IAsyncResult result) {
            return base.Channel.EndGetVideoRuleVehicleListByVideoRuleID(result);
        }
        
        private System.IAsyncResult OnBeginGetVideoRuleVehicleListByVideoRuleID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            string locationReportID = ((string)(inValues[1]));
            int pageIndex = ((int)(inValues[2]));
            int pageSize = ((int)(inValues[3]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginGetVideoRuleVehicleListByVideoRuleID(clientID, locationReportID, pageIndex, pageSize, callback, asyncState);
        }
        
        private object[] OnEndGetVideoRuleVehicleListByVideoRuleID(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVideoRuleVehiclei7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndGetVideoRuleVehicleListByVideoRuleID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVideoRuleVehicleListByVideoRuleIDCompleted(object state) {
            if ((this.GetVideoRuleVehicleListByVideoRuleIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVideoRuleVehicleListByVideoRuleIDCompleted(this, new GetVideoRuleVehicleListByVideoRuleIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVideoRuleVehicleListByVideoRuleIDAsync(string clientID, string locationReportID, int pageIndex, int pageSize) {
            this.GetVideoRuleVehicleListByVideoRuleIDAsync(clientID, locationReportID, pageIndex, pageSize, null);
        }
        
        public void GetVideoRuleVehicleListByVideoRuleIDAsync(string clientID, string locationReportID, int pageIndex, int pageSize, object userState) {
            if ((this.onBeginGetVideoRuleVehicleListByVideoRuleIDDelegate == null)) {
                this.onBeginGetVideoRuleVehicleListByVideoRuleIDDelegate = new BeginOperationDelegate(this.OnBeginGetVideoRuleVehicleListByVideoRuleID);
            }
            if ((this.onEndGetVideoRuleVehicleListByVideoRuleIDDelegate == null)) {
                this.onEndGetVideoRuleVehicleListByVideoRuleIDDelegate = new EndOperationDelegate(this.OnEndGetVideoRuleVehicleListByVideoRuleID);
            }
            if ((this.onGetVideoRuleVehicleListByVideoRuleIDCompletedDelegate == null)) {
                this.onGetVideoRuleVehicleListByVideoRuleIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVideoRuleVehicleListByVideoRuleIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetVideoRuleVehicleListByVideoRuleIDDelegate, new object[] {
                        clientID,
                        locationReportID,
                        pageIndex,
                        pageSize}, this.onEndGetVideoRuleVehicleListByVideoRuleIDDelegate, this.onGetVideoRuleVehicleListByVideoRuleIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginGetAllVideoRuleVehicleListByVideoRuleID(string clientID, string locationReportID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllVideoRuleVehicleListByVideoRuleID(clientID, locationReportID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVideoRuleVehiclei7Zg_POJ5 Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndGetAllVideoRuleVehicleListByVideoRuleID(System.IAsyncResult result) {
            return base.Channel.EndGetAllVideoRuleVehicleListByVideoRuleID(result);
        }
        
        private System.IAsyncResult OnBeginGetAllVideoRuleVehicleListByVideoRuleID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            string locationReportID = ((string)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginGetAllVideoRuleVehicleListByVideoRuleID(clientID, locationReportID, callback, asyncState);
        }
        
        private object[] OnEndGetAllVideoRuleVehicleListByVideoRuleID(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVideoRuleVehiclei7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndGetAllVideoRuleVehicleListByVideoRuleID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllVideoRuleVehicleListByVideoRuleIDCompleted(object state) {
            if ((this.GetAllVideoRuleVehicleListByVideoRuleIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllVideoRuleVehicleListByVideoRuleIDCompleted(this, new GetAllVideoRuleVehicleListByVideoRuleIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllVideoRuleVehicleListByVideoRuleIDAsync(string clientID, string locationReportID) {
            this.GetAllVideoRuleVehicleListByVideoRuleIDAsync(clientID, locationReportID, null);
        }
        
        public void GetAllVideoRuleVehicleListByVideoRuleIDAsync(string clientID, string locationReportID, object userState) {
            if ((this.onBeginGetAllVideoRuleVehicleListByVideoRuleIDDelegate == null)) {
                this.onBeginGetAllVideoRuleVehicleListByVideoRuleIDDelegate = new BeginOperationDelegate(this.OnBeginGetAllVideoRuleVehicleListByVideoRuleID);
            }
            if ((this.onEndGetAllVideoRuleVehicleListByVideoRuleIDDelegate == null)) {
                this.onEndGetAllVideoRuleVehicleListByVideoRuleIDDelegate = new EndOperationDelegate(this.OnEndGetAllVideoRuleVehicleListByVideoRuleID);
            }
            if ((this.onGetAllVideoRuleVehicleListByVideoRuleIDCompletedDelegate == null)) {
                this.onGetAllVideoRuleVehicleListByVideoRuleIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllVideoRuleVehicleListByVideoRuleIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllVideoRuleVehicleListByVideoRuleIDDelegate, new object[] {
                        clientID,
                        locationReportID}, this.onEndGetAllVideoRuleVehicleListByVideoRuleIDDelegate, this.onGetAllVideoRuleVehicleListByVideoRuleIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginDeliverVideoRuleToVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.VideoRuleVehicle> vehicles, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeliverVideoRuleToVehicle(vehicles, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndDeliverVideoRuleToVehicle(System.IAsyncResult result) {
            return base.Channel.EndDeliverVideoRuleToVehicle(result);
        }
        
        private System.IAsyncResult OnBeginDeliverVideoRuleToVehicle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.VideoRuleVehicle> vehicles = ((System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.VideoRuleVehicle>)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginDeliverVideoRuleToVehicle(vehicles, callback, asyncState);
        }
        
        private object[] OnEndDeliverVideoRuleToVehicle(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndDeliverVideoRuleToVehicle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeliverVideoRuleToVehicleCompleted(object state) {
            if ((this.DeliverVideoRuleToVehicleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeliverVideoRuleToVehicleCompleted(this, new DeliverVideoRuleToVehicleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeliverVideoRuleToVehicleAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.VideoRuleVehicle> vehicles) {
            this.DeliverVideoRuleToVehicleAsync(vehicles, null);
        }
        
        public void DeliverVideoRuleToVehicleAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.VideoRuleVehicle> vehicles, object userState) {
            if ((this.onBeginDeliverVideoRuleToVehicleDelegate == null)) {
                this.onBeginDeliverVideoRuleToVehicleDelegate = new BeginOperationDelegate(this.OnBeginDeliverVideoRuleToVehicle);
            }
            if ((this.onEndDeliverVideoRuleToVehicleDelegate == null)) {
                this.onEndDeliverVideoRuleToVehicleDelegate = new EndOperationDelegate(this.OnEndDeliverVideoRuleToVehicle);
            }
            if ((this.onDeliverVideoRuleToVehicleCompletedDelegate == null)) {
                this.onDeliverVideoRuleToVehicleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeliverVideoRuleToVehicleCompleted);
            }
            base.InvokeAsync(this.onBeginDeliverVideoRuleToVehicleDelegate, new object[] {
                        vehicles}, this.onEndDeliverVideoRuleToVehicleDelegate, this.onDeliverVideoRuleToVehicleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginInsertSpeedLimit(Gsafety.PTMS.ServiceReference.CommandManageService.SpeedLimit model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertSpeedLimit(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndInsertSpeedLimit(System.IAsyncResult result) {
            return base.Channel.EndInsertSpeedLimit(result);
        }
        
        private System.IAsyncResult OnBeginInsertSpeedLimit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.CommandManageService.SpeedLimit model = ((Gsafety.PTMS.ServiceReference.CommandManageService.SpeedLimit)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginInsertSpeedLimit(model, callback, asyncState);
        }
        
        private object[] OnEndInsertSpeedLimit(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndInsertSpeedLimit(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertSpeedLimitCompleted(object state) {
            if ((this.InsertSpeedLimitCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertSpeedLimitCompleted(this, new InsertSpeedLimitCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertSpeedLimitAsync(Gsafety.PTMS.ServiceReference.CommandManageService.SpeedLimit model) {
            this.InsertSpeedLimitAsync(model, null);
        }
        
        public void InsertSpeedLimitAsync(Gsafety.PTMS.ServiceReference.CommandManageService.SpeedLimit model, object userState) {
            if ((this.onBeginInsertSpeedLimitDelegate == null)) {
                this.onBeginInsertSpeedLimitDelegate = new BeginOperationDelegate(this.OnBeginInsertSpeedLimit);
            }
            if ((this.onEndInsertSpeedLimitDelegate == null)) {
                this.onEndInsertSpeedLimitDelegate = new EndOperationDelegate(this.OnEndInsertSpeedLimit);
            }
            if ((this.onInsertSpeedLimitCompletedDelegate == null)) {
                this.onInsertSpeedLimitCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertSpeedLimitCompleted);
            }
            base.InvokeAsync(this.onBeginInsertSpeedLimitDelegate, new object[] {
                        model}, this.onEndInsertSpeedLimitDelegate, this.onInsertSpeedLimitCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginUpdateSpeedLimit(Gsafety.PTMS.ServiceReference.CommandManageService.SpeedLimit model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateSpeedLimit(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndUpdateSpeedLimit(System.IAsyncResult result) {
            return base.Channel.EndUpdateSpeedLimit(result);
        }
        
        private System.IAsyncResult OnBeginUpdateSpeedLimit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.CommandManageService.SpeedLimit model = ((Gsafety.PTMS.ServiceReference.CommandManageService.SpeedLimit)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginUpdateSpeedLimit(model, callback, asyncState);
        }
        
        private object[] OnEndUpdateSpeedLimit(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndUpdateSpeedLimit(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateSpeedLimitCompleted(object state) {
            if ((this.UpdateSpeedLimitCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateSpeedLimitCompleted(this, new UpdateSpeedLimitCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateSpeedLimitAsync(Gsafety.PTMS.ServiceReference.CommandManageService.SpeedLimit model) {
            this.UpdateSpeedLimitAsync(model, null);
        }
        
        public void UpdateSpeedLimitAsync(Gsafety.PTMS.ServiceReference.CommandManageService.SpeedLimit model, object userState) {
            if ((this.onBeginUpdateSpeedLimitDelegate == null)) {
                this.onBeginUpdateSpeedLimitDelegate = new BeginOperationDelegate(this.OnBeginUpdateSpeedLimit);
            }
            if ((this.onEndUpdateSpeedLimitDelegate == null)) {
                this.onEndUpdateSpeedLimitDelegate = new EndOperationDelegate(this.OnEndUpdateSpeedLimit);
            }
            if ((this.onUpdateSpeedLimitCompletedDelegate == null)) {
                this.onUpdateSpeedLimitCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateSpeedLimitCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateSpeedLimitDelegate, new object[] {
                        model}, this.onEndUpdateSpeedLimitDelegate, this.onUpdateSpeedLimitCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginDeleteSpeedLimitByID(string ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteSpeedLimitByID(ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndDeleteSpeedLimitByID(System.IAsyncResult result) {
            return base.Channel.EndDeleteSpeedLimitByID(result);
        }
        
        private System.IAsyncResult OnBeginDeleteSpeedLimitByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ID = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginDeleteSpeedLimitByID(ID, callback, asyncState);
        }
        
        private object[] OnEndDeleteSpeedLimitByID(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndDeleteSpeedLimitByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteSpeedLimitByIDCompleted(object state) {
            if ((this.DeleteSpeedLimitByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteSpeedLimitByIDCompleted(this, new DeleteSpeedLimitByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteSpeedLimitByIDAsync(string ID) {
            this.DeleteSpeedLimitByIDAsync(ID, null);
        }
        
        public void DeleteSpeedLimitByIDAsync(string ID, object userState) {
            if ((this.onBeginDeleteSpeedLimitByIDDelegate == null)) {
                this.onBeginDeleteSpeedLimitByIDDelegate = new BeginOperationDelegate(this.OnBeginDeleteSpeedLimitByID);
            }
            if ((this.onEndDeleteSpeedLimitByIDDelegate == null)) {
                this.onEndDeleteSpeedLimitByIDDelegate = new EndOperationDelegate(this.OnEndDeleteSpeedLimitByID);
            }
            if ((this.onDeleteSpeedLimitByIDCompletedDelegate == null)) {
                this.onDeleteSpeedLimitByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteSpeedLimitByIDCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteSpeedLimitByIDDelegate, new object[] {
                        ID}, this.onEndDeleteSpeedLimitByIDDelegate, this.onDeleteSpeedLimitByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginGetSpeedLimitListByName(string clientID, string name, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSpeedLimitListByName(clientID, name, pageIndex, pageSize, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfSpeedLimiti7Zg_POJ5 Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndGetSpeedLimitListByName(System.IAsyncResult result) {
            return base.Channel.EndGetSpeedLimitListByName(result);
        }
        
        private System.IAsyncResult OnBeginGetSpeedLimitListByName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            string name = ((string)(inValues[1]));
            int pageIndex = ((int)(inValues[2]));
            int pageSize = ((int)(inValues[3]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginGetSpeedLimitListByName(clientID, name, pageIndex, pageSize, callback, asyncState);
        }
        
        private object[] OnEndGetSpeedLimitListByName(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfSpeedLimiti7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndGetSpeedLimitListByName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSpeedLimitListByNameCompleted(object state) {
            if ((this.GetSpeedLimitListByNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSpeedLimitListByNameCompleted(this, new GetSpeedLimitListByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSpeedLimitListByNameAsync(string clientID, string name, int pageIndex, int pageSize) {
            this.GetSpeedLimitListByNameAsync(clientID, name, pageIndex, pageSize, null);
        }
        
        public void GetSpeedLimitListByNameAsync(string clientID, string name, int pageIndex, int pageSize, object userState) {
            if ((this.onBeginGetSpeedLimitListByNameDelegate == null)) {
                this.onBeginGetSpeedLimitListByNameDelegate = new BeginOperationDelegate(this.OnBeginGetSpeedLimitListByName);
            }
            if ((this.onEndGetSpeedLimitListByNameDelegate == null)) {
                this.onEndGetSpeedLimitListByNameDelegate = new EndOperationDelegate(this.OnEndGetSpeedLimitListByName);
            }
            if ((this.onGetSpeedLimitListByNameCompletedDelegate == null)) {
                this.onGetSpeedLimitListByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSpeedLimitListByNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetSpeedLimitListByNameDelegate, new object[] {
                        clientID,
                        name,
                        pageIndex,
                        pageSize}, this.onEndGetSpeedLimitListByNameDelegate, this.onGetSpeedLimitListByNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginInsertVehicleSpeed(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.VehicleSpeed> models, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertVehicleSpeed(models, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndInsertVehicleSpeed(System.IAsyncResult result) {
            return base.Channel.EndInsertVehicleSpeed(result);
        }
        
        private System.IAsyncResult OnBeginInsertVehicleSpeed(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.VehicleSpeed> models = ((System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.VehicleSpeed>)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginInsertVehicleSpeed(models, callback, asyncState);
        }
        
        private object[] OnEndInsertVehicleSpeed(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndInsertVehicleSpeed(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertVehicleSpeedCompleted(object state) {
            if ((this.InsertVehicleSpeedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertVehicleSpeedCompleted(this, new InsertVehicleSpeedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertVehicleSpeedAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.VehicleSpeed> models) {
            this.InsertVehicleSpeedAsync(models, null);
        }
        
        public void InsertVehicleSpeedAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.VehicleSpeed> models, object userState) {
            if ((this.onBeginInsertVehicleSpeedDelegate == null)) {
                this.onBeginInsertVehicleSpeedDelegate = new BeginOperationDelegate(this.OnBeginInsertVehicleSpeed);
            }
            if ((this.onEndInsertVehicleSpeedDelegate == null)) {
                this.onEndInsertVehicleSpeedDelegate = new EndOperationDelegate(this.OnEndInsertVehicleSpeed);
            }
            if ((this.onInsertVehicleSpeedCompletedDelegate == null)) {
                this.onInsertVehicleSpeedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertVehicleSpeedCompleted);
            }
            base.InvokeAsync(this.onBeginInsertVehicleSpeedDelegate, new object[] {
                        models}, this.onEndInsertVehicleSpeedDelegate, this.onInsertVehicleSpeedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginDeleteVehicleSpeedByID(string ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteVehicleSpeedByID(ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndDeleteVehicleSpeedByID(System.IAsyncResult result) {
            return base.Channel.EndDeleteVehicleSpeedByID(result);
        }
        
        private System.IAsyncResult OnBeginDeleteVehicleSpeedByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ID = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginDeleteVehicleSpeedByID(ID, callback, asyncState);
        }
        
        private object[] OnEndDeleteVehicleSpeedByID(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndDeleteVehicleSpeedByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteVehicleSpeedByIDCompleted(object state) {
            if ((this.DeleteVehicleSpeedByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteVehicleSpeedByIDCompleted(this, new DeleteVehicleSpeedByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteVehicleSpeedByIDAsync(string ID) {
            this.DeleteVehicleSpeedByIDAsync(ID, null);
        }
        
        public void DeleteVehicleSpeedByIDAsync(string ID, object userState) {
            if ((this.onBeginDeleteVehicleSpeedByIDDelegate == null)) {
                this.onBeginDeleteVehicleSpeedByIDDelegate = new BeginOperationDelegate(this.OnBeginDeleteVehicleSpeedByID);
            }
            if ((this.onEndDeleteVehicleSpeedByIDDelegate == null)) {
                this.onEndDeleteVehicleSpeedByIDDelegate = new EndOperationDelegate(this.OnEndDeleteVehicleSpeedByID);
            }
            if ((this.onDeleteVehicleSpeedByIDCompletedDelegate == null)) {
                this.onDeleteVehicleSpeedByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteVehicleSpeedByIDCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteVehicleSpeedByIDDelegate, new object[] {
                        ID}, this.onEndDeleteVehicleSpeedByIDDelegate, this.onDeleteVehicleSpeedByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginGetAllVehicleSpeedListBySpeedID(string clientID, string speedID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllVehicleSpeedListBySpeedID(clientID, speedID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVehicleSpeedi7Zg_POJ5 Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndGetAllVehicleSpeedListBySpeedID(System.IAsyncResult result) {
            return base.Channel.EndGetAllVehicleSpeedListBySpeedID(result);
        }
        
        private System.IAsyncResult OnBeginGetAllVehicleSpeedListBySpeedID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            string speedID = ((string)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginGetAllVehicleSpeedListBySpeedID(clientID, speedID, callback, asyncState);
        }
        
        private object[] OnEndGetAllVehicleSpeedListBySpeedID(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVehicleSpeedi7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndGetAllVehicleSpeedListBySpeedID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllVehicleSpeedListBySpeedIDCompleted(object state) {
            if ((this.GetAllVehicleSpeedListBySpeedIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllVehicleSpeedListBySpeedIDCompleted(this, new GetAllVehicleSpeedListBySpeedIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllVehicleSpeedListBySpeedIDAsync(string clientID, string speedID) {
            this.GetAllVehicleSpeedListBySpeedIDAsync(clientID, speedID, null);
        }
        
        public void GetAllVehicleSpeedListBySpeedIDAsync(string clientID, string speedID, object userState) {
            if ((this.onBeginGetAllVehicleSpeedListBySpeedIDDelegate == null)) {
                this.onBeginGetAllVehicleSpeedListBySpeedIDDelegate = new BeginOperationDelegate(this.OnBeginGetAllVehicleSpeedListBySpeedID);
            }
            if ((this.onEndGetAllVehicleSpeedListBySpeedIDDelegate == null)) {
                this.onEndGetAllVehicleSpeedListBySpeedIDDelegate = new EndOperationDelegate(this.OnEndGetAllVehicleSpeedListBySpeedID);
            }
            if ((this.onGetAllVehicleSpeedListBySpeedIDCompletedDelegate == null)) {
                this.onGetAllVehicleSpeedListBySpeedIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllVehicleSpeedListBySpeedIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllVehicleSpeedListBySpeedIDDelegate, new object[] {
                        clientID,
                        speedID}, this.onEndGetAllVehicleSpeedListBySpeedIDDelegate, this.onGetAllVehicleSpeedListBySpeedIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginGetVehicleSpeedListBySpeedID(string clientID, string speedID, string vehicleName, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVehicleSpeedListBySpeedID(clientID, speedID, vehicleName, pageIndex, pageSize, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVehicleSpeedi7Zg_POJ5 Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndGetVehicleSpeedListBySpeedID(System.IAsyncResult result) {
            return base.Channel.EndGetVehicleSpeedListBySpeedID(result);
        }
        
        private System.IAsyncResult OnBeginGetVehicleSpeedListBySpeedID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            string speedID = ((string)(inValues[1]));
            string vehicleName = ((string)(inValues[2]));
            int pageIndex = ((int)(inValues[3]));
            int pageSize = ((int)(inValues[4]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginGetVehicleSpeedListBySpeedID(clientID, speedID, vehicleName, pageIndex, pageSize, callback, asyncState);
        }
        
        private object[] OnEndGetVehicleSpeedListBySpeedID(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVehicleSpeedi7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndGetVehicleSpeedListBySpeedID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVehicleSpeedListBySpeedIDCompleted(object state) {
            if ((this.GetVehicleSpeedListBySpeedIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVehicleSpeedListBySpeedIDCompleted(this, new GetVehicleSpeedListBySpeedIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVehicleSpeedListBySpeedIDAsync(string clientID, string speedID, string vehicleName, int pageIndex, int pageSize) {
            this.GetVehicleSpeedListBySpeedIDAsync(clientID, speedID, vehicleName, pageIndex, pageSize, null);
        }
        
        public void GetVehicleSpeedListBySpeedIDAsync(string clientID, string speedID, string vehicleName, int pageIndex, int pageSize, object userState) {
            if ((this.onBeginGetVehicleSpeedListBySpeedIDDelegate == null)) {
                this.onBeginGetVehicleSpeedListBySpeedIDDelegate = new BeginOperationDelegate(this.OnBeginGetVehicleSpeedListBySpeedID);
            }
            if ((this.onEndGetVehicleSpeedListBySpeedIDDelegate == null)) {
                this.onEndGetVehicleSpeedListBySpeedIDDelegate = new EndOperationDelegate(this.OnEndGetVehicleSpeedListBySpeedID);
            }
            if ((this.onGetVehicleSpeedListBySpeedIDCompletedDelegate == null)) {
                this.onGetVehicleSpeedListBySpeedIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVehicleSpeedListBySpeedIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetVehicleSpeedListBySpeedIDDelegate, new object[] {
                        clientID,
                        speedID,
                        vehicleName,
                        pageIndex,
                        pageSize}, this.onEndGetVehicleSpeedListBySpeedIDDelegate, this.onGetVehicleSpeedListBySpeedIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.BeginDeliverSpeedLimitToVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.VehicleSpeed> vehicles, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeliverSpeedLimitToVehicle(vehicles, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService.EndDeliverSpeedLimitToVehicle(System.IAsyncResult result) {
            return base.Channel.EndDeliverSpeedLimitToVehicle(result);
        }
        
        private System.IAsyncResult OnBeginDeliverSpeedLimitToVehicle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.VehicleSpeed> vehicles = ((System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.VehicleSpeed>)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).BeginDeliverSpeedLimitToVehicle(vehicles, callback, asyncState);
        }
        
        private object[] OnEndDeliverSpeedLimitToVehicle(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService)(this)).EndDeliverSpeedLimitToVehicle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeliverSpeedLimitToVehicleCompleted(object state) {
            if ((this.DeliverSpeedLimitToVehicleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeliverSpeedLimitToVehicleCompleted(this, new DeliverSpeedLimitToVehicleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeliverSpeedLimitToVehicleAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.VehicleSpeed> vehicles) {
            this.DeliverSpeedLimitToVehicleAsync(vehicles, null);
        }
        
        public void DeliverSpeedLimitToVehicleAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.VehicleSpeed> vehicles, object userState) {
            if ((this.onBeginDeliverSpeedLimitToVehicleDelegate == null)) {
                this.onBeginDeliverSpeedLimitToVehicleDelegate = new BeginOperationDelegate(this.OnBeginDeliverSpeedLimitToVehicle);
            }
            if ((this.onEndDeliverSpeedLimitToVehicleDelegate == null)) {
                this.onEndDeliverSpeedLimitToVehicleDelegate = new EndOperationDelegate(this.OnEndDeliverSpeedLimitToVehicle);
            }
            if ((this.onDeliverSpeedLimitToVehicleCompletedDelegate == null)) {
                this.onDeliverSpeedLimitToVehicleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeliverSpeedLimitToVehicleCompleted);
            }
            base.InvokeAsync(this.onBeginDeliverSpeedLimitToVehicleDelegate, new object[] {
                        vehicles}, this.onEndDeliverSpeedLimitToVehicleDelegate, this.onDeliverSpeedLimitToVehicleCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService CreateChannel() {
            return new CommandManageServiceClientChannel(this);
        }
        
        private class CommandManageServiceClientChannel : ChannelBase<Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService>, Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService {
            
            public CommandManageServiceClientChannel(System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.CommandManageService.ICommandManageService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginInsertHeartbeatRule(Gsafety.PTMS.ServiceReference.CommandManageService.HeartbeatRule model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("InsertHeartbeatRule", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndInsertHeartbeatRule(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(base.EndInvoke("InsertHeartbeatRule", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateHeartbeatRule(Gsafety.PTMS.ServiceReference.CommandManageService.HeartbeatRule model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("UpdateHeartbeatRule", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndUpdateHeartbeatRule(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(base.EndInvoke("UpdateHeartbeatRule", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteHeartbeatRuleByID(string ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ID;
                System.IAsyncResult _result = base.BeginInvoke("DeleteHeartbeatRuleByID", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndDeleteHeartbeatRuleByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(base.EndInvoke("DeleteHeartbeatRuleByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetHeartbeatRuleList(int pageIndex, int pageSize, string clientid, string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = pageIndex;
                _args[1] = pageSize;
                _args[2] = clientid;
                _args[3] = name;
                System.IAsyncResult _result = base.BeginInvoke("GetHeartbeatRuleList", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfHeartbeatRulei7Zg_POJ5 EndGetHeartbeatRuleList(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfHeartbeatRulei7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfHeartbeatRulei7Zg_POJ5)(base.EndInvoke("GetHeartbeatRuleList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertHeartbeatVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.HeartbeatVehicle> models, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = models;
                System.IAsyncResult _result = base.BeginInvoke("InsertHeartbeatVehicle", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndInsertHeartbeatVehicle(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(base.EndInvoke("InsertHeartbeatVehicle", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteHeartbeatVehicleByID(string ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ID;
                System.IAsyncResult _result = base.BeginInvoke("DeleteHeartbeatVehicleByID", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndDeleteHeartbeatVehicleByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(base.EndInvoke("DeleteHeartbeatVehicleByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetHeartbeatVehicleListByHeartBeatID(string clientID, string heartBeatRuleID, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = clientID;
                _args[1] = heartBeatRuleID;
                _args[2] = pageIndex;
                _args[3] = pageSize;
                System.IAsyncResult _result = base.BeginInvoke("GetHeartbeatVehicleListByHeartBeatID", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfHeartbeatVehiclei7Zg_POJ5 EndGetHeartbeatVehicleListByHeartBeatID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfHeartbeatVehiclei7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfHeartbeatVehiclei7Zg_POJ5)(base.EndInvoke("GetHeartbeatVehicleListByHeartBeatID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllHeartbeatVehicleListByHeartBeatID(string clientID, string heartBeatRuleID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = clientID;
                _args[1] = heartBeatRuleID;
                System.IAsyncResult _result = base.BeginInvoke("GetAllHeartbeatVehicleListByHeartBeatID", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfHeartbeatVehiclei7Zg_POJ5 EndGetAllHeartbeatVehicleListByHeartBeatID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfHeartbeatVehiclei7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfHeartbeatVehiclei7Zg_POJ5)(base.EndInvoke("GetAllHeartbeatVehicleListByHeartBeatID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeliverHeartBeatRuleToVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.HeartbeatVehicle> vehicles, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = vehicles;
                System.IAsyncResult _result = base.BeginInvoke("DeliverHeartBeatRuleToVehicle", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndDeliverHeartBeatRuleToVehicle(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(base.EndInvoke("DeliverHeartBeatRuleToVehicle", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertLocationReportRule(Gsafety.PTMS.ServiceReference.CommandManageService.LocationReportRule model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("InsertLocationReportRule", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndInsertLocationReportRule(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(base.EndInvoke("InsertLocationReportRule", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateLocationReportRule(Gsafety.PTMS.ServiceReference.CommandManageService.LocationReportRule model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("UpdateLocationReportRule", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndUpdateLocationReportRule(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(base.EndInvoke("UpdateLocationReportRule", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteLocationReportRuleByID(string ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ID;
                System.IAsyncResult _result = base.BeginInvoke("DeleteLocationReportRuleByID", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndDeleteLocationReportRuleByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(base.EndInvoke("DeleteLocationReportRuleByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetByNameLocationReportRuleList(Gsafety.PTMS.ServiceReference.CommandManageService.PagingInfo page, string clientID, string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = page;
                _args[1] = clientID;
                _args[2] = name;
                System.IAsyncResult _result = base.BeginInvoke("GetByNameLocationReportRuleList", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfLocationReportRulei7Zg_POJ5 EndGetByNameLocationReportRuleList(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfLocationReportRulei7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfLocationReportRulei7Zg_POJ5)(base.EndInvoke("GetByNameLocationReportRuleList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertVideoRule(Gsafety.PTMS.ServiceReference.CommandManageService.VideoRule model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("InsertVideoRule", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndInsertVideoRule(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(base.EndInvoke("InsertVideoRule", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateVideoRule(Gsafety.PTMS.ServiceReference.CommandManageService.VideoRule model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("UpdateVideoRule", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndUpdateVideoRule(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(base.EndInvoke("UpdateVideoRule", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteVideoRuleByID(string ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ID;
                System.IAsyncResult _result = base.BeginInvoke("DeleteVideoRuleByID", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndDeleteVideoRuleByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(base.EndInvoke("DeleteVideoRuleByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetVideoRuleListByName(Gsafety.PTMS.ServiceReference.CommandManageService.PagingInfo page, string clientID, string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = page;
                _args[1] = clientID;
                _args[2] = name;
                System.IAsyncResult _result = base.BeginInvoke("GetVideoRuleListByName", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVideoRulei7Zg_POJ5 EndGetVideoRuleListByName(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVideoRulei7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVideoRulei7Zg_POJ5)(base.EndInvoke("GetVideoRuleListByName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertLocationReportVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.LocationReportVehicle> model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("InsertLocationReportVehicle", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndInsertLocationReportVehicle(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(base.EndInvoke("InsertLocationReportVehicle", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteLocationReportVehicleByID(string ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ID;
                System.IAsyncResult _result = base.BeginInvoke("DeleteLocationReportVehicleByID", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndDeleteLocationReportVehicleByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(base.EndInvoke("DeleteLocationReportVehicleByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLocationReportVehicleListByLocationReportID(string clientID, string locationReportID, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = clientID;
                _args[1] = locationReportID;
                _args[2] = pageIndex;
                _args[3] = pageSize;
                System.IAsyncResult _result = base.BeginInvoke("GetLocationReportVehicleListByLocationReportID", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfLocationReportVehiclei7Zg_POJ5 EndGetLocationReportVehicleListByLocationReportID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfLocationReportVehiclei7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfLocationReportVehiclei7Zg_POJ5)(base.EndInvoke("GetLocationReportVehicleListByLocationReportID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllLocationReportVehicleListByLocationReportID(string clientID, string locationReportID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = clientID;
                _args[1] = locationReportID;
                System.IAsyncResult _result = base.BeginInvoke("GetAllLocationReportVehicleListByLocationReportID", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfLocationReportVehiclei7Zg_POJ5 EndGetAllLocationReportVehicleListByLocationReportID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfLocationReportVehiclei7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfLocationReportVehiclei7Zg_POJ5)(base.EndInvoke("GetAllLocationReportVehicleListByLocationReportID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeliverLocationReportRuleToVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.LocationReportVehicle> vehicles, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = vehicles;
                System.IAsyncResult _result = base.BeginInvoke("DeliverLocationReportRuleToVehicle", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndDeliverLocationReportRuleToVehicle(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(base.EndInvoke("DeliverLocationReportRuleToVehicle", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertVideoRuleVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.VideoRuleVehicle> models, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = models;
                System.IAsyncResult _result = base.BeginInvoke("InsertVideoRuleVehicle", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndInsertVideoRuleVehicle(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(base.EndInvoke("InsertVideoRuleVehicle", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteVideoRuleVehicleByID(string ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ID;
                System.IAsyncResult _result = base.BeginInvoke("DeleteVideoRuleVehicleByID", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndDeleteVideoRuleVehicleByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(base.EndInvoke("DeleteVideoRuleVehicleByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetVideoRuleVehicleListByVideoRuleID(string clientID, string locationReportID, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = clientID;
                _args[1] = locationReportID;
                _args[2] = pageIndex;
                _args[3] = pageSize;
                System.IAsyncResult _result = base.BeginInvoke("GetVideoRuleVehicleListByVideoRuleID", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVideoRuleVehiclei7Zg_POJ5 EndGetVideoRuleVehicleListByVideoRuleID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVideoRuleVehiclei7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVideoRuleVehiclei7Zg_POJ5)(base.EndInvoke("GetVideoRuleVehicleListByVideoRuleID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllVideoRuleVehicleListByVideoRuleID(string clientID, string locationReportID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = clientID;
                _args[1] = locationReportID;
                System.IAsyncResult _result = base.BeginInvoke("GetAllVideoRuleVehicleListByVideoRuleID", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVideoRuleVehiclei7Zg_POJ5 EndGetAllVideoRuleVehicleListByVideoRuleID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVideoRuleVehiclei7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVideoRuleVehiclei7Zg_POJ5)(base.EndInvoke("GetAllVideoRuleVehicleListByVideoRuleID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeliverVideoRuleToVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.VideoRuleVehicle> vehicles, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = vehicles;
                System.IAsyncResult _result = base.BeginInvoke("DeliverVideoRuleToVehicle", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndDeliverVideoRuleToVehicle(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(base.EndInvoke("DeliverVideoRuleToVehicle", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertSpeedLimit(Gsafety.PTMS.ServiceReference.CommandManageService.SpeedLimit model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("InsertSpeedLimit", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndInsertSpeedLimit(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(base.EndInvoke("InsertSpeedLimit", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateSpeedLimit(Gsafety.PTMS.ServiceReference.CommandManageService.SpeedLimit model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("UpdateSpeedLimit", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndUpdateSpeedLimit(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(base.EndInvoke("UpdateSpeedLimit", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteSpeedLimitByID(string ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ID;
                System.IAsyncResult _result = base.BeginInvoke("DeleteSpeedLimitByID", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndDeleteSpeedLimitByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(base.EndInvoke("DeleteSpeedLimitByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSpeedLimitListByName(string clientID, string name, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = clientID;
                _args[1] = name;
                _args[2] = pageIndex;
                _args[3] = pageSize;
                System.IAsyncResult _result = base.BeginInvoke("GetSpeedLimitListByName", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfSpeedLimiti7Zg_POJ5 EndGetSpeedLimitListByName(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfSpeedLimiti7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfSpeedLimiti7Zg_POJ5)(base.EndInvoke("GetSpeedLimitListByName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertVehicleSpeed(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.VehicleSpeed> models, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = models;
                System.IAsyncResult _result = base.BeginInvoke("InsertVehicleSpeed", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndInsertVehicleSpeed(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(base.EndInvoke("InsertVehicleSpeed", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteVehicleSpeedByID(string ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ID;
                System.IAsyncResult _result = base.BeginInvoke("DeleteVehicleSpeedByID", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndDeleteVehicleSpeedByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(base.EndInvoke("DeleteVehicleSpeedByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllVehicleSpeedListBySpeedID(string clientID, string speedID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = clientID;
                _args[1] = speedID;
                System.IAsyncResult _result = base.BeginInvoke("GetAllVehicleSpeedListBySpeedID", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVehicleSpeedi7Zg_POJ5 EndGetAllVehicleSpeedListBySpeedID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVehicleSpeedi7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVehicleSpeedi7Zg_POJ5)(base.EndInvoke("GetAllVehicleSpeedListBySpeedID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetVehicleSpeedListBySpeedID(string clientID, string speedID, string vehicleName, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = clientID;
                _args[1] = speedID;
                _args[2] = vehicleName;
                _args[3] = pageIndex;
                _args[4] = pageSize;
                System.IAsyncResult _result = base.BeginInvoke("GetVehicleSpeedListBySpeedID", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVehicleSpeedi7Zg_POJ5 EndGetVehicleSpeedListBySpeedID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVehicleSpeedi7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.MultiMessageOfVehicleSpeedi7Zg_POJ5)(base.EndInvoke("GetVehicleSpeedListBySpeedID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeliverSpeedLimitToVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.CommandManageService.VehicleSpeed> vehicles, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = vehicles;
                System.IAsyncResult _result = base.BeginInvoke("DeliverSpeedLimitToVehicle", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean EndDeliverSpeedLimitToVehicle(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.CommandManageService.SingleMessageOfboolean)(base.EndInvoke("DeliverSpeedLimitToVehicle", _args, result)));
                return _result;
            }
        }
    }
}
