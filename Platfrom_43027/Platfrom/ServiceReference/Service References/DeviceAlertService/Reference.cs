//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace Gsafety.PTMS.ServiceReference.DeviceAlertService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceAlert", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Alert.Contract.Data")]
    public partial class DeviceAlert : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AdditionalInfoField;
        
        private System.Nullable<System.DateTime> AlertTimeField;
        
        private System.Nullable<int> AlertTypeField;
        
        private string AlertTypeNameField;
        
        private string CheckIDField;
        
        private string ClientIDField;
        
        private string CmdField;
        
        private System.Nullable<System.DateTime> CreateTimeField;
        
        private string DirectionField;
        
        private string DistrictCodeField;
        
        private System.Nullable<System.DateTime> GpsTimeField;
        
        private string GpsValidField;
        
        private string HandleIdField;
        
        private string IdField;
        
        private string LatitudeField;
        
        private string LongitudeField;
        
        private string MdvrCoreIdField;
        
        private int RuleIdField;
        
        private string ShowTypeField;
        
        private string SpeedField;
        
        private System.Nullable<int> StatusField;
        
        private string SuiteIdField;
        
        private string SuiteInfoIdField;
        
        private System.Nullable<int> SuiteStatusField;
        
        private string TagValueField;
        
        private string VehicleIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalInfo {
            get {
                return this.AdditionalInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalInfoField, value) != true)) {
                    this.AdditionalInfoField = value;
                    this.RaisePropertyChanged("AdditionalInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AlertTime {
            get {
                return this.AlertTimeField;
            }
            set {
                if ((this.AlertTimeField.Equals(value) != true)) {
                    this.AlertTimeField = value;
                    this.RaisePropertyChanged("AlertTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AlertType {
            get {
                return this.AlertTypeField;
            }
            set {
                if ((this.AlertTypeField.Equals(value) != true)) {
                    this.AlertTypeField = value;
                    this.RaisePropertyChanged("AlertType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlertTypeName {
            get {
                return this.AlertTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AlertTypeNameField, value) != true)) {
                    this.AlertTypeNameField = value;
                    this.RaisePropertyChanged("AlertTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckID {
            get {
                return this.CheckIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckIDField, value) != true)) {
                    this.CheckIDField = value;
                    this.RaisePropertyChanged("CheckID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIDField, value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cmd {
            get {
                return this.CmdField;
            }
            set {
                if ((object.ReferenceEquals(this.CmdField, value) != true)) {
                    this.CmdField = value;
                    this.RaisePropertyChanged("Cmd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectionField, value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistrictCode {
            get {
                return this.DistrictCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictCodeField, value) != true)) {
                    this.DistrictCodeField = value;
                    this.RaisePropertyChanged("DistrictCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> GpsTime {
            get {
                return this.GpsTimeField;
            }
            set {
                if ((this.GpsTimeField.Equals(value) != true)) {
                    this.GpsTimeField = value;
                    this.RaisePropertyChanged("GpsTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GpsValid {
            get {
                return this.GpsValidField;
            }
            set {
                if ((object.ReferenceEquals(this.GpsValidField, value) != true)) {
                    this.GpsValidField = value;
                    this.RaisePropertyChanged("GpsValid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HandleId {
            get {
                return this.HandleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.HandleIdField, value) != true)) {
                    this.HandleIdField = value;
                    this.RaisePropertyChanged("HandleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LatitudeField, value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LongitudeField, value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrCoreId {
            get {
                return this.MdvrCoreIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrCoreIdField, value) != true)) {
                    this.MdvrCoreIdField = value;
                    this.RaisePropertyChanged("MdvrCoreId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RuleId {
            get {
                return this.RuleIdField;
            }
            set {
                if ((this.RuleIdField.Equals(value) != true)) {
                    this.RuleIdField = value;
                    this.RaisePropertyChanged("RuleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShowType {
            get {
                return this.ShowTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShowTypeField, value) != true)) {
                    this.ShowTypeField = value;
                    this.RaisePropertyChanged("ShowType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((object.ReferenceEquals(this.SpeedField, value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuiteId {
            get {
                return this.SuiteIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SuiteIdField, value) != true)) {
                    this.SuiteIdField = value;
                    this.RaisePropertyChanged("SuiteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuiteInfoId {
            get {
                return this.SuiteInfoIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SuiteInfoIdField, value) != true)) {
                    this.SuiteInfoIdField = value;
                    this.RaisePropertyChanged("SuiteInfoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SuiteStatus {
            get {
                return this.SuiteStatusField;
            }
            set {
                if ((this.SuiteStatusField.Equals(value) != true)) {
                    this.SuiteStatusField = value;
                    this.RaisePropertyChanged("SuiteStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TagValue {
            get {
                return this.TagValueField;
            }
            set {
                if ((object.ReferenceEquals(this.TagValueField, value) != true)) {
                    this.TagValueField = value;
                    this.RaisePropertyChanged("TagValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleId {
            get {
                return this.VehicleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleIdField, value) != true)) {
                    this.VehicleIdField = value;
                    this.RaisePropertyChanged("VehicleId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleMessageOfDeviceAlertWem2IK3v", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class SingleMessageOfDeviceAlertWem2IK3v : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private Gsafety.PTMS.ServiceReference.DeviceAlertService.DeviceAlert ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.DeviceAlertService.DeviceAlert Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagingInfo", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class PagingInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfDeviceAlertExi7Zg_POJ5", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfDeviceAlertExi7Zg_POJ5 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.DeviceAlertService.DeviceAlertEx> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.DeviceAlertService.DeviceAlertEx> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceAlertEx", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Common.Data")]
    public partial class DeviceAlertEx : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AdditionalInfoField;
        
        private System.Nullable<System.DateTime> AlertTimeField;
        
        private System.Nullable<int> AlertTypeField;
        
        private string AlertTypeNameField;
        
        private string CityField;
        
        private string ClientIdField;
        
        private string CmdField;
        
        private string DirectionField;
        
        private string DistrictCodeField;
        
        private System.Nullable<System.DateTime> GpsTimeField;
        
        private string GpsValidField;
        
        private string HeightField;
        
        private string IdField;
        
        private string LatitudeField;
        
        private string LongitudeField;
        
        private string MdvrCoreIdField;
        
        private System.Collections.ObjectModel.ObservableCollection<string> OrganizationsField;
        
        private string ProvinceField;
        
        private string SpeedField;
        
        private string SuiteIdField;
        
        private string SuiteInfoIdField;
        
        private System.Nullable<int> SuiteStatusField;
        
        private string VehicleIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalInfo {
            get {
                return this.AdditionalInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalInfoField, value) != true)) {
                    this.AdditionalInfoField = value;
                    this.RaisePropertyChanged("AdditionalInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AlertTime {
            get {
                return this.AlertTimeField;
            }
            set {
                if ((this.AlertTimeField.Equals(value) != true)) {
                    this.AlertTimeField = value;
                    this.RaisePropertyChanged("AlertTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AlertType {
            get {
                return this.AlertTypeField;
            }
            set {
                if ((this.AlertTypeField.Equals(value) != true)) {
                    this.AlertTypeField = value;
                    this.RaisePropertyChanged("AlertType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlertTypeName {
            get {
                return this.AlertTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AlertTypeNameField, value) != true)) {
                    this.AlertTypeNameField = value;
                    this.RaisePropertyChanged("AlertTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientId {
            get {
                return this.ClientIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIdField, value) != true)) {
                    this.ClientIdField = value;
                    this.RaisePropertyChanged("ClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cmd {
            get {
                return this.CmdField;
            }
            set {
                if ((object.ReferenceEquals(this.CmdField, value) != true)) {
                    this.CmdField = value;
                    this.RaisePropertyChanged("Cmd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectionField, value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistrictCode {
            get {
                return this.DistrictCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.DistrictCodeField, value) != true)) {
                    this.DistrictCodeField = value;
                    this.RaisePropertyChanged("DistrictCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> GpsTime {
            get {
                return this.GpsTimeField;
            }
            set {
                if ((this.GpsTimeField.Equals(value) != true)) {
                    this.GpsTimeField = value;
                    this.RaisePropertyChanged("GpsTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GpsValid {
            get {
                return this.GpsValidField;
            }
            set {
                if ((object.ReferenceEquals(this.GpsValidField, value) != true)) {
                    this.GpsValidField = value;
                    this.RaisePropertyChanged("GpsValid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Height {
            get {
                return this.HeightField;
            }
            set {
                if ((object.ReferenceEquals(this.HeightField, value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LatitudeField, value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LongitudeField, value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrCoreId {
            get {
                return this.MdvrCoreIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrCoreIdField, value) != true)) {
                    this.MdvrCoreIdField = value;
                    this.RaisePropertyChanged("MdvrCoreId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> Organizations {
            get {
                return this.OrganizationsField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationsField, value) != true)) {
                    this.OrganizationsField = value;
                    this.RaisePropertyChanged("Organizations");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Province {
            get {
                return this.ProvinceField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceField, value) != true)) {
                    this.ProvinceField = value;
                    this.RaisePropertyChanged("Province");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Speed {
            get {
                return this.SpeedField;
            }
            set {
                if ((object.ReferenceEquals(this.SpeedField, value) != true)) {
                    this.SpeedField = value;
                    this.RaisePropertyChanged("Speed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuiteId {
            get {
                return this.SuiteIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SuiteIdField, value) != true)) {
                    this.SuiteIdField = value;
                    this.RaisePropertyChanged("SuiteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuiteInfoId {
            get {
                return this.SuiteInfoIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SuiteInfoIdField, value) != true)) {
                    this.SuiteInfoIdField = value;
                    this.RaisePropertyChanged("SuiteInfoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SuiteStatus {
            get {
                return this.SuiteStatusField;
            }
            set {
                if ((this.SuiteStatusField.Equals(value) != true)) {
                    this.SuiteStatusField = value;
                    this.RaisePropertyChanged("SuiteStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleId {
            get {
                return this.VehicleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleIdField, value) != true)) {
                    this.VehicleIdField = value;
                    this.RaisePropertyChanged("VehicleId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceSuiteStatus", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.BaseInformation.Contract.Dat" +
        "a")]
    public enum DeviceSuiteStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Initial = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Working = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Testing = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Running = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Abnormal = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WaitingMaintenance = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Maintenance = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Scrap = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        History = 99,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceAlertType", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public enum DeviceAlertType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LowTemperature = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OverTemperature = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GpsFault = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VedioShelter = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VedioNoSignal = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AbnormalFire = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SdFault = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PasswordFault = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AbnormalValtage = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Offline72 = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Offline48 = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        offline24 = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Damage = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SuitNoSignal = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoANTGPSSignal = 102,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleMessageOfboolean", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class SingleMessageOfboolean : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private bool ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfDeviceAlertWem2IK3v", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfDeviceAlertWem2IK3v : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.DeviceAlertService.DeviceAlert> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.DeviceAlertService.DeviceAlert> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DeviceAlertService.IDeviceAlertService")]
    public interface IDeviceAlertService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDeviceAlertService/AddDeviceAlert", ReplyAction="http://tempuri.org/IDeviceAlertService/AddDeviceAlertResponse")]
        System.IAsyncResult BeginAddDeviceAlert(Gsafety.PTMS.ServiceReference.DeviceAlertService.DeviceAlert alert, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.DeviceAlertService.SingleMessageOfDeviceAlertWem2IK3v EndAddDeviceAlert(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDeviceAlertService/GetDeviceAlertEx1", ReplyAction="http://tempuri.org/IDeviceAlertService/GetDeviceAlertEx1Response")]
        System.IAsyncResult BeginGetDeviceAlertEx1(string CarNumber, string sutieId, System.Collections.ObjectModel.ObservableCollection<System.Nullable<decimal>> alertType, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, Gsafety.PTMS.ServiceReference.DeviceAlertService.PagingInfo pagingInfo, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.DeviceAlertService.MultiMessageOfDeviceAlertExi7Zg_POJ5 EndGetDeviceAlertEx1(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDeviceAlertService/ModifySecuritySuiteStatus", ReplyAction="http://tempuri.org/IDeviceAlertService/ModifySecuritySuiteStatusResponse")]
        System.IAsyncResult BeginModifySecuritySuiteStatus(string mdvrCoreSN, Gsafety.PTMS.ServiceReference.DeviceAlertService.DeviceSuiteStatus status, Gsafety.PTMS.ServiceReference.DeviceAlertService.DeviceAlertType alertType, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.DeviceAlertService.SingleMessageOfboolean EndModifySecuritySuiteStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDeviceAlertService/UpdateDeviceAlert", ReplyAction="http://tempuri.org/IDeviceAlertService/UpdateDeviceAlertResponse")]
        System.IAsyncResult BeginUpdateDeviceAlert(Gsafety.PTMS.ServiceReference.DeviceAlertService.DeviceAlert model, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.DeviceAlertService.SingleMessageOfboolean EndUpdateDeviceAlert(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDeviceAlertService/DeleteDeviceAlertByID", ReplyAction="http://tempuri.org/IDeviceAlertService/DeleteDeviceAlertByIDResponse")]
        System.IAsyncResult BeginDeleteDeviceAlertByID(string ID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.DeviceAlertService.SingleMessageOfboolean EndDeleteDeviceAlertByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDeviceAlertService/GetDeviceAlertList", ReplyAction="http://tempuri.org/IDeviceAlertService/GetDeviceAlertListResponse")]
        System.IAsyncResult BeginGetDeviceAlertList(string clientID, string vehicleID, System.Nullable<int> alertType, System.Nullable<System.DateTime> StartTime, System.Nullable<System.DateTime> EndTime, System.Collections.ObjectModel.ObservableCollection<string> stationids, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.DeviceAlertService.MultiMessageOfDeviceAlertWem2IK3v EndGetDeviceAlertList(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDeviceAlertServiceChannel : Gsafety.PTMS.ServiceReference.DeviceAlertService.IDeviceAlertService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddDeviceAlertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddDeviceAlertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.DeviceAlertService.SingleMessageOfDeviceAlertWem2IK3v Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.DeviceAlertService.SingleMessageOfDeviceAlertWem2IK3v)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDeviceAlertEx1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDeviceAlertEx1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.DeviceAlertService.MultiMessageOfDeviceAlertExi7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.DeviceAlertService.MultiMessageOfDeviceAlertExi7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ModifySecuritySuiteStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ModifySecuritySuiteStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.DeviceAlertService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.DeviceAlertService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateDeviceAlertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateDeviceAlertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.DeviceAlertService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.DeviceAlertService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteDeviceAlertByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteDeviceAlertByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.DeviceAlertService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.DeviceAlertService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDeviceAlertListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDeviceAlertListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.DeviceAlertService.MultiMessageOfDeviceAlertWem2IK3v Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.DeviceAlertService.MultiMessageOfDeviceAlertWem2IK3v)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeviceAlertServiceClient : System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.DeviceAlertService.IDeviceAlertService>, Gsafety.PTMS.ServiceReference.DeviceAlertService.IDeviceAlertService {
        
        private BeginOperationDelegate onBeginAddDeviceAlertDelegate;
        
        private EndOperationDelegate onEndAddDeviceAlertDelegate;
        
        private System.Threading.SendOrPostCallback onAddDeviceAlertCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDeviceAlertEx1Delegate;
        
        private EndOperationDelegate onEndGetDeviceAlertEx1Delegate;
        
        private System.Threading.SendOrPostCallback onGetDeviceAlertEx1CompletedDelegate;
        
        private BeginOperationDelegate onBeginModifySecuritySuiteStatusDelegate;
        
        private EndOperationDelegate onEndModifySecuritySuiteStatusDelegate;
        
        private System.Threading.SendOrPostCallback onModifySecuritySuiteStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateDeviceAlertDelegate;
        
        private EndOperationDelegate onEndUpdateDeviceAlertDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateDeviceAlertCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteDeviceAlertByIDDelegate;
        
        private EndOperationDelegate onEndDeleteDeviceAlertByIDDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteDeviceAlertByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDeviceAlertListDelegate;
        
        private EndOperationDelegate onEndGetDeviceAlertListDelegate;
        
        private System.Threading.SendOrPostCallback onGetDeviceAlertListCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public DeviceAlertServiceClient() {
        }
        
        public DeviceAlertServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DeviceAlertServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeviceAlertServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeviceAlertServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<AddDeviceAlertCompletedEventArgs> AddDeviceAlertCompleted;
        
        public event System.EventHandler<GetDeviceAlertEx1CompletedEventArgs> GetDeviceAlertEx1Completed;
        
        public event System.EventHandler<ModifySecuritySuiteStatusCompletedEventArgs> ModifySecuritySuiteStatusCompleted;
        
        public event System.EventHandler<UpdateDeviceAlertCompletedEventArgs> UpdateDeviceAlertCompleted;
        
        public event System.EventHandler<DeleteDeviceAlertByIDCompletedEventArgs> DeleteDeviceAlertByIDCompleted;
        
        public event System.EventHandler<GetDeviceAlertListCompletedEventArgs> GetDeviceAlertListCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.DeviceAlertService.IDeviceAlertService.BeginAddDeviceAlert(Gsafety.PTMS.ServiceReference.DeviceAlertService.DeviceAlert alert, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddDeviceAlert(alert, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.DeviceAlertService.SingleMessageOfDeviceAlertWem2IK3v Gsafety.PTMS.ServiceReference.DeviceAlertService.IDeviceAlertService.EndAddDeviceAlert(System.IAsyncResult result) {
            return base.Channel.EndAddDeviceAlert(result);
        }
        
        private System.IAsyncResult OnBeginAddDeviceAlert(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.DeviceAlertService.DeviceAlert alert = ((Gsafety.PTMS.ServiceReference.DeviceAlertService.DeviceAlert)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.DeviceAlertService.IDeviceAlertService)(this)).BeginAddDeviceAlert(alert, callback, asyncState);
        }
        
        private object[] OnEndAddDeviceAlert(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.DeviceAlertService.SingleMessageOfDeviceAlertWem2IK3v retVal = ((Gsafety.PTMS.ServiceReference.DeviceAlertService.IDeviceAlertService)(this)).EndAddDeviceAlert(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddDeviceAlertCompleted(object state) {
            if ((this.AddDeviceAlertCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddDeviceAlertCompleted(this, new AddDeviceAlertCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddDeviceAlertAsync(Gsafety.PTMS.ServiceReference.DeviceAlertService.DeviceAlert alert) {
            this.AddDeviceAlertAsync(alert, null);
        }
        
        public void AddDeviceAlertAsync(Gsafety.PTMS.ServiceReference.DeviceAlertService.DeviceAlert alert, object userState) {
            if ((this.onBeginAddDeviceAlertDelegate == null)) {
                this.onBeginAddDeviceAlertDelegate = new BeginOperationDelegate(this.OnBeginAddDeviceAlert);
            }
            if ((this.onEndAddDeviceAlertDelegate == null)) {
                this.onEndAddDeviceAlertDelegate = new EndOperationDelegate(this.OnEndAddDeviceAlert);
            }
            if ((this.onAddDeviceAlertCompletedDelegate == null)) {
                this.onAddDeviceAlertCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddDeviceAlertCompleted);
            }
            base.InvokeAsync(this.onBeginAddDeviceAlertDelegate, new object[] {
                        alert}, this.onEndAddDeviceAlertDelegate, this.onAddDeviceAlertCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.DeviceAlertService.IDeviceAlertService.BeginGetDeviceAlertEx1(string CarNumber, string sutieId, System.Collections.ObjectModel.ObservableCollection<System.Nullable<decimal>> alertType, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, Gsafety.PTMS.ServiceReference.DeviceAlertService.PagingInfo pagingInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDeviceAlertEx1(CarNumber, sutieId, alertType, startTime, endTime, pagingInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.DeviceAlertService.MultiMessageOfDeviceAlertExi7Zg_POJ5 Gsafety.PTMS.ServiceReference.DeviceAlertService.IDeviceAlertService.EndGetDeviceAlertEx1(System.IAsyncResult result) {
            return base.Channel.EndGetDeviceAlertEx1(result);
        }
        
        private System.IAsyncResult OnBeginGetDeviceAlertEx1(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string CarNumber = ((string)(inValues[0]));
            string sutieId = ((string)(inValues[1]));
            System.Collections.ObjectModel.ObservableCollection<System.Nullable<decimal>> alertType = ((System.Collections.ObjectModel.ObservableCollection<System.Nullable<decimal>>)(inValues[2]));
            System.Nullable<System.DateTime> startTime = ((System.Nullable<System.DateTime>)(inValues[3]));
            System.Nullable<System.DateTime> endTime = ((System.Nullable<System.DateTime>)(inValues[4]));
            Gsafety.PTMS.ServiceReference.DeviceAlertService.PagingInfo pagingInfo = ((Gsafety.PTMS.ServiceReference.DeviceAlertService.PagingInfo)(inValues[5]));
            return ((Gsafety.PTMS.ServiceReference.DeviceAlertService.IDeviceAlertService)(this)).BeginGetDeviceAlertEx1(CarNumber, sutieId, alertType, startTime, endTime, pagingInfo, callback, asyncState);
        }
        
        private object[] OnEndGetDeviceAlertEx1(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.DeviceAlertService.MultiMessageOfDeviceAlertExi7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.DeviceAlertService.IDeviceAlertService)(this)).EndGetDeviceAlertEx1(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDeviceAlertEx1Completed(object state) {
            if ((this.GetDeviceAlertEx1Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDeviceAlertEx1Completed(this, new GetDeviceAlertEx1CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDeviceAlertEx1Async(string CarNumber, string sutieId, System.Collections.ObjectModel.ObservableCollection<System.Nullable<decimal>> alertType, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, Gsafety.PTMS.ServiceReference.DeviceAlertService.PagingInfo pagingInfo) {
            this.GetDeviceAlertEx1Async(CarNumber, sutieId, alertType, startTime, endTime, pagingInfo, null);
        }
        
        public void GetDeviceAlertEx1Async(string CarNumber, string sutieId, System.Collections.ObjectModel.ObservableCollection<System.Nullable<decimal>> alertType, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, Gsafety.PTMS.ServiceReference.DeviceAlertService.PagingInfo pagingInfo, object userState) {
            if ((this.onBeginGetDeviceAlertEx1Delegate == null)) {
                this.onBeginGetDeviceAlertEx1Delegate = new BeginOperationDelegate(this.OnBeginGetDeviceAlertEx1);
            }
            if ((this.onEndGetDeviceAlertEx1Delegate == null)) {
                this.onEndGetDeviceAlertEx1Delegate = new EndOperationDelegate(this.OnEndGetDeviceAlertEx1);
            }
            if ((this.onGetDeviceAlertEx1CompletedDelegate == null)) {
                this.onGetDeviceAlertEx1CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDeviceAlertEx1Completed);
            }
            base.InvokeAsync(this.onBeginGetDeviceAlertEx1Delegate, new object[] {
                        CarNumber,
                        sutieId,
                        alertType,
                        startTime,
                        endTime,
                        pagingInfo}, this.onEndGetDeviceAlertEx1Delegate, this.onGetDeviceAlertEx1CompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.DeviceAlertService.IDeviceAlertService.BeginModifySecuritySuiteStatus(string mdvrCoreSN, Gsafety.PTMS.ServiceReference.DeviceAlertService.DeviceSuiteStatus status, Gsafety.PTMS.ServiceReference.DeviceAlertService.DeviceAlertType alertType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginModifySecuritySuiteStatus(mdvrCoreSN, status, alertType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.DeviceAlertService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.DeviceAlertService.IDeviceAlertService.EndModifySecuritySuiteStatus(System.IAsyncResult result) {
            return base.Channel.EndModifySecuritySuiteStatus(result);
        }
        
        private System.IAsyncResult OnBeginModifySecuritySuiteStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string mdvrCoreSN = ((string)(inValues[0]));
            Gsafety.PTMS.ServiceReference.DeviceAlertService.DeviceSuiteStatus status = ((Gsafety.PTMS.ServiceReference.DeviceAlertService.DeviceSuiteStatus)(inValues[1]));
            Gsafety.PTMS.ServiceReference.DeviceAlertService.DeviceAlertType alertType = ((Gsafety.PTMS.ServiceReference.DeviceAlertService.DeviceAlertType)(inValues[2]));
            return ((Gsafety.PTMS.ServiceReference.DeviceAlertService.IDeviceAlertService)(this)).BeginModifySecuritySuiteStatus(mdvrCoreSN, status, alertType, callback, asyncState);
        }
        
        private object[] OnEndModifySecuritySuiteStatus(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.DeviceAlertService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.DeviceAlertService.IDeviceAlertService)(this)).EndModifySecuritySuiteStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnModifySecuritySuiteStatusCompleted(object state) {
            if ((this.ModifySecuritySuiteStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ModifySecuritySuiteStatusCompleted(this, new ModifySecuritySuiteStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ModifySecuritySuiteStatusAsync(string mdvrCoreSN, Gsafety.PTMS.ServiceReference.DeviceAlertService.DeviceSuiteStatus status, Gsafety.PTMS.ServiceReference.DeviceAlertService.DeviceAlertType alertType) {
            this.ModifySecuritySuiteStatusAsync(mdvrCoreSN, status, alertType, null);
        }
        
        public void ModifySecuritySuiteStatusAsync(string mdvrCoreSN, Gsafety.PTMS.ServiceReference.DeviceAlertService.DeviceSuiteStatus status, Gsafety.PTMS.ServiceReference.DeviceAlertService.DeviceAlertType alertType, object userState) {
            if ((this.onBeginModifySecuritySuiteStatusDelegate == null)) {
                this.onBeginModifySecuritySuiteStatusDelegate = new BeginOperationDelegate(this.OnBeginModifySecuritySuiteStatus);
            }
            if ((this.onEndModifySecuritySuiteStatusDelegate == null)) {
                this.onEndModifySecuritySuiteStatusDelegate = new EndOperationDelegate(this.OnEndModifySecuritySuiteStatus);
            }
            if ((this.onModifySecuritySuiteStatusCompletedDelegate == null)) {
                this.onModifySecuritySuiteStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnModifySecuritySuiteStatusCompleted);
            }
            base.InvokeAsync(this.onBeginModifySecuritySuiteStatusDelegate, new object[] {
                        mdvrCoreSN,
                        status,
                        alertType}, this.onEndModifySecuritySuiteStatusDelegate, this.onModifySecuritySuiteStatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.DeviceAlertService.IDeviceAlertService.BeginUpdateDeviceAlert(Gsafety.PTMS.ServiceReference.DeviceAlertService.DeviceAlert model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateDeviceAlert(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.DeviceAlertService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.DeviceAlertService.IDeviceAlertService.EndUpdateDeviceAlert(System.IAsyncResult result) {
            return base.Channel.EndUpdateDeviceAlert(result);
        }
        
        private System.IAsyncResult OnBeginUpdateDeviceAlert(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.DeviceAlertService.DeviceAlert model = ((Gsafety.PTMS.ServiceReference.DeviceAlertService.DeviceAlert)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.DeviceAlertService.IDeviceAlertService)(this)).BeginUpdateDeviceAlert(model, callback, asyncState);
        }
        
        private object[] OnEndUpdateDeviceAlert(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.DeviceAlertService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.DeviceAlertService.IDeviceAlertService)(this)).EndUpdateDeviceAlert(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateDeviceAlertCompleted(object state) {
            if ((this.UpdateDeviceAlertCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateDeviceAlertCompleted(this, new UpdateDeviceAlertCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateDeviceAlertAsync(Gsafety.PTMS.ServiceReference.DeviceAlertService.DeviceAlert model) {
            this.UpdateDeviceAlertAsync(model, null);
        }
        
        public void UpdateDeviceAlertAsync(Gsafety.PTMS.ServiceReference.DeviceAlertService.DeviceAlert model, object userState) {
            if ((this.onBeginUpdateDeviceAlertDelegate == null)) {
                this.onBeginUpdateDeviceAlertDelegate = new BeginOperationDelegate(this.OnBeginUpdateDeviceAlert);
            }
            if ((this.onEndUpdateDeviceAlertDelegate == null)) {
                this.onEndUpdateDeviceAlertDelegate = new EndOperationDelegate(this.OnEndUpdateDeviceAlert);
            }
            if ((this.onUpdateDeviceAlertCompletedDelegate == null)) {
                this.onUpdateDeviceAlertCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateDeviceAlertCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateDeviceAlertDelegate, new object[] {
                        model}, this.onEndUpdateDeviceAlertDelegate, this.onUpdateDeviceAlertCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.DeviceAlertService.IDeviceAlertService.BeginDeleteDeviceAlertByID(string ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteDeviceAlertByID(ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.DeviceAlertService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.DeviceAlertService.IDeviceAlertService.EndDeleteDeviceAlertByID(System.IAsyncResult result) {
            return base.Channel.EndDeleteDeviceAlertByID(result);
        }
        
        private System.IAsyncResult OnBeginDeleteDeviceAlertByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ID = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.DeviceAlertService.IDeviceAlertService)(this)).BeginDeleteDeviceAlertByID(ID, callback, asyncState);
        }
        
        private object[] OnEndDeleteDeviceAlertByID(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.DeviceAlertService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.DeviceAlertService.IDeviceAlertService)(this)).EndDeleteDeviceAlertByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteDeviceAlertByIDCompleted(object state) {
            if ((this.DeleteDeviceAlertByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteDeviceAlertByIDCompleted(this, new DeleteDeviceAlertByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteDeviceAlertByIDAsync(string ID) {
            this.DeleteDeviceAlertByIDAsync(ID, null);
        }
        
        public void DeleteDeviceAlertByIDAsync(string ID, object userState) {
            if ((this.onBeginDeleteDeviceAlertByIDDelegate == null)) {
                this.onBeginDeleteDeviceAlertByIDDelegate = new BeginOperationDelegate(this.OnBeginDeleteDeviceAlertByID);
            }
            if ((this.onEndDeleteDeviceAlertByIDDelegate == null)) {
                this.onEndDeleteDeviceAlertByIDDelegate = new EndOperationDelegate(this.OnEndDeleteDeviceAlertByID);
            }
            if ((this.onDeleteDeviceAlertByIDCompletedDelegate == null)) {
                this.onDeleteDeviceAlertByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteDeviceAlertByIDCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDeviceAlertByIDDelegate, new object[] {
                        ID}, this.onEndDeleteDeviceAlertByIDDelegate, this.onDeleteDeviceAlertByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.DeviceAlertService.IDeviceAlertService.BeginGetDeviceAlertList(string clientID, string vehicleID, System.Nullable<int> alertType, System.Nullable<System.DateTime> StartTime, System.Nullable<System.DateTime> EndTime, System.Collections.ObjectModel.ObservableCollection<string> stationids, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDeviceAlertList(clientID, vehicleID, alertType, StartTime, EndTime, stationids, pageIndex, pageSize, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.DeviceAlertService.MultiMessageOfDeviceAlertWem2IK3v Gsafety.PTMS.ServiceReference.DeviceAlertService.IDeviceAlertService.EndGetDeviceAlertList(System.IAsyncResult result) {
            return base.Channel.EndGetDeviceAlertList(result);
        }
        
        private System.IAsyncResult OnBeginGetDeviceAlertList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            string vehicleID = ((string)(inValues[1]));
            System.Nullable<int> alertType = ((System.Nullable<int>)(inValues[2]));
            System.Nullable<System.DateTime> StartTime = ((System.Nullable<System.DateTime>)(inValues[3]));
            System.Nullable<System.DateTime> EndTime = ((System.Nullable<System.DateTime>)(inValues[4]));
            System.Collections.ObjectModel.ObservableCollection<string> stationids = ((System.Collections.ObjectModel.ObservableCollection<string>)(inValues[5]));
            int pageIndex = ((int)(inValues[6]));
            int pageSize = ((int)(inValues[7]));
            return ((Gsafety.PTMS.ServiceReference.DeviceAlertService.IDeviceAlertService)(this)).BeginGetDeviceAlertList(clientID, vehicleID, alertType, StartTime, EndTime, stationids, pageIndex, pageSize, callback, asyncState);
        }
        
        private object[] OnEndGetDeviceAlertList(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.DeviceAlertService.MultiMessageOfDeviceAlertWem2IK3v retVal = ((Gsafety.PTMS.ServiceReference.DeviceAlertService.IDeviceAlertService)(this)).EndGetDeviceAlertList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDeviceAlertListCompleted(object state) {
            if ((this.GetDeviceAlertListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDeviceAlertListCompleted(this, new GetDeviceAlertListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDeviceAlertListAsync(string clientID, string vehicleID, System.Nullable<int> alertType, System.Nullable<System.DateTime> StartTime, System.Nullable<System.DateTime> EndTime, System.Collections.ObjectModel.ObservableCollection<string> stationids, int pageIndex, int pageSize) {
            this.GetDeviceAlertListAsync(clientID, vehicleID, alertType, StartTime, EndTime, stationids, pageIndex, pageSize, null);
        }
        
        public void GetDeviceAlertListAsync(string clientID, string vehicleID, System.Nullable<int> alertType, System.Nullable<System.DateTime> StartTime, System.Nullable<System.DateTime> EndTime, System.Collections.ObjectModel.ObservableCollection<string> stationids, int pageIndex, int pageSize, object userState) {
            if ((this.onBeginGetDeviceAlertListDelegate == null)) {
                this.onBeginGetDeviceAlertListDelegate = new BeginOperationDelegate(this.OnBeginGetDeviceAlertList);
            }
            if ((this.onEndGetDeviceAlertListDelegate == null)) {
                this.onEndGetDeviceAlertListDelegate = new EndOperationDelegate(this.OnEndGetDeviceAlertList);
            }
            if ((this.onGetDeviceAlertListCompletedDelegate == null)) {
                this.onGetDeviceAlertListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDeviceAlertListCompleted);
            }
            base.InvokeAsync(this.onBeginGetDeviceAlertListDelegate, new object[] {
                        clientID,
                        vehicleID,
                        alertType,
                        StartTime,
                        EndTime,
                        stationids,
                        pageIndex,
                        pageSize}, this.onEndGetDeviceAlertListDelegate, this.onGetDeviceAlertListCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Gsafety.PTMS.ServiceReference.DeviceAlertService.IDeviceAlertService CreateChannel() {
            return new DeviceAlertServiceClientChannel(this);
        }
        
        private class DeviceAlertServiceClientChannel : ChannelBase<Gsafety.PTMS.ServiceReference.DeviceAlertService.IDeviceAlertService>, Gsafety.PTMS.ServiceReference.DeviceAlertService.IDeviceAlertService {
            
            public DeviceAlertServiceClientChannel(System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.DeviceAlertService.IDeviceAlertService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginAddDeviceAlert(Gsafety.PTMS.ServiceReference.DeviceAlertService.DeviceAlert alert, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = alert;
                System.IAsyncResult _result = base.BeginInvoke("AddDeviceAlert", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.DeviceAlertService.SingleMessageOfDeviceAlertWem2IK3v EndAddDeviceAlert(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.DeviceAlertService.SingleMessageOfDeviceAlertWem2IK3v _result = ((Gsafety.PTMS.ServiceReference.DeviceAlertService.SingleMessageOfDeviceAlertWem2IK3v)(base.EndInvoke("AddDeviceAlert", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDeviceAlertEx1(string CarNumber, string sutieId, System.Collections.ObjectModel.ObservableCollection<System.Nullable<decimal>> alertType, System.Nullable<System.DateTime> startTime, System.Nullable<System.DateTime> endTime, Gsafety.PTMS.ServiceReference.DeviceAlertService.PagingInfo pagingInfo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = CarNumber;
                _args[1] = sutieId;
                _args[2] = alertType;
                _args[3] = startTime;
                _args[4] = endTime;
                _args[5] = pagingInfo;
                System.IAsyncResult _result = base.BeginInvoke("GetDeviceAlertEx1", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.DeviceAlertService.MultiMessageOfDeviceAlertExi7Zg_POJ5 EndGetDeviceAlertEx1(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.DeviceAlertService.MultiMessageOfDeviceAlertExi7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.DeviceAlertService.MultiMessageOfDeviceAlertExi7Zg_POJ5)(base.EndInvoke("GetDeviceAlertEx1", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginModifySecuritySuiteStatus(string mdvrCoreSN, Gsafety.PTMS.ServiceReference.DeviceAlertService.DeviceSuiteStatus status, Gsafety.PTMS.ServiceReference.DeviceAlertService.DeviceAlertType alertType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = mdvrCoreSN;
                _args[1] = status;
                _args[2] = alertType;
                System.IAsyncResult _result = base.BeginInvoke("ModifySecuritySuiteStatus", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.DeviceAlertService.SingleMessageOfboolean EndModifySecuritySuiteStatus(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.DeviceAlertService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.DeviceAlertService.SingleMessageOfboolean)(base.EndInvoke("ModifySecuritySuiteStatus", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateDeviceAlert(Gsafety.PTMS.ServiceReference.DeviceAlertService.DeviceAlert model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("UpdateDeviceAlert", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.DeviceAlertService.SingleMessageOfboolean EndUpdateDeviceAlert(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.DeviceAlertService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.DeviceAlertService.SingleMessageOfboolean)(base.EndInvoke("UpdateDeviceAlert", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteDeviceAlertByID(string ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ID;
                System.IAsyncResult _result = base.BeginInvoke("DeleteDeviceAlertByID", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.DeviceAlertService.SingleMessageOfboolean EndDeleteDeviceAlertByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.DeviceAlertService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.DeviceAlertService.SingleMessageOfboolean)(base.EndInvoke("DeleteDeviceAlertByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDeviceAlertList(string clientID, string vehicleID, System.Nullable<int> alertType, System.Nullable<System.DateTime> StartTime, System.Nullable<System.DateTime> EndTime, System.Collections.ObjectModel.ObservableCollection<string> stationids, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[8];
                _args[0] = clientID;
                _args[1] = vehicleID;
                _args[2] = alertType;
                _args[3] = StartTime;
                _args[4] = EndTime;
                _args[5] = stationids;
                _args[6] = pageIndex;
                _args[7] = pageSize;
                System.IAsyncResult _result = base.BeginInvoke("GetDeviceAlertList", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.DeviceAlertService.MultiMessageOfDeviceAlertWem2IK3v EndGetDeviceAlertList(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.DeviceAlertService.MultiMessageOfDeviceAlertWem2IK3v _result = ((Gsafety.PTMS.ServiceReference.DeviceAlertService.MultiMessageOfDeviceAlertWem2IK3v)(base.EndInvoke("GetDeviceAlertList", _args, result)));
                return _result;
            }
        }
    }
}
