//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace InstallationTest.InstallationSerivice {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleMessageOfstring", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    [System.SerializableAttribute()]
    public partial class SingleMessageOfstring : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDetailMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Exception ExceptionMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleMessageOfInstallationAudity_PtN1jVq", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    [System.SerializableAttribute()]
    public partial class SingleMessageOfInstallationAudity_PtN1jVq : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDetailMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Exception ExceptionMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InstallationTest.InstallationSerivice.InstallationAudit ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public InstallationTest.InstallationSerivice.InstallationAudit Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstallationAudit", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Installation.Contract")]
    [System.SerializableAttribute()]
    public partial class InstallationAudit : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AlarmCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AlarmIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApproverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ApproverTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GpsCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SelfInspectCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SelfInspectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuiteIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> VideoCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VideoFileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> VideoFileSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> VideoQualityCheckField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AlarmCheck {
            get {
                return this.AlarmCheckField;
            }
            set {
                if ((this.AlarmCheckField.Equals(value) != true)) {
                    this.AlarmCheckField = value;
                    this.RaisePropertyChanged("AlarmCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlarmId {
            get {
                return this.AlarmIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AlarmIdField, value) != true)) {
                    this.AlarmIdField = value;
                    this.RaisePropertyChanged("AlarmId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Approver {
            get {
                return this.ApproverField;
            }
            set {
                if ((object.ReferenceEquals(this.ApproverField, value) != true)) {
                    this.ApproverField = value;
                    this.RaisePropertyChanged("Approver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ApproverTime {
            get {
                return this.ApproverTimeField;
            }
            set {
                if ((this.ApproverTimeField.Equals(value) != true)) {
                    this.ApproverTimeField = value;
                    this.RaisePropertyChanged("ApproverTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GpsCheck {
            get {
                return this.GpsCheckField;
            }
            set {
                if ((this.GpsCheckField.Equals(value) != true)) {
                    this.GpsCheckField = value;
                    this.RaisePropertyChanged("GpsCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SelfInspectCheck {
            get {
                return this.SelfInspectCheckField;
            }
            set {
                if ((this.SelfInspectCheckField.Equals(value) != true)) {
                    this.SelfInspectCheckField = value;
                    this.RaisePropertyChanged("SelfInspectCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SelfInspectId {
            get {
                return this.SelfInspectIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SelfInspectIdField, value) != true)) {
                    this.SelfInspectIdField = value;
                    this.RaisePropertyChanged("SelfInspectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuiteID {
            get {
                return this.SuiteIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SuiteIDField, value) != true)) {
                    this.SuiteIDField = value;
                    this.RaisePropertyChanged("SuiteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleID {
            get {
                return this.VehicleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleIDField, value) != true)) {
                    this.VehicleIDField = value;
                    this.RaisePropertyChanged("VehicleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> VideoCheck {
            get {
                return this.VideoCheckField;
            }
            set {
                if ((this.VideoCheckField.Equals(value) != true)) {
                    this.VideoCheckField = value;
                    this.RaisePropertyChanged("VideoCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VideoFileId {
            get {
                return this.VideoFileIdField;
            }
            set {
                if ((object.ReferenceEquals(this.VideoFileIdField, value) != true)) {
                    this.VideoFileIdField = value;
                    this.RaisePropertyChanged("VideoFileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> VideoFileSize {
            get {
                return this.VideoFileSizeField;
            }
            set {
                if ((this.VideoFileSizeField.Equals(value) != true)) {
                    this.VideoFileSizeField = value;
                    this.RaisePropertyChanged("VideoFileSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> VideoQualityCheck {
            get {
                return this.VideoQualityCheckField;
            }
            set {
                if ((this.VideoQualityCheckField.Equals(value) != true)) {
                    this.VideoQualityCheckField = value;
                    this.RaisePropertyChanged("VideoQualityCheck");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleMessageOfSelfInspectInfoy_PtN1jVq", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    [System.SerializableAttribute()]
    public partial class SingleMessageOfSelfInspectInfoy_PtN1jVq : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDetailMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Exception ExceptionMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InstallationTest.InstallationSerivice.SelfInspectInfo ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public InstallationTest.InstallationSerivice.SelfInspectInfo Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SelfInspectInfo", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Installation.Contract")]
    [System.SerializableAttribute()]
    public partial class SelfInspectInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ANT_SNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Channel1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Channel2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Channel3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Channel4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurInTemperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurVoltageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GpsInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> InspectTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MdvrCoreIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Module3GField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecSDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SdCapacityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SelfInspectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Sensor1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Sensor2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Sensor3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SimCardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StandbyPowerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuiteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ANT_SN {
            get {
                return this.ANT_SNField;
            }
            set {
                if ((object.ReferenceEquals(this.ANT_SNField, value) != true)) {
                    this.ANT_SNField = value;
                    this.RaisePropertyChanged("ANT_SN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Channel1 {
            get {
                return this.Channel1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Channel1Field, value) != true)) {
                    this.Channel1Field = value;
                    this.RaisePropertyChanged("Channel1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Channel2 {
            get {
                return this.Channel2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Channel2Field, value) != true)) {
                    this.Channel2Field = value;
                    this.RaisePropertyChanged("Channel2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Channel3 {
            get {
                return this.Channel3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Channel3Field, value) != true)) {
                    this.Channel3Field = value;
                    this.RaisePropertyChanged("Channel3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Channel4 {
            get {
                return this.Channel4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Channel4Field, value) != true)) {
                    this.Channel4Field = value;
                    this.RaisePropertyChanged("Channel4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurInTemperature {
            get {
                return this.CurInTemperatureField;
            }
            set {
                if ((object.ReferenceEquals(this.CurInTemperatureField, value) != true)) {
                    this.CurInTemperatureField = value;
                    this.RaisePropertyChanged("CurInTemperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurVoltage {
            get {
                return this.CurVoltageField;
            }
            set {
                if ((object.ReferenceEquals(this.CurVoltageField, value) != true)) {
                    this.CurVoltageField = value;
                    this.RaisePropertyChanged("CurVoltage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GpsInfo {
            get {
                return this.GpsInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.GpsInfoField, value) != true)) {
                    this.GpsInfoField = value;
                    this.RaisePropertyChanged("GpsInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> InspectTime {
            get {
                return this.InspectTimeField;
            }
            set {
                if ((this.InspectTimeField.Equals(value) != true)) {
                    this.InspectTimeField = value;
                    this.RaisePropertyChanged("InspectTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrCoreId {
            get {
                return this.MdvrCoreIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrCoreIdField, value) != true)) {
                    this.MdvrCoreIdField = value;
                    this.RaisePropertyChanged("MdvrCoreId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Module3G {
            get {
                return this.Module3GField;
            }
            set {
                if ((object.ReferenceEquals(this.Module3GField, value) != true)) {
                    this.Module3GField = value;
                    this.RaisePropertyChanged("Module3G");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecSD {
            get {
                return this.RecSDField;
            }
            set {
                if ((object.ReferenceEquals(this.RecSDField, value) != true)) {
                    this.RecSDField = value;
                    this.RaisePropertyChanged("RecSD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SdCapacity {
            get {
                return this.SdCapacityField;
            }
            set {
                if ((object.ReferenceEquals(this.SdCapacityField, value) != true)) {
                    this.SdCapacityField = value;
                    this.RaisePropertyChanged("SdCapacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SelfInspectID {
            get {
                return this.SelfInspectIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SelfInspectIDField, value) != true)) {
                    this.SelfInspectIDField = value;
                    this.RaisePropertyChanged("SelfInspectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sensor1 {
            get {
                return this.Sensor1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Sensor1Field, value) != true)) {
                    this.Sensor1Field = value;
                    this.RaisePropertyChanged("Sensor1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sensor2 {
            get {
                return this.Sensor2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Sensor2Field, value) != true)) {
                    this.Sensor2Field = value;
                    this.RaisePropertyChanged("Sensor2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sensor3 {
            get {
                return this.Sensor3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Sensor3Field, value) != true)) {
                    this.Sensor3Field = value;
                    this.RaisePropertyChanged("Sensor3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SimCard {
            get {
                return this.SimCardField;
            }
            set {
                if ((object.ReferenceEquals(this.SimCardField, value) != true)) {
                    this.SimCardField = value;
                    this.RaisePropertyChanged("SimCard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StandbyPower {
            get {
                return this.StandbyPowerField;
            }
            set {
                if ((object.ReferenceEquals(this.StandbyPowerField, value) != true)) {
                    this.StandbyPowerField = value;
                    this.RaisePropertyChanged("StandbyPower");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuiteId {
            get {
                return this.SuiteIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SuiteIdField, value) != true)) {
                    this.SuiteIdField = value;
                    this.RaisePropertyChanged("SuiteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleId {
            get {
                return this.VehicleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleIdField, value) != true)) {
                    this.VehicleIdField = value;
                    this.RaisePropertyChanged("VehicleId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleMessageOfInstallInfoResulty_PtN1jVq", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    [System.SerializableAttribute()]
    public partial class SingleMessageOfInstallInfoResulty_PtN1jVq : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDetailMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Exception ExceptionMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InstallationTest.InstallationSerivice.InstallInfoResult ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public InstallationTest.InstallationSerivice.InstallInfoResult Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstallInfoResult", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Installation.Contract")]
    [System.SerializableAttribute()]
    public partial class InstallInfoResult : InstallationTest.InstallationSerivice.InstallationInfo {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InstallationTest.InstallationSerivice.InstallationAudit AuditField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InstallationTest.InstallationSerivice.InstallationInfo InstallationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public InstallationTest.InstallationSerivice.InstallationAudit Audit {
            get {
                return this.AuditField;
            }
            set {
                if ((object.ReferenceEquals(this.AuditField, value) != true)) {
                    this.AuditField = value;
                    this.RaisePropertyChanged("Audit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public InstallationTest.InstallationSerivice.InstallationInfo Installation {
            get {
                return this.InstallationField;
            }
            set {
                if ((object.ReferenceEquals(this.InstallationField, value) != true)) {
                    this.InstallationField = value;
                    this.RaisePropertyChanged("Installation");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstallationInfo", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Installation.Contract")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(InstallationTest.InstallationSerivice.InstallInfoResult))]
    public partial class InstallationInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ANT_SNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CheckStepField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FinishTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InstallationStaffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InstallationStationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InstallationStationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MdvrCoreIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RecordStaffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuiteIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuiteKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> VehicleTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ANT_SN {
            get {
                return this.ANT_SNField;
            }
            set {
                if ((object.ReferenceEquals(this.ANT_SNField, value) != true)) {
                    this.ANT_SNField = value;
                    this.RaisePropertyChanged("ANT_SN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CheckStep {
            get {
                return this.CheckStepField;
            }
            set {
                if ((this.CheckStepField.Equals(value) != true)) {
                    this.CheckStepField = value;
                    this.RaisePropertyChanged("CheckStep");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FinishTime {
            get {
                return this.FinishTimeField;
            }
            set {
                if ((this.FinishTimeField.Equals(value) != true)) {
                    this.FinishTimeField = value;
                    this.RaisePropertyChanged("FinishTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InstallationStaff {
            get {
                return this.InstallationStaffField;
            }
            set {
                if ((object.ReferenceEquals(this.InstallationStaffField, value) != true)) {
                    this.InstallationStaffField = value;
                    this.RaisePropertyChanged("InstallationStaff");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InstallationStationId {
            get {
                return this.InstallationStationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.InstallationStationIdField, value) != true)) {
                    this.InstallationStationIdField = value;
                    this.RaisePropertyChanged("InstallationStationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InstallationStationName {
            get {
                return this.InstallationStationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.InstallationStationNameField, value) != true)) {
                    this.InstallationStationNameField = value;
                    this.RaisePropertyChanged("InstallationStationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrCoreId {
            get {
                return this.MdvrCoreIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrCoreIdField, value) != true)) {
                    this.MdvrCoreIdField = value;
                    this.RaisePropertyChanged("MdvrCoreId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecordStaff {
            get {
                return this.RecordStaffField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordStaffField, value) != true)) {
                    this.RecordStaffField = value;
                    this.RaisePropertyChanged("RecordStaff");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuiteID {
            get {
                return this.SuiteIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SuiteIDField, value) != true)) {
                    this.SuiteIDField = value;
                    this.RaisePropertyChanged("SuiteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuiteKey {
            get {
                return this.SuiteKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.SuiteKeyField, value) != true)) {
                    this.SuiteKeyField = value;
                    this.RaisePropertyChanged("SuiteKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleID {
            get {
                return this.VehicleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleIDField, value) != true)) {
                    this.VehicleIDField = value;
                    this.RaisePropertyChanged("VehicleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> VehicleType {
            get {
                return this.VehicleTypeField;
            }
            set {
                if ((this.VehicleTypeField.Equals(value) != true)) {
                    this.VehicleTypeField = value;
                    this.RaisePropertyChanged("VehicleType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleTypeName {
            get {
                return this.VehicleTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleTypeNameField, value) != true)) {
                    this.VehicleTypeNameField = value;
                    this.RaisePropertyChanged("VehicleTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleMessageOfInstallationInfoy_PtN1jVq", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    [System.SerializableAttribute()]
    public partial class SingleMessageOfInstallationInfoy_PtN1jVq : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDetailMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Exception ExceptionMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InstallationTest.InstallationSerivice.InstallationInfo ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public InstallationTest.InstallationSerivice.InstallationInfo Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleMessageOfboolean", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    [System.SerializableAttribute()]
    public partial class SingleMessageOfboolean : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDetailMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Exception ExceptionMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfInstallationInfoy_PtN1jVq", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    [System.SerializableAttribute()]
    public partial class MultiMessageOfInstallationInfoy_PtN1jVq : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDetailMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Exception ExceptionMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InstallationTest.InstallationSerivice.InstallationInfo[] ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public InstallationTest.InstallationSerivice.InstallationInfo[] Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagingInfo", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    [System.SerializableAttribute()]
    public partial class PagingInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PageSizeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfInstallationAuditCollecty_PtN1jVq", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    [System.SerializableAttribute()]
    public partial class MultiMessageOfInstallationAuditCollecty_PtN1jVq : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDetailMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Exception ExceptionMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InstallationTest.InstallationSerivice.InstallationAuditCollect[] ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public InstallationTest.InstallationSerivice.InstallationAuditCollect[] Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstallationAuditCollect", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Installation.Contract")]
    [System.SerializableAttribute()]
    public partial class InstallationAuditCollect : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AlarmCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApproverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ApproverTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GpsCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SelfInspectCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuiteIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> VideoCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> VideoQualityCheckField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AlarmCheck {
            get {
                return this.AlarmCheckField;
            }
            set {
                if ((this.AlarmCheckField.Equals(value) != true)) {
                    this.AlarmCheckField = value;
                    this.RaisePropertyChanged("AlarmCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Approver {
            get {
                return this.ApproverField;
            }
            set {
                if ((object.ReferenceEquals(this.ApproverField, value) != true)) {
                    this.ApproverField = value;
                    this.RaisePropertyChanged("Approver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ApproverTime {
            get {
                return this.ApproverTimeField;
            }
            set {
                if ((this.ApproverTimeField.Equals(value) != true)) {
                    this.ApproverTimeField = value;
                    this.RaisePropertyChanged("ApproverTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GpsCheck {
            get {
                return this.GpsCheckField;
            }
            set {
                if ((this.GpsCheckField.Equals(value) != true)) {
                    this.GpsCheckField = value;
                    this.RaisePropertyChanged("GpsCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SelfInspectCheck {
            get {
                return this.SelfInspectCheckField;
            }
            set {
                if ((this.SelfInspectCheckField.Equals(value) != true)) {
                    this.SelfInspectCheckField = value;
                    this.RaisePropertyChanged("SelfInspectCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuiteID {
            get {
                return this.SuiteIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SuiteIDField, value) != true)) {
                    this.SuiteIDField = value;
                    this.RaisePropertyChanged("SuiteID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleID {
            get {
                return this.VehicleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleIDField, value) != true)) {
                    this.VehicleIDField = value;
                    this.RaisePropertyChanged("VehicleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> VideoCheck {
            get {
                return this.VideoCheckField;
            }
            set {
                if ((this.VideoCheckField.Equals(value) != true)) {
                    this.VideoCheckField = value;
                    this.RaisePropertyChanged("VideoCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> VideoQualityCheck {
            get {
                return this.VideoQualityCheckField;
            }
            set {
                if ((this.VideoQualityCheckField.Equals(value) != true)) {
                    this.VideoQualityCheckField = value;
                    this.RaisePropertyChanged("VideoQualityCheck");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfInstallationAudity_PtN1jVq", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    [System.SerializableAttribute()]
    public partial class MultiMessageOfInstallationAudity_PtN1jVq : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDetailMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Exception ExceptionMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InstallationTest.InstallationSerivice.InstallationAudit[] ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public InstallationTest.InstallationSerivice.InstallationAudit[] Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfSelfInspectInfoy_PtN1jVq", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    [System.SerializableAttribute()]
    public partial class MultiMessageOfSelfInspectInfoy_PtN1jVq : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDetailMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Exception ExceptionMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InstallationTest.InstallationSerivice.SelfInspectInfo[] ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalRecordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public InstallationTest.InstallationSerivice.SelfInspectInfo[] Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="InstallationSerivice.IDeviceInstallService")]
    public interface IDeviceInstallService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/GetInstallingSuiteVehicleId", ReplyAction="http://tempuri.org/IDeviceInstallService/GetInstallingSuiteVehicleIdResponse")]
        InstallationTest.InstallationSerivice.SingleMessageOfstring GetInstallingSuiteVehicleId(string mdvrId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/GetInstallingSuiteVehicleId", ReplyAction="http://tempuri.org/IDeviceInstallService/GetInstallingSuiteVehicleIdResponse")]
        System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.SingleMessageOfstring> GetInstallingSuiteVehicleIdAsync(string mdvrId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/CheckInstallation", ReplyAction="http://tempuri.org/IDeviceInstallService/CheckInstallationResponse")]
        InstallationTest.InstallationSerivice.SingleMessageOfInstallationAudity_PtN1jVq CheckInstallation(string installationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/CheckInstallation", ReplyAction="http://tempuri.org/IDeviceInstallService/CheckInstallationResponse")]
        System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.SingleMessageOfInstallationAudity_PtN1jVq> CheckInstallationAsync(string installationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/GetSelfInspect", ReplyAction="http://tempuri.org/IDeviceInstallService/GetSelfInspectResponse")]
        InstallationTest.InstallationSerivice.SingleMessageOfSelfInspectInfoy_PtN1jVq GetSelfInspect(string inspectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/GetSelfInspect", ReplyAction="http://tempuri.org/IDeviceInstallService/GetSelfInspectResponse")]
        System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.SingleMessageOfSelfInspectInfoy_PtN1jVq> GetSelfInspectAsync(string inspectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/GetInstallationResult", ReplyAction="http://tempuri.org/IDeviceInstallService/GetInstallationResultResponse")]
        InstallationTest.InstallationSerivice.SingleMessageOfInstallInfoResulty_PtN1jVq GetInstallationResult(string installationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/GetInstallationResult", ReplyAction="http://tempuri.org/IDeviceInstallService/GetInstallationResultResponse")]
        System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.SingleMessageOfInstallInfoResulty_PtN1jVq> GetInstallationResultAsync(string installationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/GetInstallationDetail", ReplyAction="http://tempuri.org/IDeviceInstallService/GetInstallationDetailResponse")]
        InstallationTest.InstallationSerivice.SingleMessageOfInstallationInfoy_PtN1jVq GetInstallationDetail(string installationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/GetInstallationDetail", ReplyAction="http://tempuri.org/IDeviceInstallService/GetInstallationDetailResponse")]
        System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.SingleMessageOfInstallationInfoy_PtN1jVq> GetInstallationDetailAsync(string installationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/AddInstallation", ReplyAction="http://tempuri.org/IDeviceInstallService/AddInstallationResponse")]
        InstallationTest.InstallationSerivice.SingleMessageOfboolean AddInstallation(InstallationTest.InstallationSerivice.InstallationInfo installation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/AddInstallation", ReplyAction="http://tempuri.org/IDeviceInstallService/AddInstallationResponse")]
        System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.SingleMessageOfboolean> AddInstallationAsync(InstallationTest.InstallationSerivice.InstallationInfo installation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/UpdateInstallation", ReplyAction="http://tempuri.org/IDeviceInstallService/UpdateInstallationResponse")]
        InstallationTest.InstallationSerivice.SingleMessageOfboolean UpdateInstallation(InstallationTest.InstallationSerivice.InstallationInfo installation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/UpdateInstallation", ReplyAction="http://tempuri.org/IDeviceInstallService/UpdateInstallationResponse")]
        System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.SingleMessageOfboolean> UpdateInstallationAsync(InstallationTest.InstallationSerivice.InstallationInfo installation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/PassInstallationAudit", ReplyAction="http://tempuri.org/IDeviceInstallService/PassInstallationAuditResponse")]
        InstallationTest.InstallationSerivice.SingleMessageOfboolean PassInstallationAudit(InstallationTest.InstallationSerivice.InstallationAudit audit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/PassInstallationAudit", ReplyAction="http://tempuri.org/IDeviceInstallService/PassInstallationAuditResponse")]
        System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.SingleMessageOfboolean> PassInstallationAuditAsync(InstallationTest.InstallationSerivice.InstallationAudit audit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/DeleteInstallation", ReplyAction="http://tempuri.org/IDeviceInstallService/DeleteInstallationResponse")]
        InstallationTest.InstallationSerivice.SingleMessageOfboolean DeleteInstallation(string installationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/DeleteInstallation", ReplyAction="http://tempuri.org/IDeviceInstallService/DeleteInstallationResponse")]
        System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.SingleMessageOfboolean> DeleteInstallationAsync(string installationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/AddInstallationAudit", ReplyAction="http://tempuri.org/IDeviceInstallService/AddInstallationAuditResponse")]
        InstallationTest.InstallationSerivice.SingleMessageOfboolean AddInstallationAudit(InstallationTest.InstallationSerivice.InstallationAudit audit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/AddInstallationAudit", ReplyAction="http://tempuri.org/IDeviceInstallService/AddInstallationAuditResponse")]
        System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.SingleMessageOfboolean> AddInstallationAuditAsync(InstallationTest.InstallationSerivice.InstallationAudit audit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/UpdateInstallationAudit", ReplyAction="http://tempuri.org/IDeviceInstallService/UpdateInstallationAuditResponse")]
        InstallationTest.InstallationSerivice.SingleMessageOfboolean UpdateInstallationAudit(InstallationTest.InstallationSerivice.InstallationAudit audit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/UpdateInstallationAudit", ReplyAction="http://tempuri.org/IDeviceInstallService/UpdateInstallationAuditResponse")]
        System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.SingleMessageOfboolean> UpdateInstallationAuditAsync(InstallationTest.InstallationSerivice.InstallationAudit audit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/DeleteInstallationAudit", ReplyAction="http://tempuri.org/IDeviceInstallService/DeleteInstallationAuditResponse")]
        InstallationTest.InstallationSerivice.SingleMessageOfboolean DeleteInstallationAudit(string auditId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/DeleteInstallationAudit", ReplyAction="http://tempuri.org/IDeviceInstallService/DeleteInstallationAuditResponse")]
        System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.SingleMessageOfboolean> DeleteInstallationAuditAsync(string auditId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/GetInstallationInProgress", ReplyAction="http://tempuri.org/IDeviceInstallService/GetInstallationInProgressResponse")]
        InstallationTest.InstallationSerivice.MultiMessageOfInstallationInfoy_PtN1jVq GetInstallationInProgress(string installStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/GetInstallationInProgress", ReplyAction="http://tempuri.org/IDeviceInstallService/GetInstallationInProgressResponse")]
        System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.MultiMessageOfInstallationInfoy_PtN1jVq> GetInstallationInProgressAsync(string installStationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/GetInstallationInProgressEx", ReplyAction="http://tempuri.org/IDeviceInstallService/GetInstallationInProgressExResponse")]
        InstallationTest.InstallationSerivice.MultiMessageOfInstallationInfoy_PtN1jVq GetInstallationInProgressEx(string carNumber, string suiteId, string installer, string installStationId, System.Nullable<System.DateTime> beginDate, System.Nullable<System.DateTime> endDate, InstallationTest.InstallationSerivice.PagingInfo pageInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/GetInstallationInProgressEx", ReplyAction="http://tempuri.org/IDeviceInstallService/GetInstallationInProgressExResponse")]
        System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.MultiMessageOfInstallationInfoy_PtN1jVq> GetInstallationInProgressExAsync(string carNumber, string suiteId, string installer, string installStationId, System.Nullable<System.DateTime> beginDate, System.Nullable<System.DateTime> endDate, InstallationTest.InstallationSerivice.PagingInfo pageInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/GetInstallationFinished", ReplyAction="http://tempuri.org/IDeviceInstallService/GetInstallationFinishedResponse")]
        InstallationTest.InstallationSerivice.MultiMessageOfInstallationInfoy_PtN1jVq GetInstallationFinished(string installStationId, System.DateTime beginDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/GetInstallationFinished", ReplyAction="http://tempuri.org/IDeviceInstallService/GetInstallationFinishedResponse")]
        System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.MultiMessageOfInstallationInfoy_PtN1jVq> GetInstallationFinishedAsync(string installStationId, System.DateTime beginDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/GetInstallationFinishedEx", ReplyAction="http://tempuri.org/IDeviceInstallService/GetInstallationFinishedExResponse")]
        InstallationTest.InstallationSerivice.MultiMessageOfInstallationInfoy_PtN1jVq GetInstallationFinishedEx(string carNumber, string suiteId, string installer, string installStationId, System.DateTime beginDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/GetInstallationFinishedEx", ReplyAction="http://tempuri.org/IDeviceInstallService/GetInstallationFinishedExResponse")]
        System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.MultiMessageOfInstallationInfoy_PtN1jVq> GetInstallationFinishedExAsync(string carNumber, string suiteId, string installer, string installStationId, System.DateTime beginDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/GetSuiteInstallation", ReplyAction="http://tempuri.org/IDeviceInstallService/GetSuiteInstallationResponse")]
        InstallationTest.InstallationSerivice.MultiMessageOfInstallationInfoy_PtN1jVq GetSuiteInstallation(string carNumber, string suiteId, string installer, System.Nullable<System.DateTime> beginDate, System.Nullable<System.DateTime> endDate, InstallationTest.InstallationSerivice.PagingInfo pageInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/GetSuiteInstallation", ReplyAction="http://tempuri.org/IDeviceInstallService/GetSuiteInstallationResponse")]
        System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.MultiMessageOfInstallationInfoy_PtN1jVq> GetSuiteInstallationAsync(string carNumber, string suiteId, string installer, System.Nullable<System.DateTime> beginDate, System.Nullable<System.DateTime> endDate, InstallationTest.InstallationSerivice.PagingInfo pageInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/GetInstallationFinishedEx1", ReplyAction="http://tempuri.org/IDeviceInstallService/GetInstallationFinishedEx1Response")]
        InstallationTest.InstallationSerivice.MultiMessageOfInstallationInfoy_PtN1jVq GetInstallationFinishedEx1(string carNumber, string suiteId, string installer, string installStationId, System.Nullable<System.DateTime> beginDate, System.Nullable<System.DateTime> endDate, InstallationTest.InstallationSerivice.PagingInfo pageInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/GetInstallationFinishedEx1", ReplyAction="http://tempuri.org/IDeviceInstallService/GetInstallationFinishedEx1Response")]
        System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.MultiMessageOfInstallationInfoy_PtN1jVq> GetInstallationFinishedEx1Async(string carNumber, string suiteId, string installer, string installStationId, System.Nullable<System.DateTime> beginDate, System.Nullable<System.DateTime> endDate, InstallationTest.InstallationSerivice.PagingInfo pageInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/GetInstallationAudit", ReplyAction="http://tempuri.org/IDeviceInstallService/GetInstallationAuditResponse")]
        InstallationTest.InstallationSerivice.MultiMessageOfInstallationAuditCollecty_PtN1jVq GetInstallationAudit(string carNumber, string suiteId, string installer, string installStationId, System.Nullable<System.DateTime> beginDate, System.Nullable<System.DateTime> endDate, InstallationTest.InstallationSerivice.PagingInfo pageInfo, bool onlyWaitCheck);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/GetInstallationAudit", ReplyAction="http://tempuri.org/IDeviceInstallService/GetInstallationAuditResponse")]
        System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.MultiMessageOfInstallationAuditCollecty_PtN1jVq> GetInstallationAuditAsync(string carNumber, string suiteId, string installer, string installStationId, System.Nullable<System.DateTime> beginDate, System.Nullable<System.DateTime> endDate, InstallationTest.InstallationSerivice.PagingInfo pageInfo, bool onlyWaitCheck);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/GetInstallationAuditFuzzy", ReplyAction="http://tempuri.org/IDeviceInstallService/GetInstallationAuditFuzzyResponse")]
        InstallationTest.InstallationSerivice.MultiMessageOfInstallationAudity_PtN1jVq GetInstallationAuditFuzzy(string carNumber, string suiteId, InstallationTest.InstallationSerivice.PagingInfo pageInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/GetInstallationAuditFuzzy", ReplyAction="http://tempuri.org/IDeviceInstallService/GetInstallationAuditFuzzyResponse")]
        System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.MultiMessageOfInstallationAudity_PtN1jVq> GetInstallationAuditFuzzyAsync(string carNumber, string suiteId, InstallationTest.InstallationSerivice.PagingInfo pageInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/GetInstallationInProgressFuzzy", ReplyAction="http://tempuri.org/IDeviceInstallService/GetInstallationInProgressFuzzyResponse")]
        InstallationTest.InstallationSerivice.MultiMessageOfInstallationInfoy_PtN1jVq GetInstallationInProgressFuzzy(string carNumber, string suiteId, string installStationId, System.Nullable<System.DateTime> beginDate, System.Nullable<System.DateTime> endDate, InstallationTest.InstallationSerivice.PagingInfo pageInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/GetInstallationInProgressFuzzy", ReplyAction="http://tempuri.org/IDeviceInstallService/GetInstallationInProgressFuzzyResponse")]
        System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.MultiMessageOfInstallationInfoy_PtN1jVq> GetInstallationInProgressFuzzyAsync(string carNumber, string suiteId, string installStationId, System.Nullable<System.DateTime> beginDate, System.Nullable<System.DateTime> endDate, InstallationTest.InstallationSerivice.PagingInfo pageInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/GetInstallationFinishedFuzzy", ReplyAction="http://tempuri.org/IDeviceInstallService/GetInstallationFinishedFuzzyResponse")]
        InstallationTest.InstallationSerivice.MultiMessageOfInstallationInfoy_PtN1jVq GetInstallationFinishedFuzzy(string carNumber, string suiteId, string installStationId, System.Nullable<System.DateTime> beginDate, System.Nullable<System.DateTime> endDate, InstallationTest.InstallationSerivice.PagingInfo pageInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/GetInstallationFinishedFuzzy", ReplyAction="http://tempuri.org/IDeviceInstallService/GetInstallationFinishedFuzzyResponse")]
        System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.MultiMessageOfInstallationInfoy_PtN1jVq> GetInstallationFinishedFuzzyAsync(string carNumber, string suiteId, string installStationId, System.Nullable<System.DateTime> beginDate, System.Nullable<System.DateTime> endDate, InstallationTest.InstallationSerivice.PagingInfo pageInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/UpdateBathCheckInfo", ReplyAction="http://tempuri.org/IDeviceInstallService/UpdateBathCheckInfoResponse")]
        InstallationTest.InstallationSerivice.SingleMessageOfboolean UpdateBathCheckInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/UpdateBathCheckInfo", ReplyAction="http://tempuri.org/IDeviceInstallService/UpdateBathCheckInfoResponse")]
        System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.SingleMessageOfboolean> UpdateBathCheckInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/CheckMediaFile", ReplyAction="http://tempuri.org/IDeviceInstallService/CheckMediaFileResponse")]
        InstallationTest.InstallationSerivice.SingleMessageOfboolean CheckMediaFile(string InstallId, string size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/CheckMediaFile", ReplyAction="http://tempuri.org/IDeviceInstallService/CheckMediaFileResponse")]
        System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.SingleMessageOfboolean> CheckMediaFileAsync(string InstallId, string size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/GetSuiteInspectFuzzy", ReplyAction="http://tempuri.org/IDeviceInstallService/GetSuiteInspectFuzzyResponse")]
        InstallationTest.InstallationSerivice.MultiMessageOfSelfInspectInfoy_PtN1jVq GetSuiteInspectFuzzy(string vehicleId, string suiteId, System.DateTime beginDate, System.DateTime endDate, InstallationTest.InstallationSerivice.PagingInfo pageInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDeviceInstallService/GetSuiteInspectFuzzy", ReplyAction="http://tempuri.org/IDeviceInstallService/GetSuiteInspectFuzzyResponse")]
        System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.MultiMessageOfSelfInspectInfoy_PtN1jVq> GetSuiteInspectFuzzyAsync(string vehicleId, string suiteId, System.DateTime beginDate, System.DateTime endDate, InstallationTest.InstallationSerivice.PagingInfo pageInfo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDeviceInstallServiceChannel : InstallationTest.InstallationSerivice.IDeviceInstallService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeviceInstallServiceClient : System.ServiceModel.ClientBase<InstallationTest.InstallationSerivice.IDeviceInstallService>, InstallationTest.InstallationSerivice.IDeviceInstallService {
        
        public DeviceInstallServiceClient() {
        }
        
        public DeviceInstallServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DeviceInstallServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeviceInstallServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DeviceInstallServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public InstallationTest.InstallationSerivice.SingleMessageOfstring GetInstallingSuiteVehicleId(string mdvrId) {
            return base.Channel.GetInstallingSuiteVehicleId(mdvrId);
        }
        
        public System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.SingleMessageOfstring> GetInstallingSuiteVehicleIdAsync(string mdvrId) {
            return base.Channel.GetInstallingSuiteVehicleIdAsync(mdvrId);
        }
        
        public InstallationTest.InstallationSerivice.SingleMessageOfInstallationAudity_PtN1jVq CheckInstallation(string installationId) {
            return base.Channel.CheckInstallation(installationId);
        }
        
        public System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.SingleMessageOfInstallationAudity_PtN1jVq> CheckInstallationAsync(string installationId) {
            return base.Channel.CheckInstallationAsync(installationId);
        }
        
        public InstallationTest.InstallationSerivice.SingleMessageOfSelfInspectInfoy_PtN1jVq GetSelfInspect(string inspectId) {
            return base.Channel.GetSelfInspect(inspectId);
        }
        
        public System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.SingleMessageOfSelfInspectInfoy_PtN1jVq> GetSelfInspectAsync(string inspectId) {
            return base.Channel.GetSelfInspectAsync(inspectId);
        }
        
        public InstallationTest.InstallationSerivice.SingleMessageOfInstallInfoResulty_PtN1jVq GetInstallationResult(string installationId) {
            return base.Channel.GetInstallationResult(installationId);
        }
        
        public System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.SingleMessageOfInstallInfoResulty_PtN1jVq> GetInstallationResultAsync(string installationId) {
            return base.Channel.GetInstallationResultAsync(installationId);
        }
        
        public InstallationTest.InstallationSerivice.SingleMessageOfInstallationInfoy_PtN1jVq GetInstallationDetail(string installationId) {
            return base.Channel.GetInstallationDetail(installationId);
        }
        
        public System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.SingleMessageOfInstallationInfoy_PtN1jVq> GetInstallationDetailAsync(string installationId) {
            return base.Channel.GetInstallationDetailAsync(installationId);
        }
        
        public InstallationTest.InstallationSerivice.SingleMessageOfboolean AddInstallation(InstallationTest.InstallationSerivice.InstallationInfo installation) {
            return base.Channel.AddInstallation(installation);
        }
        
        public System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.SingleMessageOfboolean> AddInstallationAsync(InstallationTest.InstallationSerivice.InstallationInfo installation) {
            return base.Channel.AddInstallationAsync(installation);
        }
        
        public InstallationTest.InstallationSerivice.SingleMessageOfboolean UpdateInstallation(InstallationTest.InstallationSerivice.InstallationInfo installation) {
            return base.Channel.UpdateInstallation(installation);
        }
        
        public System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.SingleMessageOfboolean> UpdateInstallationAsync(InstallationTest.InstallationSerivice.InstallationInfo installation) {
            return base.Channel.UpdateInstallationAsync(installation);
        }
        
        public InstallationTest.InstallationSerivice.SingleMessageOfboolean PassInstallationAudit(InstallationTest.InstallationSerivice.InstallationAudit audit) {
            return base.Channel.PassInstallationAudit(audit);
        }
        
        public System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.SingleMessageOfboolean> PassInstallationAuditAsync(InstallationTest.InstallationSerivice.InstallationAudit audit) {
            return base.Channel.PassInstallationAuditAsync(audit);
        }
        
        public InstallationTest.InstallationSerivice.SingleMessageOfboolean DeleteInstallation(string installationId) {
            return base.Channel.DeleteInstallation(installationId);
        }
        
        public System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.SingleMessageOfboolean> DeleteInstallationAsync(string installationId) {
            return base.Channel.DeleteInstallationAsync(installationId);
        }
        
        public InstallationTest.InstallationSerivice.SingleMessageOfboolean AddInstallationAudit(InstallationTest.InstallationSerivice.InstallationAudit audit) {
            return base.Channel.AddInstallationAudit(audit);
        }
        
        public System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.SingleMessageOfboolean> AddInstallationAuditAsync(InstallationTest.InstallationSerivice.InstallationAudit audit) {
            return base.Channel.AddInstallationAuditAsync(audit);
        }
        
        public InstallationTest.InstallationSerivice.SingleMessageOfboolean UpdateInstallationAudit(InstallationTest.InstallationSerivice.InstallationAudit audit) {
            return base.Channel.UpdateInstallationAudit(audit);
        }
        
        public System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.SingleMessageOfboolean> UpdateInstallationAuditAsync(InstallationTest.InstallationSerivice.InstallationAudit audit) {
            return base.Channel.UpdateInstallationAuditAsync(audit);
        }
        
        public InstallationTest.InstallationSerivice.SingleMessageOfboolean DeleteInstallationAudit(string auditId) {
            return base.Channel.DeleteInstallationAudit(auditId);
        }
        
        public System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.SingleMessageOfboolean> DeleteInstallationAuditAsync(string auditId) {
            return base.Channel.DeleteInstallationAuditAsync(auditId);
        }
        
        public InstallationTest.InstallationSerivice.MultiMessageOfInstallationInfoy_PtN1jVq GetInstallationInProgress(string installStationId) {
            return base.Channel.GetInstallationInProgress(installStationId);
        }
        
        public System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.MultiMessageOfInstallationInfoy_PtN1jVq> GetInstallationInProgressAsync(string installStationId) {
            return base.Channel.GetInstallationInProgressAsync(installStationId);
        }
        
        public InstallationTest.InstallationSerivice.MultiMessageOfInstallationInfoy_PtN1jVq GetInstallationInProgressEx(string carNumber, string suiteId, string installer, string installStationId, System.Nullable<System.DateTime> beginDate, System.Nullable<System.DateTime> endDate, InstallationTest.InstallationSerivice.PagingInfo pageInfo) {
            return base.Channel.GetInstallationInProgressEx(carNumber, suiteId, installer, installStationId, beginDate, endDate, pageInfo);
        }
        
        public System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.MultiMessageOfInstallationInfoy_PtN1jVq> GetInstallationInProgressExAsync(string carNumber, string suiteId, string installer, string installStationId, System.Nullable<System.DateTime> beginDate, System.Nullable<System.DateTime> endDate, InstallationTest.InstallationSerivice.PagingInfo pageInfo) {
            return base.Channel.GetInstallationInProgressExAsync(carNumber, suiteId, installer, installStationId, beginDate, endDate, pageInfo);
        }
        
        public InstallationTest.InstallationSerivice.MultiMessageOfInstallationInfoy_PtN1jVq GetInstallationFinished(string installStationId, System.DateTime beginDate, System.DateTime endDate) {
            return base.Channel.GetInstallationFinished(installStationId, beginDate, endDate);
        }
        
        public System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.MultiMessageOfInstallationInfoy_PtN1jVq> GetInstallationFinishedAsync(string installStationId, System.DateTime beginDate, System.DateTime endDate) {
            return base.Channel.GetInstallationFinishedAsync(installStationId, beginDate, endDate);
        }
        
        public InstallationTest.InstallationSerivice.MultiMessageOfInstallationInfoy_PtN1jVq GetInstallationFinishedEx(string carNumber, string suiteId, string installer, string installStationId, System.DateTime beginDate, System.DateTime endDate) {
            return base.Channel.GetInstallationFinishedEx(carNumber, suiteId, installer, installStationId, beginDate, endDate);
        }
        
        public System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.MultiMessageOfInstallationInfoy_PtN1jVq> GetInstallationFinishedExAsync(string carNumber, string suiteId, string installer, string installStationId, System.DateTime beginDate, System.DateTime endDate) {
            return base.Channel.GetInstallationFinishedExAsync(carNumber, suiteId, installer, installStationId, beginDate, endDate);
        }
        
        public InstallationTest.InstallationSerivice.MultiMessageOfInstallationInfoy_PtN1jVq GetSuiteInstallation(string carNumber, string suiteId, string installer, System.Nullable<System.DateTime> beginDate, System.Nullable<System.DateTime> endDate, InstallationTest.InstallationSerivice.PagingInfo pageInfo) {
            return base.Channel.GetSuiteInstallation(carNumber, suiteId, installer, beginDate, endDate, pageInfo);
        }
        
        public System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.MultiMessageOfInstallationInfoy_PtN1jVq> GetSuiteInstallationAsync(string carNumber, string suiteId, string installer, System.Nullable<System.DateTime> beginDate, System.Nullable<System.DateTime> endDate, InstallationTest.InstallationSerivice.PagingInfo pageInfo) {
            return base.Channel.GetSuiteInstallationAsync(carNumber, suiteId, installer, beginDate, endDate, pageInfo);
        }
        
        public InstallationTest.InstallationSerivice.MultiMessageOfInstallationInfoy_PtN1jVq GetInstallationFinishedEx1(string carNumber, string suiteId, string installer, string installStationId, System.Nullable<System.DateTime> beginDate, System.Nullable<System.DateTime> endDate, InstallationTest.InstallationSerivice.PagingInfo pageInfo) {
            return base.Channel.GetInstallationFinishedEx1(carNumber, suiteId, installer, installStationId, beginDate, endDate, pageInfo);
        }
        
        public System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.MultiMessageOfInstallationInfoy_PtN1jVq> GetInstallationFinishedEx1Async(string carNumber, string suiteId, string installer, string installStationId, System.Nullable<System.DateTime> beginDate, System.Nullable<System.DateTime> endDate, InstallationTest.InstallationSerivice.PagingInfo pageInfo) {
            return base.Channel.GetInstallationFinishedEx1Async(carNumber, suiteId, installer, installStationId, beginDate, endDate, pageInfo);
        }
        
        public InstallationTest.InstallationSerivice.MultiMessageOfInstallationAuditCollecty_PtN1jVq GetInstallationAudit(string carNumber, string suiteId, string installer, string installStationId, System.Nullable<System.DateTime> beginDate, System.Nullable<System.DateTime> endDate, InstallationTest.InstallationSerivice.PagingInfo pageInfo, bool onlyWaitCheck) {
            return base.Channel.GetInstallationAudit(carNumber, suiteId, installer, installStationId, beginDate, endDate, pageInfo, onlyWaitCheck);
        }
        
        public System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.MultiMessageOfInstallationAuditCollecty_PtN1jVq> GetInstallationAuditAsync(string carNumber, string suiteId, string installer, string installStationId, System.Nullable<System.DateTime> beginDate, System.Nullable<System.DateTime> endDate, InstallationTest.InstallationSerivice.PagingInfo pageInfo, bool onlyWaitCheck) {
            return base.Channel.GetInstallationAuditAsync(carNumber, suiteId, installer, installStationId, beginDate, endDate, pageInfo, onlyWaitCheck);
        }
        
        public InstallationTest.InstallationSerivice.MultiMessageOfInstallationAudity_PtN1jVq GetInstallationAuditFuzzy(string carNumber, string suiteId, InstallationTest.InstallationSerivice.PagingInfo pageInfo) {
            return base.Channel.GetInstallationAuditFuzzy(carNumber, suiteId, pageInfo);
        }
        
        public System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.MultiMessageOfInstallationAudity_PtN1jVq> GetInstallationAuditFuzzyAsync(string carNumber, string suiteId, InstallationTest.InstallationSerivice.PagingInfo pageInfo) {
            return base.Channel.GetInstallationAuditFuzzyAsync(carNumber, suiteId, pageInfo);
        }
        
        public InstallationTest.InstallationSerivice.MultiMessageOfInstallationInfoy_PtN1jVq GetInstallationInProgressFuzzy(string carNumber, string suiteId, string installStationId, System.Nullable<System.DateTime> beginDate, System.Nullable<System.DateTime> endDate, InstallationTest.InstallationSerivice.PagingInfo pageInfo) {
            return base.Channel.GetInstallationInProgressFuzzy(carNumber, suiteId, installStationId, beginDate, endDate, pageInfo);
        }
        
        public System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.MultiMessageOfInstallationInfoy_PtN1jVq> GetInstallationInProgressFuzzyAsync(string carNumber, string suiteId, string installStationId, System.Nullable<System.DateTime> beginDate, System.Nullable<System.DateTime> endDate, InstallationTest.InstallationSerivice.PagingInfo pageInfo) {
            return base.Channel.GetInstallationInProgressFuzzyAsync(carNumber, suiteId, installStationId, beginDate, endDate, pageInfo);
        }
        
        public InstallationTest.InstallationSerivice.MultiMessageOfInstallationInfoy_PtN1jVq GetInstallationFinishedFuzzy(string carNumber, string suiteId, string installStationId, System.Nullable<System.DateTime> beginDate, System.Nullable<System.DateTime> endDate, InstallationTest.InstallationSerivice.PagingInfo pageInfo) {
            return base.Channel.GetInstallationFinishedFuzzy(carNumber, suiteId, installStationId, beginDate, endDate, pageInfo);
        }
        
        public System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.MultiMessageOfInstallationInfoy_PtN1jVq> GetInstallationFinishedFuzzyAsync(string carNumber, string suiteId, string installStationId, System.Nullable<System.DateTime> beginDate, System.Nullable<System.DateTime> endDate, InstallationTest.InstallationSerivice.PagingInfo pageInfo) {
            return base.Channel.GetInstallationFinishedFuzzyAsync(carNumber, suiteId, installStationId, beginDate, endDate, pageInfo);
        }
        
        public InstallationTest.InstallationSerivice.SingleMessageOfboolean UpdateBathCheckInfo() {
            return base.Channel.UpdateBathCheckInfo();
        }
        
        public System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.SingleMessageOfboolean> UpdateBathCheckInfoAsync() {
            return base.Channel.UpdateBathCheckInfoAsync();
        }
        
        public InstallationTest.InstallationSerivice.SingleMessageOfboolean CheckMediaFile(string InstallId, string size) {
            return base.Channel.CheckMediaFile(InstallId, size);
        }
        
        public System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.SingleMessageOfboolean> CheckMediaFileAsync(string InstallId, string size) {
            return base.Channel.CheckMediaFileAsync(InstallId, size);
        }
        
        public InstallationTest.InstallationSerivice.MultiMessageOfSelfInspectInfoy_PtN1jVq GetSuiteInspectFuzzy(string vehicleId, string suiteId, System.DateTime beginDate, System.DateTime endDate, InstallationTest.InstallationSerivice.PagingInfo pageInfo) {
            return base.Channel.GetSuiteInspectFuzzy(vehicleId, suiteId, beginDate, endDate, pageInfo);
        }
        
        public System.Threading.Tasks.Task<InstallationTest.InstallationSerivice.MultiMessageOfSelfInspectInfoy_PtN1jVq> GetSuiteInspectFuzzyAsync(string vehicleId, string suiteId, System.DateTime beginDate, System.DateTime endDate, InstallationTest.InstallationSerivice.PagingInfo pageInfo) {
            return base.Channel.GetSuiteInspectFuzzyAsync(vehicleId, suiteId, beginDate, endDate, pageInfo);
        }
    }
}
