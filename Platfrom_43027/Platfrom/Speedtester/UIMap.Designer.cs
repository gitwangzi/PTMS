// ------------------------------------------------------------------------------
//  <auto-generated>
//      此代码由编码的 UI 测试生成器生成。
//      版本: 11.0.0.0
//
//      如果重新生成代码，则更改此文件可能会导致错误的行为，
//      并将丢失这些更改。
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Speedtester
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.SilverlightControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// AddSpeedRule - 使用“AddSpeedRuleParams”将参数传递到此方法中。
        /// </summary>
        public void AddSpeedRule()
        {
            #region Variable Declarations
            SilverlightEdit uIItemEdit = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage1.UI规则名称Text.UIItemEdit;
            SilverlightEdit uIItemEdit1 = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage1.UI最大速度kmhText.UIItemEdit;
            SilverlightEdit uIItemEdit2 = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage1.UI持续时间秒Text.UIItemEdit;
            SilverlightButton uIItemButton = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage1.UI选择车辆Text.UIItemButton;
            WinButton uI确定Button = this.UI提示Window.UI确定Window.UI确定Button;
            #endregion

            // 在 “规则名称” 后面的第一个 文本框 标签 中键入“opop”
            uIItemEdit.Text = this.AddSpeedRuleParams.UIItemEditText;

            // 在 “最大速度(km/h)” 后面的第一个 文本框 标签 中键入“38”
            uIItemEdit1.Text = this.AddSpeedRuleParams.UIItemEditText1;

            // 在 “持续时间( 秒)” 后面的第一个 文本框 标签 中键入“6”
            uIItemEdit2.Text = this.AddSpeedRuleParams.UIItemEditText2;

            // 单击 “选择车辆” 后面的第一个 按钮 标签
            Mouse.Click(uIItemButton, new Point(41, 14));

            // 单击 “确定” 按钮
            Mouse.Click(uI确定Button, new Point(31, 10));
        }
        
        /// <summary>
        /// ResetSpeed - 使用“ResetSpeedParams”将参数传递到此方法中。
        /// </summary>
        public void ResetSpeed()
        {
            #region Variable Declarations
            SilverlightEdit uIItemEdit = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage1.UI规则名称Text.UIItemEdit;
            SilverlightFrame uIContentFrameFrame = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIContentFrameFrame;
            SilverlightEdit uIItemEdit1 = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage1.UI最大速度kmhText.UIItemEdit;
            SilverlightEdit uIItemEdit2 = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage1.UI持续时间秒Text.UIItemEdit;
            SilverlightEdit uIFilterTextBoxEdit = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage1.UIFilterTextBoxEdit;
            SilverlightButton uIItemButton1 = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage1.UI选择车辆Text.UIItemButton1;
            #endregion

            // 在 “规则名称” 后面的第一个 文本框 标签 中键入“speed”
            uIItemEdit.Text = this.ResetSpeedParams.UIItemEditText;

            // 单击 “ContentFrame” Frame
            Mouse.Click(uIContentFrameFrame, new Point(225, 127));

            // 在 “最大速度(km/h)” 后面的第一个 文本框 标签 中键入“4”
            uIItemEdit1.Text = this.ResetSpeedParams.UIItemEditText1;

            // 在 “持续时间( 秒)” 后面的第一个 文本框 标签 中键入“5”
            uIItemEdit2.Text = this.ResetSpeedParams.UIItemEditText2;

            // 在 “FilterTextBox” 文本框 中键入“sdrtfge”
            uIFilterTextBoxEdit.Text = this.ResetSpeedParams.UIFilterTextBoxEditText;

            // 单击 “选择车辆” 后面的第 2 个 按钮 标签
            Mouse.Click(uIItemButton1, new Point(53, 12));
        }
        
        /// <summary>
        /// SaveAndSetting - 使用“SaveAndSettingParams”将参数传递到此方法中。
        /// </summary>
        public void SaveAndSetting()
        {
            #region Variable Declarations
            SilverlightEdit uIItemEdit = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage1.UI规则名称Text.UIItemEdit;
            SilverlightEdit uIItemEdit1 = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage1.UI最大速度kmhText.UIItemEdit;
            SilverlightEdit uIItemEdit2 = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage1.UI持续时间秒Text.UIItemEdit;
            SilverlightEdit uIFilterTextBoxEdit = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage1.UIFilterTextBoxEdit;
            SilverlightButton uIItemButton2 = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage1.UI选择车辆Text.UIItemButton2;
            WinButton uI确定Button = this.UI提示Window.UI确定Window.UI确定Button;
            #endregion

            // 在 “规则名称” 后面的第一个 文本框 标签 中键入“hhhhh”
            uIItemEdit.Text = this.SaveAndSettingParams.UIItemEditText;

            // 在 “最大速度(km/h)” 后面的第一个 文本框 标签 中键入“33”
            uIItemEdit1.Text = this.SaveAndSettingParams.UIItemEditText1;

            // 未录制上一个鼠标操作。

            // 在 “最大速度(km/h)” 后面的第一个 文本框 标签 中键入“333”
            uIItemEdit1.Text = this.SaveAndSettingParams.UIItemEditText2;

            // 在 “持续时间( 秒)” 后面的第一个 文本框 标签 中键入“3”
            uIItemEdit2.Text = this.SaveAndSettingParams.UIItemEditText3;

            // 在 “FilterTextBox” 文本框 中键入“”
            uIFilterTextBoxEdit.Text = this.SaveAndSettingParams.UIFilterTextBoxEditText;

            // 单击 “选择车辆” 后面的第 3 个 按钮 标签
            Mouse.Click(uIItemButton2, new Point(50, 21));

            // 单击 “确定” 按钮
            Mouse.Click(uI确定Button, new Point(31, 26));

            // The request for data about the Silverlight control timed out. Verify that the Silverlight application under test is running.
        }
        
        /// <summary>
        /// Modify - 使用“ModifyParams”将参数传递到此方法中。
        /// </summary>
        public void Modify()
        {
            #region Variable Declarations
            SilverlightEdit uIItemEdit = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage1.UI最大速度kmhText.UIItemEdit;
            SilverlightEdit uIItemEdit1 = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage1.UI持续时间秒Text.UIItemEdit;
            SilverlightButton uIItemButton = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage1.UI持续时间秒Text.UIItemButton;
            WinButton uI确定Button = this.UI提示Window.UI确定Window.UI确定Button;
            #endregion

            // 在 “最大速度(km/h)” 后面的第一个 文本框 标签 中键入“200”
            uIItemEdit.Text = this.ModifyParams.UIItemEditText;

            // 在 “持续时间( 秒)” 后面的第一个 文本框 标签 中键入“3”
            uIItemEdit1.Text = this.ModifyParams.UIItemEditText1;

            // 单击 “持续时间( 秒)” 后面的第一个 按钮 标签
            Mouse.Click(uIItemButton, new Point(56, 16));

            // 单击 “确定” 按钮
            Mouse.Click(uI确定Button, new Point(54, 14));
        }
        
        #region Properties
        public virtual AddSpeedRuleParams AddSpeedRuleParams
        {
            get
            {
                if ((this.mAddSpeedRuleParams == null))
                {
                    this.mAddSpeedRuleParams = new AddSpeedRuleParams();
                }
                return this.mAddSpeedRuleParams;
            }
        }
        
        public virtual ResetSpeedParams ResetSpeedParams
        {
            get
            {
                if ((this.mResetSpeedParams == null))
                {
                    this.mResetSpeedParams = new ResetSpeedParams();
                }
                return this.mResetSpeedParams;
            }
        }
        
        public virtual SaveAndSettingParams SaveAndSettingParams
        {
            get
            {
                if ((this.mSaveAndSettingParams == null))
                {
                    this.mSaveAndSettingParams = new SaveAndSettingParams();
                }
                return this.mSaveAndSettingParams;
            }
        }
        
        public virtual ModifyParams ModifyParams
        {
            get
            {
                if ((this.mModifyParams == null))
                {
                    this.mModifyParams = new ModifyParams();
                }
                return this.mModifyParams;
            }
        }
        
        public UIPTMSWindowsInternetEWindow UIPTMSWindowsInternetEWindow
        {
            get
            {
                if ((this.mUIPTMSWindowsInternetEWindow == null))
                {
                    this.mUIPTMSWindowsInternetEWindow = new UIPTMSWindowsInternetEWindow();
                }
                return this.mUIPTMSWindowsInternetEWindow;
            }
        }
        
        public UI提示Window UI提示Window
        {
            get
            {
                if ((this.mUI提示Window == null))
                {
                    this.mUI提示Window = new UI提示Window();
                }
                return this.mUI提示Window;
            }
        }
        #endregion
        
        #region Fields
        private AddSpeedRuleParams mAddSpeedRuleParams;
        
        private ResetSpeedParams mResetSpeedParams;
        
        private SaveAndSettingParams mSaveAndSettingParams;
        
        private ModifyParams mModifyParams;
        
        private UIPTMSWindowsInternetEWindow mUIPTMSWindowsInternetEWindow;
        
        private UI提示Window mUI提示Window;
        #endregion
    }
    
    /// <summary>
    /// 要传递到“AddSpeedRule”中的参数
    /// </summary>
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class AddSpeedRuleParams
    {
        
        #region Fields
        /// <summary>
        /// 在 “规则名称” 后面的第一个 文本框 标签 中键入“opop”
        /// </summary>
        public string UIItemEditText = "opop";
        
        /// <summary>
        /// 在 “最大速度(km/h)” 后面的第一个 文本框 标签 中键入“38”
        /// </summary>
        public string UIItemEditText1 = "38";
        
        /// <summary>
        /// 在 “持续时间( 秒)” 后面的第一个 文本框 标签 中键入“6”
        /// </summary>
        public string UIItemEditText2 = "6";
        #endregion
    }
    
    /// <summary>
    /// 要传递到“ResetSpeed”中的参数
    /// </summary>
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class ResetSpeedParams
    {
        
        #region Fields
        /// <summary>
        /// 在 “规则名称” 后面的第一个 文本框 标签 中键入“speed”
        /// </summary>
        public string UIItemEditText = "speed";
        
        /// <summary>
        /// 在 “最大速度(km/h)” 后面的第一个 文本框 标签 中键入“4”
        /// </summary>
        public string UIItemEditText1 = "4";
        
        /// <summary>
        /// 在 “持续时间( 秒)” 后面的第一个 文本框 标签 中键入“5”
        /// </summary>
        public string UIItemEditText2 = "5";
        
        /// <summary>
        /// 在 “FilterTextBox” 文本框 中键入“sdrtfge”
        /// </summary>
        public string UIFilterTextBoxEditText = "sdrtfge";
        #endregion
    }
    
    /// <summary>
    /// 要传递到“SaveAndSetting”中的参数
    /// </summary>
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class SaveAndSettingParams
    {
        
        #region Fields
        /// <summary>
        /// 在 “规则名称” 后面的第一个 文本框 标签 中键入“hhhhh”
        /// </summary>
        public string UIItemEditText = "hhhhh";
        
        /// <summary>
        /// 在 “最大速度(km/h)” 后面的第一个 文本框 标签 中键入“33”
        /// </summary>
        public string UIItemEditText1 = "33";
        
        /// <summary>
        /// 在 “最大速度(km/h)” 后面的第一个 文本框 标签 中键入“333”
        /// </summary>
        public string UIItemEditText2 = "333";
        
        /// <summary>
        /// 在 “持续时间( 秒)” 后面的第一个 文本框 标签 中键入“3”
        /// </summary>
        public string UIItemEditText3 = "3";
        
        /// <summary>
        /// 在 “FilterTextBox” 文本框 中键入“”
        /// </summary>
        public string UIFilterTextBoxEditText = "";
        #endregion
    }
    
    /// <summary>
    /// 要传递到“Modify”中的参数
    /// </summary>
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class ModifyParams
    {
        
        #region Fields
        /// <summary>
        /// 在 “最大速度(km/h)” 后面的第一个 文本框 标签 中键入“200”
        /// </summary>
        public string UIItemEditText = "200";
        
        /// <summary>
        /// 在 “持续时间( 秒)” 后面的第一个 文本框 标签 中键入“3”
        /// </summary>
        public string UIItemEditText1 = "3";
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UIPTMSWindowsInternetEWindow : BrowserWindow
    {
        
        public UIPTMSWindowsInternetEWindow()
        {
            #region 搜索条件
            this.SearchProperties[UITestControl.PropertyNames.Name] = "PTMS";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIPTMSDocument UIPTMSDocument
        {
            get
            {
                if ((this.mUIPTMSDocument == null))
                {
                    this.mUIPTMSDocument = new UIPTMSDocument(this);
                }
                return this.mUIPTMSDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIPTMSDocument mUIPTMSDocument;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UIPTMSDocument : HtmlDocument
    {
        
        public UIPTMSDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "PTMS";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/ptms/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://10.1.8.211/ptms/";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public UISilverlightControlCustom UISilverlightControlCustom
        {
            get
            {
                if ((this.mUISilverlightControlCustom == null))
                {
                    this.mUISilverlightControlCustom = new UISilverlightControlCustom(this);
                }
                return this.mUISilverlightControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISilverlightControlCustom mUISilverlightControlCustom;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UISilverlightControlCustom : HtmlCustom
    {
        
        public UISilverlightControlCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties["TagName"] = "OBJECT";
            this.SearchProperties["Id"] = "silverlightControl";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=silverlightControl codeBase=\"SDK/Silv";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public UIPagePage UIPagePage
        {
            get
            {
                if ((this.mUIPagePage == null))
                {
                    this.mUIPagePage = new UIPagePage(this);
                }
                return this.mUIPagePage;
            }
        }
        #endregion
        
        #region Fields
        private UIPagePage mUIPagePage;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UIPagePage : SilverlightPage
    {
        
        public UIPagePage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightPage.PropertyNames.Title] = "LoginPage Page";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public UIItemPage UIItemPage
        {
            get
            {
                if ((this.mUIItemPage == null))
                {
                    this.mUIItemPage = new UIItemPage(this);
                }
                return this.mUIItemPage;
            }
        }
        #endregion
        
        #region Fields
        private UIItemPage mUIItemPage;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UIItemPage : SilverlightPage
    {
        
        public UIItemPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightPage.PropertyNames.Source] = "/TrafficMainPage";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public UIItemPage1 UIItemPage1
        {
            get
            {
                if ((this.mUIItemPage1 == null))
                {
                    this.mUIItemPage1 = new UIItemPage1(this);
                }
                return this.mUIItemPage1;
            }
        }
        
        public SilverlightFrame UIContentFrameFrame
        {
            get
            {
                if ((this.mUIContentFrameFrame == null))
                {
                    this.mUIContentFrameFrame = new SilverlightFrame(this);
                    #region 搜索条件
                    this.mUIContentFrameFrame.SearchProperties[SilverlightFrame.PropertyNames.AutomationId] = "ContentFrame";
                    this.mUIContentFrameFrame.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIContentFrameFrame;
            }
        }
        #endregion
        
        #region Fields
        private UIItemPage1 mUIItemPage1;
        
        private SilverlightFrame mUIContentFrameFrame;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UIItemPage1 : SilverlightPage
    {
        
        public UIItemPage1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightPage.PropertyNames.Title] = "公共交通整体安全系统";
            this.SearchProperties[SilverlightPage.PropertyNames.Source] = "/SpeedRulesView";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public UI规则名称Text UI规则名称Text
        {
            get
            {
                if ((this.mUI规则名称Text == null))
                {
                    this.mUI规则名称Text = new UI规则名称Text(this);
                }
                return this.mUI规则名称Text;
            }
        }
        
        public UI最大速度kmhText UI最大速度kmhText
        {
            get
            {
                if ((this.mUI最大速度kmhText == null))
                {
                    this.mUI最大速度kmhText = new UI最大速度kmhText(this);
                }
                return this.mUI最大速度kmhText;
            }
        }
        
        public UI持续时间秒Text UI持续时间秒Text
        {
            get
            {
                if ((this.mUI持续时间秒Text == null))
                {
                    this.mUI持续时间秒Text = new UI持续时间秒Text(this);
                }
                return this.mUI持续时间秒Text;
            }
        }
        
        public UI选择车辆Text UI选择车辆Text
        {
            get
            {
                if ((this.mUI选择车辆Text == null))
                {
                    this.mUI选择车辆Text = new UI选择车辆Text(this);
                }
                return this.mUI选择车辆Text;
            }
        }
        
        public SilverlightEdit UIFilterTextBoxEdit
        {
            get
            {
                if ((this.mUIFilterTextBoxEdit == null))
                {
                    this.mUIFilterTextBoxEdit = new SilverlightEdit(this);
                    #region 搜索条件
                    this.mUIFilterTextBoxEdit.SearchProperties[SilverlightEdit.PropertyNames.AutomationId] = "FilterTextBox";
                    this.mUIFilterTextBoxEdit.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIFilterTextBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private UI规则名称Text mUI规则名称Text;
        
        private UI最大速度kmhText mUI最大速度kmhText;
        
        private UI持续时间秒Text mUI持续时间秒Text;
        
        private UI选择车辆Text mUI选择车辆Text;
        
        private SilverlightEdit mUIFilterTextBoxEdit;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI规则名称Text : SilverlightText
    {
        
        public UI规则名称Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "规则名称";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new SilverlightEdit(this);
                    #region 搜索条件
                    this.mUIItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemEdit.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI最大速度kmhText : SilverlightText
    {
        
        public UI最大速度kmhText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "最大速度(km/h)";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new SilverlightEdit(this);
                    #region 搜索条件
                    this.mUIItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemEdit.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI持续时间秒Text : SilverlightText
    {
        
        public UI持续时间秒Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "持续时间( 秒)";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new SilverlightEdit(this);
                    #region 搜索条件
                    this.mUIItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemEdit.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        
        public SilverlightButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new SilverlightButton(this);
                    #region 搜索条件
                    this.mUIItemButton.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemButton.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightEdit mUIItemEdit;
        
        private SilverlightButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI选择车辆Text : SilverlightText
    {
        
        public UI选择车辆Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "选择车辆";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new SilverlightButton(this);
                    #region 搜索条件
                    this.mUIItemButton.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemButton.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        
        public SilverlightButton UIItemButton1
        {
            get
            {
                if ((this.mUIItemButton1 == null))
                {
                    this.mUIItemButton1 = new SilverlightButton(this);
                    #region 搜索条件
                    this.mUIItemButton1.SearchProperties[SilverlightButton.PropertyNames.Instance] = "2";
                    this.mUIItemButton1.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemButton1.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemButton1;
            }
        }
        
        public SilverlightButton UIItemButton2
        {
            get
            {
                if ((this.mUIItemButton2 == null))
                {
                    this.mUIItemButton2 = new SilverlightButton(this);
                    #region 搜索条件
                    this.mUIItemButton2.SearchProperties[SilverlightButton.PropertyNames.Instance] = "3";
                    this.mUIItemButton2.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemButton2.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemButton2;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightButton mUIItemButton;
        
        private SilverlightButton mUIItemButton1;
        
        private SilverlightButton mUIItemButton2;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI提示Window : WinWindow
    {
        
        public UI提示Window()
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.Name] = "提示";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("提示");
            #endregion
        }
        
        #region Properties
        public UI确定Window UI确定Window
        {
            get
            {
                if ((this.mUI确定Window == null))
                {
                    this.mUI确定Window = new UI确定Window(this);
                }
                return this.mUI确定Window;
            }
        }
        #endregion
        
        #region Fields
        private UI确定Window mUI确定Window;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI确定Window : WinWindow
    {
        
        public UI确定Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("提示");
            #endregion
        }
        
        #region Properties
        public WinButton UI确定Button
        {
            get
            {
                if ((this.mUI确定Button == null))
                {
                    this.mUI确定Button = new WinButton(this);
                    #region 搜索条件
                    this.mUI确定Button.SearchProperties[WinButton.PropertyNames.Name] = "确定";
                    this.mUI确定Button.WindowTitles.Add("提示");
                    #endregion
                }
                return this.mUI确定Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUI确定Button;
        #endregion
    }
}
