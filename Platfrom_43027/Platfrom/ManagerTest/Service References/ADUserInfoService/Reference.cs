//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gsafety.Ant.Manager.Test.ADUserInfoService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ADAccountInfo", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.Ant.Manager.Contract.Data")]
    [System.SerializableAttribute()]
    public partial class ADAccountInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrgCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrgNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvinceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvinceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecurityGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserLoginNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserPasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityCode {
            get {
                return this.CityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CityCodeField, value) != true)) {
                    this.CityCodeField = value;
                    this.RaisePropertyChanged("CityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Level {
            get {
                return this.LevelField;
            }
            set {
                if ((this.LevelField.Equals(value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrgCode {
            get {
                return this.OrgCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrgCodeField, value) != true)) {
                    this.OrgCodeField = value;
                    this.RaisePropertyChanged("OrgCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrgName {
            get {
                return this.OrgNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrgNameField, value) != true)) {
                    this.OrgNameField = value;
                    this.RaisePropertyChanged("OrgName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProvinceCode {
            get {
                return this.ProvinceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceCodeField, value) != true)) {
                    this.ProvinceCodeField = value;
                    this.RaisePropertyChanged("ProvinceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProvinceName {
            get {
                return this.ProvinceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceNameField, value) != true)) {
                    this.ProvinceNameField = value;
                    this.RaisePropertyChanged("ProvinceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityGroup {
            get {
                return this.SecurityGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityGroupField, value) != true)) {
                    this.SecurityGroupField = value;
                    this.RaisePropertyChanged("SecurityGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserLoginName {
            get {
                return this.UserLoginNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserLoginNameField, value) != true)) {
                    this.UserLoginNameField = value;
                    this.RaisePropertyChanged("UserLoginName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserPassword {
            get {
                return this.UserPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.UserPasswordField, value) != true)) {
                    this.UserPasswordField = value;
                    this.RaisePropertyChanged("UserPassword");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleMessageOfboolean", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    [System.SerializableAttribute()]
    public partial class SingleMessageOfboolean : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Exception ExceptionMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleMessageOfADAccountInfos_Pk8VuiR", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    [System.SerializableAttribute()]
    public partial class SingleMessageOfADAccountInfos_Pk8VuiR : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Exception ExceptionMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Gsafety.Ant.Manager.Test.ADUserInfoService.ADAccountInfo ResultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.Ant.Manager.Test.ADUserInfoService.ADAccountInfo Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ADUserInfoService.IADAccountService")]
    public interface IADAccountService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADAccountService/AddAccount", ReplyAction="http://tempuri.org/IADAccountService/AddAccountResponse")]
        Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfboolean AddAccount(Gsafety.Ant.Manager.Test.ADUserInfoService.ADAccountInfo model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADAccountService/AddAccount", ReplyAction="http://tempuri.org/IADAccountService/AddAccountResponse")]
        System.Threading.Tasks.Task<Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfboolean> AddAccountAsync(Gsafety.Ant.Manager.Test.ADUserInfoService.ADAccountInfo model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADAccountService/UpdateAccount", ReplyAction="http://tempuri.org/IADAccountService/UpdateAccountResponse")]
        Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfboolean UpdateAccount(Gsafety.Ant.Manager.Test.ADUserInfoService.ADAccountInfo user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADAccountService/UpdateAccount", ReplyAction="http://tempuri.org/IADAccountService/UpdateAccountResponse")]
        System.Threading.Tasks.Task<Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfboolean> UpdateAccountAsync(Gsafety.Ant.Manager.Test.ADUserInfoService.ADAccountInfo user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADAccountService/DeleteAccount", ReplyAction="http://tempuri.org/IADAccountService/DeleteAccountResponse")]
        Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfboolean DeleteAccount(string userAccountname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADAccountService/DeleteAccount", ReplyAction="http://tempuri.org/IADAccountService/DeleteAccountResponse")]
        System.Threading.Tasks.Task<Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfboolean> DeleteAccountAsync(string userAccountname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADAccountService/GetAccount", ReplyAction="http://tempuri.org/IADAccountService/GetAccountResponse")]
        Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfADAccountInfos_Pk8VuiR GetAccount(string account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADAccountService/GetAccount", ReplyAction="http://tempuri.org/IADAccountService/GetAccountResponse")]
        System.Threading.Tasks.Task<Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfADAccountInfos_Pk8VuiR> GetAccountAsync(string account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADAccountService/ValidateUser", ReplyAction="http://tempuri.org/IADAccountService/ValidateUserResponse")]
        Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfADAccountInfos_Pk8VuiR ValidateUser(string account, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADAccountService/ValidateUser", ReplyAction="http://tempuri.org/IADAccountService/ValidateUserResponse")]
        System.Threading.Tasks.Task<Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfADAccountInfos_Pk8VuiR> ValidateUserAsync(string account, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADAccountService/IsUserExits", ReplyAction="http://tempuri.org/IADAccountService/IsUserExitsResponse")]
        Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfboolean IsUserExits(string account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADAccountService/IsUserExits", ReplyAction="http://tempuri.org/IADAccountService/IsUserExitsResponse")]
        System.Threading.Tasks.Task<Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfboolean> IsUserExitsAsync(string account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADAccountService/EnableAccount", ReplyAction="http://tempuri.org/IADAccountService/EnableAccountResponse")]
        Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfboolean EnableAccount(string account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADAccountService/EnableAccount", ReplyAction="http://tempuri.org/IADAccountService/EnableAccountResponse")]
        System.Threading.Tasks.Task<Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfboolean> EnableAccountAsync(string account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADAccountService/DisableAccount", ReplyAction="http://tempuri.org/IADAccountService/DisableAccountResponse")]
        Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfboolean DisableAccount(string account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADAccountService/DisableAccount", ReplyAction="http://tempuri.org/IADAccountService/DisableAccountResponse")]
        System.Threading.Tasks.Task<Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfboolean> DisableAccountAsync(string account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADAccountService/ResetPassword", ReplyAction="http://tempuri.org/IADAccountService/ResetPasswordResponse")]
        Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfboolean ResetPassword(string accountName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IADAccountService/ResetPassword", ReplyAction="http://tempuri.org/IADAccountService/ResetPasswordResponse")]
        System.Threading.Tasks.Task<Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfboolean> ResetPasswordAsync(string accountName, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IADAccountServiceChannel : Gsafety.Ant.Manager.Test.ADUserInfoService.IADAccountService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ADAccountServiceClient : System.ServiceModel.ClientBase<Gsafety.Ant.Manager.Test.ADUserInfoService.IADAccountService>, Gsafety.Ant.Manager.Test.ADUserInfoService.IADAccountService {
        
        public ADAccountServiceClient() {
        }
        
        public ADAccountServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ADAccountServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ADAccountServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ADAccountServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfboolean AddAccount(Gsafety.Ant.Manager.Test.ADUserInfoService.ADAccountInfo model) {
            return base.Channel.AddAccount(model);
        }
        
        public System.Threading.Tasks.Task<Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfboolean> AddAccountAsync(Gsafety.Ant.Manager.Test.ADUserInfoService.ADAccountInfo model) {
            return base.Channel.AddAccountAsync(model);
        }
        
        public Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfboolean UpdateAccount(Gsafety.Ant.Manager.Test.ADUserInfoService.ADAccountInfo user) {
            return base.Channel.UpdateAccount(user);
        }
        
        public System.Threading.Tasks.Task<Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfboolean> UpdateAccountAsync(Gsafety.Ant.Manager.Test.ADUserInfoService.ADAccountInfo user) {
            return base.Channel.UpdateAccountAsync(user);
        }
        
        public Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfboolean DeleteAccount(string userAccountname) {
            return base.Channel.DeleteAccount(userAccountname);
        }
        
        public System.Threading.Tasks.Task<Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfboolean> DeleteAccountAsync(string userAccountname) {
            return base.Channel.DeleteAccountAsync(userAccountname);
        }
        
        public Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfADAccountInfos_Pk8VuiR GetAccount(string account) {
            return base.Channel.GetAccount(account);
        }
        
        public System.Threading.Tasks.Task<Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfADAccountInfos_Pk8VuiR> GetAccountAsync(string account) {
            return base.Channel.GetAccountAsync(account);
        }
        
        public Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfADAccountInfos_Pk8VuiR ValidateUser(string account, string password) {
            return base.Channel.ValidateUser(account, password);
        }
        
        public System.Threading.Tasks.Task<Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfADAccountInfos_Pk8VuiR> ValidateUserAsync(string account, string password) {
            return base.Channel.ValidateUserAsync(account, password);
        }
        
        public Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfboolean IsUserExits(string account) {
            return base.Channel.IsUserExits(account);
        }
        
        public System.Threading.Tasks.Task<Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfboolean> IsUserExitsAsync(string account) {
            return base.Channel.IsUserExitsAsync(account);
        }
        
        public Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfboolean EnableAccount(string account) {
            return base.Channel.EnableAccount(account);
        }
        
        public System.Threading.Tasks.Task<Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfboolean> EnableAccountAsync(string account) {
            return base.Channel.EnableAccountAsync(account);
        }
        
        public Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfboolean DisableAccount(string account) {
            return base.Channel.DisableAccount(account);
        }
        
        public System.Threading.Tasks.Task<Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfboolean> DisableAccountAsync(string account) {
            return base.Channel.DisableAccountAsync(account);
        }
        
        public Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfboolean ResetPassword(string accountName, string password) {
            return base.Channel.ResetPassword(accountName, password);
        }
        
        public System.Threading.Tasks.Task<Gsafety.Ant.Manager.Test.ADUserInfoService.SingleMessageOfboolean> ResetPasswordAsync(string accountName, string password) {
            return base.Channel.ResetPasswordAsync(accountName, password);
        }
    }
}
