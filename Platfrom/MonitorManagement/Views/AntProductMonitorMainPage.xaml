<UserControl xmlns:toolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit" 
    x:Class="Gsafety.Ant.Monitor.Views.AntProductMonitorMainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:views="clr-namespace:Gsafety.PTMS.Monitor.Views"
    xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:ia="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:Converts="clr-namespace:Gsafety.Common.Converts;assembly=Converts"
    xmlns:Controls="clr-namespace:Gsafety.Common.Controls;assembly=CommonControls" 
    xmlns:local="clr-namespace:Gsafety.PTMS.Bases.Models;assembly=Models"
    xmlns:share="clr-namespace:Gsafety.PTMS.Share;assembly=Share"
    xmlns:primitives="clr-namespace:System.Windows.Controls.Primitives;assembly=System.Windows.Controls.Data"
    xmlns:controlsInputToolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    mc:Ignorable="d"
    d:DesignHeight="700" d:DesignWidth="900">

    <UserControl.Resources>
        <Converts:DateToColor x:Key="dateToColor"/>
        <Converts:VehicleOnLineConverter x:Key="VehicleOnLineConverter"/>
        <Converts:VehicleAlarmConverter x:Key="VehicleAlarmConverter"/>
        <Converts:AppealAbleConverter x:Key="AppealConverter"/>
        <Converts:AlarmForegroundConveter x:Key="AlarmForegroundConveter"/>
        <Converts:BusinessAlertTypeConverter x:Key="BusinessAlertTypeConverter"/>
        <Converts:BusinessAlertTypeImageConverter x:Key="BusinessAlertTypeImageConverter"/>
        <Converts:AlertStatusConverter x:Key="AlertStatusConverter"/>
        <Converts:TargetNullValueConverter x:Key="TargetNullValueConverter"/>
        <Converts:FunItemVisibilityConverter x:Key="FunItemVisibilityConverter"/>
        <Converts:FunItemEnableConverter x:Key="FunItemEnableConverter"/>
        <Converts:DateTimeConverter x:Key="DateTimeConverter"/>
        <Converts:TimeConvert x:Key="TimeConverter"/>
        <Converts:ObjectIsNullConverter x:Key="ObjectIsNullConverter"/>
        <Converts:AlarmForegroundImageConveter x:Key="AlarmForegroundImageConveter"/>
        <Converts:DeviceTypeConverter x:Key="DeviceTypeConverter"/>
        <Style x:Key="button01" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.1"
Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="bg" d:IsOptimized="True"></DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.1"
Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="bg" d:IsOptimized="True"></DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.3"
Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="bg" d:IsOptimized="True"></DoubleAnimation>
                                            <!--<ObjectAnimationUsingKeyFrames
Storyboard.TargetProperty="(UIElement.Cursor)" Storyboard.TargetName="bg" d:IsOptimized="True">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="None"/>
                                            </ObjectAnimationUsingKeyFrames>-->
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="bg" CornerRadius="1" Opacity="0"></Border>
                            <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
        <Style TargetType="sdk:TreeViewItem">
            <Setter Property="IsExpanded" Value="False"/>
        </Style>
        <Storyboard x:Key="collapseTransition">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SythesesLeftContent" 
                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.1000000" Value="-250"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="expandTransition">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SythesesLeftContent" 
                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="-250"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ListCollapseTransition">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ListBottomContent" 
                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.1000000" Value="-250"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ListExpandTransition">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ListBottomContent" 
                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="-250"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="GoRightCollapseTransition">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InfoShowGridRegion" 
                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.1000000" Value="250"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="GoRightExpandTransition">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InfoShowGridRegion" 
                    Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="250"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Style TargetType="sdk:DataGridCell">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="sdk:DataGridCell">
                        <Grid Name="Root" Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CurrentStates">
                                    <VisualState x:Name="Regular" />
                                    <VisualState x:Name="Current">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
                                            <!--更改选中行颜色时修改-->
                                            <ColorAnimation Storyboard.TargetName="FocusVisual"
                                                        Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                        To="#0099cb" Duration="0"/>

                                            <!--单元格的边框-->
                                            <!--更改选中行颜色时修改-->
                                            <ColorAnimation Storyboard.TargetName="FocusVisual"
                                                        Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)"
                                                        To="#0099cb" Duration="0"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid"/>
                                    <VisualState x:Name="Invalid">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="InvalidVisualElement" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                                            <ColorAnimation Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="(Fill).Color" Duration="0" To="#FFFFFFFF"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Rectangle Name="FocusVisual" Stroke="#FF6DBDD1" StrokeThickness="1" Fill="#66FFFFFF" HorizontalAlignment="Stretch" 
                               VerticalAlignment="Stretch" IsHitTestVisible="false" Opacity="0" />

                            <ContentPresenter
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Margin="{TemplateBinding Padding}" />

                            <Rectangle x:Name="InvalidVisualElement" IsHitTestVisible="False" StrokeThickness="1" Stroke="#FFDC000C" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Opacity="0"/>

                            <Rectangle Name="RightGridLine" Grid.Column="1" VerticalAlignment="Stretch" Width="1" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="sdk:DataGridRow">
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="sdk:DataGridRow">
                        <sdk:DataGridFrozenGrid Name="Root">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="Opacity" Duration="0" To="0"/>
                                        </Storyboard>
                                    </VisualState>

                                    <VisualState x:Name="NormalAlternatingRow">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="BackgroundRectangle" 
                                                         Storyboard.TargetProperty="Opacity" Duration="0" To="0"/>
                                        </Storyboard>
                                    </VisualState>
                                    <!--设置鼠标滑过每行时显示的颜色-->
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="BackgroundRectangle" 
                                                         Storyboard.TargetProperty="Opacity" Duration="0" To=".5"/>

                                            <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundRectangle" 
                                                        Storyboard.TargetProperty="(Fill).Color" To="#323842"/>
                                        </Storyboard>
                                    </VisualState>

                                    <!--选中行颜色时修改-->
                                    <VisualState x:Name="NormalSelected">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="BackgroundRectangle" 
                                                         Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                                            <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundRectangle" 
                                                        Storyboard.TargetProperty="(Fill).Color" To="#04a0f1"/>
                                        </Storyboard>
                                    </VisualState>


                                    <VisualState x:Name="MouseOverSelected">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="BackgroundRectangle" 
                                                         Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                                        </Storyboard>
                                    </VisualState>
                                    <!--选中行颜色时修改-->
                                    <VisualState x:Name="UnfocusedSelected">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="BackgroundRectangle" 
                                                         Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>

                                            <ColorAnimation Duration="0" Storyboard.TargetName="BackgroundRectangle" 
                                                        Storyboard.TargetProperty="(Fill).Color" To="#04a0f1"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid"/>
                                    <VisualState x:Name="Invalid">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="BackgroundRectangle" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <DoubleAnimation Storyboard.TargetName="InvalidVisualElement" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <!--<RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>-->
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <Grid.Resources>
                                <Storyboard x:Key="DetailsVisibleTransition">
                                    <DoubleAnimation Storyboard.TargetName="DetailsPresenter" Storyboard.TargetProperty="ContentHeight" Duration="00:00:0.1" />
                                </Storyboard>
                            </Grid.Resources>

                            <!--<Rectangle x:Name="BackgroundRectangle" Grid.RowSpan="2" Grid.ColumnSpan="2" Opacity="0" Fill="#1bafff"/>
                        <Rectangle x:Name="InvalidVisualElement" Grid.RowSpan="2" Grid.ColumnSpan="2" Opacity="0" Fill="#1bafff"/>-->
                            <!--选中行颜色时修改-->
                            <Rectangle x:Name="BackgroundRectangle" Grid.RowSpan="2" Grid.ColumnSpan="2" Opacity="0" Fill="#04a0f1"/>
                            <!--选中行颜色时修改-->
                            <Rectangle x:Name="InvalidVisualElement" Grid.RowSpan="2" Grid.ColumnSpan="2" Opacity="0" Fill="#04a0f1"/>
                            <sdk:DataGridRowHeader Grid.RowSpan="3" Name="RowHeader" sdk:DataGridFrozenGrid.IsFrozen="True" />
                            <sdk:DataGridCellsPresenter Grid.Column="1" Name="CellsPresenter" sdk:DataGridFrozenGrid.IsFrozen="True" />
                            <sdk:DataGridDetailsPresenter Grid.Row="1" Grid.Column="1" Name="DetailsPresenter" />
                            <Rectangle Grid.Row="2" Grid.Column="1" Name="BottomGridLine" HorizontalAlignment="Stretch" Height="1" />
                        </sdk:DataGridFrozenGrid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
        <Style TargetType="sdk:DataGridColumnHeader" x:Key="CustomColumnHeader">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Height" Value="28"/>
            <Setter Property="Background" Value="#1E2226"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="sdk:DataGridColumnHeader">
                        <Border BorderBrush="#2c3136"
                            BorderThickness="0"
                            x:Name="ColumnHeaderBorder">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0.5" EndPoint="0,1.0">
                                    <!--<GradientStop Color="#353a44" Offset="0.5"/>
                                <GradientStop Color="#22252c" Offset="1.0"/>-->
                                    <GradientStop Color="#2c3136" Offset="0.5"/>
                                    <GradientStop Color="#2c3136" Offset="1.0"/>
                                </LinearGradientBrush>
                            </Border.Background>

                            <StackPanel Background="{TemplateBinding Background}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                                <ContentPresenter>
                                    <ContentPresenter.Content>
                                        <TextBlock Text="{TemplateBinding Content}"
                                                Foreground="#e3dfdf"
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch"
                                                FontSize="12"
                                               FontWeight="Bold"/>
                                    </ContentPresenter.Content>
                                </ContentPresenter>
                            </StackPanel>
                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>

        <Style x:Key="DataGridStyleRxx3" TargetType="sdk:DataGrid">
            <Setter Property="HorizontalGridLinesBrush" Value="#4A5159"/>
            <Setter Property="VerticalGridLinesBrush" Value="#4A5159"/>
            <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property ="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Background" Value="#242930"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="GridLinesVisibility" Value="All"/>
            <Setter Property="RowBackground" Value="#242930"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="AlternatingRowBackground" Value="#242930"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="SelectionMode" Value="Extended"/>
            <Setter Property="CanUserReorderColumns" Value="True"/>
            <Setter Property="CanUserResizeColumns" Value="True"/>
            <Setter Property="CanUserSortColumns" Value="True"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#242930" Offset="0"/>
                        <GradientStop Color="#242930" Offset="0.375"/>
                        <GradientStop Color="#242930" Offset="0.375"/>
                        <GradientStop Color="#242930" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="DragIndicatorStyle">
                <Setter.Value>
                    <Style TargetType="ContentControl">
                        <Setter Property="Foreground" Value="#7FFFFFFF"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ContentControl">
                                    <Grid>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="SortStates">
                                                <VisualState x:Name="Unsorted"/>
                                                <VisualState x:Name="SortAscending">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0" To="1.0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SortIcon"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="SortDescending">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0" To="1.0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SortIcon"/>
                                                        <DoubleAnimation Duration="0" To="-.9" Storyboard.TargetProperty="(RenderTransform).ScaleY" Storyboard.TargetName="SortIcon"/>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Rectangle x:Name="BackgroundRectangle" Grid.ColumnSpan="2" Fill="#1c1f23" Stretch="Fill"/>
                                        <Rectangle x:Name="BackgroundGradient" Grid.ColumnSpan="2" Opacity="0" Stretch="Fill">
                                            <Rectangle.Fill>
                                                <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                    <GradientStop Color="#242930" Offset="0.015"/>
                                                    <GradientStop Color="#242930" Offset="0.375"/>
                                                    <GradientStop Color="#242930" Offset="0.6"/>
                                                    <GradientStop Color="#242930" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                        </Rectangle>
                                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <ContentPresenter Content="{TemplateBinding Content}"/>
                                            <Path x:Name="SortIcon" Grid.Column="1" Data="F1 M -5.215,6.099L 5.215,6.099L 0,0L -5.215,6.099 Z " Fill="#7FFFFFFF" HorizontalAlignment="Left" Margin="4,0,0,0" Opacity="0" RenderTransformOrigin=".5,.5" Stretch="Uniform" VerticalAlignment="Center" Width="8">
                                                <Path.RenderTransform>
                                                    <ScaleTransform ScaleY=".9" ScaleX=".9"/>
                                                </Path.RenderTransform>
                                            </Path>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="DropLocationIndicatorStyle">
                <Setter.Value>
                    <Style TargetType="ContentControl">
                        <Setter Property="Background" Value="#FF3F4346"/>
                        <Setter Property="Width" Value="2"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ContentControl">
                                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="IsTabStop" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="sdk:DataGrid">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
                                <Grid x:Name="Root" Background="{TemplateBinding Background}">
                                    <Grid.Resources>
                                        <ControlTemplate x:Key="TopLeftHeaderTemplate" TargetType="sdk:DataGridColumnHeader">
                                            <Grid x:Name="Root">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Border BorderBrush="#242930" BorderThickness="0,0,1,0" Background="#242930" Grid.RowSpan="2">
                                                    <Rectangle Stretch="Fill" StrokeThickness="1">
                                                        <Rectangle.Fill>
                                                            <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                                <GradientStop Color="#242930" Offset="0.015"/>
                                                                <GradientStop Color="#242930" Offset="0.375"/>
                                                                <GradientStop Color="#242930" Offset="0.6"/>
                                                                <GradientStop Color="#242930" Offset="1"/>
                                                            </LinearGradientBrush>
                                                        </Rectangle.Fill>
                                                    </Rectangle>
                                                </Border>
                                                <Rectangle Fill="#242930" Height="1" Grid.RowSpan="2" StrokeThickness="1" VerticalAlignment="Bottom" Width="Auto"/>
                                            </Grid>
                                        </ControlTemplate>
                                        <ControlTemplate x:Key="TopRightHeaderTemplate" TargetType="sdk:DataGridColumnHeader">
                                            <Grid x:Name="RootElement">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Border BorderBrush="#2c3136" BorderThickness="1,0,0,0" Background="#2c3136" Grid.RowSpan="2">
                                                    <!--垂直滚动条上的小块-->
                                                    <Rectangle Stretch="Fill">
                                                        <!--<Rectangle.Fill>
                                                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="0,1.0">
                                                                <GradientStop Color="#4e5661" Offset="0.5"/>
                                                                <GradientStop Color="#414955" Offset="1.0"/>
                                                            </LinearGradientBrush>
                                                        </Rectangle.Fill>-->
                                                        <Rectangle.Fill>
                                                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="0,1.0">
                                                                <GradientStop Color="#2c3136" Offset="0.5"/>
                                                                <GradientStop Color="#2c3136" Offset="1.0"/>
                                                            </LinearGradientBrush>
                                                        </Rectangle.Fill>
                                                    </Rectangle>
                                                </Border>
                                            </Grid>
                                        </ControlTemplate>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <sdk:DataGridColumnHeader x:Name="TopLeftCornerHeader" Template="{StaticResource TopLeftHeaderTemplate}" Width="22"/>
                                    <sdk:DataGridColumnHeadersPresenter x:Name="ColumnHeadersPresenter" Grid.Column="1"/>
                                    <sdk:DataGridColumnHeader x:Name="TopRightCornerHeader" Grid.Column="2" Template="{StaticResource TopRightHeaderTemplate}"/>
                                    <Rectangle x:Name="ColumnHeadersAndRowsSeparator" Grid.ColumnSpan="3" Fill="#1c1f23" Height="1" StrokeThickness="1" VerticalAlignment="Bottom" Width="Auto"/>
                                    <sdk:DataGridRowsPresenter x:Name="RowsPresenter" Grid.ColumnSpan="2" Grid.Row="1"/>
                                    <Rectangle x:Name="BottomRightCorner" Grid.Column="2" Fill="#FFE9EEF4" Grid.Row="2"/>
                                    <Rectangle x:Name="BottomLeftCorner" Grid.ColumnSpan="2" Fill="#FFE9EEF4" Grid.Row="2"/>
                                    <ScrollBar x:Name="VerticalScrollbar" Grid.Column="2" Margin="0,-1,-1,-1" Orientation="Vertical" Grid.Row="1" Width="18" 
                                           Style="{StaticResource SelfScrollBarStyle2}"/>
                                    <Grid Grid.Column="1" Grid.Row="2">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Rectangle x:Name="FrozenColumnScrollBarSpacer"/>
                                        <ScrollBar x:Name="HorizontalScrollbar" Grid.Column="1" Height="18" Margin="-1,0,-1,-1" Orientation="Horizontal"/>
                                    </Grid>
                                    <sdk:ValidationSummary x:Name="ValidationSummary" Grid.ColumnSpan="3" MaxHeight="90" Grid.Row="3"/>
                                </Grid>
                            </Border>
                            <Border x:Name="DisabledVisualElement" Background="#8C1c1f23" CornerRadius="2" HorizontalAlignment="Stretch" Height="Auto" IsHitTestVisible="False" Opacity="0" VerticalAlignment="Stretch" Width="Auto"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DataGridStyleBlack" TargetType="sdk:DataGrid">
            <Setter Property="HorizontalGridLinesBrush" Value="#4A5159"/>
            <Setter Property="VerticalGridLinesBrush" Value="#4A5159"/>
            <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property ="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Background" Value="#1E2226"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="GridLinesVisibility" Value="All"/>
            <Setter Property="RowBackground" Value="#383C3F"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="AlternatingRowBackground" Value="#383C3F"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="SelectionMode" Value="Extended"/>
            <Setter Property="CanUserReorderColumns" Value="True"/>
            <Setter Property="CanUserResizeColumns" Value="True"/>
            <Setter Property="CanUserSortColumns" Value="True"/>
            <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#242930" Offset="0"/>
                        <GradientStop Color="#242930" Offset="0.375"/>
                        <GradientStop Color="#242930" Offset="0.375"/>
                        <GradientStop Color="#242930" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="DragIndicatorStyle">
                <Setter.Value>
                    <Style TargetType="ContentControl">
                        <Setter Property="Foreground" Value="#7FFFFFFF"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ContentControl">
                                    <Grid>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="SortStates">
                                                <VisualState x:Name="Unsorted"/>
                                                <VisualState x:Name="SortAscending">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0" To="1.0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SortIcon"/>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="SortDescending">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0" To="1.0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SortIcon"/>
                                                        <DoubleAnimation Duration="0" To="-.9" Storyboard.TargetProperty="(RenderTransform).ScaleY" Storyboard.TargetName="SortIcon"/>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Rectangle x:Name="BackgroundRectangle" Grid.ColumnSpan="2" Fill="#1c1f23" Stretch="Fill"/>
                                        <Rectangle x:Name="BackgroundGradient" Grid.ColumnSpan="2" Opacity="0" Stretch="Fill">
                                            <Rectangle.Fill>
                                                <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                    <GradientStop Color="#242930" Offset="0.015"/>
                                                    <GradientStop Color="#242930" Offset="0.375"/>
                                                    <GradientStop Color="#242930" Offset="0.6"/>
                                                    <GradientStop Color="#242930" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Rectangle.Fill>
                                        </Rectangle>
                                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <ContentPresenter Content="{TemplateBinding Content}"/>
                                            <Path x:Name="SortIcon" Grid.Column="1" Data="F1 M -5.215,6.099L 5.215,6.099L 0,0L -5.215,6.099 Z " Fill="#7FFFFFFF" HorizontalAlignment="Left" Margin="4,0,0,0" Opacity="0" RenderTransformOrigin=".5,.5" Stretch="Uniform" VerticalAlignment="Center" Width="8">
                                                <Path.RenderTransform>
                                                    <ScaleTransform ScaleY=".9" ScaleX=".9"/>
                                                </Path.RenderTransform>
                                            </Path>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="DropLocationIndicatorStyle">
                <Setter.Value>
                    <Style TargetType="ContentControl">
                        <Setter Property="Background" Value="#FF3F4346"/>
                        <Setter Property="Width" Value="2"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ContentControl">
                                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="IsTabStop" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="sdk:DataGrid">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
                                <Grid x:Name="Root" Background="{TemplateBinding Background}">
                                    <Grid.Resources>
                                        <ControlTemplate x:Key="TopLeftHeaderTemplate" TargetType="sdk:DataGridColumnHeader">
                                            <Grid x:Name="Root">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Border BorderBrush="#242930" BorderThickness="0,0,1,0" Background="#242930" Grid.RowSpan="2">
                                                    <Rectangle Stretch="Fill" StrokeThickness="1">
                                                        <Rectangle.Fill>
                                                            <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                                <GradientStop Color="#242930" Offset="0.015"/>
                                                                <GradientStop Color="#242930" Offset="0.375"/>
                                                                <GradientStop Color="#242930" Offset="0.6"/>
                                                                <GradientStop Color="#242930" Offset="1"/>
                                                            </LinearGradientBrush>
                                                        </Rectangle.Fill>
                                                    </Rectangle>
                                                </Border>
                                                <Rectangle Fill="#242930" Height="1" Grid.RowSpan="2" StrokeThickness="1" VerticalAlignment="Bottom" Width="Auto"/>
                                            </Grid>
                                        </ControlTemplate>
                                        <ControlTemplate x:Key="TopRightHeaderTemplate" TargetType="sdk:DataGridColumnHeader">
                                            <Grid x:Name="RootElement">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Border BorderBrush="#2c3136" BorderThickness="1,0,0,0" Background="#2c3136" Grid.RowSpan="2">
                                                    <!--垂直滚动条上的小块-->
                                                    <Rectangle Stretch="Fill">
                                                        <!--<Rectangle.Fill>
                                                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="0,1.0">
                                                                <GradientStop Color="#4e5661" Offset="0.5"/>
                                                                <GradientStop Color="#414955" Offset="1.0"/>
                                                            </LinearGradientBrush>
                                                        </Rectangle.Fill>-->
                                                        <Rectangle.Fill>
                                                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="0,1.0">
                                                                <GradientStop Color="#2c3136" Offset="0.5"/>
                                                                <GradientStop Color="#2c3136" Offset="1.0"/>
                                                            </LinearGradientBrush>
                                                        </Rectangle.Fill>
                                                    </Rectangle>
                                                </Border>
                                            </Grid>
                                        </ControlTemplate>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <sdk:DataGridColumnHeader x:Name="TopLeftCornerHeader" Template="{StaticResource TopLeftHeaderTemplate}" Width="22"/>
                                    <sdk:DataGridColumnHeadersPresenter x:Name="ColumnHeadersPresenter" Grid.Column="1"/>
                                    <sdk:DataGridColumnHeader x:Name="TopRightCornerHeader" Grid.Column="2" Template="{StaticResource TopRightHeaderTemplate}"/>
                                    <Rectangle x:Name="ColumnHeadersAndRowsSeparator" Grid.ColumnSpan="3" Fill="#1c1f23" Height="1" StrokeThickness="1" VerticalAlignment="Bottom" Width="Auto"/>
                                    <sdk:DataGridRowsPresenter x:Name="RowsPresenter" Grid.ColumnSpan="2" Grid.Row="1"/>
                                    <Rectangle x:Name="BottomRightCorner" Grid.Column="2" Fill="#FFE9EEF4" Grid.Row="2"/>
                                    <Rectangle x:Name="BottomLeftCorner" Grid.ColumnSpan="2" Fill="#FFE9EEF4" Grid.Row="2"/>
                                    <ScrollBar x:Name="VerticalScrollbar" Grid.Column="2" Margin="0,-1,-1,-1" Orientation="Vertical" Grid.Row="1" Width="18" 
                                           Style="{StaticResource SelfScrollBarStyle2}"/>
                                    <Grid Grid.Column="1" Grid.Row="2">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Rectangle x:Name="FrozenColumnScrollBarSpacer"/>
                                        <ScrollBar x:Name="HorizontalScrollbar" Grid.Column="1" Height="18" Margin="-1,0,-1,-1" Orientation="Horizontal"/>
                                    </Grid>
                                    <sdk:ValidationSummary x:Name="ValidationSummary" Grid.ColumnSpan="3" MaxHeight="90" Grid.Row="3"/>
                                </Grid>
                            </Border>
                            <Border x:Name="DisabledVisualElement" Background="#8C1c1f23" CornerRadius="2" HorizontalAlignment="Stretch" Height="Auto" IsHitTestVisible="False" Opacity="0" VerticalAlignment="Stretch" Width="Auto"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid x:Name="LayoutRoot"
          Style="{StaticResource ContentGridStyle}"
          MouseMove="LayoutRoot_MouseMove_1">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="320" MaxWidth="400"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="320" MaxWidth="500"/>
        </Grid.ColumnDefinitions >
        <Grid x:Name="collapsedPane" 
              Grid.Column="0" 
              Grid.Row="0" 
              Canvas.ZIndex="100" 
              Margin="-5,0,0,0" HorizontalAlignment="Left" 
              VerticalAlignment="Center" Visibility="Collapsed">
            <Image x:Name="showL"  
                Source="/ExternalResource;component/Images/slideShow.png"
                Cursor="Hand" 
                Stretch="None" 
                HorizontalAlignment="Right" 
                VerticalAlignment="Center"
                Opacity="0.9" 
                ToolTipService.ToolTip="{Binding [MenuVisibleToolTip], Source={StaticResource SR}}" Margin="5,0,0,0" MouseLeftButtonDown="showL_MouseLeftButtonDown"/>
        </Grid>
        <Grid x:Name="SythesesLeftContent" Grid.Column="0" >
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.RenderTransform>
                <TranslateTransform/>
            </Grid.RenderTransform>
            <Image x:Name="hiddenL" 
                   Source="/ExternalResource;component/Images/MainPage_menu_arrowleft.png"
                   Cursor="Hand" 
                   Margin="0,3,10,3"
                   HorizontalAlignment="Right" 
                   VerticalAlignment="Center" 
                   Canvas.ZIndex="100" 
                   Stretch="None" 
                   MouseLeftButtonDown="hiddenL_MouseLeftButtonDown" 
                   ToolTipService.ToolTip="{Binding [MenuCollapsedToolTip], Source={StaticResource SR}}"/>


            <Grid Grid.Row="0" Style="{StaticResource ViewFirstTitleGridStyle}">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Image Source="/ExternalResource;component/Images/MenuMonitor.png"
                           HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch"
                           Stretch="Uniform"
                           Height="30"
                           Width="30"
                       Grid.Column="0" Margin="0"/>

                <TextBlock Text="{Binding [LiveMonitor], Source={StaticResource SR}}"
                               Grid.Column="1"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               FontSize="16"
                               Foreground="#f0f0f0"
                               FontWeight="Bold"/>

            </Grid>

            <toolkit:Accordion Grid.Row="1"
                               VerticalAlignment="Stretch"
                               VerticalContentAlignment="Stretch"
                               HorizontalAlignment="Stretch"
                               HorizontalContentAlignment="Stretch"                               
                               BorderThickness="0">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <ia:CallMethodAction TargetObject="{Binding}" MethodName="Accordion_SelectionChanged" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <toolkit:AccordionItem Header="{Binding [MAINPAGE_Monitor], Source={StaticResource SR}}" 
                                       HorizontalContentAlignment="Stretch"
                                       VerticalContentAlignment="Stretch"
                                       Style="{StaticResource AdviceMenu_AccordionItemStyle}"
                                       Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-01'}"
                                       Selected="AccordionItem_Selected_Monitor">
                    <toolkit:AccordionItem.Content>
                        <Grid Style="{StaticResource ContentGridStyle}" 
                              share:ButtonServices.DefaultButton="{Binding ElementName=btnSearchVechicle}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="47*"/>
                                <ColumnDefinition Width="73*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0" Style="{StaticResource ContentGridStyle}" Grid.ColumnSpan="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="10"/>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>                                  
                                    <ColumnDefinition Width="10"/>
                                </Grid.ColumnDefinitions>

                                <Controls:SearchTextBox Grid.Column="1"
                                         Name="tBMonitorSearchInfo"
                                         HorizontalAlignment="Stretch"
                                         VerticalAlignment="Center"
                                         Text="{Binding FilterText,Mode=TwoWay,Converter={StaticResource TargetNullValueConverter},ConverterParameter=Organization_VehicleSn_Line}"
                                         Margin="0,10,0,10"
                                         FontSize="12"
                                         Foreground="#f0f0f0"
                                         Background="#242930"/>
                                <Button Grid.Column="2"
                                        Margin="5,10,0,10"
                                        Name="btnSearchVechicle"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        ToolTipService.ToolTip="{Binding [Search],Source={StaticResource SR}}"
                                        Command="{Binding VehicleSearchCommand}"
                                        Style="{StaticResource SearchButtonCommonStyle}"/>



                                <Button  Grid.Column="3" Command="{Binding SelectElectricFenceCommand}"
                                               
                                                 Margin="5,10,0,10"
                                                 Style="{StaticResource ElectronicFenceButtonCommonStyle}"  
                                                 ToolTipService.ToolTip="{Binding [MONITOR_ElectricFence],Source={StaticResource SR}}"
                                    >
                                </Button>
                            </Grid>
                            <Grid Name="monitorTreeGrid" Grid.Row="2" Grid.ColumnSpan="2">
                                <sdk:TreeView Name="monitorTree"
                                              share:TreeViewHelper.SelectedItem="{Binding MonitorTreeSelectItem, Mode=TwoWay}" 
                                              ItemsSource="{Binding VehicleTreeFactory.VehicleTrees}"
                                              Style="{StaticResource TreeViewStyle}" ItemContainerStyle="{StaticResource TreeViewItemVisibility}">
                                    <controlsInputToolkit:ContextMenuService.ContextMenu>
                                        <controlsInputToolkit:ContextMenu Name="treeViewContextMenu"  Visibility="Collapsed"  Loaded="ContextMenu_Loaded" HorizontalOffset="5" Style="{StaticResource ContextMenuStyle}">
                                            <!--监控组-->
                                            <Button Style="{StaticResource button01}"  
                                                    IsEnabled="{Binding MonitorTreeSelectVehicle,Converter={StaticResource ObjectIsNullConverter}}"
                                                Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-04-01'}"
                                                Command="{Binding LocationMonitorCommand}"  CommandParameter="{Binding MonitorTreeSelectVehicle.VehicleInfo.VehicleId}">
                                                <StackPanel Orientation="Horizontal" Margin="5">
                                                    <Image Source="/ExternalResource;component/Images/NormalFocusOn.png" Width="16" Height="16" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                                    <TextBlock Margin="10 0 0 0" Text="{Binding [AddMonitorGroup],Source={StaticResource SR}}" Foreground="#FFFFFFFF" ></TextBlock>
                                                </StackPanel>
                                            </Button>
                                            <!--电子围栏-->
                                            <Button Style="{StaticResource button01}"  
                                                        IsEnabled="{Binding MonitorTreeSelectVehicle.VehicleInfo.HasMdvr,FallbackValue=False}"
                                                Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-01-05'}"
                                                Command="{Binding ElectricFenceCheckedCommand}"  CommandParameter="{Binding MonitorTreeSelectVehicle.VehicleInfo.VehicleId}">
                                                <StackPanel Orientation="Horizontal" Margin="5">
                                                    <Image Source="/ExternalResource;component/Images/NormalElectronicFence.png" Width="16" Height="16" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                                    <TextBlock Margin="10 0 0 0" Text="{Binding [MONITOR_ElectricFence],Source={StaticResource SR}}" Foreground="#FFFFFFFF" ></TextBlock>
                                                </StackPanel>
                                            </Button>
                                            <!--行驶路线-->
                                            <Button Style="{StaticResource button01}" 
                                                        IsEnabled="{Binding MonitorTreeSelectVehicle.VehicleInfo.HasMdvr,FallbackValue=False}"
                                                Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-01-06'}"
                                                Command="{Binding PlanRouteCommand}"  CommandParameter="{Binding MonitorTreeSelectVehicle.VehicleInfo.VehicleId}">
                                                <StackPanel Orientation="Horizontal" Margin="5">
                                                    <Image Source="/ExternalResource;component/Images/NormalDriveLine.png" Width="16" Height="16" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                                    <TextBlock Margin="10 0 0 0" Text="{Binding [MONITOR_DriveRoute],Source={StaticResource SR}}"  Foreground="#FFFFFFFF"></TextBlock>
                                                </StackPanel>
                                            </Button>
                                            <!--发送消息-->
                                            <!--<Button Style="{StaticResource button01}" 
                                                       IsEnabled="{Binding MonitorTreeSelectVehicle.VehicleInfo.HasMoblie,FallbackValue=False}"
                                                Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-01-07'}"
                                                Command="{Binding SendMessageCommond}" CommandParameter="{Binding MonitorTreeSelectVehicle.VehicleInfo.VehicleId}">
                                                <StackPanel Orientation="Horizontal" Margin="5">
                                                    <Image Source="/ExternalResource;component/Images/NormalSendMessage.png" Width="16" Height="16" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                                    <TextBlock Margin="10 0 0 0" Text="{Binding [MONITOR_SendMessage],Source={StaticResource SR}}" Foreground="#FFFFFFFF" ></TextBlock>
                                                </StackPanel>
                                            </Button>-->

                                        </controlsInputToolkit:ContextMenu>
                                    </controlsInputToolkit:ContextMenuService.ContextMenu>

                                    <sdk:TreeView.ItemTemplate>
                                        <sdk:HierarchicalDataTemplate ItemsSource="{Binding Path=Children}" >
                                            <Controls:NodeTypeTemplateSelector Content="{Binding}" >
                                                <Controls:NodeTypeTemplateSelector.Resources>
                                                    <DataTemplate x:Key="OrganizationEx">
                                                        <StackPanel Orientation="Horizontal">
                                                            <Image Stretch="None" Margin="0,0,2,0"  
                                                                   VerticalAlignment="Center" Source="/ExternalResource;component/Images/Organization.png"/>
                                                            <TextBlock Foreground="White"  Text="{Binding Path=Organization.Name}"  TextAlignment="Left" Margin="0,0,3,0"/>
                                                            <TextBlock Foreground="White" Text="("  TextAlignment="Left"/>
                                                            <TextBlock Foreground="White" Text="{Binding Path=VehicleOnlineCount}"  TextAlignment="Left"/>
                                                            <TextBlock Foreground="White" Text="/"  TextAlignment="Left"/>
                                                            <TextBlock Foreground="White" Text="{Binding Path=VehicleCount}"  TextAlignment="Left"/>
                                                            <TextBlock Foreground="White" Text=")"  TextAlignment="Left"/>
                                                        </StackPanel>
                                                    </DataTemplate>

                                                    <DataTemplate x:Key="VehicleEx">
                                                        <StackPanel Orientation="Horizontal" MouseLeftButtonDown="stackPanel_MouseLeftButtonDown"  Name="stackPanel" MouseRightButtonDown="stackPanel_MouseRightButtonDown">
                                                            <Image Stretch="None" Margin="0,0,4,0"  
                                                                   VerticalAlignment="Center"  
                                                                   Source="{Binding VehicleInfo.IsOnLine,Converter={StaticResource VehicleOnLineConverter},FallbackValue='/ExternalResource;component/Images/VehicleOutline.png'}"/>

                                                            <TextBlock Text="{Binding Path=Name}" Foreground="White"
                                                                       HorizontalAlignment="Left"
                                                                       Margin="2,0,2,0"
                                                                       VerticalAlignment="Center"
                                                                       Width="100"/>

                                                            <!--实时视频-->
                                                            <Button  Command="{Binding DataContext.PlayVideoCommand,ElementName=LayoutRoot}"
                                                                             CommandParameter="{Binding VehicleInfo.UniqueId}"
                                                                             Margin="10,0,2,0"
                                                                             Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-01-02'}"                                                                     
                                                                             IsEnabled="{Binding VehicleInfo.MDVROnline,TargetNullValue=False,FallbackValue=False}"
                                                                             ToolTipService.ToolTip="{Binding [Rpt_External_Access_COLSSSP],Source={StaticResource SR}}"
                                                                             Style="{StaticResource MonitorVedioButtonCommonStyle}">
                                                            </Button>
                                                            <!--拍照-->
                                                            <Button  Command="{Binding DataContext.CapturePhotoConmand,ElementName=LayoutRoot}"
                                                                             CommandParameter="{Binding VehicleInfo.UniqueId}"
                                                                             Margin="2,0,2,0"
                                                                             IsEnabled="{Binding VehicleInfo.HasMdvr,FallbackValue=False}"
                                                                             Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-01-03'}"
                                                                             ToolTipService.ToolTip="{Binding [Camera_Photo],Source={StaticResource SR}}"
                                                                             Style="{StaticResource CapturePhotoButton}">
                                                            </Button>

                                                            <!--历史视频-->
                                                            <Button  Command="{Binding DataContext.HistoricalVideoCommand,ElementName=LayoutRoot}"
                                                                             CommandParameter="{Binding VehicleInfo.VehicleId}"
                                                                             Margin="2,0,2,0"
                                                                             IsEnabled="{Binding VehicleInfo.HasMdvr,FallbackValue=False}"
                                                                             Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-01-04'}"                                                                     
                                                                             ToolTipService.ToolTip="{Binding [Rpt_External_Access_COLLSSP],Source={StaticResource SR}}"
                                                                             Style="{StaticResource HistoryVedioCommonStyle}">
                                                            </Button>
                                                            <!--手动报警-->
                                                            <Button  Command="{Binding DataContext.AlarmByMonitorCommond,ElementName=LayoutRoot}"
                                                                             CommandParameter="{Binding VehicleInfo.VehicleId}"
                                                                             Margin="2,0,2,0"
                                                                             Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-01-08'}"                                                                     
                                                                             Style="{StaticResource HandAlarmButtonCommonStyle}"  
                                                                             ToolTipService.ToolTip="{Binding [MONITOR_AlarmByMonitor],Source={StaticResource SR}}">
                                                            </Button>
                                                            <!--发送邮件-->
                                                            <!--<Button  Command="{Binding DataContext.AlarmSendEmaliCommond,ElementName=LayoutRoot}"
                                                                             CommandParameter="{Binding VehicleInfo.VehicleId}"
                                                                             Margin="2,0,2,0"
                                                                             Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-01-09'}"                                                                     
                                                                             Style="{StaticResource SendMessageButtonCommonStyle}"  
                                                                             ToolTipService.ToolTip="{Binding [MONITOR_SendEmail],Source={StaticResource SR}}">
                                                            </Button>-->
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </Controls:NodeTypeTemplateSelector.Resources>
                                            </Controls:NodeTypeTemplateSelector>
                                        </sdk:HierarchicalDataTemplate>
                                    </sdk:TreeView.ItemTemplate>
                                </sdk:TreeView>
                            </Grid>
                        </Grid>

                    </toolkit:AccordionItem.Content>
                </toolkit:AccordionItem>

                <toolkit:AccordionItem Header="{Binding [VehicleAlarm],Source={StaticResource SR}}"  
                                       HorizontalContentAlignment="Stretch"
                                       VerticalContentAlignment="Stretch"
                                       Style="{StaticResource AdviceMenu_AccordionItemStyle}"
                                                                              Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-02'}"
                                       Selected="AccordionItem_Selected_Alarm" >
                    <toolkit:AccordionItem.Content>
                        <Grid Style="{StaticResource ContentGridStyle}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="35"/>
                                <RowDefinition Height="1"/>
                            </Grid.RowDefinitions>

                            <Grid Grid.Row="0" Style="{StaticResource ContentGridStyle}"
                                  Height="35">

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="10"/>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="10"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Grid.Row="0"
                                         Grid.Column="1"
                                         Margin="0,5,0,5"
                                         HorizontalAlignment="Stretch"
                                         VerticalAlignment="Center" Text="{Binding UnHandleFiledCarNumber,Mode=TwoWay}"
                                         ToolTipService.ToolTip="{Binding [ALARM_VehicleId],Source={StaticResource SR}}"
                                         Background="#242930" Foreground="#f0f0f0"/>

                                <Button Grid.Row="0"
                                        Grid.Column="2"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        ToolTipService.ToolTip="{Binding [Search],Source={StaticResource SR}}"
                                        Command="{Binding GetUnhandleAlarmCommand}"
                                        Style="{StaticResource SearchButtonCommonStyle}"/>
                            </Grid>
                            <sdk:DataGrid  Grid.Row="2"
                                           x:Name="dgAlarm" 
                                           HorizontalAlignment="Stretch" 
                                           VerticalAlignment="Stretch" Style="{StaticResource DataGridStyleRxx3}"
                                           MinHeight="200" AutoGenerateColumns="False"
                                           ItemsSource="{Binding UnHandledAlarmPagedCV}" IsReadOnly="True"  LoadingRow="DataGridMonitorList_LoadingRow"
                                           SelectedItem="{Binding CurrentUnHandedAlarmInfo, Mode=TwoWay}" SelectionMode="Single" Visibility="Collapsed">
                                <controlsInputToolkit:ContextMenuService.ContextMenu>
                                    <controlsInputToolkit:ContextMenu Loaded="ContextMenu_Loaded" Visibility="Collapsed"  HorizontalOffset="5" Style="{StaticResource ContextMenuStyle}">
                                        <!--监控组-->
                                        <Button Style="{StaticResource button01}"  
                                                    IsEnabled="{Binding CurrentUnHandedAlarmInfo,Converter={StaticResource ObjectIsNullConverter}}"
                                                Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-04-01'}"
                                                Command="{Binding LocationMonitorCommand}"  CommandParameter="{Binding CurrentUnHandedAlarmInfo.VehicleId}">
                                            <StackPanel Orientation="Horizontal" Margin="5">
                                                <Image Source="/ExternalResource;component/Images/NormalFocusOn.png" Width="16" Height="16" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                                <TextBlock Margin="10 0 0 0" Text="{Binding [AddMonitorGroup],Source={StaticResource SR}}" Foreground="#FFFFFFFF" ></TextBlock>
                                            </StackPanel>
                                        </Button>
                                        <!--电子围栏-->
                                        <Button Style="{StaticResource button01}"  
                                                        IsEnabled="{Binding CurrentUnHandedAlarmInfo.VehicleInfo.HasMdvr,FallbackValue=False}"
                                                Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-02-06'}"
                                                Command="{Binding ElectricFenceCheckedCommand}"  CommandParameter="{Binding CurrentUnHandedAlarmInfo.VehicleId}">
                                            <StackPanel Orientation="Horizontal" Margin="5">
                                                <Image Source="/ExternalResource;component/Images/NormalElectronicFence.png" Width="16" Height="16" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                                <TextBlock Margin="10 0 0 0" Text="{Binding [MONITOR_ElectricFence],Source={StaticResource SR}}" Foreground="#FFFFFFFF" ></TextBlock>
                                            </StackPanel>
                                        </Button>
                                        <!--行驶路线-->
                                        <Button Style="{StaticResource button01}" 
                                                        IsEnabled="{Binding CurrentUnHandedAlarmInfo.VehicleInfo.HasMdvr,FallbackValue=False}"
                                                Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-02-07'}"
                                                Command="{Binding PlanRouteCommand}"  CommandParameter="{Binding CurrentUnHandedAlarmInfo.VehicleId}">
                                            <StackPanel Orientation="Horizontal" Margin="5">
                                                <Image Source="/ExternalResource;component/Images/NormalDriveLine.png" Width="16" Height="16" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                                <TextBlock Margin="10 0 0 0" Text="{Binding [MONITOR_DriveRoute],Source={StaticResource SR}}"  Foreground="#FFFFFFFF"></TextBlock>
                                            </StackPanel>
                                        </Button>
                                        <!--发送消息-->
                                        <!--<Button Style="{StaticResource button01}" 
                                                       IsEnabled="{Binding CurrentUnHandedAlarmInfo.VehicleInfo.HasMoblie,FallbackValue=False}"
                                                Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-02-10'}"
                                                Command="{Binding SendMessageCommond}" CommandParameter="{Binding CurrentUnHandedAlarmInfo.VehicleId}">
                                            <StackPanel Orientation="Horizontal" Margin="5">
                                                <Image Source="/ExternalResource;component/Images/NormalSendMessage.png" Width="16" Height="16" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                                <TextBlock Margin="10 0 0 0" Text="{Binding [MONITOR_SendMessage],Source={StaticResource SR}}" Foreground="#FFFFFFFF" ></TextBlock>
                                            </StackPanel>
                                        </Button>-->

                                    </controlsInputToolkit:ContextMenu>
                                </controlsInputToolkit:ContextMenuService.ContextMenu>


                                <sdk:DataGrid.Columns>

                                    <sdk:DataGridTemplateColumn  
                                                            HeaderStyle="{StaticResource CustomColumnHeader}"
                                                            Header="ALARM_VehicleId"
                                                            Width="*" >
                                        <sdk:DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Grid Height="25" Width="100">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Image Grid.Column="0" HorizontalAlignment="Left"  Stretch="None" Margin="4,2,4,2" 
                                                           VerticalAlignment="Center"                                                                   
                                                           Source="{Binding VehicleInfo.IsOnLine,Converter={StaticResource VehicleOnLineConverter},FallbackValue='/ExternalResource;component/Images/VehicleOutline.png'}"/>
                                                    <TextBlock Grid.Column="1"  ToolTipService.ToolTip="{Binding VehicleId}" Text="{Binding VehicleId}" 
                                                                Margin="0,2,0,2"
                                                                HorizontalAlignment="Left"
                                                                VerticalAlignment="Center" Foreground="{Binding Self, Converter={StaticResource AlarmForegroundConveter}}" />
                                                    <Image Grid.Column="2" HorizontalAlignment="Right"  Stretch="None" Margin="0,2,4,2" 
                                                           VerticalAlignment="Center"                                                                   
                                                           Source="{Binding Self,Converter={StaticResource AlarmForegroundImageConveter}}"/>
                                                </Grid>
                                            </DataTemplate>
                                        </sdk:DataGridTemplateColumn.CellTemplate>
                                    </sdk:DataGridTemplateColumn>

                                    <sdk:DataGridTemplateColumn Header="ALARM_AlarmTime" Width="55"  HeaderStyle="{StaticResource CustomColumnHeader}">
                                        <sdk:DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Left" >
                                                    <TextBlock Text="{Binding AlarmTime,Converter={StaticResource TimeConverter}}" 
                                                               Foreground="{Binding Self, Converter={StaticResource AlarmForegroundConveter}}">
                                                                <ToolTipService.ToolTip>
                                                                    <ToolTip Content="{Binding AlarmTime,Converter={StaticResource DateTimeConverter}}" />
                                                                </ToolTipService.ToolTip>
                                                    </TextBlock>
                                                </StackPanel>
                                            </DataTemplate>
                                        </sdk:DataGridTemplateColumn.CellTemplate>
                                    </sdk:DataGridTemplateColumn>

                                    <!--HeaderStyle="{StaticResource ColumnHeaderStyle}"-->

                                    <sdk:DataGridTemplateColumn Header="ALARM_Operater" Width="145" HeaderStyle="{StaticResource CustomColumnHeader}">
                                        <sdk:DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <!--实时视频-->
                                                    <Button  Command="{Binding DataContext.PlayVideoCommand,RelativeSource={RelativeSource AncestorType=sdk:DataGrid}}"
                                                                             CommandParameter="{Binding DataContext.VehicleInfo.UniqueId,RelativeSource={RelativeSource AncestorType=sdk:DataGridRow}}"
                                                                             Margin="2,0,2,0"
                                                                             IsEnabled="{Binding VehicleInfo.MDVROnline,TargetNullValue=False,FallbackValue=False}"
                                                                             Padding="0"
                                                                             Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-02-02'}"                                                                     
                                                                             ToolTipService.ToolTip="{Binding [Rpt_External_Access_COLSSSP],Source={StaticResource SR}}"
                                                                             Style="{StaticResource MonitorVedioButtonCommonStyle}">
                                                    </Button>
                                                    <!--拍照-->
                                                    <Button  Command="{Binding DataContext.CapturePhotoConmand,RelativeSource={RelativeSource AncestorType=sdk:DataGrid}}"
                                                                             CommandParameter="{Binding DataContext.VehicleInfo.UniqueId,RelativeSource={RelativeSource AncestorType=sdk:DataGridRow}}"
                                                                             Margin="2,0,2,0"
                                                                             IsEnabled="{Binding VehicleInfo.HasMdvr,FallbackValue=False}"
                                                                             Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-02-03'}"
                                                                             ToolTipService.ToolTip="{Binding [Camera_Photo],Source={StaticResource SR}}"
                                                                             Style="{StaticResource CapturePhotoButton}">
                                                    </Button>

                                                    <Button  Command="{Binding DataContext.HistoricalVideoCommand,RelativeSource={RelativeSource AncestorType=sdk:DataGrid}}"
                                                                             CommandParameter="{Binding DataContext.VehicleId,RelativeSource={RelativeSource AncestorType=sdk:DataGridRow}}"
                                                                             Margin="2,0,2,0"
                                                                             Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-02-04'}"
                                                                             Padding="0"
                                                                             IsEnabled="{Binding VehicleInfo.HasMdvr,FallbackValue=False}"
                                                                             ToolTipService.ToolTip="{Binding [Rpt_External_Access_COLLSSP],Source={StaticResource SR}}"
                                                                             Style="{StaticResource HistoryVedioCommonStyle}">
                                                    </Button>

                                                    <Button  Command="{Binding DataContext.UnHandedAlarmVedio1First15SCommand,RelativeSource={RelativeSource AncestorType=sdk:DataGrid}}"
                                                                             CommandParameter="{Binding DataContext.VehicleId,RelativeSource={RelativeSource AncestorType=sdk:DataGridRow}}"
                                                                             Margin="2,0,2,0"
                                                                             Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-02-05'}"
                                                                             Padding="0"
                                                                             IsEnabled="{Binding VehicleInfo.HasMdvr,FallbackValue=False}"
                                                                             ToolTipService.ToolTip="{Binding [ALARM_1Way15S],Source={StaticResource SR}}"
                                                                             Style="{StaticResource AlarmVideoCommonStyle}">
                                                    </Button>
                                                    <Button  Command="{Binding DataContext.HandleAlarmCommand,RelativeSource={RelativeSource AncestorType=sdk:DataGrid}}"
                                                                             CommandParameter="{Binding DataContext,ElementName=stackPanel}"
                                                                             Margin="2,0,2,0"
                                                                             Visibility="{Binding DataContext.HandleAlarmVisibility,RelativeSource={RelativeSource AncestorType=sdk:DataGrid}}"
                                                                             Style="{StaticResource AlarmDisposedButtonCommonStyle}"  
                                                                             ToolTipService.ToolTip="{Binding [AlarmDisposed],Source={StaticResource SR}}" 
                                                             IsEnabled="{Binding AppealStatus,Converter={StaticResource AppealConverter}}"
                                                             Content="{Binding [Disposed],Source={StaticResource SR}}">
                                                    </Button>
                                                    <Button
                                                               ToolTipService.ToolTip="{Binding [HappenLocation],Source={StaticResource SR}}"
                                                               Margin="2,0,2,0"
                                                               Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-02-09'}"
                                                                Command="{Binding DataContext.HappenLoctionCommand,RelativeSource={RelativeSource AncestorType=sdk:DataGrid}}"
                                                               CommandParameter="{Binding}"
                                                               Style="{StaticResource LocateButtonCommonStyle}">
                                                    </Button>
                                                    <!--发送邮件-->
                                                    <!--<Button  Command="{Binding DataContext.AlarmSendEmailCommond,RelativeSource={RelativeSource AncestorType=sdk:DataGrid}}"
                                                                             CommandParameter="{Binding VehicleInfo.VehicleId}"
                                                                             Margin="2,0,2,0"
                                                                             Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-02-11'}"                                                                     
                                                                             Style="{StaticResource SendMessageButtonCommonStyle}"  
                                                                             ToolTipService.ToolTip="{Binding [MONITOR_SendEmail],Source={StaticResource SR}}">
                                                    </Button>-->
                                                </StackPanel>
                                            </DataTemplate>
                                        </sdk:DataGridTemplateColumn.CellTemplate>
                                    </sdk:DataGridTemplateColumn>
                                </sdk:DataGrid.Columns>
                            </sdk:DataGrid>

                            <Border BorderBrush="#FF617584" Grid.Row="3" BorderThickness="0.5">
                                <Grid Style="{StaticResource ContentGridStyle}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0"
                                                Text="{Binding [Total],Source={StaticResource SR}}"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Center"
                                                Margin="0,2,10,2"  Style="{StaticResource TextBlockLightStyle}"/>
                                    <TextBlock Text="{Binding UnHandledAlarmPagedCV.ItemCount}" Grid.Column="1"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                Margin="0,2,10,2"  Style="{StaticResource TextBlockLightStyle}"/>
                                    <sdk:DataPager Style="{StaticResource DataPagerStyle}"   
                                                Grid.Column="2"
                                                Margin="0,0,0,0"
                                                Height="25"
                                                Source="{Binding UnHandledAlarmPagedCV}"
                                                PageSize="30"
                                                Foreground="#f0f0f0"  
                                                Background="{Binding ElementName=dgAlarm, Path=Background}"
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Center"/>
                                </Grid>

                            </Border>

                        </Grid>

                    </toolkit:AccordionItem.Content>


                </toolkit:AccordionItem>

                <toolkit:AccordionItem Header="{Binding [ALERT_VehicleAlert],Source={StaticResource SR}}"   
                                       HorizontalContentAlignment="Stretch"
                                       VerticalContentAlignment="Stretch"
                                       Style="{StaticResource AdviceMenu_AccordionItemStyle}"
                                                                              Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-03'}"
                                       Selected="AccordionItem_Selected_Alert">

                    <toolkit:AccordionItem.Content>
                        <Grid Style="{StaticResource ContentGridStyle}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="35"/>
                                <RowDefinition Height="1"/>
                            </Grid.RowDefinitions>

                            <Grid Grid.Row="0" Style="{StaticResource ContentGridStyle}">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="10"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Text="{Binding [ALERT_VechileId],Source={StaticResource SR}}"
                                           Grid.Row="0"
                                           Grid.Column="0"
                                           HorizontalAlignment="Right"
                                           VerticalAlignment="Center"
                                           Margin="0,5,5,5" Style="{StaticResource TextBlockLightStyle}"/>
                                <TextBox Grid.Row="0"
                                         Grid.Column="1"
                                         Margin="0,5,0,5"
                                         HorizontalAlignment="Stretch"
                                         VerticalAlignment="Center"
                                         Text="{Binding AlertCarNumber,Mode=TwoWay}"
                                         Background="#242930" Foreground="#f0f0f0"/>

                                <TextBlock Text="{Binding [AlertType],Source={StaticResource SR}}"
                                           Grid.Row="1"
                                           Grid.Column="0"
                                           HorizontalAlignment="Right"
                                           VerticalAlignment="Center"
                                           Margin="0,5,5,5" Style="{StaticResource TextBlockLightStyle}"/>
                                <ComboBox Grid.Row="1"
                                         Grid.Column="1"
                                         Margin="0,5,0,5"
                                         HorizontalAlignment="Stretch"
                                         VerticalAlignment="Center"  Name="comboStatus"/>
                                <ComboBox Grid.Row="1" Grid.Column="1"  Margin="0,5,0,5" 
                                          ItemsSource="{Binding VehicleAlertTypeList}" 
                                          DisplayMemberPath="Name" SelectedValuePath="Code" HorizontalAlignment="Stretch"
                                         VerticalAlignment="Center"  SelectedItem="{Binding SelectedAlertType,Mode=TwoWay}"  ToolTipService.ToolTip="{Binding SelectedAlertType.Name,Mode=TwoWay}" IsEnabled="True" Name="comboStatus2"></ComboBox>
                                <Button Grid.Row="1"
                                        Grid.Column="2"
                                        Command="{Binding GetVehicleAlertCommand}"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        ToolTipService.ToolTip="{Binding [Search],Source={StaticResource SR}}"
                                        Style="{StaticResource SearchButtonCommonStyle}"/>
                            </Grid>

                            <sdk:DataGrid  Grid.Row="2"
                                           x:Name="dgAlert"
                                           HorizontalAlignment="Stretch"
                                           VerticalAlignment="Stretch" Style="{StaticResource DataGridStyleRxx3}" LoadingRow="DataGridMonitorList_LoadingRow"
                                           MinHeight="200" AutoGenerateColumns="False" ItemsSource="{Binding VehicleAlertUnHandledPagedCV}" IsReadOnly="True" SelectedItem="{Binding SelectedVehicleAlertModel, Mode=TwoWay}"
                                                  SelectionMode="Single" Visibility="Collapsed">
                                <controlsInputToolkit:ContextMenuService.ContextMenu>
                                    <controlsInputToolkit:ContextMenu Loaded="ContextMenu_Loaded" Visibility="Collapsed"  HorizontalOffset="5" Style="{StaticResource ContextMenuStyle}">
                                        <!--监控组-->
                                        <Button Style="{StaticResource button01}"  
                                                    IsEnabled="{Binding SelectedVehicleAlertModel,Converter={StaticResource ObjectIsNullConverter}}"
                                                Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-04-01'}"
                                                Command="{Binding LocationMonitorCommand}"  CommandParameter="{Binding SelectedVehicleAlertModel.VehicleId}">
                                            <StackPanel Orientation="Horizontal" Margin="5">
                                                <Image Source="/ExternalResource;component/Images/NormalFocusOn.png" Width="16" Height="16" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                                <TextBlock Margin="10 0 0 0" Text="{Binding [AddMonitorGroup],Source={StaticResource SR}}" Foreground="#FFFFFFFF" ></TextBlock>
                                            </StackPanel>
                                        </Button>
                                        <!--电子围栏-->
                                        <Button Style="{StaticResource button01}"  
                                                        IsEnabled="{Binding SelectedVehicleAlertModel.VehicleInfo.HasMdvr,FallbackValue=False}"
                                                Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-03-05'}"
                                                Command="{Binding ElectricFenceCheckedCommand}"  CommandParameter="{Binding SelectedVehicleAlertModel.VehicleId}">
                                            <StackPanel Orientation="Horizontal" Margin="5">
                                                <Image Source="/ExternalResource;component/Images/NormalElectronicFence.png" Width="16" Height="16" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                                <TextBlock Margin="10 0 0 0" Text="{Binding [MONITOR_ElectricFence],Source={StaticResource SR}}" Foreground="#FFFFFFFF" ></TextBlock>
                                            </StackPanel>
                                        </Button>
                                        <!--行驶路线-->
                                        <Button Style="{StaticResource button01}" 
                                                        IsEnabled="{Binding SelectedVehicleAlertModel.VehicleInfo.HasMdvr,FallbackValue=False}"
                                                Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-03-06'}"
                                                Command="{Binding PlanRouteCommand}"  CommandParameter="{Binding SelectedVehicleAlertModel.VehicleId}">
                                            <StackPanel Orientation="Horizontal" Margin="5">
                                                <Image Source="/ExternalResource;component/Images/NormalDriveLine.png" Width="16" Height="16" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                                <TextBlock Margin="10 0 0 0" Text="{Binding [MONITOR_DriveRoute],Source={StaticResource SR}}"  Foreground="#FFFFFFFF"></TextBlock>
                                            </StackPanel>
                                        </Button>
                                        <!--发送消息-->
                                        <!--<Button Style="{StaticResource button01}" 
                                                       IsEnabled="{Binding SelectedVehicleAlertModel.VehicleInfo.HasMoblie,FallbackValue=False}"
                                                Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-03-09'}"
                                                Command="{Binding SendMessageCommond}" CommandParameter="{Binding SelectedVehicleAlertModel.VehicleId}">
                                            <StackPanel Orientation="Horizontal" Margin="5">
                                                <Image Source="/ExternalResource;component/Images/NormalSendMessage.png" Width="16" Height="16" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                                <TextBlock Margin="10 0 0 0" Text="{Binding [MONITOR_SendMessage],Source={StaticResource SR}}" Foreground="#FFFFFFFF" ></TextBlock>
                                            </StackPanel>
                                        </Button>-->

                                    </controlsInputToolkit:ContextMenu>
                                </controlsInputToolkit:ContextMenuService.ContextMenu>

                                <sdk:DataGrid.Columns>
                                    <sdk:DataGridTemplateColumn  
                                                            HeaderStyle="{StaticResource CustomColumnHeader}"
                                                            Header="BASEINFO_VehicleNumber"
                                                            Width="*">
                                        <sdk:DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Grid Height="25" MinWidth="120">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Image Grid.Column="0" HorizontalAlignment="Left"  Stretch="None" Margin="3,2,4,2"  VerticalAlignment="Center"                                         
                                                                   Source="{Binding VehicleInfo.IsOnLine,Converter={StaticResource VehicleOnLineConverter},FallbackValue='/ExternalResource;component/Images/VehicleOutline.png'}"/>
                                                    <TextBlock  Grid.Column="1"  Text="{Binding VehicleId}"
                                                                Margin="0,2,0,2" Foreground="#f0f0f0"
                                                                HorizontalAlignment="Left"
                                                                VerticalAlignment="Center"></TextBlock>
                                                    <Image HorizontalAlignment="Right"  Grid.Column="2"  Stretch="None" Margin="0,2,4,2"  VerticalAlignment="Center"                                         
                                                                   Source="{Binding AlertType,Converter={StaticResource BusinessAlertTypeImageConverter}}">
                                                        <ToolTipService.ToolTip>
                                                            <ToolTip Content="{Binding AlertType,Converter={StaticResource BusinessAlertTypeConverter}}" ></ToolTip>
                                                        </ToolTipService.ToolTip>
                                                    </Image>
                                                </Grid>
                                            </DataTemplate>
                                        </sdk:DataGridTemplateColumn.CellTemplate>
                                    </sdk:DataGridTemplateColumn>

                                    <sdk:DataGridTemplateColumn Header="AlertTime" Width="60"  HeaderStyle="{StaticResource CustomColumnHeader}">
                                        <sdk:DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Left">
                                                    <TextBlock Text="{Binding AlertTime,Converter={StaticResource TimeConverter}}" Style="{StaticResource TextBlockLightStyle}">
                                                                <ToolTipService.ToolTip>
                                                                    <ToolTip Content="{Binding AlertTime,Converter={StaticResource DateTimeConverter}}" ></ToolTip>
                                                                </ToolTipService.ToolTip>
                                                    </TextBlock>
                                                </StackPanel>
                                            </DataTemplate>
                                        </sdk:DataGridTemplateColumn.CellTemplate>
                                    </sdk:DataGridTemplateColumn>

                                    <sdk:DataGridTemplateColumn Header="Operation" Width="120" HeaderStyle="{StaticResource CustomColumnHeader}">
                                        <sdk:DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <Button  Command="{Binding DataContext.PlayVideoCommand,RelativeSource={RelativeSource AncestorType=sdk:DataGrid}}"
                                                                             CommandParameter="{Binding DataContext.VehicleInfo.UniqueId,RelativeSource={RelativeSource AncestorType=sdk:DataGridRow}}"
                                                                             Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-03-02'}"
                                                                             Margin="2,0,2,0" 
                                                                             IsEnabled="{Binding VehicleInfo.MDVROnline,TargetNullValue=False,FallbackValue=False}"
                                                                             ToolTipService.ToolTip="{Binding [Rpt_External_Access_COLSSSP],Source={StaticResource SR}}"
                                                                             Style="{StaticResource MonitorVedioButtonCommonStyle}">
                                                    </Button>
                                                    <!--拍照-->
                                                    <Button  Command="{Binding DataContext.CapturePhotoConmand,RelativeSource={RelativeSource AncestorType=sdk:DataGrid}}"
                                                                              CommandParameter="{Binding DataContext.VehicleInfo.UniqueId,RelativeSource={RelativeSource AncestorType=sdk:DataGridRow}}"
                                                                             Margin="2,0,2,0"
                                                                             Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-03-03'}"
                                                                             IsEnabled="{Binding VehicleInfo.HasMdvr,FallbackValue=False}"
                                                                             ToolTipService.ToolTip="{Binding [Camera_Photo],Source={StaticResource SR}}"
                                                                             Style="{StaticResource CapturePhotoButton}">
                                                    </Button>

                                                    <Button  Command="{Binding DataContext.HistoricalVideoCommand,RelativeSource={RelativeSource AncestorType=sdk:DataGrid}}"
                                                                             CommandParameter="{Binding DataContext.VehicleId,RelativeSource={RelativeSource AncestorType=sdk:DataGridRow}}"
                                                                             Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-03-04'}"
                                                                             IsEnabled="{Binding VehicleInfo.HasMdvr,FallbackValue=False}"
                                                                             Margin="2,0,2,0"
                                                                             ToolTipService.ToolTip="{Binding [Rpt_External_Access_COLLSSP],Source={StaticResource SR}}"
                                                                             Style="{StaticResource HistoryVedioCommonStyle}">
                                                    </Button>

                                                    <Button  Command="{Binding DataContext.HandleAlertCommand,RelativeSource={RelativeSource AncestorType=sdk:DataGrid}}"
                                                                             CommandParameter="{Binding DataContext,ElementName=stackPanel}"
                                                                             Margin="2,0,2,0"
                                                               Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-03-07'}"
                                                                             Style="{StaticResource AlarmDisposedButtonCommonStyle}"  
                                                                             IsEnabled="{Binding Status,Converter={StaticResource AlertStatusConverter}}"
                                                                             ToolTipService.ToolTip="{Binding [AlertDisposed],Source={StaticResource SR}}" 
                                                             Content="{Binding [AlertDisposed],Source={StaticResource SR}}">

                                                    </Button>
                                                    <Button
                                                               ToolTipService.ToolTip="{Binding [HappenLocation],Source={StaticResource SR}}"
                                                               Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-03-08'}"
                                                               Margin="2,0,2,0"
                                                                Command="{Binding DataContext.LocatePositionCommand,RelativeSource={RelativeSource AncestorType=sdk:DataGrid}}"
                                                               CommandParameter="{Binding}"
                                                               Style="{StaticResource LocateButtonCommonStyle}"/>
                                                    <!--发送邮件-->
                                                    <!--<Button  Command="{Binding DataContext.AlertSendEmailCommond,RelativeSource={RelativeSource AncestorType=sdk:DataGrid}}"
                                                                             CommandParameter="{Binding VehicleInfo.VehicleId}"
                                                                             Margin="2,0,2,0"
                                                                             Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-03-10'}"                                                                     
                                                                             Style="{StaticResource SendMessageButtonCommonStyle}"  
                                                                             ToolTipService.ToolTip="{Binding [MONITOR_SendEmail],Source={StaticResource SR}}">
                                                    </Button>-->
                                                </StackPanel>
                                            </DataTemplate>
                                        </sdk:DataGridTemplateColumn.CellTemplate>
                                    </sdk:DataGridTemplateColumn>
                                </sdk:DataGrid.Columns>

                            </sdk:DataGrid>

                            <Border BorderBrush="#FF617584" Grid.Row="3" BorderThickness="0.5" Height="30">

                                <Grid Style="{StaticResource ContentGridStyle}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0"
                                                Text="{Binding [Total],Source={StaticResource SR}}"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Center"
                                                Margin="0,2,10,2" Style="{StaticResource TextBlockLightStyle}"/>
                                    <TextBlock Text="{Binding VehicleAlertUnHandledPagedCV.ItemCount}" Grid.Column="1"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                Margin="0,2,10,2" Style="{StaticResource TextBlockLightStyle}"/>
                                    <sdk:DataPager Style="{StaticResource DataPagerStyle}"   
                                                Grid.Column="2"
                                                Margin="0,0,0,0"
                                                Height="25"
                                                Source="{Binding VehicleAlertUnHandledPagedCV}"
                                                PageSize="30"
                                                Foreground="#f0f0f0"                                        
                                                Background="{Binding ElementName=dgAlert, Path=Background}"
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </toolkit:AccordionItem.Content>

                </toolkit:AccordionItem>

                <toolkit:AccordionItem Header="{Binding [SUITE_DeviceAlarmQuery],Source={StaticResource SR}}"   
                                       HorizontalContentAlignment="Stretch"
                                       VerticalContentAlignment="Stretch"
                                       Style="{StaticResource AdviceMenu_AccordionItemStyle}"
                                                                              Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-03'}"
                                       Selected="AccordionItem_Selected_DeviceAlert">

                    <toolkit:AccordionItem.Content>
                        <Grid Style="{StaticResource ContentGridStyle}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="35"/>
                                <RowDefinition Height="1"/>
                            </Grid.RowDefinitions>

                            <Grid Grid.Row="0" Style="{StaticResource ContentGridStyle}">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="10"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Text="{Binding [ALERT_VechileId],Source={StaticResource SR}}"
                                           Grid.Row="0"
                                           Grid.Column="0"
                                           HorizontalAlignment="Right"
                                           VerticalAlignment="Center"
                                           Margin="0,5,5,5" Style="{StaticResource TextBlockLightStyle}"/>
                                <TextBox Grid.Row="0"
                                         Grid.Column="1"
                                         Margin="0,5,0,5"
                                         HorizontalAlignment="Stretch"
                                         VerticalAlignment="Center"
                                         Text="{Binding DeviceAlertCarNumber,Mode=TwoWay}"
                                         Background="#242930" Foreground="#f0f0f0"/>

                                <TextBlock Text="{Binding [AlertType],Source={StaticResource SR}}"
                                           Grid.Row="1"
                                           Grid.Column="0"
                                           HorizontalAlignment="Right"
                                           VerticalAlignment="Center"
                                           Margin="0,5,5,5" Style="{StaticResource TextBlockLightStyle}"/>
                                <ComboBox Grid.Row="1"
                                         Grid.Column="1"
                                         Margin="0,5,0,5"
                                         HorizontalAlignment="Stretch"
                                         VerticalAlignment="Center"  />
                                <ComboBox Grid.Row="1" Grid.Column="1"  Margin="0,5,0,5" 
                                        ItemsSource="{Binding ZAlertTypes}"
                                       DisplayMemberPath="Name" SelectedValuePath="Code"
                                        SelectedItem="{Binding SearchByAlertType,Mode=TwoWay}"
                                        VerticalAlignment="Center"
                                           ToolTipService.ToolTip="{Binding SearchByAlertType.Name,Mode=TwoWay}"
                                        HorizontalAlignment="Stretch"
                                        IsEnabled="True"></ComboBox>
                                <Button Grid.Row="1"
                                        Grid.Column="2"
                                        Command="{Binding GetVehicleDeviceAlertCommand}"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        ToolTipService.ToolTip="{Binding [Search],Source={StaticResource SR}}"
                                        Style="{StaticResource SearchButtonCommonStyle}"/>
                            </Grid>

                            <sdk:DataGrid  Grid.Row="2"
                                           x:Name="dgDeviceAlert"
                                           HorizontalAlignment="Stretch"
                                           VerticalAlignment="Stretch" Style="{StaticResource DataGridStyleRxx3}" LoadingRow="DataGridMonitorList_LoadingRow"
                                           MinHeight="200" AutoGenerateColumns="False" ItemsSource="{Binding VehicleDeviceAlertUnHandledPagedCV}" IsReadOnly="True" SelectedItem="{Binding SelectedVehicleDeviceAlertModel, Mode=TwoWay}"
                                                  SelectionMode="Single" Visibility="Collapsed">
                                <controlsInputToolkit:ContextMenuService.ContextMenu>
                                    <controlsInputToolkit:ContextMenu Loaded="ContextMenu_Loaded" Visibility="Collapsed"  HorizontalOffset="5" Style="{StaticResource ContextMenuStyle}">
                                        <!--监控组-->
                                        <Button Style="{StaticResource button01}"  
                                                    IsEnabled="{Binding SelectedVehicleDeviceAlertModel,Converter={StaticResource ObjectIsNullConverter}}"
                                                Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-04-01'}"
                                                Command="{Binding LocationMonitorCommand}"  CommandParameter="{Binding SelectedVehicleDeviceAlertModel.VehicleId}">
                                            <StackPanel Orientation="Horizontal" Margin="5">
                                                <Image Source="/ExternalResource;component/Images/NormalFocusOn.png" Width="16" Height="16" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                                <TextBlock Margin="10 0 0 0" Text="{Binding [AddMonitorGroup],Source={StaticResource SR}}" Foreground="#FFFFFFFF" ></TextBlock>
                                            </StackPanel>
                                        </Button>
                                        <!--电子围栏-->
                                        <Button Style="{StaticResource button01}"  
                                                        IsEnabled="{Binding SelectedVehicleDeviceAlertModel.VehicleInfo.HasMdvr,FallbackValue=False}"
                                                Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-03-05'}"
                                                Command="{Binding ElectricFenceCheckedCommand}"  CommandParameter="{Binding SelectedVehicleDeviceAlertModel.VehicleId}">
                                            <StackPanel Orientation="Horizontal" Margin="5">
                                                <Image Source="/ExternalResource;component/Images/NormalElectronicFence.png" Width="16" Height="16" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                                <TextBlock Margin="10 0 0 0" Text="{Binding [MONITOR_ElectricFence],Source={StaticResource SR}}" Foreground="#FFFFFFFF" ></TextBlock>
                                            </StackPanel>
                                        </Button>
                                        <!--行驶路线-->
                                        <Button Style="{StaticResource button01}" 
                                                        IsEnabled="{Binding SelectedVehicleDeviceAlertModel.VehicleInfo.HasMdvr,FallbackValue=False}"
                                                Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-03-06'}"
                                                Command="{Binding PlanRouteCommand}"  CommandParameter="{Binding SelectedVehicleDeviceAlertModel.VehicleId}">
                                            <StackPanel Orientation="Horizontal" Margin="5">
                                                <Image Source="/ExternalResource;component/Images/NormalDriveLine.png" Width="16" Height="16" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                                <TextBlock Margin="10 0 0 0" Text="{Binding [MONITOR_DriveRoute],Source={StaticResource SR}}"  Foreground="#FFFFFFFF"></TextBlock>
                                            </StackPanel>
                                        </Button>

                                    </controlsInputToolkit:ContextMenu>
                                </controlsInputToolkit:ContextMenuService.ContextMenu>

                                <sdk:DataGrid.Columns>

                                   
                                    <sdk:DataGridTemplateColumn  
                                                            HeaderStyle="{StaticResource CustomColumnHeader}"
                                                            Header="BASEINFO_VehicleNumber"
                                                            Width="*">
                                        <sdk:DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Grid Height="25" Width="80">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Image Grid.Column="0" HorizontalAlignment="Left"  Stretch="None" Margin="3,2,4,2"  VerticalAlignment="Center"                                         
                                                                   Source="{Binding VehicleInfo.IsOnLine,Converter={StaticResource VehicleOnLineConverter},FallbackValue='/ExternalResource;component/Images/VehicleOutline.png'}"/>
                                                    <TextBlock  Grid.Column="1"  Text="{Binding VehicleId}"
                                                                Margin="0,2,0,2" ToolTipService.ToolTip="{Binding VehicleId}" TextTrimming="WordEllipsis"
                                                                HorizontalAlignment="Left" Foreground="#f0f0f0"
                                                                VerticalAlignment="Center"></TextBlock>
                                                    <!--<Image HorizontalAlignment="Right"  Grid.Column="2"  Stretch="None" Margin="0,2,4,2"  VerticalAlignment="Center"                                         
                                                                   Source="{Binding AlertType,Converter={StaticResource BusinessAlertTypeImageConverter}}">
                                                        <ToolTipService.ToolTip>
                                                            <ToolTip Content="{Binding AlertType,Converter={StaticResource BusinessAlertTypeConverter}}" ></ToolTip>
                                                        </ToolTipService.ToolTip>
                                                    </Image>-->
                                                </Grid>
                                            </DataTemplate>
                                        </sdk:DataGridTemplateColumn.CellTemplate>
                                    </sdk:DataGridTemplateColumn>

                                    <sdk:DataGridTemplateColumn Header="AlertType" Width="80"  HeaderStyle="{StaticResource CustomColumnHeader}">
                                        <sdk:DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Left">
                                                    <TextBlock Text="{Binding AlertType,Converter={StaticResource DeviceTypeConverter}}" Foreground="#f0f0f0">
                                                               <ToolTipService.ToolTip>
                                                                    <ToolTip Content="{Binding AlertType,Converter={StaticResource DeviceTypeConverter}}" ></ToolTip>
                                                                </ToolTipService.ToolTip>
                                                    </TextBlock>
                                                </StackPanel>
                                            </DataTemplate>
                                        </sdk:DataGridTemplateColumn.CellTemplate>
                                    </sdk:DataGridTemplateColumn>

                                    <sdk:DataGridTemplateColumn Header="AlertTime" Width="60"  HeaderStyle="{StaticResource CustomColumnHeader}">
                                        <sdk:DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Left">
                                                    <TextBlock Text="{Binding AlertTime,Converter={StaticResource TimeConverter}}" Foreground="#f0f0f0">
                                                                <ToolTipService.ToolTip>
                                                                    <ToolTip Content="{Binding AlertTime,Converter={StaticResource DateTimeConverter}}" ></ToolTip>
                                                                </ToolTipService.ToolTip>
                                                    </TextBlock>
                                                </StackPanel>
                                            </DataTemplate>
                                        </sdk:DataGridTemplateColumn.CellTemplate>
                                    </sdk:DataGridTemplateColumn>

                                    <sdk:DataGridTemplateColumn Header="Operation" Width="80" HeaderStyle="{StaticResource CustomColumnHeader}">
                                        <sdk:DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <Button  Command="{Binding DataContext.PlayVideoCommand,RelativeSource={RelativeSource AncestorType=sdk:DataGrid}}"
                                                                             CommandParameter="{Binding DataContext.VehicleInfo.UniqueId,RelativeSource={RelativeSource AncestorType=sdk:DataGridRow}}"
                                                                             Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-03-02'}"
                                                                             Margin="2,0,2,0" 
                                                                             IsEnabled="{Binding VehicleInfo.MDVROnline,TargetNullValue=False,FallbackValue=False}"
                                                                             ToolTipService.ToolTip="{Binding [Rpt_External_Access_COLSSSP],Source={StaticResource SR}}"
                                                                             Style="{StaticResource MonitorVedioButtonCommonStyle}">
                                                    </Button>
                                                    <!--拍照-->
                                                    <Button  Command="{Binding DataContext.CapturePhotoConmand,RelativeSource={RelativeSource AncestorType=sdk:DataGrid}}"
                                                                              CommandParameter="{Binding DataContext.VehicleInfo.UniqueId,RelativeSource={RelativeSource AncestorType=sdk:DataGridRow}}"
                                                                             Margin="2,0,2,0"
                                                                             Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-03-03'}"
                                                                             IsEnabled="{Binding VehicleInfo.HasMdvr,FallbackValue=False}"
                                                                             ToolTipService.ToolTip="{Binding [Camera_Photo],Source={StaticResource SR}}"
                                                                             Style="{StaticResource CapturePhotoButton}">
                                                    </Button>

                                                    <Button  Command="{Binding DataContext.HistoricalVideoCommand,RelativeSource={RelativeSource AncestorType=sdk:DataGrid}}"
                                                                             CommandParameter="{Binding DataContext.VehicleId,RelativeSource={RelativeSource AncestorType=sdk:DataGridRow}}"
                                                                             Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-03-04'}"
                                                                             IsEnabled="{Binding VehicleInfo.HasMdvr,FallbackValue=False}"
                                                                             Margin="2,0,2,0"
                                                                             ToolTipService.ToolTip="{Binding [Rpt_External_Access_COLLSSP],Source={StaticResource SR}}"
                                                                             Style="{StaticResource HistoryVedioCommonStyle}">
                                                    </Button>
                                                    <Button
                                                               ToolTipService.ToolTip="{Binding [HappenLocation],Source={StaticResource SR}}"
                                                               Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-03-08'}"
                                                               Margin="2,0,2,0"
                                                                Command="{Binding DataContext.DeviceLocatePositionCommand,RelativeSource={RelativeSource AncestorType=sdk:DataGrid}}"
                                                               CommandParameter="{Binding}"
                                                               Style="{StaticResource LocateButtonCommonStyle}"/>
                                                    <!--<Button  Command="{Binding DataContext.DeviceAlertSendEmailCommond,RelativeSource={RelativeSource AncestorType=sdk:DataGrid}}"
                                                                             CommandParameter="{Binding VehicleInfo.VehicleId}"
                                                                             Margin="2,0,2,0"
                                                                             Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-03-10'}"                                                                     
                                                                             Style="{StaticResource SendMessageButtonCommonStyle}"  
                                                                             ToolTipService.ToolTip="{Binding [MONITOR_SendEmail],Source={StaticResource SR}}">
                                                    </Button>-->

                                                </StackPanel>
                                            </DataTemplate>
                                        </sdk:DataGridTemplateColumn.CellTemplate>
                                    </sdk:DataGridTemplateColumn>
                                </sdk:DataGrid.Columns>

                            </sdk:DataGrid>

                            <Border BorderBrush="#FF617584" Grid.Row="3" BorderThickness="0.5" Height="30">

                                <Grid Style="{StaticResource ContentGridStyle}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0"
                                                Text="{Binding [Total],Source={StaticResource SR}}"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Center"
                                                Margin="0,2,10,2" Style="{StaticResource TextBlockLightStyle}"/>
                                    <TextBlock Text="{Binding VehicleDeviceAlertUnHandledPagedCV.ItemCount}" Grid.Column="1"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                Margin="0,2,10,2" Style="{StaticResource TextBlockLightStyle}"/>
                                    <sdk:DataPager Style="{StaticResource DataPagerStyle}"   
                                                Grid.Column="2"
                                                Margin="0,0,0,0"
                                                Height="25"
                                                Source="{Binding VehicleDeviceAlertUnHandledPagedCV}"
                                                PageSize="25"
                                                Foreground="#f0f0f0"  
                                                Background="{Binding ElementName=dgDeviceAlert, Path=Background}"
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </toolkit:AccordionItem.Content>

                </toolkit:AccordionItem>
                
            </toolkit:Accordion>

        </Grid>
        <sdk:GridSplitter/>


        <Border x:Name="ContentBorder" Style="{StaticResource ContentBorderStyle}" Margin="0,0,0,0" Grid.Column="1">
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <!--<Border x:Name="GISContent" BorderThickness="0,0" Grid.Row="0" HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch">-->
                <Grid x:Name="ContentGrid" Margin="0,0,0,0" Grid.Row="0">
                    <sdk:Frame  AllowDrop="True" 
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
        				            Margin="0,0,0,0"
        				            BorderThickness="0"
        				            JournalOwnership="OwnsJournal"
        				            x:Name="ContentFrame"
        				            Source="/MonitorGisView"
        				            NavigationFailed="ContentFrame_NavigationFailed">
                        <sdk:Frame.UriMapper>
                            <sdk:UriMapper>
                                <sdk:UriMapping Uri="" MappedUri="/GisManagement;component/Views/GisNavigationer.xaml"/>
                                <sdk:UriMapping Uri="/ShowText/{text}" MappedUri="/GisManagement;component/Views/GisNavigationer.xaml?view=TextView&amp;text={text}"/>
                                <sdk:UriMapping Uri="/{pageName}" MappedUri="/GisManagement;component/Views/GisNavigationer.xaml?view={pageName}"/>
                            </sdk:UriMapper>
                        </sdk:Frame.UriMapper>
                    </sdk:Frame>
                </Grid>
                <!--</Border>-->

            </Grid>
        </Border>

        <Grid x:Name="GoRightcollapsedPane" 
              Canvas.ZIndex="100" 
                  Grid.Row="3"
              Grid.Column="2"
              Margin="-5,0,0,0" HorizontalAlignment="Right" 
              VerticalAlignment="Center" Visibility="Collapsed">
            <!--Source="/ExternalResource;component/Images/slidearrow06.png"-->
            <Image x:Name="GoRightShow"  
                           Source="/ExternalResource;component/Images/GoLeftslideShow.png"
                           Cursor="Hand" 
                           Stretch="None" 
                           HorizontalAlignment="Right" 
                                   VerticalAlignment="Center"
                           Opacity="0.9" 
                           ToolTipService.ToolTip="{Binding [MenuVisibleToolTip], Source={StaticResource SR}}" Margin="5,0,0,0" 
                       MouseLeftButtonDown="GoRightShow_MouseLeftButtonDown"/>
        </Grid>

        <Grid x:Name="InfoShowGridRegion" Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid.RenderTransform>
                <TranslateTransform/>
            </Grid.RenderTransform>


            <Image x:Name="GoRighthiddenL" 
                   Source="/ExternalResource;component/Images/RightHide.png"
                   Cursor="Hand" 
                   Margin="0,3,10,3"
                   HorizontalAlignment="Right" 
                   VerticalAlignment="Center" 
                   Canvas.ZIndex="100" 
                   Stretch="None" 
                   MouseLeftButtonDown="GoRighthiddenL_OnMouseLeftButtonDown"
                   ToolTipService.ToolTip="{Binding [MenuCollapsedToolTip], Source={StaticResource SR}}"/>


            <Grid Grid.Row="0">
                <!--<Border Style="{StaticResource PopupWindowTitleBorder}" >-->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="25"/>
                        <ColumnDefinition Width="10"/>
                    </Grid.ColumnDefinitions>

                    <Grid.Background>
                        <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                            <GradientStop Color="#383f49" Offset="0.0"/>
                            <GradientStop Color="#1d2025" Offset="1.0"/>
                        </LinearGradientBrush>
                    </Grid.Background>


                    <Image Grid.Column="1" Style="{StaticResource TitleImageStyle}"
                                   />
                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" 
                                       Text="{Binding [InfoRegion],Source={StaticResource SR}}"
                                       VerticalAlignment="Center" Grid.Column="2" Margin="0,0,0,0" 
                                       FontSize="16"
                                       FontWeight="Bold" Style="{StaticResource TextBlockLightStyle}"/>

                </Grid>
                <!--</Border>-->
            </Grid>

            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*" MinHeight="300"/>
                </Grid.RowDefinitions>
                <Grid Name="InfoArea" Margin="0,0,0,0" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                    <Border Name="BasicInfoArea" Visibility="{Binding BaseInfoVisibility}" BorderThickness="0">

                    </Border>
                    <Border Name="AlarmInfoArea" Visibility="{Binding AlarmInfoVisibility}" BorderThickness="0">
                    </Border>
                    <Border Name="AlertInfoArea" Visibility="{Binding AlertInfoVisibility}" BorderThickness="0">

                    </Border>
                </Grid>

                <Grid Grid.Row="1" MinHeight="300">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <!--<Border Style="{StaticResource PopupWindowTitleBorder}" Grid.Row="0" BorderThickness="0"  >-->
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="10"/>
                        </Grid.ColumnDefinitions>

                        <Grid.Background>
                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Color="#1E2226" Offset="0.0"/>
                                <GradientStop Color="#1E2226" Offset="1.0"/>
                            </LinearGradientBrush>
                        </Grid.Background>

                        <Image Style="{StaticResource SecoundTitleImageStyle}" Grid.Column="1"/>
                        <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" 
                                       Text="{Binding [MonitorList],Source={StaticResource SR}}"
                                       VerticalAlignment="Center" Grid.Column="2" Margin="0,0,0,0" 
                                       FontSize="13"
                                       FontWeight="Bold" Style="{StaticResource TextBlockLightStyle}"/>
                    </Grid>
                    <!--</Border>-->
                    <Border Grid.Row="1" BorderThickness="0" 
                                x:Name="OperatorBorder">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <!--IsEnabled="{Binding ElementName=DataGridMonitorList,Path=SelectedItem.IsOnLine}"-->
                            <Button Grid.Column="0" Command="{Binding PlayVideoCommand}"  HorizontalAlignment="Left"                                              
                                    CommandParameter="{Binding CurSelectedTableData.UniqueId}"
                                 IsEnabled="{Binding CurSelectedTableData.VehicleInfo.MDVROnline,TargetNullValue=False,FallbackValue=False}"
                                                Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-04-02'}"
                                                Margin="10,0,2,0"
                                                ToolTipService.ToolTip="{Binding [Rpt_External_Access_COLSSSP],Source={StaticResource SR}}"
                                                Style="{StaticResource MonitorVedioButtonCommonStyle}">
                            </Button>

                            <!--拍照-->
                            <Button Grid.Column="1"  Command="{Binding CapturePhotoConmand}"
                                                                            CommandParameter="{Binding CurSelectedTableData.UniqueId}"
                                                                             Margin="2,0,2,0"
                                                                             Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-04-03'}"
                                                                             IsEnabled="{Binding CurSelectedTableData.VehicleInfo.HasMdvr,FallbackValue=False}"
                                                                             ToolTipService.ToolTip="{Binding [Camera_Photo],Source={StaticResource SR}}"
                                                                             Style="{StaticResource CapturePhotoButton}">
                            </Button>

                            <Button Grid.Column="2"
                                                Command="{Binding HistoricalVideoCommand}"
                                               CommandParameter="{Binding  CurSelectedTableData.VehicleId }"
                                    IsEnabled="{Binding CurSelectedTableData.VehicleInfo.HasMdvr,FallbackValue=False}"
                                                Margin="2,0,2,0"
                                                ToolTipService.ToolTip="{Binding [Rpt_External_Access_COLLSSP],Source={StaticResource SR}}"
                                                Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-04-04'}"
                                                Style="{StaticResource HistoryVedioCommonStyle}">
                            </Button>
                            <Button Grid.Column="3" 
                                                Command="{Binding DeleteMonitorGroupVehicleCommand}"
                                                CommandParameter="{Binding CurSelectedTableData.VehicleId }"                                              
                                                Margin="2,0,2,0"
                                                ToolTipService.ToolTip="{Binding [DeleteMonitorGroup],Source={StaticResource SR}}"
                                                Style="{StaticResource DeleteFocusOnButtonCommonStyle}"
                                    IsEnabled="{Binding CurSelectedTableData,Converter={StaticResource ObjectIsNullConverter}}">
                            </Button>

                            <Button  Grid.Column="4" Command="{Binding ElectricFenceCheckedCommand}"
                                               CommandParameter="{Binding CurSelectedTableData.VehicleId }"
                                                Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-04-05'}"
                                                 Margin="2,0,2,0"
                                                 Style="{StaticResource ElectronicFenceButtonCommonStyle}"  
                                                 ToolTipService.ToolTip="{Binding [MONITOR_ElectricFence],Source={StaticResource SR}}"
                                     IsEnabled="{Binding CurSelectedTableData.VehicleInfo.HasMdvr,FallbackValue=False}">
                            </Button>


                            <Button  Grid.Column="5" Command="{Binding PlanRouteCommand}"
                                                  CommandParameter="{Binding CurSelectedTableData.VehicleId }"
                                                Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-04-06'}"
                                                 Margin="2,0,2,0"
                                                 Style="{StaticResource DriveLineButtonCommonStyle}"  
                                                 ToolTipService.ToolTip="{Binding [MONITOR_DriveRoute],Source={StaticResource SR}}"
                                     IsEnabled="{Binding CurSelectedTableData.VehicleInfo.HasMdvr,FallbackValue=False}">
                            </Button>
                            <!--<Button  Grid.Column="6" Command="{Binding SendMessageCommond}"
                                                 CommandParameter="{Binding CurSelectedTableData.VehicleId }"
                                                Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-04-07'}"
                                                 Margin="2,0,2,0"
                                                 Style="{StaticResource SendMessageButtonCommonStyle}"  
                                                 ToolTipService.ToolTip="{Binding [MONITOR_SendMessage],Source={StaticResource SR}}"
                                     IsEnabled="{Binding CurSelectedTableData.VehicleInfo.HasMoblie,FallbackValue=False}">
                            </Button>-->

                            <Button  Grid.Column="7" Command="{Binding AlarmByMonitorCommond}"
                                                  CommandParameter="{Binding  CurSelectedTableData.VehicleId }"
                                                 Margin="2,0,2,0"
                                                 Style="{StaticResource HandAlarmButtonCommonStyle}"  
                                                Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-04-08'}"
                                                 ToolTipService.ToolTip="{Binding [MONITOR_AlarmByMonitor],Source={StaticResource SR}}"
                                    IsEnabled="{Binding CurSelectedTableData,Converter={StaticResource ObjectIsNullConverter}}">
                            </Button>
                        </Grid>
                    </Border>

                    <Border Grid.Row="2" x:Name="DataGridBorder">

                        <Grid Style="{StaticResource ContentGridStyle}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <sdk:DataGrid AutoGenerateColumns="False"
                                Grid.Row="0"
                                x:Name="DataGridMonitorList"
                                Margin="0,0,0,0" ItemsSource="{Binding MonitorPageCollectionView}"
                                SelectedItem="{Binding CurSelectedTableData,Mode=TwoWay}"
                                Tag="{Binding GroupName}"
                                Style="{StaticResource DataGridStyleBlack}" LoadingRow="DataGridMonitorList_LoadingRow">
                                <controlsInputToolkit:ContextMenuService.ContextMenu>
                                    <controlsInputToolkit:ContextMenu Loaded="ContextMenu_Loaded" Visibility="Collapsed"  HorizontalOffset="5" Style="{StaticResource ContextMenuStyle}">

                                        <Button Style="{StaticResource button01}"
                                                IsEnabled="{Binding CurSelectedTableData.VehicleInfo.MDVROnline,TargetNullValue=False,FallbackValue=False}"
                                                    Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-04-02'}"
                                                    Command="{Binding PlayVideoCommand}" CommandParameter="{Binding CurSelectedTableData.UniqueId}">
                                            <StackPanel Orientation="Horizontal" Margin="5">
                                                <Image Source="/ExternalResource;component/Images/NormalMonitorVedio.png" Width="16" Height="16" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                                <TextBlock Margin="10 0 0 0" Text="{Binding [Rpt_External_Access_COLSSSP],Source={StaticResource SR}}"  Foreground="#FFFFFFFF"></TextBlock>
                                            </StackPanel>
                                        </Button>

                                        <Button Style="{StaticResource button01}" 
                                                Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-04-03'}"
                                                Command="{Binding CapturePhotoConmand}"
                                                IsEnabled="{Binding CurSelectedTableData.VehicleInfo.HasMdvr,FallbackValue=False}"
                                                CommandParameter="{Binding CurSelectedTableData.VehicleInfo.UniqueId}">
                                            <StackPanel Orientation="Horizontal" Margin="5">
                                                <Image Source="/ExternalResource;component/Images/Camera/NormalCapturePhoto.png" Width="16" Height="16" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                                <TextBlock Margin="10 0 0 0" Text="{Binding [Camera_Photo],Source={StaticResource SR}}"  Foreground="#FFFFFFFF"></TextBlock>
                                            </StackPanel>
                                        </Button>

                                        <Button Style="{StaticResource button01}"  
                                                Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-04-04'}"
                                                Command="{Binding HistoricalVideoCommand}" 
                                                IsEnabled="{Binding CurSelectedTableData.VehicleInfo.HasMdvr,FallbackValue=False}"
                                                CommandParameter="{Binding CurSelectedTableData.VehicleId}">
                                            <StackPanel Orientation="Horizontal" Margin="5">
                                                <Image Source="/ExternalResource;component/Images/NormalHistoryVedio.png" Width="16" Height="16" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                                <TextBlock Margin="10 0 0 0" Text="{Binding [Rpt_External_Access_COLLSSP],Source={StaticResource SR}}" Foreground="#FFFFFFFF"></TextBlock>
                                            </StackPanel>
                                        </Button>

                                        <Button Style="{StaticResource button01}" 
                                                Command="{Binding DeleteMonitorGroupVehicleCommand}" 
                                                IsEnabled="{Binding CurSelectedTableData,Converter={StaticResource ObjectIsNullConverter}}"
                                                CommandParameter="{Binding CurSelectedTableData.VehicleId}">
                                            <StackPanel Orientation="Horizontal" Margin="5">
                                                <Image Source="/ExternalResource;component/Images/NormalDeleteFocusOn.png" Width="16" Height="16" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                                <TextBlock Margin="10 0 0 0" Text="{Binding [DeleteMonitorGroup],Source={StaticResource SR}}"  Foreground="#FFFFFFFF" ></TextBlock>
                                            </StackPanel>
                                        </Button>

                                        <Button Style="{StaticResource button01}"  
                                                 IsEnabled="{Binding CurSelectedTableData.VehicleInfo.HasMdvr,FallbackValue=False}"
                                                Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-04-05'}"
                                                Command="{Binding ElectricFenceCheckedCommand}"  CommandParameter="{Binding CurSelectedTableData.VehicleId}">
                                            <StackPanel Orientation="Horizontal" Margin="5">
                                                <Image Source="/ExternalResource;component/Images/NormalElectronicFence.png" Width="16" Height="16" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                                <TextBlock Margin="10 0 0 0" Text="{Binding [MONITOR_ElectricFence],Source={StaticResource SR}}" Foreground="#FFFFFFFF" ></TextBlock>
                                            </StackPanel>
                                        </Button>

                                        <Button Style="{StaticResource button01}" 
                                                Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-04-06'}"
                                                 IsEnabled="{Binding CurSelectedTableData.VehicleInfo.HasMdvr,FallbackValue=False}"
                                                Command="{Binding PlanRouteCommand}"  
                                                CommandParameter="{Binding CurSelectedTableData.VehicleId}">
                                            <StackPanel Orientation="Horizontal" Margin="5">
                                                <Image Source="/ExternalResource;component/Images/NormalDriveLine.png" Width="16" Height="16" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                                <TextBlock Margin="10 0 0 0" Text="{Binding [MONITOR_DriveRoute],Source={StaticResource SR}}"  Foreground="#FFFFFFFF"></TextBlock>
                                            </StackPanel>
                                        </Button>

                                        <Button Style="{StaticResource button01}" 
                                                 IsEnabled="{Binding CurSelectedTableData.VehicleInfo.HasMoblie,FallbackValue=False}"
                                                Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-04-07'}"
                                                Command="{Binding SendMessageCommond}" CommandParameter="{Binding CurSelectedTableData.VehicleId}">
                                            <StackPanel Orientation="Horizontal" Margin="5">
                                                <Image Source="/ExternalResource;component/Images/NormalSendMessage.png" Width="16" Height="16" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                                <TextBlock Margin="10 0 0 0" Text="{Binding [MONITOR_SendMessage],Source={StaticResource SR}}" Foreground="#FFFFFFFF" ></TextBlock>
                                            </StackPanel>
                                        </Button>

                                        <Button Style="{StaticResource button01}" 
                                                IsEnabled="{Binding CurSelectedTableData,Converter={StaticResource ObjectIsNullConverter}}"
                                                Visibility="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource FunItemVisibilityConverter},ConverterParameter='02-01-01-04-08'}"
                                                Command="{Binding AlarmByMonitorCommond}" 
                                                CommandParameter="{Binding CurSelectedTableData.VehicleId}">
                                            <StackPanel Orientation="Horizontal" Margin="5">
                                                <Image Source="/ExternalResource;component/Images/NormalHandAlarm.png" Width="16" Height="16" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                                <TextBlock Margin="10 0 0 0" Text="{Binding [MONITOR_AlarmByMonitor],Source={StaticResource SR}}"  Foreground="#FFFFFFFF"></TextBlock>
                                            </StackPanel>
                                        </Button>
                                    </controlsInputToolkit:ContextMenu>
                                </controlsInputToolkit:ContextMenuService.ContextMenu>

                                <sdk:DataGrid.Columns>
                                    <sdk:DataGridTemplateColumn  
                                                    Header="BASEINFO_VehicleNumber"  
                                                    Visibility="Visible" 
                                                    Width="130">
                                        <sdk:DataGridTemplateColumn.HeaderStyle>
                                            <Style TargetType="sdk:DataGridColumnHeader">
                                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                                <Setter Property="VerticalAlignment" Value="Center"/>
                                                <Setter Property="BorderThickness" Value="0"></Setter>
                                                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                                                <Setter Property="Height" Value="28"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="sdk:DataGridColumnHeader">
                                                            <Border BorderBrush="#F6F6F6"
                            BorderThickness="0"
                            x:Name="ColumnHeaderBorder">
                                                                <Border.Background>
                                                                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="0,1.0">
                                                                        <!--<GradientStop Color="#353a44" Offset="0.5"/>
                                <GradientStop Color="#22252c" Offset="1.0"/>-->
                                                                        <GradientStop Color="#1e2226" Offset="0.5"/>
                                                                        <GradientStop Color="#1e2226" Offset="1.0"/>
                                                                    </LinearGradientBrush>
                                                                </Border.Background>

                                                                <StackPanel Background="{TemplateBinding Background}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                                                                    <ContentPresenter>
                                                                        <ContentPresenter.Content>
                                                                            <TextBlock Text="{TemplateBinding Content}"
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch"
                                                FontSize="12"
                                               FontWeight="Bold"  Style="{StaticResource TextBlockLightStyle}"/>
                                                                        </ContentPresenter.Content>
                                                                    </ContentPresenter>
                                                                </StackPanel>
                                                            </Border>

                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </sdk:DataGridTemplateColumn.HeaderStyle>
                                        <sdk:DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Grid >
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="30"/>
                                                        <ColumnDefinition Width="70"/>
                                                        <ColumnDefinition Width="30"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Image Stretch="None" Grid.Column="0" 
                                                           HorizontalAlignment="Right" 
                                                           VerticalAlignment="Center" 
                                                           Source="{Binding VehicleInfo.IsOnLine,Converter={StaticResource VehicleOnLineConverter},FallbackValue='/ExternalResource;component/Images/VehicleOutline.png'}" 
                                                           Margin="0,4,4,4"/>
                                                    <TextBlock Grid.Column="1" 
                                                               VerticalAlignment="Center" 
                                                               HorizontalAlignment="Left" 
                                                               Text="{Binding VehicleId}"  Style="{StaticResource TextBlockLightStyle}"></TextBlock>
                                                    <Image Grid.Column="2" 
                                                           Stretch="None" 
                                                           HorizontalAlignment="Left"  
                                                           VerticalAlignment="Center" 
                                                           Source="{Binding HasAlarm,Converter={StaticResource VehicleAlarmConverter}}" 
                                                           Margin="4,4,0,4"/>
                                                </Grid>
                                            </DataTemplate>
                                        </sdk:DataGridTemplateColumn.CellTemplate>
                                    </sdk:DataGridTemplateColumn>

                                    <sdk:DataGridTemplateColumn Width="0.8*">
                                        <sdk:DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Group}" 
                                                               HorizontalAlignment="Center" Style="{StaticResource TextBlockLightStyle}"
                                                               VerticalAlignment="Center"></TextBlock>
                                            </DataTemplate>
                                        </sdk:DataGridTemplateColumn.CellTemplate>
                                        <sdk:DataGridTemplateColumn.HeaderStyle>
                                            <Style TargetType="primitives:DataGridColumnHeader">
                                                <Setter Property="ContentTemplate">
                                                    <Setter.Value>
                                                        <DataTemplate>
                                                            <Grid>

                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition Height="0"/>
                                                                    <RowDefinition Height="*"/>
                                                                </Grid.RowDefinitions>

                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition Width="20"/>
                                                                </Grid.ColumnDefinitions>

                                                                <ComboBox
                                                                        Grid.Column="0"
                                                                        Grid.ColumnSpan="2"
                                                                        ItemsSource="{Binding MonitorGroupList}"
                                                                        Foreground="White"
                                                                        SelectedItem="{Binding GroupName,Mode=TwoWay}"
                                                                        DisplayMemberPath="GroupName"
                                                                        HorizontalAlignment="Stretch"
                                                                        VerticalAlignment="Stretch"
                                                                        BorderThickness="0"
                                                                        IsDropDownOpen="{Binding IsDropDownOpen,Mode=TwoWay}"
                                                                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                                        MinWidth="120"
                                                                        Cursor="Hand">
                                                                </ComboBox>

                                                                <TextBlock HorizontalAlignment="Center" 
                                                                           VerticalAlignment="Center" 
                                                                           Text="{Binding  [MONITOR_GroupName],Source={StaticResource SR}}" 
                                                                           Grid.Row="1" Grid.Column="0" 
                                                                            Style="{StaticResource TextBlockLightStyle}"></TextBlock>

                                                                <Button Grid.Row="1"
                                                                        Grid.Column="1" Margin="2"
                                                                        Style="{StaticResource VehicleDetailInfoButtonCommonStyle}" 
                                                                        ToolTipService.ToolTip="{Binding [SelectMonitorGroup],Source={StaticResource SR}}"
                                                                        Command="{Binding DataContext.FilterMonitorGroupCommand,
                                                                        RelativeSource={RelativeSource AncestorType=sdk:DataGrid}}">
                                                                </Button>

                                                            </Grid>
                                                        </DataTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                                <Setter Property="VerticalAlignment" Value="Stretch"/>
                                                <Setter Property="BorderThickness" Value="0"></Setter>
                                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                <Setter Property="Height" Value="28"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="sdk:DataGridColumnHeader">
                                                            <Border BorderBrush="#1e2226"
                                                                        BorderThickness="0"
                                                                        x:Name="ColumnHeaderBorder">
                                                                <Border.Background>
                                                                    <LinearGradientBrush StartPoint="0,0.5" EndPoint="0,1.0">
                                                                        <GradientStop Color="#1e2226" Offset="0.5"/>
                                                                        <GradientStop Color="#1e2226" Offset="1.0"/>
                                                                    </LinearGradientBrush>
                                                                </Border.Background>

                                                                <StackPanel Background="{TemplateBinding Background}"
                                                                                HorizontalAlignment="Center"
                                                                                VerticalAlignment="Center">
                                                                    <ContentPresenter>
                                                                        <ContentPresenter.Content>
                                                                            <TextBlock Text="{TemplateBinding Content}"
                                                                                     Style="{StaticResource TextBlockLightStyle}"
                                                                                    HorizontalAlignment="Stretch"
                                                                                    VerticalAlignment="Stretch"
                                                                                    FontSize="12"
                                                                                   FontWeight="Bold"/>
                                                                        </ContentPresenter.Content>
                                                                    </ContentPresenter>
                                                                </StackPanel>
                                                            </Border>

                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </sdk:DataGridTemplateColumn.HeaderStyle>
                                    </sdk:DataGridTemplateColumn>
                                </sdk:DataGrid.Columns>

                            </sdk:DataGrid>

                            <Border BorderBrush="#1E2226" Grid.Row="1" BorderThickness="0.5" Height="25">
                                <Grid Style="{StaticResource ContentGridStyle}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0"
                                                    Text="{Binding [Total],Source={StaticResource SR}}"
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Center"
                                                    Margin="0,2,10,2"  Style="{StaticResource TextBlockLightStyle}"/>
                                    <TextBlock Text="{Binding MonitorPageCollectionView.ItemCount}" Grid.Column="1"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Center"
                                                    Margin="0,2,10,2" Style="{StaticResource TextBlockLightStyle}"/>
                                    <sdk:DataPager Style="{StaticResource DataPagerStyle}"  
                                         
                                                    Grid.Column="2"
                                                    Height="25"
                                                    Source="{Binding MonitorPageCollectionView}"
                                                    PageSize="20"
                                                    Foreground="#f0f0f0"
                                                    Background="{Binding ElementName=DataGridMonitorList, Path=Background}"
                                                    HorizontalAlignment="Stretch"
                                                    VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                </Grid>
            </Grid>
        </Grid>
        <!--</Border>-->
    </Grid>
</UserControl>
