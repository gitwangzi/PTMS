//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyTest.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HeartbeatInfo", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Message.Contract.Data")]
    [System.SerializableAttribute()]
    public partial class HeartbeatInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CurrentTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CurrentTime {
            get {
                return this.CurrentTimeField;
            }
            set {
                if ((this.CurrentTimeField.Equals(value) != true)) {
                    this.CurrentTimeField = value;
                    this.RaisePropertyChanged("CurrentTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionId {
            get {
                return this.SessionIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionIdField, value) != true)) {
                    this.SessionIdField = value;
                    this.RaisePropertyChanged("SessionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IMessageServiceExt", CallbackContract=typeof(MyTest.ServiceReference.IMessageServiceExtCallback))]
    public interface IMessageServiceExt {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageAlarm/CompleteAlarm", ReplyAction="http://tempuri.org/IMessageAlarm/CompleteAlarmResponse")]
        void CompleteAlarm(Gsafety.PTMS.Common.Data.CompleteAlarm alarm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageAlarm/CompleteAlarm", ReplyAction="http://tempuri.org/IMessageAlarm/CompleteAlarmResponse")]
        System.Threading.Tasks.Task CompleteAlarmAsync(Gsafety.PTMS.Common.Data.CompleteAlarm alarm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageAlart/CompleteAlert", ReplyAction="http://tempuri.org/IMessageAlart/CompleteAlertResponse")]
        void CompleteAlert(Gsafety.PTMS.Common.Data.CompleteAlert alarm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageAlart/CompleteAlert", ReplyAction="http://tempuri.org/IMessageAlart/CompleteAlertResponse")]
        System.Threading.Tasks.Task CompleteAlertAsync(Gsafety.PTMS.Common.Data.CompleteAlert alarm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageCommand/SendGetVideoListCMD", ReplyAction="http://tempuri.org/IMessageCommand/SendGetVideoListCMDResponse")]
        void SendGetVideoListCMD(Gsafety.PTMS.Common.Data.QueryMdvrFileList model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageCommand/SendGetVideoListCMD", ReplyAction="http://tempuri.org/IMessageCommand/SendGetVideoListCMDResponse")]
        System.Threading.Tasks.Task SendGetVideoListCMDAsync(Gsafety.PTMS.Common.Data.QueryMdvrFileList model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageCommand/SendDownloadMdvrFile", ReplyAction="http://tempuri.org/IMessageCommand/SendDownloadMdvrFileResponse")]
        void SendDownloadMdvrFile(Gsafety.PTMS.Common.Data.DownloadFile model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageCommand/SendDownloadMdvrFile", ReplyAction="http://tempuri.org/IMessageCommand/SendDownloadMdvrFileResponse")]
        System.Threading.Tasks.Task SendDownloadMdvrFileAsync(Gsafety.PTMS.Common.Data.DownloadFile model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageGPS/MonitorVehicle", ReplyAction="http://tempuri.org/IMessageGPS/MonitorVehicleResponse")]
        void MonitorVehicle(string usertoken, string[] vechiles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageGPS/MonitorVehicle", ReplyAction="http://tempuri.org/IMessageGPS/MonitorVehicleResponse")]
        System.Threading.Tasks.Task MonitorVehicleAsync(string usertoken, string[] vechiles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageGPS/UnMonitorVehicle", ReplyAction="http://tempuri.org/IMessageGPS/UnMonitorVehicleResponse")]
        void UnMonitorVehicle(string usertoken, string[] vehicles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageGPS/UnMonitorVehicle", ReplyAction="http://tempuri.org/IMessageGPS/UnMonitorVehicleResponse")]
        System.Threading.Tasks.Task UnMonitorVehicleAsync(string usertoken, string[] vehicles);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageInstall/BeginInstallSuite", ReplyAction="http://tempuri.org/IMessageInstall/BeginInstallSuiteResponse")]
        void BeginInstallSuite(string mdvrcoresn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageInstall/BeginInstallSuite", ReplyAction="http://tempuri.org/IMessageInstall/BeginInstallSuiteResponse")]
        System.Threading.Tasks.Task BeginInstallSuiteAsync(string mdvrcoresn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageInstall/CompleteInstallSuite", ReplyAction="http://tempuri.org/IMessageInstall/CompleteInstallSuiteResponse")]
        void CompleteInstallSuite(string mdvrcoresn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageInstall/CompleteInstallSuite", ReplyAction="http://tempuri.org/IMessageInstall/CompleteInstallSuiteResponse")]
        System.Threading.Tasks.Task CompleteInstallSuiteAsync(string mdvrcoresn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageInstall/RemoveInstallSuite", ReplyAction="http://tempuri.org/IMessageInstall/RemoveInstallSuiteResponse")]
        void RemoveInstallSuite(string mdvrcoresn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageInstall/RemoveInstallSuite", ReplyAction="http://tempuri.org/IMessageInstall/RemoveInstallSuiteResponse")]
        System.Threading.Tasks.Task RemoveInstallSuiteAsync(string mdvrcoresn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageInstall/BeginInstallGPS", ReplyAction="http://tempuri.org/IMessageInstall/BeginInstallGPSResponse")]
        void BeginInstallGPS(string mdvrcoresn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageInstall/BeginInstallGPS", ReplyAction="http://tempuri.org/IMessageInstall/BeginInstallGPSResponse")]
        System.Threading.Tasks.Task BeginInstallGPSAsync(string mdvrcoresn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageInstall/CompleteInstallGPS", ReplyAction="http://tempuri.org/IMessageInstall/CompleteInstallGPSResponse")]
        void CompleteInstallGPS(string mdvrcoresn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageInstall/CompleteInstallGPS", ReplyAction="http://tempuri.org/IMessageInstall/CompleteInstallGPSResponse")]
        System.Threading.Tasks.Task CompleteInstallGPSAsync(string mdvrcoresn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageInstall/RemoveInstallGPS", ReplyAction="http://tempuri.org/IMessageInstall/RemoveInstallGPSResponse")]
        void RemoveInstallGPS(string mdvrcoresn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageInstall/RemoveInstallGPS", ReplyAction="http://tempuri.org/IMessageInstall/RemoveInstallGPSResponse")]
        System.Threading.Tasks.Task RemoveInstallGPSAsync(string mdvrcoresn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageManagement/Register", ReplyAction="http://tempuri.org/IMessageManagement/RegisterResponse")]
        void Register(Gsafety.PTMS.Message.Contract.UserModel login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageManagement/Register", ReplyAction="http://tempuri.org/IMessageManagement/RegisterResponse")]
        System.Threading.Tasks.Task RegisterAsync(Gsafety.PTMS.Message.Contract.UserModel login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageManagement/ClientStatusChange", ReplyAction="http://tempuri.org/IMessageManagement/ClientStatusChangeResponse")]
        void ClientStatusChange(Gsafety.PTMS.Common.Data.OrderClient client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMessageManagement/ClientStatusChange", ReplyAction="http://tempuri.org/IMessageManagement/ClientStatusChangeResponse")]
        System.Threading.Tasks.Task ClientStatusChangeAsync(Gsafety.PTMS.Common.Data.OrderClient client);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMessageServiceExtCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMessageServiceExt/MessageCallBack")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.Common.Data.CompleteAlarm))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.Common.Data.CompleteAlert))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.Common.Data.QueryMdvrFileList))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.Common.Data.DownloadFile))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.Common.Data.BaseInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.Common.Data.OrderClient))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.Common.Data.StatusEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.Common.Data.TansferModeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.Common.Data.DeviceAlertEx))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.Common.Data.QueryServerFileListMessageResponse))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.Common.Data.QueryServerFileListMessage[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.Common.Data.QueryServerFileListMessage))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.Common.Data.GPS))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.Common.Data.OnOfflineEx))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.Common.Data.OnOffline))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.Common.Data.AlarmInfoEx))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.Common.Data.BusinessAlertEx))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(string[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(int[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Gsafety.PTMS.Message.Contract.UserModel))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MyTest.ServiceReference.HeartbeatInfo))]
        void MessageCallBack(object message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMessageServiceExtChannel : MyTest.ServiceReference.IMessageServiceExt, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MessageServiceExtClient : System.ServiceModel.DuplexClientBase<MyTest.ServiceReference.IMessageServiceExt>, MyTest.ServiceReference.IMessageServiceExt {
        
        public MessageServiceExtClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public MessageServiceExtClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public MessageServiceExtClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MessageServiceExtClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MessageServiceExtClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void CompleteAlarm(Gsafety.PTMS.Common.Data.CompleteAlarm alarm) {
            base.Channel.CompleteAlarm(alarm);
        }
        
        public System.Threading.Tasks.Task CompleteAlarmAsync(Gsafety.PTMS.Common.Data.CompleteAlarm alarm) {
            return base.Channel.CompleteAlarmAsync(alarm);
        }
        
        public void CompleteAlert(Gsafety.PTMS.Common.Data.CompleteAlert alarm) {
            base.Channel.CompleteAlert(alarm);
        }
        
        public System.Threading.Tasks.Task CompleteAlertAsync(Gsafety.PTMS.Common.Data.CompleteAlert alarm) {
            return base.Channel.CompleteAlertAsync(alarm);
        }
        
        public void SendGetVideoListCMD(Gsafety.PTMS.Common.Data.QueryMdvrFileList model) {
            base.Channel.SendGetVideoListCMD(model);
        }
        
        public System.Threading.Tasks.Task SendGetVideoListCMDAsync(Gsafety.PTMS.Common.Data.QueryMdvrFileList model) {
            return base.Channel.SendGetVideoListCMDAsync(model);
        }
        
        public void SendDownloadMdvrFile(Gsafety.PTMS.Common.Data.DownloadFile model) {
            base.Channel.SendDownloadMdvrFile(model);
        }
        
        public System.Threading.Tasks.Task SendDownloadMdvrFileAsync(Gsafety.PTMS.Common.Data.DownloadFile model) {
            return base.Channel.SendDownloadMdvrFileAsync(model);
        }
        
        public void MonitorVehicle(string usertoken, string[] vechiles) {
            base.Channel.MonitorVehicle(usertoken, vechiles);
        }
        
        public System.Threading.Tasks.Task MonitorVehicleAsync(string usertoken, string[] vechiles) {
            return base.Channel.MonitorVehicleAsync(usertoken, vechiles);
        }
        
        public void UnMonitorVehicle(string usertoken, string[] vehicles) {
            base.Channel.UnMonitorVehicle(usertoken, vehicles);
        }
        
        public System.Threading.Tasks.Task UnMonitorVehicleAsync(string usertoken, string[] vehicles) {
            return base.Channel.UnMonitorVehicleAsync(usertoken, vehicles);
        }
        
        public void BeginInstallSuite(string mdvrcoresn) {
            base.Channel.BeginInstallSuite(mdvrcoresn);
        }
        
        public System.Threading.Tasks.Task BeginInstallSuiteAsync(string mdvrcoresn) {
            return base.Channel.BeginInstallSuiteAsync(mdvrcoresn);
        }
        
        public void CompleteInstallSuite(string mdvrcoresn) {
            base.Channel.CompleteInstallSuite(mdvrcoresn);
        }
        
        public System.Threading.Tasks.Task CompleteInstallSuiteAsync(string mdvrcoresn) {
            return base.Channel.CompleteInstallSuiteAsync(mdvrcoresn);
        }
        
        public void RemoveInstallSuite(string mdvrcoresn) {
            base.Channel.RemoveInstallSuite(mdvrcoresn);
        }
        
        public System.Threading.Tasks.Task RemoveInstallSuiteAsync(string mdvrcoresn) {
            return base.Channel.RemoveInstallSuiteAsync(mdvrcoresn);
        }
        
        public void BeginInstallGPS(string mdvrcoresn) {
            base.Channel.BeginInstallGPS(mdvrcoresn);
        }
        
        public System.Threading.Tasks.Task BeginInstallGPSAsync(string mdvrcoresn) {
            return base.Channel.BeginInstallGPSAsync(mdvrcoresn);
        }
        
        public void CompleteInstallGPS(string mdvrcoresn) {
            base.Channel.CompleteInstallGPS(mdvrcoresn);
        }
        
        public System.Threading.Tasks.Task CompleteInstallGPSAsync(string mdvrcoresn) {
            return base.Channel.CompleteInstallGPSAsync(mdvrcoresn);
        }
        
        public void RemoveInstallGPS(string mdvrcoresn) {
            base.Channel.RemoveInstallGPS(mdvrcoresn);
        }
        
        public System.Threading.Tasks.Task RemoveInstallGPSAsync(string mdvrcoresn) {
            return base.Channel.RemoveInstallGPSAsync(mdvrcoresn);
        }
        
        public void Register(Gsafety.PTMS.Message.Contract.UserModel login) {
            base.Channel.Register(login);
        }
        
        public System.Threading.Tasks.Task RegisterAsync(Gsafety.PTMS.Message.Contract.UserModel login) {
            return base.Channel.RegisterAsync(login);
        }
        
        public void ClientStatusChange(Gsafety.PTMS.Common.Data.OrderClient client) {
            base.Channel.ClientStatusChange(client);
        }
        
        public System.Threading.Tasks.Task ClientStatusChangeAsync(Gsafety.PTMS.Common.Data.OrderClient client) {
            return base.Channel.ClientStatusChangeAsync(client);
        }
    }
}
