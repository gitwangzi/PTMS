<UserControl x:Class="Gsafety.PTMS.Traffic.Views.TrafficDetailInfo"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"  
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk"  
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:toolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit" 
    xmlns:cv="clr-namespace:Gsafety.PTMS.Traffic.Converts;assembly=TrafficManagement"  
    xmlns:Controls="clr-namespace:Gsafety.Common.Controls;assembly=CommonControls"
    xmlns:inputToolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
    mc:Ignorable="d" d:DesignWidth="430" MinWidth="430" MaxWidth="470">
    <UserControl.Resources>
        <cv:Mark_Point_Convert x:Key="Mark_Point_Convert"/>
        <Style x:Key="chAll" TargetType="sdk:DataGridColumnHeader">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="sdk:DataGridColumnHeader">
                        <Grid Name="Root">
                            <CheckBox x:Name="CheckAll" IsChecked="{Binding AllChecked}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">
                <VisualState x:Name="MinStory">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="TrafficInfoBorder">
                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="TrafficInfoBorder">
                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="MaxStory">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Storyboard.TargetName="TrafficInfoBorder">
                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Storyboard.TargetName="TrafficInfoBorder">
                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="TrafficInfoBorder">
                            <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                            </DiscreteObjectKeyFrame>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <toolkit:BusyIndicator x:Name="dataLoading" IsBusy="{Binding IsBusy}"  Style="{StaticResource BusyIndicatorRoundedStyle}" >
            <Border x:Name="TrafficInfoBorder" Margin="0,0,0,0">
                <Border.RenderTransform>
                    <CompositeTransform/>
                </Border.RenderTransform>
                <Grid x:Name="LayoutRoot" Margin="0">
                    <Grid x:Name="MainContent"  RenderTransformOrigin="0,0">
                        <Grid.Effect>
                            <DropShadowEffect BlurRadius="8" ShadowDepth="1" Opacity="0.6" Direction="315"/>
                        </Grid.Effect>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border Style="{StaticResource PopupWindowTitleBorder}" Grid.Row="0">
                            <Grid  x:Name="Header1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="10"/>
                                    <ColumnDefinition Width="30"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="48"/>
                                </Grid.ColumnDefinitions>
                                
                                <!--<Image Grid.Column="1" x:Name="Ico" Source="/ExternalResource;component/Images/MainPage_menu_info.png" Width="29" Height="29" Stretch="Fill"/>-->
                                
                                <TextBlock Text="{Binding DetailWindwoInfo}" VerticalAlignment="Center"  FontWeight="Bold" Margin="17,0,0,0" Grid.Column="2"
                                           HorizontalAlignment="Left"/>
                                <Image Grid.Column="3" x:Name="MinIco" Source="/ExternalResource;component/Images/CloseImage.png" Stretch="None">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseLeftButtonDown">
                                            <ei:GoToStateAction StateName="MinStory"/>
                                            <ei:ChangePropertyAction TargetObject="{Binding}" PropertyName="IsOpen" Value="False"></ei:ChangePropertyAction>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Image>
                            </Grid>
                        </Border>
                        <Grid Grid.Row="1">
                            <sdk:TabControl x:Name="tab" Visibility="{Binding FenceInfoVisble}" Grid.Row="1" 
                                            SelectedIndex="{Binding SelectItemIndex, Mode=TwoWay}">
                                <sdk:TabItem Header="{Binding [TRAFFIC_DetailInfo], Source={StaticResource SR}}" Style="{StaticResource TabItemStyle}"
                                             BorderThickness="0.5,0.5,0.5,0">
                                    <Grid Background="#3d444b">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="310"/>
                                            <RowDefinition Height="45"/>
                                            <RowDefinition Height="10"/>
                                        </Grid.RowDefinitions>
                                        <Grid Grid.Row="0">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="30"/>
                                                <RowDefinition Height="30"/>
                                                <RowDefinition Height="30"/>
                                                <RowDefinition Height="30"/>
                                                <RowDefinition Height="30"/>
                                                <RowDefinition Height="30"/>
                                                <RowDefinition Height="30"/>
                                                <RowDefinition Height="30"/>
                                                <RowDefinition Height="30"/>
                                                <RowDefinition Height="30"/>
                                                <RowDefinition Height="30"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="1*" ></ColumnDefinition>
                                                <ColumnDefinition Width="2*" ></ColumnDefinition>
                                                </Grid.ColumnDefinitions>
                                            <TextBlock Grid.Column="0" Grid.Row="0" HorizontalAlignment="Right"  
                                                       TextWrapping="Wrap" Text="{Binding [TRAFFIC_FenceName], Source={StaticResource SR}}" 
                                                       VerticalAlignment="Center" Margin="0,0,5,0"/>
                                            <TextBox MaxLength="100" TabIndex="4" Grid.Column="1" Grid.Row="0" x:Name="tbFenceName" 
                                                     HorizontalAlignment="Left"  VerticalAlignment="Center" Width="200" Margin="5,0,0,0" 
                                                     ToolTipService.ToolTip="{Binding [TRAFFIC_Input_NameTip], Source={StaticResource SR}}" 
                                                     Text="{Binding TrafficFence.Name,Mode=TwoWay}" IsEnabled="False"/>

                                            <TextBlock Grid.Column="0" Grid.Row="1" 
                                                       HorizontalAlignment="Right"  
                                                       TextWrapping="Wrap" Text="{Binding [MAINPAGE_Address], Source={StaticResource SR}}" 
                                                       VerticalAlignment="Center" Margin="0,0,5,0" 
                                                       />
                                            <TextBox MaxLength="200" TabIndex="4" Grid.Column="1" 
                                                     Grid.Row="1" x:Name="tbFenceAddress" 
                                                     HorizontalAlignment="Left"   
                                                     
                                                     VerticalAlignment="Center" 
                                                     Width="200" Margin="5,0,0,0" 
                                                     ToolTipService.ToolTip="{Binding [TRAFFIC_Input_AddressTip], Source={StaticResource SR}}" 
                                                     Text="{Binding TrafficFence.Address,Mode=TwoWay}" IsEnabled="False"/>
                                            
                                            <TextBlock Grid.Column="0" Grid.Row="2" 
                                                       HorizontalAlignment="Right"  
                                                       TextWrapping="Wrap" Text="{Binding [TRAFFIC_InFenceAlarm], Source={StaticResource SR}}" 
                                                       VerticalAlignment="Center" Margin="0,0,5,0" 
                                                       />
                                            <CheckBox  Grid.Row="2" Grid.Column="1" 
                                                       Foreground="White"
                                                       VerticalAlignment="Center" Margin="5,0,0,0" HorizontalAlignment="Left" 
                                                       IsChecked="{Binding InFenceAlarm, Mode=TwoWay}"  IsEnabled="False"/>
                                            <TextBlock Grid.Column="0" Grid.Row="3" 
                                                       HorizontalAlignment="Right"  
                                                       TextWrapping="Wrap" Text="{Binding [TRAFFIC_OutFenceAlarm], Source={StaticResource SR}}" 
                                                       VerticalAlignment="Center" Margin="0,0,5,0" 
                                                       />
                                            <CheckBox  Grid.Row="3" Grid.Column="1" 
                                                       Foreground="White"
                                                       VerticalAlignment="Center" Margin="5,0,0,0" HorizontalAlignment="Left" 
                                                       IsChecked="{Binding OutFenceAlarm,Mode=TwoWay}" IsEnabled="False"/>
                                            
                                            <TextBlock Grid.Column="0" Grid.Row="4" 
                                                       HorizontalAlignment="Right"  
                                                       TextWrapping="Wrap" Text="{Binding [TRAFFIC_FenceControlSpeed], Source={StaticResource SR}}" 
                                                       VerticalAlignment="Center" Margin="0,0,5,0" 
                                                       />
                                            <CheckBox  Grid.Row="4" Grid.Column="1" 
                                                       Foreground="#eeeeee"                                             
                                                       VerticalAlignment="Center" HorizontalAlignment="Left"
                                                       Margin="5,0,0,0" IsChecked="{Binding IsControlSpeed,Mode=TwoWay}" IsEnabled="False" />
                                            
                                            <TextBlock Grid.Column="0" Grid.Row="5" 
                                                       HorizontalAlignment="Right" TextAlignment="Right" 
                                                       Text="{Binding [TRAFFIC_MaxSpeed], Source={StaticResource SR}}" 
                                                       VerticalAlignment="Center" Margin="0,0,5,0" />
                                            
                                            <TextBox MaxLength="3" TabIndex="5" Grid.Column="1" 
                                                     Grid.Row="5" x:Name="tbMaxSpeed"  
                                                     HorizontalAlignment="Left" VerticalAlignment="Center" Width="200" 
                                                     Margin="5,0,0,0" ToolTipService.ToolTip="{Binding [TRAFFIC_Input_MaxSpeedTip], Source={StaticResource SR}}" 
                                                     Text="{Binding TrafficFence.MaxSpeed,Mode=TwoWay}" IsEnabled="False"/>
                                            
                                            <TextBlock Grid.Column="0" Grid.Row="6" 
                                                       HorizontalAlignment="Right" TextAlignment="Right" 
                                                       Text="{Binding [TRAFFIC_DurationTime], Source={StaticResource SR}}" 
                                                       VerticalAlignment="Center" Margin="0,0,5,0" />
                                            
                                            <TextBox MaxLength="3" TabIndex="6" Grid.Column="1" Grid.Row="6"
                                                     x:Name="tbOverSpeedDuration"  HorizontalAlignment="Left" 
                                                     VerticalAlignment="Center" Width="200" Margin="5,0,0,0" 
                                                     ToolTipService.ToolTip="{Binding [TRAFFIC_Input_TRAFFIC_DurationTimeTip], Source={StaticResource SR}}" 
                                                     Text="{Binding TrafficFence.OverSpeedDuration,Mode=TwoWay}" IsEnabled="False"/>
                                            
                                            <TextBlock Grid.Column="0" Grid.Row="7" 
                                                       HorizontalAlignment="Right" TextAlignment="Right" 
                                                       Text="{Binding [TRAFFIC_ControlTime], Source={StaticResource SR}}" 
                                                       VerticalAlignment="Center" Margin="0,0,5,0" />
                                            <CheckBox TabIndex="8" Grid.Column="1" Grid.Row="7" x:Name="CheckTime" 
                                                      HorizontalAlignment="Left"  VerticalAlignment="Center" Margin="5,0,0,0" 
                                                      IsChecked="{Binding IsControlTime,Mode=TwoWay}" IsEnabled="False"/>
                                            
                                            <TextBlock Grid.Column="0" Grid.Row="8"  
                                                       HorizontalAlignment="Right" Text="{Binding [TRAFFIC_StartTime], Source={StaticResource SR}}" 
                                                       VerticalAlignment="Center" Margin="0,0,5,0"/>
                                            
                                            <inputToolkit:TimePicker  Format="short" TabIndex="9" Grid.Column="1" Grid.Row="8" x:Name="EdtStartTime" HorizontalAlignment="Left"  VerticalAlignment="Center" Width="200" Margin="5,0,0,0"  Value="{Binding TrafficFence.StartTime,Mode=TwoWay}" IsEnabled="False">
                                                <inputToolkit:TimePicker.Popup>
                                                    <inputToolkit:RangeTimePickerPopup PopupTimeSelectionMode="AllowSecondsSelection"/>
                                                </inputToolkit:TimePicker.Popup>
                                            </inputToolkit:TimePicker>
                                            
                                            <TextBlock Grid.Column="0" Grid.Row="9" HorizontalAlignment="Right" Text="{Binding [TRAFFIC_EndTime], Source={StaticResource SR}}" VerticalAlignment="Center" RenderTransformOrigin="0.54,1.421" 
                                                       Margin="0,0,5,0"/>
                                            <inputToolkit:TimePicker Format="short" TabIndex="10" Grid.Column="1" Grid.Row="9" x:Name="EdtEndTime" HorizontalAlignment="Left" VerticalAlignment="Center" Width="200" Margin="5,0,0,0" Value="{Binding TrafficFence.EndTime,Mode=TwoWay}"  IsEnabled="False">
                                                <inputToolkit:TimePicker.Popup>
                                                    <inputToolkit:RangeTimePickerPopup PopupTimeSelectionMode="AllowSecondsSelection"/>
                                                </inputToolkit:TimePicker.Popup>
                                            </inputToolkit:TimePicker>
                                        </Grid>
                                        <Grid Grid.Row="1">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                            </Grid>
                                        </Grid>
                                    </Grid>
                                </sdk:TabItem>
                            </sdk:TabControl>

                        </Grid>
                    </Grid>
                </Grid>
            </Border>
        </toolkit:BusyIndicator>
        <Image x:Name="MaxIco" d:IsHidden="True">
            <i:Interaction.Triggers>
                <ei:DataTrigger  Binding="{Binding IsVisual}" Value="True">
                    <ei:GoToStateAction StateName="MaxStory"/>
                    <ei:ChangePropertyAction TargetObject="{Binding}" PropertyName="IsOpen" Value="True"></ei:ChangePropertyAction>
                </ei:DataTrigger>
                <ei:DataTrigger  Binding="{Binding IsVisual}" Value="False">
                    <ei:GoToStateAction StateName="MinStory"/>
                    <ei:ChangePropertyAction TargetObject="{Binding}" PropertyName="IsOpen" Value="False"></ei:ChangePropertyAction>
                </ei:DataTrigger>
            </i:Interaction.Triggers>

        </Image>
    </Grid>

</UserControl>
