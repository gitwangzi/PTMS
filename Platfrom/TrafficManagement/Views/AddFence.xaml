<CommonCtrs:ChildWindowWithCheck
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
           xmlns:controls="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls"
           xmlns:CommonCtrs="clr-namespace:Gsafety.Common.Controls;assembly=CommonControls"
           xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk"
           xmlns:toolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit"
           x:Class="Gsafety.PTMS.Traffic.Views.AddFence"
           xmlns:inputToolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
           Width="460" Height="400" 
            Style="{StaticResource SelfChildenWindowWhiteStyle}">
    <Grid x:Name="LayoutRoot" Style="{StaticResource ContentGridWhiteStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Margin="0,20,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <!--<RowDefinition Height="30"/>-->
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1.2*"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Grid.Row="0" HorizontalAlignment="Right"  
                       TextWrapping="Wrap" Text="{Binding [TRAFFIC_FenceName], Source={StaticResource SR}}" 
                       VerticalAlignment="Center" 
                       Margin="0,0,5,0"/>
            <TextBox MaxLength="100" TabIndex="4" Grid.Column="1" 
                     Grid.Row="0" x:Name="tbFenceName" HorizontalAlignment="Left"  
                     VerticalAlignment="Center" Width="200" Margin="5,0,0,0" 
                     ToolTipService.ToolTip="{Binding [TRAFFIC_Input_NameTip], Source={StaticResource SR}}" 
                     Text="{Binding FenceName,Mode=TwoWay}"/>

            <TextBlock Grid.Column="0" Grid.Row="1" HorizontalAlignment="Right"  
                       TextWrapping="Wrap" Text="{Binding [MAINPAGE_Address], Source={StaticResource SR}}" 
                       VerticalAlignment="Center" Margin="0,0,5,0" />

            <TextBox MaxLength="200" TabIndex="4" Grid.Column="1" Grid.Row="1" x:Name="tbFenceAddress" HorizontalAlignment="Left"  
                     VerticalAlignment="Center" Width="200" 
                     Margin="5,0,0,0" 
                     ToolTipService.ToolTip="{Binding [TRAFFIC_Input_AddressTip], Source={StaticResource SR}}" 
                     Text="{Binding TrafficFence.Address,Mode=TwoWay}"/>

            <TextBlock Grid.Column="0" Grid.Row="2" HorizontalAlignment="Right"  
                       TextWrapping="Wrap" Text="{Binding [TRAFFIC_InFenceAlarm], Source={StaticResource SR}}" 
                       VerticalAlignment="Center" Margin="0,0,5,0" />

            <CheckBox  Grid.Row="2" Grid.Column="1" 
                       Foreground="White"
                       VerticalAlignment="Center" Margin="5,0,0,0" HorizontalAlignment="Left" 
                       IsChecked="{Binding InFenceAlarm, Mode=TwoWay}"  />

            <TextBlock Grid.Column="0" Grid.Row="3" HorizontalAlignment="Right"  
                       TextWrapping="Wrap" Text="{Binding [TRAFFIC_OutFenceAlarm], Source={StaticResource SR}}" 
                       VerticalAlignment="Center" Margin="0,0,5,0" />


            <CheckBox  Grid.Row="3" Grid.Column="1" 
                       Foreground="White"                      
                       VerticalAlignment="Center" Margin="5,0,0,0" 
                       HorizontalAlignment="Left" IsChecked="{Binding OutFenceAlarm,Mode=TwoWay}" />

            <TextBlock Grid.Column="0" Grid.Row="4" HorizontalAlignment="Right"  
                       TextWrapping="Wrap" Text="{Binding [TRAFFIC_FenceControlSpeed], Source={StaticResource SR}}" 
                       VerticalAlignment="Center" Margin="0,0,5,0" />

            <CheckBox  Grid.Row="4" Grid.Column="1" 
                       Foreground="White"
                       VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0" 
                       IsChecked="{Binding IsControlSpeed,Mode=TwoWay}"/>

            <TextBlock Grid.Column="0" Grid.Row="5"
                       HorizontalAlignment="Right" TextAlignment="Right"
                       Text="{Binding [TRAFFIC_MaxSpeed], Source={StaticResource SR}}"
                       VerticalAlignment="Center" 
                       Margin="0,0,5,0" />

            <TextBox MaxLength="3" TabIndex="6" Grid.Column="1" 
                     Grid.Row="5" x:Name="tbMaxSpeed"  HorizontalAlignment="Left" 
                     VerticalAlignment="Center" Width="200" Margin="5,0,0,0" 
                     ToolTipService.ToolTip="{Binding [TRAFFIC_Input_MaxSpeedTip], Source={StaticResource SR}}" 
                     Text="{Binding MaxSpeed,Mode=TwoWay,NotifyOnValidationError=True,ValidatesOnDataErrors=True}" IsEnabled="{Binding IsControlSpeed}"/>

            <TextBlock Grid.Column="0" Grid.Row="6" 
                       HorizontalAlignment="Right" 
                       TextAlignment="Right" 
                       Text="{Binding [TRAFFIC_DurationTime], Source={StaticResource SR}}"
                       VerticalAlignment="Center" 
                       Margin="0,0,5,0" />

            <TextBox MaxLength="3" TabIndex="6"
                     Grid.Column="1" Grid.Row="6"
                     x:Name="tbOverSpeedDuration"  
                     HorizontalAlignment="Left" 
                     VerticalAlignment="Center"
                     Width="200" Margin="5,0,0,0" 
                     ToolTipService.ToolTip="{Binding [TRAFFIC_Input_TRAFFIC_DurationTimeTip], Source={StaticResource SR}}" 
                    Text="{Binding Duration,Mode=TwoWay,NotifyOnValidationError=True,ValidatesOnDataErrors=True}" 
                     IsEnabled="{Binding IsControlSpeed}"/>

            <TextBlock Grid.Column="0" Grid.Row="7"  
                       HorizontalAlignment="Right" 
                       Text="{Binding [TRAFFIC_ControlTime], Source={StaticResource SR}}" 
                       VerticalAlignment="Center" Margin="0,0,5,0"/>

            <CheckBox TabIndex="8" Grid.Column="1" 
                       Foreground="White"
                      Grid.Row="7" x:Name="CheckTime"
                      HorizontalAlignment="Left"  VerticalAlignment="Center" Margin="5,0,0,0" 
                      IsChecked="{Binding IsControlTime,Mode=TwoWay}" />

            <TextBlock Grid.Column="0" Grid.Row="8"  
                       HorizontalAlignment="Right" 
                       Text="{Binding [TRAFFIC_StartTime], Source={StaticResource SR}}" 
                       VerticalAlignment="Center" Margin="0,0,5,0"/>


            <sdk:DatePicker 
                             Width="200" Margin="5,0,0,0" 
                             Grid.Row="8"
                             Grid.Column="1" 
                             HorizontalAlignment="Left"
                             VerticalAlignment="Center" SelectedDate="{Binding FenceStartTime,Mode=TwoWay}" Name="EdtStartTime" SelectedDateFormat="Short"  Style="{StaticResource lightDatePicker}"/>

            <TextBlock Grid.Column="0" Grid.Row="9" HorizontalAlignment="Right" 
                       Text="{Binding [TRAFFIC_EndTime], Source={StaticResource SR}}" 
                       VerticalAlignment="Center" 
                       Margin="0,0,5,0"/>
            <!--<inputToolkit:TimePicker Format="short" TabIndex="10" Grid.Column="1" Grid.Row="8" x:Name="EdtEndTime" HorizontalAlignment="Left" VerticalAlignment="Center" Width="200" Margin="5,0,0,0" Value="{Binding TrafficFence.EndTime,Mode=TwoWay}" IsEnabled="{Binding IsControlTime}" >
                <inputToolkit:TimePicker.Popup>
                    <inputToolkit:RangeTimePickerPopup PopupTimeSelectionMode="AllowSecondsSelection"/>
                </inputToolkit:TimePicker.Popup>
            </inputToolkit:TimePicker>-->
            <sdk:DatePicker 
                             Width="200" Margin="5,0,0,0" 
                             Grid.Row="9"
                             Grid.Column="1" 
                             HorizontalAlignment="Left"
                             VerticalAlignment="Center" SelectedDate="{Binding FenceEndTime,Mode=TwoWay}" Name="EdtEndTime" SelectedDateFormat="Short" Style="{StaticResource lightDatePicker}" />

        </Grid>

        <Grid Grid.Row="1" Grid.Column="0" Margin="0,15,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button TabIndex="11" Grid.Column="0"
                    x:Name="OKButton" Tag="{Binding [Confirm], Source={StaticResource SR}}" 
                    Content="{Binding [Confirm], Source={StaticResource SR}}"
                    HorizontalAlignment="Right"  
                    VerticalAlignment="Center" 
                    Style="{StaticResource SureButtonStyle}" Command="{Binding SaveFenceCommand}"
                    Width="80">
            </Button>
            <Button TabIndex="12"   
                    Grid.Column="2"  x:Name="CancelButton" 
                    Tag="{Binding [Cancel], Source={StaticResource SR}}" 
                    Content="{Binding [Cancel], Source={StaticResource SR}}"
                    Click="CancelButton_Click" HorizontalAlignment="Left"  VerticalAlignment="Center"
                    Style="{StaticResource CancelButtonStyle}">
            </Button>
        </Grid>

    </Grid>
</CommonCtrs:ChildWindowWithCheck>