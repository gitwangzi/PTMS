<controls:ChildWindow x:Class="Gsafety.PTMS.BasicPage.Views.CapturePhotoWindow"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
           xmlns:controls="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls"
           xmlns:toolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit"
           xmlns:Model="clr-namespace:Gsafety.PTMS.ServiceReference.VedioService;assembly=ServiceReference"
           xmlns:Convert="clr-namespace:Gsafety.Common.Converts;assembly=Converts"
           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:vsm="clr-namespace:System.Windows;assembly=System.Windows"
                      xmlns:sys="clr-namespace:System;assembly=mscorlib"
           mc:Ignorable="d"
           Width="1024" Height="650" 
           xmlns:Controls="clr-namespace:Gsafety.Common.Controls;assembly=CommonControls" 
           Style="{StaticResource SelfChildenWindowWhiteStyle}"
           Title="{Binding [Camera_Photo], Source={StaticResource SR}}">
    <controls:ChildWindow.Resources>
        <Convert:BoolToVisibility x:Key="boolToVisibility" />
        <Convert:DateTimeConverter x:Key="dateTimeConvert" />
        <DataTemplate x:Key="PhotoListTemplate" >
            <Grid  Width="143" Height="168">
                <Grid.RowDefinitions>
                    <RowDefinition Height="20" />
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="20" />
                    <RowDefinition Height="20" />
                </Grid.RowDefinitions>
                <Image Grid.Row="0" Grid.RowSpan="2" Source="{Binding Img_Url}" HorizontalAlignment="Stretch"
                       VerticalAlignment="Stretch" MouseLeftButtonDown="Image_MouseLeftButtonDown"
                       Stretch="UniformToFill"/>
                <!--<TextBlock Grid.Row="0" Text="{Binding ChannelID}" HorizontalAlignment="Left" />-->
                <Grid Grid.Row="0" Background="#2a2e2f" Width="13" Height="17" HorizontalAlignment="Left" VerticalAlignment="Top">
                    <TextBlock Text="{Binding ChannelID}" HorizontalAlignment="Center" VerticalAlignment="Center"
                               Foreground="#f0f0f0"/>
                </Grid>
                <CheckBox Grid.Row="0" IsChecked="{Binding IsChecked,Mode=TwoWay}" 
                          Style="{StaticResource PhotoMarkCheckBoxStyle}"
                          Visibility="{Binding IsVisibility,Converter={StaticResource boolToVisibility}}"
                          HorizontalAlignment="Right"
                          Margin="0,0,3,0"/>
                <TextBlock Grid.Row="2" Margin="0,3,0,3" Text="{Binding Create_Time,Converter={StaticResource dateTimeConvert}}" HorizontalAlignment="Left" 
                           Foreground="#333333"/>
                <!--<TextBlock Margin="0,3,0,0" Text="{Binding Img_Size}"  />-->
                <Image Grid.Row="2" Source="/ExternalResource;component/Images/Camera/Liststar.png" 
                       Visibility="{Binding Status,Converter={StaticResource boolToVisibility}}" HorizontalAlignment="Right" 
                       Height="10"
                       Width="10"/>

                <TextBlock Grid.Row="3" Margin="0,3,0,3" ToolTipService.ToolTip="{Binding Note}" Text="{Binding Note}" HorizontalAlignment="Left"
                           VerticalAlignment="Center"
                           Foreground="#333333"
                           TextWrapping="Wrap"/>
            </Grid>
        </DataTemplate>
        <ItemsPanelTemplate x:Key="WrapPannelTemplate">
            <toolkit:WrapPanel Orientation="Horizontal" />
        </ItemsPanelTemplate>
        <Style x:Key="ImgButton" TargetType="Button">
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1"
Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="controlTemplate" d:IsOptimized="True"></DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1"
Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="controlTemplate" d:IsOptimized="True"></DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="controlTemplate" Opacity=".5"
                                     HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PhotoImgButton" TargetType="Button">
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                    </VisualState>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1"
Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="controlTemplate" d:IsOptimized="True"></DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1"
Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="controlTemplate" d:IsOptimized="True"></DoubleAnimation>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Image Source="/ExternalResource;component/Images/Camera/cameraBG.png" Width="58" Height="58"></Image>
                            <ContentPresenter x:Name="controlTemplate" Opacity=".5"
                                     HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollViewerStyleCustom" TargetType="ScrollViewer">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Visible"/>
            <Setter Property="Padding" Value="4"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFA3AEB9" Offset="0"/>
                        <GradientStop Color="#FF8399A9" Offset="0.375"/>
                        <GradientStop Color="#FF718597" Offset="0.375"/>
                        <GradientStop Color="#FF617584" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollViewer">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
                            <Grid Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <ScrollContentPresenter x:Name="ScrollContentPresenter" 
                                                        Cursor="{TemplateBinding Cursor}" 
                                                        ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}"/>
                                <Rectangle Grid.Column="1" Fill="#FFE9EEF4" Grid.Row="1"/>
                                <ScrollBar x:Name="VerticalScrollBar" 
                                           Grid.Column="1" 
                                           Maximum="{TemplateBinding ScrollableHeight}" 
                                           Margin="0,-1,-1,-1" Minimum="0" 
                                           Orientation="Vertical" 
                                           Grid.Row="0"
                                           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                                           Value="{TemplateBinding VerticalOffset}" ViewportSize="{TemplateBinding ViewportHeight}" 
                                           Width="18" 
                                           Style="{StaticResource SelfScrollBarWhiteStyle2}"/>
                                <ScrollBar x:Name="HorizontalScrollBar" 
                                           Grid.Column="0" Height="18" 
                                           IsTabStop="False" 
                                           Maximum="{TemplateBinding ScrollableWidth}" 
                                           Margin="-1,0,-1,-1" Minimum="0" 
                                           Orientation="Horizontal" 
                                           Grid.Row="1" 
                                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
                                           Value="{TemplateBinding HorizontalOffset}" 
                                           ViewportSize="{TemplateBinding ViewportWidth}"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ListBoxItem" x:Key="PhotoListBoxItem">
            <Setter Property="Padding" Value="3,3,3,3" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="TabNavigation" Value="Local" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Grid Background="{TemplateBinding Background}" Margin="5,5,5,5">
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="CommonStates">
                                    <vsm:VisualState x:Name="Normal" >

                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="NormalBorder" Storyboard.TargetProperty="Opacity" Duration="0" To="0.9"/>
                                        </Storyboard>

                                    </vsm:VisualState>

                                    <vsm:VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="fillColor" Storyboard.TargetProperty="Opacity" Duration="0" To=".35"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity" Duration="0" To=".55" />
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="SelectionStates">
                                    <vsm:VisualState x:Name="Unselected" />
                                    <vsm:VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="fillColor2" Storyboard.TargetProperty="Opacity" Duration="0" To=".75"/>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                                <vsm:VisualStateGroup x:Name="FocusStates">
                                    <vsm:VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility" Duration="0">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="Unfocused"/>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <!--正常情况下的边框颜色-->
                            <Rectangle x:Name="NormalBorder" Opacity="0" Stroke="Gray" StrokeThickness="1"  RadiusX="5" RadiusY="5"/>
                            <Rectangle x:Name="fillColor" Opacity="0" Fill="#FFBADDE9" IsHitTestVisible="False" RadiusX="5" RadiusY="5"/>
                            <!--<Rectangle x:Name="fillColor2" Opacity="0" Fill="#FFBADDE9" IsHitTestVisible="False" RadiusX="1" RadiusY="1"/>-->
                            <Rectangle x:Name="fillColor2" Opacity="0" Fill="Red" IsHitTestVisible="False" RadiusX="5" RadiusY="5"/>
                            <ContentPresenter
                                              x:Name="contentPresenter"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"/>
                            <!--<Rectangle x:Name="FocusVisualElement" Stroke="#FF6DBDD1" StrokeThickness="1" 
                                           Visibility="Collapsed" RadiusX="1" RadiusY="1" />-->
                            <!--选中后边框变成蓝色-->
                            <Rectangle x:Name="FocusVisualElement" Stroke="#0084ff" StrokeThickness="1" Visibility="Collapsed" RadiusX="5" RadiusY="5" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ListBox" x:Key="PhotoListBox">
            <Setter Property="Padding" Value="1,10,1,10"/>

            <Setter Property="Foreground" Value="#FF000000"/>
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="TabNavigation" Value="Once" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFA3AEB9" Offset="0"/>
                        <GradientStop Color="#FF8399A9" Offset="0.375"/>
                        <GradientStop Color="#FF718597" Offset="0.375"/>
                        <GradientStop Color="#FF617584" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <Grid>
                            <vsm:VisualStateManager.VisualStateGroups>
                                <vsm:VisualStateGroup x:Name="ValidationStates">
                                    <vsm:VisualState x:Name="Valid"/>
                                    <vsm:VisualState x:Name="InvalidUnfocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" >
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                    <vsm:VisualState x:Name="InvalidFocused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" >
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
                                                <DiscreteObjectKeyFrame KeyTime="0" >
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <sys:Boolean>True</sys:Boolean>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </vsm:VisualState>
                                </vsm:VisualStateGroup>
                            </vsm:VisualStateManager.VisualStateGroups>
                            <Border CornerRadius="2" 
			                BorderBrush="{TemplateBinding BorderBrush}"
			                BorderThickness="{TemplateBinding BorderThickness}">
                                <ScrollViewer x:Name="ScrollViewer" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0" TabNavigation="{TemplateBinding TabNavigation}"
                                              Style="{StaticResource ScrollViewerStyleCustom}">
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </Border>
                            <Border x:Name="ValidationErrorElement" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" BorderBrush="#FFDB000C" Visibility="Collapsed">
                                <ToolTipService.ToolTip>
                                    <ToolTip x:Name="validationTooltip" Template="{StaticResource ValidationToolTipTemplate}" Placement="Right" 
                                             PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" 
                                             DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                        <ToolTip.Triggers>
                                            <EventTrigger RoutedEvent="Canvas.Loaded">
                                                <EventTrigger.Actions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsHitTestVisible">
                                                                <DiscreteObjectKeyFrame KeyTime="0" >
                                                                    <DiscreteObjectKeyFrame.Value>
                                                                        <sys:Boolean>true</sys:Boolean>
                                                                    </DiscreteObjectKeyFrame.Value>
                                                                </DiscreteObjectKeyFrame>
                                                            </ObjectAnimationUsingKeyFrames>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger.Actions>
                                            </EventTrigger>
                                        </ToolTip.Triggers>
                                    </ToolTip>
                                </ToolTipService.ToolTip>
                                <Grid Width="10" Height="10" HorizontalAlignment="Right" Margin="0,-4,-4,0" VerticalAlignment="Top" Background="Transparent">
                                    <Path Margin="-1,3,0,0" Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C"/>
                                    <Path Margin="-1,3,0,0" Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </controls:ChildWindow.Resources>
    <Grid x:Name="LayoutRoot" Background="#f9f9f9">
        <Grid.RowDefinitions>
            <RowDefinition Height="300" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid x:Name="upGrid" Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="540" />
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0" Background="#eeeeee">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="25" />
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="25" />
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" ToolTipService.ToolTip="{Binding [LastPhoto], Source={StaticResource SR}}"
                        Command="{Binding LastCommand}" Style="{StaticResource ImgButton}">
                    <Image Source="/ExternalResource;component/Images/Camera/cameraLeft.png" Width="16" Height="16"></Image>
                </Button>
                <Image x:Name="img" Grid.Column="1" Source="{Binding Img_Url}" Stretch="Fill"
                       MouseEnter="img_MouseEnter" MouseLeave="img_MouseLeave" MouseMove="img_MouseMove"
                       MouseLeftButtonDown="img_MouseLeftButtonDown"/>
                <StackPanel x:Name="imgDetal" Margin="10,0,10,10" Height="60" VerticalAlignment="Bottom"  
                            Grid.Column="1" Orientation="Vertical" Visibility="Collapsed"
                            Background="#565D67">
                    <StackPanel Height="30" Orientation="Horizontal">
                        <TextBlock Text="{Binding CreateTime}"
                               HorizontalAlignment="Right" VerticalAlignment="Center"
                               Margin="30,5,5,5"/>
                        <TextBlock Text="{Binding ChannelID}"
                               HorizontalAlignment="Right" VerticalAlignment="Center"
                               Margin="20,5,5,5"/>
                        <!--<TextBlock Height="25"  Margin="20,5,0,5"
                               Text="{Binding ImgSize}"
                               HorizontalAlignment="Stretch"
                               VerticalAlignment="Center"/>-->
                    </StackPanel>
                    <StackPanel Height="30">
                        <TextBlock Text="{Binding Note}"
                               HorizontalAlignment="Left" VerticalAlignment="Center"
                               Margin="30,5,5,5"/>
                    </StackPanel>
                </StackPanel>
                <Button Grid.Column="2" ToolTipService.ToolTip="{Binding [NextPhoto], Source={StaticResource SR}}"
                        Command="{Binding NextCommand}" Style="{StaticResource ImgButton}">
                    <Image Source="/ExternalResource;component/Images/Camera/cameraRight.png" Width="16" Height="16"></Image>
                </Button>
            </Grid>
            <Grid Grid.Column="1" Style="{StaticResource ContentGridStyle}" Background="#eeeeee" Margin="5 0 0 0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="60" />
                    <RowDefinition Height="70" />
                </Grid.RowDefinitions>
                <Viewbox Grid.Row="0" Margin="20,10,20,10">
                    <Grid Width="540" Height="220">
                        <Image Source="/ExternalResource;component/Images/Camera/CameraBus.png" Margin="0" Stretch="Fill"/>
                        <Canvas Name="busCanvas">
                            <Canvas.Resources>
                                <Style TargetType="CheckBox" BasedOn="{StaticResource CameraSelectCheckBoxStyle}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Setter Property="IsThreeState" Value="False"/>
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="IsEnabled" Value="True"/>
                                </Style>
                            </Canvas.Resources>
                            <CheckBox Name="InnerLeftDriver" Visibility="Collapsed" Canvas.Left="461" Canvas.Top="38"
                                      Cursor="Hand">
                                <!--1-->
                            </CheckBox>

                            <CheckBox Name="InnerRightDriver" Visibility="Collapsed"  Canvas.Left="461" Canvas.Top="166"
                                      Cursor="Hand">
                                <!--2-->
                            </CheckBox>

                            <CheckBox Name="InnerCenter" Visibility="Collapsed"  Canvas.Left="250" Canvas.Top="98"
                                      Cursor="Hand">
                                <!--3-->
                            </CheckBox>

                            <CheckBox Name="OuterBefore" Visibility="Collapsed" Canvas.Left="461" Canvas.Top="98"
                                      Cursor="Hand">
                                <!--0-->
                            </CheckBox>
                            <CheckBox Name="InnerBehind" Visibility="Collapsed"  Canvas.Left="73" Canvas.Top="98"
                                      Cursor="Hand">
                                <!--6-->
                            </CheckBox>
                            <CheckBox Name="OuterLeft" Visibility="Collapsed"  Canvas.Left="250" Canvas.Top="29"
                                      Cursor="Hand">
                                <!--4-->
                            </CheckBox>
                            <CheckBox Name="OuterRight" Visibility="Collapsed" Canvas.Left="250" Canvas.Top="166"
                                      Cursor="Hand">
                                <!--5-->
                            </CheckBox>
                            <CheckBox Name="OuterBehind" Visibility="Collapsed" Canvas.Top="98"
                                      Cursor="Hand">
                                <!--7-->
                            </CheckBox>
                        </Canvas>
                    </Grid>
                </Viewbox>
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Button x:Name="takePhotoBtn" Margin="10 0" 
                            ToolTipService.ToolTip="{Binding [SingleCapture], Source={StaticResource SR}}"
                            Grid.Column="0" Style="{StaticResource PhotoImgButton}" 
                            IsEnabled="{Binding VehicleInfo.MDVROnline}"
                            Click="takePhotoBtn_Click">
                        <Image Source="/ExternalResource;component/Images/Camera/overshotMouseOver.png" Width="34" Height="28"></Image>
                    </Button>
                    <Button x:Name="battchTakePhoto" Margin="10 0" 
                            ToolTipService.ToolTip="{Binding [BatchCapture], Source={StaticResource SR}}"
                            IsEnabled="{Binding VehicleInfo.MDVROnline}"
                            Grid.Column="1" Style="{StaticResource PhotoImgButton}" Click="battchTakePhoto_Click">
                        <Image Source="/ExternalResource;component/Images/Camera/serialMouseOver.png" Width="34" Height="28"></Image>
                    </Button>
                </Grid>
                <Grid Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition  Height="30" />
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" Margin="10 5" Height="30">
                        <StackPanel Grid.Row="0" Orientation="Horizontal">
                            <TextBlock Text="{Binding [Camera_Resolution], Source={StaticResource SR}}"
                               HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,5,0"/>
                            <ComboBox ItemsSource="{Binding ResolutionList}" Style="{StaticResource lightComboBox}"
                               DisplayMemberPath="ShowName" SelectedValuePath="EnumValue"
                               SelectedItem="{Binding SelectResolution,Mode=TwoWay}"  Name="comboStatus"
                               Height="25" Width="100"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                            <TextBlock Text="{Binding [TotalNum], Source={StaticResource SR}}"
                               HorizontalAlignment="Right" VerticalAlignment="Center"
                              Margin="20 0 5 0"/>
                            <TextBox Height="25" Width="30"  MaxLength="20"
                               Text="{Binding TotalPhotoNum,Mode=TwoWay}"
                               HorizontalAlignment="Stretch"
                               VerticalAlignment="Center"/>
                            <TextBlock Text="{Binding [PhotoNum], Source={StaticResource SR}}"
                               HorizontalAlignment="Right" VerticalAlignment="Center"
                               Margin="5 0"/>
                            <TextBlock Text="|" 
                               HorizontalAlignment="Right" VerticalAlignment="Center"
                               Margin="0" Padding="0"/>
                            <TextBlock Text="{Binding [Interval], Source={StaticResource SR}}"
                               HorizontalAlignment="Right" VerticalAlignment="Center"
                               Margin="5 0"/>
                            <TextBox Height="25" Width="30" x:Name="photoInterval"
                               MaxLength="20"
                               Text="{Binding TakePhotoInterval,Mode=TwoWay}"
                                     TextChanged="photoInterval_TextChanged"
                               HorizontalAlignment="Stretch"
                               VerticalAlignment="Center"/>
                            <TextBlock Text="{Binding [Second], Source={StaticResource SR}}"
                               HorizontalAlignment="Right" VerticalAlignment="Center"
                               Margin="5 0"/>
                        </StackPanel>
                    </Grid>
                    <StackPanel Grid.Row="1" Margin="10 5" Orientation="Horizontal" HorizontalAlignment="Right">
                        <TextBlock Text="{Binding [AlreadyPhoto], Source={StaticResource SR}}"
                               HorizontalAlignment="Right" VerticalAlignment="Center"
                               Margin="30 0 5 0"/>
                        <TextBlock Text="{Binding AlreadyPhotoNum}"
                               HorizontalAlignment="Right" VerticalAlignment="Center"
                               Margin="30 0 5 0"/>
                        <TextBlock Text="{Binding [PhotoNum], Source={StaticResource SR}}"
                               HorizontalAlignment="Right" VerticalAlignment="Center"
                               Margin="5 0"/>
                    </StackPanel>
                </Grid>
            </Grid>
        </Grid>
        <Grid x:Name="bottomGrid" Grid.Row="1" Background="#f9f9f9">
            <Grid.RowDefinitions>
                <RowDefinition Height="85" />
                <RowDefinition Height="*"/>
                <RowDefinition Height="25"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Background="#eeeeee" Margin="5">
                <Grid  Margin="10,0,10,10">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition  Width="50"/>
                        <ColumnDefinition Width="130"/>
                        <ColumnDefinition  Width="0.6*"/>
                        <ColumnDefinition Width="160"/>
                        <ColumnDefinition  Width="0.6*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="0.7*"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition Width="220"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding [Date], Source={StaticResource SR}}"
                               HorizontalAlignment="Right" VerticalAlignment="Center"
                               Margin="5"/>
                    <Controls:DatePickerEx Margin="0,5,0,5" Grid.Column="1" Grid.Row="0"
                                       x:Name="dp_StartTime" 
                                       VerticalAlignment="Center" Style="{StaticResource lightDatePicker}"
                                       IsReadOnly="True"  
                                       HorizontalAlignment="Stretch"
                                    SelectedDate="{Binding SelectDate, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}" />
                    <TextBlock Grid.Row="0" Grid.Column="2" Text="{Binding [ALARM_StartTime],Source={StaticResource SR}}"
                               HorizontalAlignment="Right" VerticalAlignment="Center"
                               Margin="5"/>
                    <toolkit:TimePicker x:Name="tp_StartTime"  
                                    Format="Long" Value="{Binding StartTime, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True}" 
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    Grid.Column="3" Grid.Row="0"
                                    Margin="0,5,0,5" HorizontalContentAlignment="Left"
                                    >
                        <!--<toolkit:TimePicker.Popup>
                            <toolkit:RangeTimePickerPopup PopupTimeSelectionMode="AllowSecondsSelection"/>
                        </toolkit:TimePicker.Popup>-->
                    </toolkit:TimePicker>
                    <TextBlock Grid.Row="0" Grid.Column="4" Text="{Binding [ALERT_EndTime], Source={StaticResource SR}}"
                               HorizontalAlignment="Right" VerticalAlignment="Center"
                               Margin="5"/>
                    <toolkit:TimePicker Name="tp_EndTime" Format="Long" Grid.Row="0" Grid.Column="5"
                                    Value="{Binding EndTime, Mode=TwoWay,ValidatesOnNotifyDataErrors=True,NotifyOnValidationError=True}" 
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Stretch" HorizontalContentAlignment="Left"
                                    Margin="0,5,0,5">
                        <!--<toolkit:TimePicker.Popup>
                            <toolkit:RangeTimePickerPopup PopupTimeSelectionMode="AllowSecondsSelection"/>
                        </toolkit:TimePicker.Popup>-->
                    </toolkit:TimePicker>

                    <Button x:Name="editBtn" Grid.Row="0" Grid.Column="8"
                        Content="{Binding [Edit], Source={StaticResource SR}}" HorizontalAlignment="Right"
                        Command="{Binding EditCommand}"
                        Style="{StaticResource PhotoEditButtonStyle}"/>
                    <TextBlock Grid.Row="1" Grid.Column="0"  Text="{Binding [Status], Source={StaticResource SR}}"
                               HorizontalAlignment="Right" VerticalAlignment="Center"
                               Margin="5"/>
                    <ComboBox x:Name="IsMark"  Margin="0" Grid.Row="1" Grid.Column="1"
                    	ItemsSource="{Binding IsMarkList}" HorizontalAlignment="Stretch"
                    	DisplayMemberPath="ShowName" SelectedValuePath="EnumValue"
                    	SelectedItem="{Binding IsSelectMark, Mode=TwoWay}" Style="{StaticResource lightComboBox}"
                    	Height="25"  RenderTransformOrigin="-1.333,0.6"/>

                    <TextBlock Grid.Row="1" Grid.Column="2" Text="{Binding [VDM_ChannelNo],Source={StaticResource SR}}"
                               HorizontalAlignment="Right" VerticalAlignment="Center"
                               Margin="0,5,5,5"/>

                    <ComboBox x:Name="channel"  Margin="0" Grid.Row="1" Grid.Column="3"
                    	ItemsSource="{Binding ChannelList}" HorizontalAlignment="Stretch"
                    	DisplayMemberPath="ShowName" SelectedValuePath="EnumValue"
                    	SelectedItem="{Binding SelectChannel, Mode=TwoWay}" Style="{StaticResource lightComboBox}"
                    	Height="25" RenderTransformOrigin="-1.333,0.6"/>

                    <TextBlock Grid.Row="1" Grid.Column="4" Text="{Binding [OrderBy],Source={StaticResource SR}}"
                               HorizontalAlignment="Right" VerticalAlignment="Center"
                               Margin="30,5,5,5"/>

                    <ComboBox x:Name="orderBy"  Margin="0"
                          Grid.Row="1" Grid.Column="5" Style="{StaticResource lightComboBox}"
                    	ItemsSource="{Binding OrderList}" HorizontalAlignment="Stretch"
                    	DisplayMemberPath="ShowName" SelectedValuePath="EnumValue"
                    	SelectedItem="{Binding SelectOrder, Mode=TwoWay}" 
                    	Height="25" RenderTransformOrigin="-1.333,0.6"/>

                    <Grid Grid.Row="1" Grid.Column="6">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Text="{Binding [Mark],Source={StaticResource SR}}" Grid.Column="0"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Center"
                                   Margin="5,0,5,0"></TextBlock>
                        <TextBox Height="25"  Grid.Column="1"
                        Margin="0"                
                        MaxLength="20"
                        Text="{Binding NoteKeyWords,Mode=TwoWay}"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"/>
                    </Grid>

                    <Button x:Name="btn_query" Grid.Column="7" Grid.Row="1"
                        Margin="5,5,0,5"  
                        Tag="{Binding [Query], Source={StaticResource SR}}"  
                        Command="{Binding QueryCommand}" Style="{StaticResource SearchButtonCommonStyle}"
                        >
                    </Button>
                    <StackPanel x:Name="editStackPanel" Grid.Row="1" Grid.Column="8" FlowDirection="RightToLeft"
                                Visibility="{Binding IsStackPanelVisibility,Converter={StaticResource boolToVisibility}}"
                                Margin="0,0,0,0" Orientation="Horizontal">
                        <TextBlock x:Name="txtCancell" Text="{Binding [MANAGE_Cancle],Source={StaticResource SR}}"
                               HorizontalAlignment="Right" VerticalAlignment="Center" Cursor="Hand"
                               Margin="5,6,0,5" MouseLeftButtonDown="txtCancell_MouseLeftButtonDown"/>
                        <Button ToolTipService.ToolTip="{Binding [Delete], Source={StaticResource SR}}"
                            Command="{Binding DeleteCommand}"  Margin="5,3,0,0" 
                                Style="{StaticResource PhotoDeleteButtonCommonStyle}" Name="btnDelete"/>
                        <Button ToolTipService.ToolTip="{Binding [PictureMark], Source={StaticResource SR}}"
                            Style="{StaticResource PhotoMarkButtonCommonStyle}" Margin="5,3,0,0"
                                Command="{Binding MarkCommand}" Name="btnMark"/>
                        <CheckBox Margin="5,5,5,0" Content="{Binding [MANAGE_AllSelect], Source={StaticResource SR}}"  
                    		 HorizontalAlignment="Right" IsChecked="{Binding IsAllChecked, Mode=TwoWay}" 
                                  VerticalAlignment="Center" FlowDirection="LeftToRight"/>
                        <!--<Button x:Name="cancellBtn" Command="{Binding CancellCommand}" Content="{Binding [MANAGE_Cancle], Source={StaticResource SR}}"
                                Style="{StaticResource PhotoEditButtonStyle}"/>-->
                    </StackPanel>
                </Grid>
            </Grid>
            <ListBox Grid.Row="1" Name="hallView"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                     Background="#f9f9f9"
                     Style="{StaticResource PhotoListBox}"
                        ScrollViewer.VerticalScrollBarVisibility="Visible"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                        ItemsPanel="{StaticResource WrapPannelTemplate}"
                        ItemsSource="{Binding PhotoList}"
                        SelectedItem="{Binding SelectPhoto,Mode=TwoWay}"
                        ItemTemplate="{StaticResource PhotoListTemplate}"
                     ItemContainerStyle="{StaticResource PhotoListBoxItem}">
            </ListBox>
            <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,10,0">
                <TextBlock 
                    Text="{Binding [Total],Source={StaticResource SR}}"
                    HorizontalAlignment="Right" Foreground="White"
                    VerticalAlignment="Center"
                    Margin="0,2,10,2"/>
                <TextBlock Text="{Binding TotalRecord}" 
                    HorizontalAlignment="Left" Foreground="White"
                    VerticalAlignment="Center"
                    Margin="0,2,10,2"/>
                <TextBlock 
                    Text="{Binding [AlreadyShow],Source={StaticResource SR}}"
                    HorizontalAlignment="Right" Foreground="White"
                    VerticalAlignment="Center"
                    Margin="0,2,10,2"/>
                <TextBlock Text="{Binding ShowRecord}" 
                    HorizontalAlignment="Left" Foreground="White"
                    VerticalAlignment="Center"
                    Margin="0,2,10,2"/>
                <TextBlock x:Name="txtNore"
                    Text="{Binding [More],Source={StaticResource SR}}" Foreground="White"
                    HorizontalAlignment="Right" Cursor="Hand"
                    VerticalAlignment="Center" MouseLeftButtonDown ="txtNore_MouseLeftButtonDown"
                    Margin="0,2,10,2"
                           MouseMove="txtNore_MouseMove"
                           MouseLeave="txtNore_MouseLeave"/>
            </StackPanel>
        </Grid>
    </Grid>
</controls:ChildWindow>