// ------------------------------------------------------------------------------
//  <auto-generated>
//      此代码由编码的 UI 测试生成器生成。
//      版本: 11.0.0.0
//
//      如果重新生成代码，则更改此文件可能会导致错误的行为，
//      并将丢失这些更改。
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace BaseInfoUITest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.SilverlightControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// AddSetupStation - 使用“AddSetupStationParams”将参数传递到此方法中。
        /// </summary>
        public void AddSetupStation()
        {
            #region Variable Declarations
            SilverlightEdit uIItemEdit = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage17.UI安装点Text.UIItemEdit;
            SilverlightComboBox uIGsafetyPTMSServiceReComboBox = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage17.UI省份Text.UIGsafetyPTMSServiceReComboBox;
            SilverlightComboBox uIGsafetyPTMSServiceReComboBox1 = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage17.UI城市Text.UIGsafetyPTMSServiceReComboBox;
            SilverlightButton uIItemButton = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage17.UI备注Text.UIItemButton;
            WinButton uI确定Button = this.UI提示Window.UI确定Window.UI确定Button;
            #endregion

            // 在 “安装点” 后面的第一个 文本框 标签 中键入“Test05”
            uIItemEdit.Text = this.AddSetupStationParams.UIItemEditText;

            // 单击 “Gsafety.PTMS.ServiceReference.DistrictService.Dist...” 组合框
            Mouse.Click(uIGsafetyPTMSServiceReComboBox, new Point(89, 14));

            // Last action was not recorded because the control with Name 'Gsafety.PTMS.ServiceReference.DistrictService.District' and ControlType 'ListItem' does not have any good identification property.

            // 单击 “Gsafety.PTMS.ServiceReference.DistrictService.Dist...” 组合框
            Mouse.Click(uIGsafetyPTMSServiceReComboBox1, new Point(158, 21));

            // Last action was not recorded because the control with Name 'Gsafety.PTMS.ServiceReference.DistrictService.District' and ControlType 'ListItem' does not have any good identification property.

            // 单击 “备注” 后面的第一个 按钮 标签
            Mouse.Click(uIItemButton, new Point(53, 24));

            // 单击 “确定” 按钮
            Mouse.Click(uI确定Button, new Point(53, 15));
        }
        
        /// <summary>
        /// AddSuite - 使用“AddSuiteParams”将参数传递到此方法中。
        /// </summary>
        public void AddSuite()
        {
            #region Variable Declarations
            SilverlightButton uIItemButton = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage11.UI安全套件Text.UIItemButton;
            SilverlightEdit uIItemEdit = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage13.UI安全套件编号Text.UIItemEdit;
            SilverlightEdit uIItemEdit1 = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage14.UICEIEC主机号Text.UIItemEdit;
            SilverlightEdit uIItemEdit2 = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage15.UIMDVR芯片号Text.UIItemEdit;
            SilverlightButton uIItemButton1 = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage16.UI内容Text.UIItemButton;
            #endregion

            // 单击 “安全套件” 后面的第一个 按钮 标签
            Mouse.Click(uIItemButton, new Point(54, 21));

            // 在 “安全套件编号” 后面的第一个 文本框 标签 中键入“Test00050”
            uIItemEdit.Text = this.AddSuiteParams.UIItemEditText;

            // 在 “CEIEC主机号” 后面的第一个 文本框 标签 中键入“Test00050”
            uIItemEdit1.Text = this.AddSuiteParams.UIItemEditText1;

            // 在 “MDVR芯片号” 后面的第一个 文本框 标签 中键入“Test00050”
            uIItemEdit2.Text = this.AddSuiteParams.UIItemEditText2;

            // 单击 “内容” 后面的第一个 按钮 标签
            Mouse.Click(uIItemButton1, new Point(61, 21));
        }
        
        /// <summary>
        /// AddVehicle - 使用“AddVehicleParams”将参数传递到此方法中。
        /// </summary>
        public void AddVehicle()
        {
            #region Variable Declarations
            SilverlightButton uIItemButton = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage1.UI车辆Text.UIItemButton;
            SilverlightEdit uIItemEdit = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage1.UI车牌号Text.UIItemEdit;
            SilverlightEdit uIItemEdit1 = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage1.UI车架号Text.UIItemEdit;
            SilverlightComboBox uIGsafetyPTMSServiceReComboBox = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage1.UI省份Text.UIGsafetyPTMSServiceReComboBox;
            SilverlightComboBox uIGsafetyPTMSServiceReComboBox1 = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage1.UI城市Text.UIGsafetyPTMSServiceReComboBox;
            SilverlightEdit uIItemEdit2 = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage1.UI车辆品牌Text.UIItemEdit;
            SilverlightEdit uIItemEdit3 = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage1.UI发动机号Text.UIItemEdit;
            SilverlightEdit uIItemEdit4 = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage1.UI运营许可证Text.UIItemEdit;
            SilverlightEdit uIItemEdit5 = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage1.UI运营区域Text.UIItemEdit;
            SilverlightButton uIItemButton1 = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage1.UI内容Text.UIItemButton;
            WinButton uI确定Button = this.UI提示Window.UI确定Window.UI确定Button;
            #endregion

            // 单击 “车辆” 后面的第一个 按钮 标签
            Mouse.Click(uIItemButton, new Point(49, 14));

            // 在 “车牌号” 后面的第一个 文本框 标签 中键入“Test00050”
            uIItemEdit.Text = this.AddVehicleParams.UIItemEditText;

            // 在 “车架号” 后面的第一个 文本框 标签 中键入“Test00050”
            uIItemEdit1.Text = this.AddVehicleParams.UIItemEditText1;

            // 单击 “Gsafety.PTMS.ServiceReference.DistrictService.Dist...” 组合框
            Mouse.Click(uIGsafetyPTMSServiceReComboBox, new Point(118, 15));

            // Last action was not recorded because the control with Name 'Gsafety.PTMS.ServiceReference.DistrictService.District' and ControlType 'ListItem' does not have any good identification property.

            // 单击 “Gsafety.PTMS.ServiceReference.DistrictService.Dist...” 组合框
            Mouse.Click(uIGsafetyPTMSServiceReComboBox1, new Point(167, 10));

            // Last action was not recorded because the control with Name 'Gsafety.PTMS.ServiceReference.DistrictService.District' and ControlType 'ListItem' does not have any good identification property.

            // 在 “车辆品牌” 后面的第一个 文本框 标签 中键入“Test00050”
            uIItemEdit2.Text = this.AddVehicleParams.UIItemEditText2;

            // 在 “发动机号” 后面的第一个 文本框 标签 中键入“Test00050”
            uIItemEdit3.Text = this.AddVehicleParams.UIItemEditText3;

            // 在 “运营许可证” 后面的第一个 文本框 标签 中键入“Test00050”
            uIItemEdit4.Text = this.AddVehicleParams.UIItemEditText4;

            // 单击 “运营区域” 后面的第一个 文本框 标签
            Mouse.Click(uIItemEdit5, new Point(42, 17));

            // 单击 “内容” 后面的第一个 按钮 标签
            Mouse.Click(uIItemButton1, new Point(32, 17));

            // 单击 “确定” 按钮
            Mouse.Click(uI确定Button, new Point(50, 16));
        }
        
        /// <summary>
        /// Export - 使用“ExportParams”将参数传递到此方法中。
        /// </summary>
        public void Export()
        {
            #region Variable Declarations
            SilverlightButton uIItemButton = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage1.UIHttp1018211ptmsDownTHyperlink.UIItemButton;
            WinComboBox uI文件名ComboBox = this.UI另存为Window.UI细节窗格Pane.UI文件名ComboBox;
            WinButton uI保存SButton = this.UI另存为Window.UI保存SWindow.UI保存SButton;
            WinButton uI确定Button = this.UI提示Window.UI确定Window.UI确定Button;
            #endregion

            // 单击 “http://10.1.8.211/ptms/DownTemplate/车辆.xlsx” 后面的第一个 按钮 链接
            Mouse.Click(uIItemButton, new Point(29, 14));

            // 在 “文件名:” 组合框 中选择“vehicle”
            uI文件名ComboBox.EditableItem = this.ExportParams.UI文件名ComboBoxEditableItem;

            // 单击 “保存(&S)” 按钮
            Mouse.Click(uI保存SButton, new Point(53, 16));

            // 单击 “确定” 按钮
            Mouse.Click(uI确定Button, new Point(41, 12));
        }
        
        /// <summary>
        /// ModelLoad
        /// </summary>
        public void ModelLoad()
        {
            #region Variable Declarations
            SilverlightControl uIItemVehicle = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage1.UIItemVehicle;
            WinButton uI保存SButton = this.UI文件下载Window.UI保存SWindow.UI保存SButton;
            WinButton uI保存SButton1 = this.UI另存为Window.UI保存SWindow.UI保存SButton;
            #endregion

            // 单击 Vehicle
            Mouse.Click(uIItemVehicle, new Point(857, 110));

            // 单击 “保存(&S)” 按钮
            Mouse.Click(uI保存SButton, new Point(30, 7));

            // 单击 “保存(&S)” 按钮
            Mouse.Click(uI保存SButton1, new Point(65, 17));
        }
        
        /// <summary>
        /// ModifySetupStation - 使用“ModifySetupStationParams”将参数传递到此方法中。
        /// </summary>
        public void ModifySetupStation()
        {
            #region Variable Declarations
            SilverlightEdit uIItemEdit = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage17.UI安装点Text.UIItemEdit;
            SilverlightComboBox uIGsafetyPTMSServiceReComboBox = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage17.UI省份Text.UIGsafetyPTMSServiceReComboBox;
            SilverlightComboBox uIGsafetyPTMSServiceReComboBox1 = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage17.UI城市Text.UIGsafetyPTMSServiceReComboBox;
            SilverlightEdit uIItemEdit1 = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage17.UI联系人Text.UIItemEdit;
            SilverlightEdit uIItemEdit2 = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage17.UI联系电话Text.UIItemEdit;
            #endregion

            // 单击 “安装点” 后面的第一个 文本框 标签
            Mouse.Click(uIItemEdit, new Point(63, 16));

            // 单击 “Gsafety.PTMS.ServiceReference.DistrictService.Dist...” 组合框
            Mouse.Click(uIGsafetyPTMSServiceReComboBox, new Point(143, 14));

            // Last action was not recorded because the control with Name 'Gsafety.PTMS.ServiceReference.DistrictService.District' and ControlType 'ListItem' does not have any good identification property.

            // 单击 “Gsafety.PTMS.ServiceReference.DistrictService.Dist...” 组合框
            Mouse.Click(uIGsafetyPTMSServiceReComboBox1, new Point(97, 15));

            // Last action was not recorded because the control with Name 'Gsafety.PTMS.ServiceReference.DistrictService.District' and ControlType 'ListItem' does not have any good identification property.

            // 在 “联系人” 后面的第一个 文本框 标签 中键入“sdf”
            uIItemEdit1.Text = this.ModifySetupStationParams.UIItemEditText;

            // 在 “联系电话” 后面的第一个 文本框 标签 中键入“78979111111”
            uIItemEdit2.Text = this.ModifySetupStationParams.UIItemEditText1;
        }
        
        /// <summary>
        /// ModifySuite - 使用“ModifySuiteParams”将参数传递到此方法中。
        /// </summary>
        public void ModifySuite()
        {
            #region Variable Declarations
            SilverlightEdit uIItemEdit = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage11.UI安全套件编号Text.UIItemEdit;
            SilverlightEdit uIItemEdit1 = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage11.UICEIEC主机号Text.UIItemEdit;
            SilverlightEdit uIItemEdit2 = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage11.UIMDVR芯片号Text.UIItemEdit;
            SilverlightButton uIItemButton = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage11.UI内容Text.UIItemButton;
            #endregion

            // 在 “安全套件编号” 后面的第一个 文本框 标签 中键入“Test00198”
            uIItemEdit.Text = this.ModifySuiteParams.UIItemEditText;

            // 在 “CEIEC主机号” 后面的第一个 文本框 标签 中键入“Test00198”
            uIItemEdit1.Text = this.ModifySuiteParams.UIItemEditText1;

            // 单击 “MDVR芯片号” 后面的第一个 文本框 标签
            Mouse.Click(uIItemEdit2, new Point(57, 16));

            // 在 “MDVR芯片号” 后面的第一个 文本框 标签 中键入“Test00198”
            uIItemEdit2.Text = this.ModifySuiteParams.UIItemEditText2;

            // 单击 “内容” 后面的第一个 按钮 标签
            Mouse.Click(uIItemButton, new Point(49, 21));
        }
        
        /// <summary>
        /// ModifyVehcile - 使用“ModifyVehcileParams”将参数传递到此方法中。
        /// </summary>
        public void ModifyVehcile()
        {
            #region Variable Declarations
            SilverlightEdit uIItemEdit = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage1.UI车牌号Text.UIItemEdit;
            SilverlightEdit uIItemEdit1 = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage1.UI车架号Text.UIItemEdit;
            SilverlightEdit uIItemEdit2 = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage1.UI发动机号Text.UIItemEdit;
            SilverlightEdit uIItemEdit3 = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage1.UI车辆品牌Text.UIItemEdit;
            SilverlightEdit uIItemEdit4 = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage1.UI运营许可证Text.UIItemEdit;
            SilverlightEdit uIItemEdit5 = this.UIPTMSWindowsInternetEWindow.UIPTMSDocument.UISilverlightControlCustom.UIPagePage.UIItemPage.UIItemPage1.UI运营区域Text.UIItemEdit;
            #endregion

            // 在 “车牌号” 后面的第一个 文本框 标签 中键入“Test00099”
            uIItemEdit.Text = this.ModifyVehcileParams.UIItemEditText;

            // 在 “车架号” 后面的第一个 文本框 标签 中键入“Test00099”
            uIItemEdit1.Text = this.ModifyVehcileParams.UIItemEditText1;

            // 在 “发动机号” 后面的第一个 文本框 标签 中键入“Test00099”
            uIItemEdit2.Text = this.ModifyVehcileParams.UIItemEditText2;

            // 在 “车辆品牌” 后面的第一个 文本框 标签 中键入“Test00099”
            uIItemEdit3.Text = this.ModifyVehcileParams.UIItemEditText3;

            // 在 “运营许可证” 后面的第一个 文本框 标签 中键入“Test00099”
            uIItemEdit4.Text = this.ModifyVehcileParams.UIItemEditText4;

            // 在 “运营区域” 后面的第一个 文本框 标签 中键入“Test00099”
            uIItemEdit5.Text = this.ModifyVehcileParams.UIItemEditText5;
        }
        
        #region Properties
        public virtual AddSetupStationParams AddSetupStationParams
        {
            get
            {
                if ((this.mAddSetupStationParams == null))
                {
                    this.mAddSetupStationParams = new AddSetupStationParams();
                }
                return this.mAddSetupStationParams;
            }
        }
        
        public virtual AddSuiteParams AddSuiteParams
        {
            get
            {
                if ((this.mAddSuiteParams == null))
                {
                    this.mAddSuiteParams = new AddSuiteParams();
                }
                return this.mAddSuiteParams;
            }
        }
        
        public virtual AddVehicleParams AddVehicleParams
        {
            get
            {
                if ((this.mAddVehicleParams == null))
                {
                    this.mAddVehicleParams = new AddVehicleParams();
                }
                return this.mAddVehicleParams;
            }
        }
        
        public virtual ExportParams ExportParams
        {
            get
            {
                if ((this.mExportParams == null))
                {
                    this.mExportParams = new ExportParams();
                }
                return this.mExportParams;
            }
        }
        
        public virtual ModifySetupStationParams ModifySetupStationParams
        {
            get
            {
                if ((this.mModifySetupStationParams == null))
                {
                    this.mModifySetupStationParams = new ModifySetupStationParams();
                }
                return this.mModifySetupStationParams;
            }
        }
        
        public virtual ModifySuiteParams ModifySuiteParams
        {
            get
            {
                if ((this.mModifySuiteParams == null))
                {
                    this.mModifySuiteParams = new ModifySuiteParams();
                }
                return this.mModifySuiteParams;
            }
        }
        
        public virtual ModifyVehcileParams ModifyVehcileParams
        {
            get
            {
                if ((this.mModifyVehcileParams == null))
                {
                    this.mModifyVehcileParams = new ModifyVehcileParams();
                }
                return this.mModifyVehcileParams;
            }
        }
        
        public UIPTMSWindowsInternetEWindow UIPTMSWindowsInternetEWindow
        {
            get
            {
                if ((this.mUIPTMSWindowsInternetEWindow == null))
                {
                    this.mUIPTMSWindowsInternetEWindow = new UIPTMSWindowsInternetEWindow();
                }
                return this.mUIPTMSWindowsInternetEWindow;
            }
        }
        
        public UI提示Window UI提示Window
        {
            get
            {
                if ((this.mUI提示Window == null))
                {
                    this.mUI提示Window = new UI提示Window();
                }
                return this.mUI提示Window;
            }
        }
        
        public UI另存为Window UI另存为Window
        {
            get
            {
                if ((this.mUI另存为Window == null))
                {
                    this.mUI另存为Window = new UI另存为Window();
                }
                return this.mUI另存为Window;
            }
        }
        
        public UI文件下载Window UI文件下载Window
        {
            get
            {
                if ((this.mUI文件下载Window == null))
                {
                    this.mUI文件下载Window = new UI文件下载Window();
                }
                return this.mUI文件下载Window;
            }
        }
        
        public UI打开Window UI打开Window
        {
            get
            {
                if ((this.mUI打开Window == null))
                {
                    this.mUI打开Window = new UI打开Window();
                }
                return this.mUI打开Window;
            }
        }
        
        public UISIMA07群3180665009Window UISIMA07群3180665009Window
        {
            get
            {
                if ((this.mUISIMA07群3180665009Window == null))
                {
                    this.mUISIMA07群3180665009Window = new UISIMA07群3180665009Window();
                }
                return this.mUISIMA07群3180665009Window;
            }
        }
        
        public UIPTMS开发人员工具Window UIPTMS开发人员工具Window
        {
            get
            {
                if ((this.mUIPTMS开发人员工具Window == null))
                {
                    this.mUIPTMS开发人员工具Window = new UIPTMS开发人员工具Window();
                }
                return this.mUIPTMS开发人员工具Window;
            }
        }
        #endregion
        
        #region Fields
        private AddSetupStationParams mAddSetupStationParams;
        
        private AddSuiteParams mAddSuiteParams;
        
        private AddVehicleParams mAddVehicleParams;
        
        private ExportParams mExportParams;
        
        private ModifySetupStationParams mModifySetupStationParams;
        
        private ModifySuiteParams mModifySuiteParams;
        
        private ModifyVehcileParams mModifyVehcileParams;
        
        private UIPTMSWindowsInternetEWindow mUIPTMSWindowsInternetEWindow;
        
        private UI提示Window mUI提示Window;
        
        private UI另存为Window mUI另存为Window;
        
        private UI文件下载Window mUI文件下载Window;
        
        private UI打开Window mUI打开Window;
        
        private UISIMA07群3180665009Window mUISIMA07群3180665009Window;
        
        private UIPTMS开发人员工具Window mUIPTMS开发人员工具Window;
        #endregion
    }
    
    /// <summary>
    /// 要传递到“AddSetupStation”中的参数
    /// </summary>
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class AddSetupStationParams
    {
        
        #region Fields
        /// <summary>
        /// 在 “安装点” 后面的第一个 文本框 标签 中键入“Test05”
        /// </summary>
        public string UIItemEditText = "Test05";
        #endregion
    }
    
    /// <summary>
    /// 要传递到“AddSuite”中的参数
    /// </summary>
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class AddSuiteParams
    {
        
        #region Fields
        /// <summary>
        /// 在 “安全套件编号” 后面的第一个 文本框 标签 中键入“Test00050”
        /// </summary>
        public string UIItemEditText = "Test00050";
        
        /// <summary>
        /// 在 “CEIEC主机号” 后面的第一个 文本框 标签 中键入“Test00050”
        /// </summary>
        public string UIItemEditText1 = "Test00050";
        
        /// <summary>
        /// 在 “MDVR芯片号” 后面的第一个 文本框 标签 中键入“Test00050”
        /// </summary>
        public string UIItemEditText2 = "Test00050";
        #endregion
    }
    
    /// <summary>
    /// 要传递到“AddVehicle”中的参数
    /// </summary>
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class AddVehicleParams
    {
        
        #region Fields
        /// <summary>
        /// 在 “车牌号” 后面的第一个 文本框 标签 中键入“Test00050”
        /// </summary>
        public string UIItemEditText = "Test00050";
        
        /// <summary>
        /// 在 “车架号” 后面的第一个 文本框 标签 中键入“Test00050”
        /// </summary>
        public string UIItemEditText1 = "Test00050";
        
        /// <summary>
        /// 在 “车辆品牌” 后面的第一个 文本框 标签 中键入“Test00050”
        /// </summary>
        public string UIItemEditText2 = "Test00050";
        
        /// <summary>
        /// 在 “发动机号” 后面的第一个 文本框 标签 中键入“Test00050”
        /// </summary>
        public string UIItemEditText3 = "Test00050";
        
        /// <summary>
        /// 在 “运营许可证” 后面的第一个 文本框 标签 中键入“Test00050”
        /// </summary>
        public string UIItemEditText4 = "Test00050";
        #endregion
    }
    
    /// <summary>
    /// 要传递到“Export”中的参数
    /// </summary>
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class ExportParams
    {
        
        #region Fields
        /// <summary>
        /// 在 “文件名:” 组合框 中选择“vehicle”
        /// </summary>
        public string UI文件名ComboBoxEditableItem = "vehicle";
        #endregion
    }
    
    /// <summary>
    /// 要传递到“ModifySetupStation”中的参数
    /// </summary>
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class ModifySetupStationParams
    {
        
        #region Fields
        /// <summary>
        /// 在 “联系人” 后面的第一个 文本框 标签 中键入“sdf”
        /// </summary>
        public string UIItemEditText = "sdf";
        
        /// <summary>
        /// 在 “联系电话” 后面的第一个 文本框 标签 中键入“78979111111”
        /// </summary>
        public string UIItemEditText1 = "78979111111";
        #endregion
    }
    
    /// <summary>
    /// 要传递到“ModifySuite”中的参数
    /// </summary>
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class ModifySuiteParams
    {
        
        #region Fields
        /// <summary>
        /// 在 “安全套件编号” 后面的第一个 文本框 标签 中键入“Test00198”
        /// </summary>
        public string UIItemEditText = "Test00198";
        
        /// <summary>
        /// 在 “CEIEC主机号” 后面的第一个 文本框 标签 中键入“Test00198”
        /// </summary>
        public string UIItemEditText1 = "Test00198";
        
        /// <summary>
        /// 在 “MDVR芯片号” 后面的第一个 文本框 标签 中键入“Test00198”
        /// </summary>
        public string UIItemEditText2 = "Test00198";
        #endregion
    }
    
    /// <summary>
    /// 要传递到“ModifyVehcile”中的参数
    /// </summary>
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class ModifyVehcileParams
    {
        
        #region Fields
        /// <summary>
        /// 在 “车牌号” 后面的第一个 文本框 标签 中键入“Test00099”
        /// </summary>
        public string UIItemEditText = "Test00099";
        
        /// <summary>
        /// 在 “车架号” 后面的第一个 文本框 标签 中键入“Test00099”
        /// </summary>
        public string UIItemEditText1 = "Test00099";
        
        /// <summary>
        /// 在 “发动机号” 后面的第一个 文本框 标签 中键入“Test00099”
        /// </summary>
        public string UIItemEditText2 = "Test00099";
        
        /// <summary>
        /// 在 “车辆品牌” 后面的第一个 文本框 标签 中键入“Test00099”
        /// </summary>
        public string UIItemEditText3 = "Test00099";
        
        /// <summary>
        /// 在 “运营许可证” 后面的第一个 文本框 标签 中键入“Test00099”
        /// </summary>
        public string UIItemEditText4 = "Test00099";
        
        /// <summary>
        /// 在 “运营区域” 后面的第一个 文本框 标签 中键入“Test00099”
        /// </summary>
        public string UIItemEditText5 = "Test00099";
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UIPTMSWindowsInternetEWindow : BrowserWindow
    {
        
        public UIPTMSWindowsInternetEWindow()
        {
            #region 搜索条件
            this.SearchProperties[UITestControl.PropertyNames.Name] = "PTMS";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIPTMSDocument UIPTMSDocument
        {
            get
            {
                if ((this.mUIPTMSDocument == null))
                {
                    this.mUIPTMSDocument = new UIPTMSDocument(this);
                }
                return this.mUIPTMSDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIPTMSDocument mUIPTMSDocument;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UIPTMSDocument : HtmlDocument
    {
        
        public UIPTMSDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "PTMS";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/ptms/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://10.1.8.211/ptms/";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public UISilverlightControlCustom UISilverlightControlCustom
        {
            get
            {
                if ((this.mUISilverlightControlCustom == null))
                {
                    this.mUISilverlightControlCustom = new UISilverlightControlCustom(this);
                }
                return this.mUISilverlightControlCustom;
            }
        }
        #endregion
        
        #region Fields
        private UISilverlightControlCustom mUISilverlightControlCustom;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UISilverlightControlCustom : HtmlCustom
    {
        
        public UISilverlightControlCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties["TagName"] = "OBJECT";
            this.SearchProperties["Id"] = "silverlightControl";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=silverlightControl codeBase=\"SDK/Silv";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public UIPagePage UIPagePage
        {
            get
            {
                if ((this.mUIPagePage == null))
                {
                    this.mUIPagePage = new UIPagePage(this);
                }
                return this.mUIPagePage;
            }
        }
        #endregion
        
        #region Fields
        private UIPagePage mUIPagePage;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UIPagePage : SilverlightPage
    {
        
        public UIPagePage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightPage.PropertyNames.Title] = "LoginPage Page";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightHyperlink UIBaseInforLinkHyperlink
        {
            get
            {
                if ((this.mUIBaseInforLinkHyperlink == null))
                {
                    this.mUIBaseInforLinkHyperlink = new SilverlightHyperlink(this);
                    #region 搜索条件
                    this.mUIBaseInforLinkHyperlink.SearchProperties[SilverlightHyperlink.PropertyNames.AutomationId] = "BaseInforLink";
                    this.mUIBaseInforLinkHyperlink.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIBaseInforLinkHyperlink;
            }
        }
        
        public UIItemPage UIItemPage
        {
            get
            {
                if ((this.mUIItemPage == null))
                {
                    this.mUIItemPage = new UIItemPage(this);
                }
                return this.mUIItemPage;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightHyperlink mUIBaseInforLinkHyperlink;
        
        private UIItemPage mUIItemPage;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UIItemPage : SilverlightPage
    {
        
        public UIItemPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightPage.PropertyNames.Source] = "/BaseInfoMainPage";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public UIItemPage1 UIItemPage1
        {
            get
            {
                if ((this.mUIItemPage1 == null))
                {
                    this.mUIItemPage1 = new UIItemPage1(this);
                }
                return this.mUIItemPage1;
            }
        }
        
        public UIItemPage11 UIItemPage11
        {
            get
            {
                if ((this.mUIItemPage11 == null))
                {
                    this.mUIItemPage11 = new UIItemPage11(this);
                }
                return this.mUIItemPage11;
            }
        }
        
        public UIItemPage12 UIItemPage12
        {
            get
            {
                if ((this.mUIItemPage12 == null))
                {
                    this.mUIItemPage12 = new UIItemPage12(this);
                }
                return this.mUIItemPage12;
            }
        }
        
        public UIItemPage13 UIItemPage13
        {
            get
            {
                if ((this.mUIItemPage13 == null))
                {
                    this.mUIItemPage13 = new UIItemPage13(this);
                }
                return this.mUIItemPage13;
            }
        }
        
        public UIItemPage14 UIItemPage14
        {
            get
            {
                if ((this.mUIItemPage14 == null))
                {
                    this.mUIItemPage14 = new UIItemPage14(this);
                }
                return this.mUIItemPage14;
            }
        }
        
        public UIItemPage15 UIItemPage15
        {
            get
            {
                if ((this.mUIItemPage15 == null))
                {
                    this.mUIItemPage15 = new UIItemPage15(this);
                }
                return this.mUIItemPage15;
            }
        }
        
        public UIItemPage16 UIItemPage16
        {
            get
            {
                if ((this.mUIItemPage16 == null))
                {
                    this.mUIItemPage16 = new UIItemPage16(this);
                }
                return this.mUIItemPage16;
            }
        }
        
        public UIItemPage17 UIItemPage17
        {
            get
            {
                if ((this.mUIItemPage17 == null))
                {
                    this.mUIItemPage17 = new UIItemPage17(this);
                }
                return this.mUIItemPage17;
            }
        }
        
        public UIItemPage18 UIItemPage18
        {
            get
            {
                if ((this.mUIItemPage18 == null))
                {
                    this.mUIItemPage18 = new UIItemPage18(this);
                }
                return this.mUIItemPage18;
            }
        }
        
        public UIItemPage19 UIItemPage19
        {
            get
            {
                if ((this.mUIItemPage19 == null))
                {
                    this.mUIItemPage19 = new UIItemPage19(this);
                }
                return this.mUIItemPage19;
            }
        }
        
        public UIItemPage110 UIItemPage110
        {
            get
            {
                if ((this.mUIItemPage110 == null))
                {
                    this.mUIItemPage110 = new UIItemPage110(this);
                }
                return this.mUIItemPage110;
            }
        }
        
        public UIItemPage111 UIItemPage111
        {
            get
            {
                if ((this.mUIItemPage111 == null))
                {
                    this.mUIItemPage111 = new UIItemPage111(this);
                }
                return this.mUIItemPage111;
            }
        }
        #endregion
        
        #region Fields
        private UIItemPage1 mUIItemPage1;
        
        private UIItemPage11 mUIItemPage11;
        
        private UIItemPage12 mUIItemPage12;
        
        private UIItemPage13 mUIItemPage13;
        
        private UIItemPage14 mUIItemPage14;
        
        private UIItemPage15 mUIItemPage15;
        
        private UIItemPage16 mUIItemPage16;
        
        private UIItemPage17 mUIItemPage17;
        
        private UIItemPage18 mUIItemPage18;
        
        private UIItemPage19 mUIItemPage19;
        
        private UIItemPage110 mUIItemPage110;
        
        private UIItemPage111 mUIItemPage111;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UIItemPage1 : SilverlightPage
    {
        
        public UIItemPage1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightPage.PropertyNames.Title] = "公共交通整体安全系统";
            this.SearchProperties[SilverlightPage.PropertyNames.Source] = "/Vehicle";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public UI车辆Text UI车辆Text
        {
            get
            {
                if ((this.mUI车辆Text == null))
                {
                    this.mUI车辆Text = new UI车辆Text(this);
                }
                return this.mUI车辆Text;
            }
        }
        
        public UI车牌号Text UI车牌号Text
        {
            get
            {
                if ((this.mUI车牌号Text == null))
                {
                    this.mUI车牌号Text = new UI车牌号Text(this);
                }
                return this.mUI车牌号Text;
            }
        }
        
        public UI车架号Text UI车架号Text
        {
            get
            {
                if ((this.mUI车架号Text == null))
                {
                    this.mUI车架号Text = new UI车架号Text(this);
                }
                return this.mUI车架号Text;
            }
        }
        
        public UI省份Text UI省份Text
        {
            get
            {
                if ((this.mUI省份Text == null))
                {
                    this.mUI省份Text = new UI省份Text(this);
                }
                return this.mUI省份Text;
            }
        }
        
        public UI城市Text UI城市Text
        {
            get
            {
                if ((this.mUI城市Text == null))
                {
                    this.mUI城市Text = new UI城市Text(this);
                }
                return this.mUI城市Text;
            }
        }
        
        public UI车辆品牌Text UI车辆品牌Text
        {
            get
            {
                if ((this.mUI车辆品牌Text == null))
                {
                    this.mUI车辆品牌Text = new UI车辆品牌Text(this);
                }
                return this.mUI车辆品牌Text;
            }
        }
        
        public UI运营许可证Text UI运营许可证Text
        {
            get
            {
                if ((this.mUI运营许可证Text == null))
                {
                    this.mUI运营许可证Text = new UI运营许可证Text(this);
                }
                return this.mUI运营许可证Text;
            }
        }
        
        public UI发动机号Text UI发动机号Text
        {
            get
            {
                if ((this.mUI发动机号Text == null))
                {
                    this.mUI发动机号Text = new UI发动机号Text(this);
                }
                return this.mUI发动机号Text;
            }
        }
        
        public UI运营区域Text UI运营区域Text
        {
            get
            {
                if ((this.mUI运营区域Text == null))
                {
                    this.mUI运营区域Text = new UI运营区域Text(this);
                }
                return this.mUI运营区域Text;
            }
        }
        
        public UI车况Text UI车况Text
        {
            get
            {
                if ((this.mUI车况Text == null))
                {
                    this.mUI车况Text = new UI车况Text(this);
                }
                return this.mUI车况Text;
            }
        }
        
        public UI内容Text UI内容Text
        {
            get
            {
                if ((this.mUI内容Text == null))
                {
                    this.mUI内容Text = new UI内容Text(this);
                }
                return this.mUI内容Text;
            }
        }
        
        public UIHttp1018211ptmsDownTHyperlink UIHttp1018211ptmsDownTHyperlink
        {
            get
            {
                if ((this.mUIHttp1018211ptmsDownTHyperlink == null))
                {
                    this.mUIHttp1018211ptmsDownTHyperlink = new UIHttp1018211ptmsDownTHyperlink(this);
                }
                return this.mUIHttp1018211ptmsDownTHyperlink;
            }
        }
        
        public SilverlightControl UIItemVehicle
        {
            get
            {
                if ((this.mUIItemVehicle == null))
                {
                    this.mUIItemVehicle = new SilverlightControl(this);
                    #region 搜索条件
                    this.mUIItemVehicle.SearchProperties[UITestControl.PropertyNames.ControlType] = "Vehicle";
                    this.mUIItemVehicle.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemVehicle;
            }
        }
        #endregion
        
        #region Fields
        private UI车辆Text mUI车辆Text;
        
        private UI车牌号Text mUI车牌号Text;
        
        private UI车架号Text mUI车架号Text;
        
        private UI省份Text mUI省份Text;
        
        private UI城市Text mUI城市Text;
        
        private UI车辆品牌Text mUI车辆品牌Text;
        
        private UI运营许可证Text mUI运营许可证Text;
        
        private UI发动机号Text mUI发动机号Text;
        
        private UI运营区域Text mUI运营区域Text;
        
        private UI车况Text mUI车况Text;
        
        private UI内容Text mUI内容Text;
        
        private UIHttp1018211ptmsDownTHyperlink mUIHttp1018211ptmsDownTHyperlink;
        
        private SilverlightControl mUIItemVehicle;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI车辆Text : SilverlightText
    {
        
        public UI车辆Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "车辆";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new SilverlightButton(this);
                    #region 搜索条件
                    this.mUIItemButton.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemButton.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        
        public SilverlightButton UIItemButton1
        {
            get
            {
                if ((this.mUIItemButton1 == null))
                {
                    this.mUIItemButton1 = new SilverlightButton(this);
                    #region 搜索条件
                    this.mUIItemButton1.SearchProperties[SilverlightButton.PropertyNames.Instance] = "2";
                    this.mUIItemButton1.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemButton1.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemButton1;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightButton mUIItemButton;
        
        private SilverlightButton mUIItemButton1;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI车牌号Text : SilverlightText
    {
        
        public UI车牌号Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "车牌号";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new SilverlightEdit(this);
                    #region 搜索条件
                    this.mUIItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemEdit.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI车架号Text : SilverlightText
    {
        
        public UI车架号Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "车架号";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new SilverlightEdit(this);
                    #region 搜索条件
                    this.mUIItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemEdit.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI省份Text : SilverlightText
    {
        
        public UI省份Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "省份";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightComboBox UIGsafetyPTMSServiceReComboBox
        {
            get
            {
                if ((this.mUIGsafetyPTMSServiceReComboBox == null))
                {
                    this.mUIGsafetyPTMSServiceReComboBox = new SilverlightComboBox(this);
                    #region 搜索条件
                    this.mUIGsafetyPTMSServiceReComboBox.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIGsafetyPTMSServiceReComboBox.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIGsafetyPTMSServiceReComboBox;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightComboBox mUIGsafetyPTMSServiceReComboBox;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI城市Text : SilverlightText
    {
        
        public UI城市Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "城市";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightComboBox UIGsafetyPTMSServiceReComboBox
        {
            get
            {
                if ((this.mUIGsafetyPTMSServiceReComboBox == null))
                {
                    this.mUIGsafetyPTMSServiceReComboBox = new SilverlightComboBox(this);
                    #region 搜索条件
                    this.mUIGsafetyPTMSServiceReComboBox.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIGsafetyPTMSServiceReComboBox.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIGsafetyPTMSServiceReComboBox;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightComboBox mUIGsafetyPTMSServiceReComboBox;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI车辆品牌Text : SilverlightText
    {
        
        public UI车辆品牌Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "车辆品牌";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new SilverlightEdit(this);
                    #region 搜索条件
                    this.mUIItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemEdit.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI运营许可证Text : SilverlightText
    {
        
        public UI运营许可证Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "运营许可证";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new SilverlightEdit(this);
                    #region 搜索条件
                    this.mUIItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemEdit.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI发动机号Text : SilverlightText
    {
        
        public UI发动机号Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "发动机号";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new SilverlightEdit(this);
                    #region 搜索条件
                    this.mUIItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemEdit.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI运营区域Text : SilverlightText
    {
        
        public UI运营区域Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "运营区域";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new SilverlightEdit(this);
                    #region 搜索条件
                    this.mUIItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemEdit.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI车况Text : SilverlightText
    {
        
        public UI车况Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "车况";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new SilverlightEdit(this);
                    #region 搜索条件
                    this.mUIItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemEdit.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI内容Text : SilverlightText
    {
        
        public UI内容Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "内容";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new SilverlightButton(this);
                    #region 搜索条件
                    this.mUIItemButton.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemButton.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UIHttp1018211ptmsDownTHyperlink : SilverlightHyperlink
    {
        
        public UIHttp1018211ptmsDownTHyperlink(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightHyperlink.PropertyNames.NavigationUriAsString] = "http://10.1.8.211/ptms/DownTemplate/车辆.xlsx";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new SilverlightButton(this);
                    #region 搜索条件
                    this.mUIItemButton.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemButton.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UIItemPage11 : SilverlightPage
    {
        
        public UIItemPage11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightPage.PropertyNames.Title] = "公共交通整体安全系统";
            this.SearchProperties[SilverlightPage.PropertyNames.Source] = "/SuiteInfo";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public UI安全套件Text UI安全套件Text
        {
            get
            {
                if ((this.mUI安全套件Text == null))
                {
                    this.mUI安全套件Text = new UI安全套件Text(this);
                }
                return this.mUI安全套件Text;
            }
        }
        
        public UI安全套件编号Text UI安全套件编号Text
        {
            get
            {
                if ((this.mUI安全套件编号Text == null))
                {
                    this.mUI安全套件编号Text = new UI安全套件编号Text(this);
                }
                return this.mUI安全套件编号Text;
            }
        }
        
        public UICEIEC主机号Text UICEIEC主机号Text
        {
            get
            {
                if ((this.mUICEIEC主机号Text == null))
                {
                    this.mUICEIEC主机号Text = new UICEIEC主机号Text(this);
                }
                return this.mUICEIEC主机号Text;
            }
        }
        
        public UIMDVR芯片号Text UIMDVR芯片号Text
        {
            get
            {
                if ((this.mUIMDVR芯片号Text == null))
                {
                    this.mUIMDVR芯片号Text = new UIMDVR芯片号Text(this);
                }
                return this.mUIMDVR芯片号Text;
            }
        }
        
        public UI内容Text1 UI内容Text
        {
            get
            {
                if ((this.mUI内容Text == null))
                {
                    this.mUI内容Text = new UI内容Text1(this);
                }
                return this.mUI内容Text;
            }
        }
        #endregion
        
        #region Fields
        private UI安全套件Text mUI安全套件Text;
        
        private UI安全套件编号Text mUI安全套件编号Text;
        
        private UICEIEC主机号Text mUICEIEC主机号Text;
        
        private UIMDVR芯片号Text mUIMDVR芯片号Text;
        
        private UI内容Text1 mUI内容Text;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI安全套件Text : SilverlightText
    {
        
        public UI安全套件Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "安全套件";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new SilverlightButton(this);
                    #region 搜索条件
                    this.mUIItemButton.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemButton.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI安全套件编号Text : SilverlightText
    {
        
        public UI安全套件编号Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "安全套件编号";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new SilverlightEdit(this);
                    #region 搜索条件
                    this.mUIItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemEdit.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UICEIEC主机号Text : SilverlightText
    {
        
        public UICEIEC主机号Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "CEIEC主机号";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new SilverlightEdit(this);
                    #region 搜索条件
                    this.mUIItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemEdit.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UIMDVR芯片号Text : SilverlightText
    {
        
        public UIMDVR芯片号Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "MDVR芯片号";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new SilverlightEdit(this);
                    #region 搜索条件
                    this.mUIItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemEdit.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI内容Text1 : SilverlightText
    {
        
        public UI内容Text1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "内容";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new SilverlightButton(this);
                    #region 搜索条件
                    this.mUIItemButton.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemButton.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UIItemPage12 : SilverlightPage
    {
        
        public UIItemPage12(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightPage.PropertyNames.Title] = "公共交通整体安全系统";
            this.SearchProperties[SilverlightPage.PropertyNames.Source] = "/SuiteInfo";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public UI安全套件编号Text1 UI安全套件编号Text
        {
            get
            {
                if ((this.mUI安全套件编号Text == null))
                {
                    this.mUI安全套件编号Text = new UI安全套件编号Text1(this);
                }
                return this.mUI安全套件编号Text;
            }
        }
        #endregion
        
        #region Fields
        private UI安全套件编号Text1 mUI安全套件编号Text;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI安全套件编号Text1 : SilverlightText
    {
        
        public UI安全套件编号Text1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "安全套件编号";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new SilverlightEdit(this);
                    #region 搜索条件
                    this.mUIItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemEdit.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UIItemPage13 : SilverlightPage
    {
        
        public UIItemPage13(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightPage.PropertyNames.Title] = "公共交通整体安全系统";
            this.SearchProperties[SilverlightPage.PropertyNames.Source] = "/SuiteInfo";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public UI安全套件编号Text2 UI安全套件编号Text
        {
            get
            {
                if ((this.mUI安全套件编号Text == null))
                {
                    this.mUI安全套件编号Text = new UI安全套件编号Text2(this);
                }
                return this.mUI安全套件编号Text;
            }
        }
        #endregion
        
        #region Fields
        private UI安全套件编号Text2 mUI安全套件编号Text;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI安全套件编号Text2 : SilverlightText
    {
        
        public UI安全套件编号Text2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "安全套件编号";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new SilverlightEdit(this);
                    #region 搜索条件
                    this.mUIItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemEdit.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UIItemPage14 : SilverlightPage
    {
        
        public UIItemPage14(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightPage.PropertyNames.Title] = "公共交通整体安全系统";
            this.SearchProperties[SilverlightPage.PropertyNames.Source] = "/SuiteInfo";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public UICEIEC主机号Text1 UICEIEC主机号Text
        {
            get
            {
                if ((this.mUICEIEC主机号Text == null))
                {
                    this.mUICEIEC主机号Text = new UICEIEC主机号Text1(this);
                }
                return this.mUICEIEC主机号Text;
            }
        }
        #endregion
        
        #region Fields
        private UICEIEC主机号Text1 mUICEIEC主机号Text;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UICEIEC主机号Text1 : SilverlightText
    {
        
        public UICEIEC主机号Text1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "CEIEC主机号";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new SilverlightEdit(this);
                    #region 搜索条件
                    this.mUIItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemEdit.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UIItemPage15 : SilverlightPage
    {
        
        public UIItemPage15(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightPage.PropertyNames.Title] = "公共交通整体安全系统";
            this.SearchProperties[SilverlightPage.PropertyNames.Source] = "/SuiteInfo";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public UIMDVR芯片号Text1 UIMDVR芯片号Text
        {
            get
            {
                if ((this.mUIMDVR芯片号Text == null))
                {
                    this.mUIMDVR芯片号Text = new UIMDVR芯片号Text1(this);
                }
                return this.mUIMDVR芯片号Text;
            }
        }
        #endregion
        
        #region Fields
        private UIMDVR芯片号Text1 mUIMDVR芯片号Text;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UIMDVR芯片号Text1 : SilverlightText
    {
        
        public UIMDVR芯片号Text1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "MDVR芯片号";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new SilverlightEdit(this);
                    #region 搜索条件
                    this.mUIItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemEdit.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UIItemPage16 : SilverlightPage
    {
        
        public UIItemPage16(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightPage.PropertyNames.Title] = "公共交通整体安全系统";
            this.SearchProperties[SilverlightPage.PropertyNames.Source] = "/SuiteInfo";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public UI内容Text2 UI内容Text
        {
            get
            {
                if ((this.mUI内容Text == null))
                {
                    this.mUI内容Text = new UI内容Text2(this);
                }
                return this.mUI内容Text;
            }
        }
        #endregion
        
        #region Fields
        private UI内容Text2 mUI内容Text;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI内容Text2 : SilverlightText
    {
        
        public UI内容Text2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "内容";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new SilverlightButton(this);
                    #region 搜索条件
                    this.mUIItemButton.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemButton.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UIItemPage17 : SilverlightPage
    {
        
        public UIItemPage17(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightPage.PropertyNames.Title] = "公共交通整体安全系统";
            this.SearchProperties[SilverlightPage.PropertyNames.Source] = "/SetupStation";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public UI安装点Text UI安装点Text
        {
            get
            {
                if ((this.mUI安装点Text == null))
                {
                    this.mUI安装点Text = new UI安装点Text(this);
                }
                return this.mUI安装点Text;
            }
        }
        
        public UI省份Text1 UI省份Text
        {
            get
            {
                if ((this.mUI省份Text == null))
                {
                    this.mUI省份Text = new UI省份Text1(this);
                }
                return this.mUI省份Text;
            }
        }
        
        public UI城市Text1 UI城市Text
        {
            get
            {
                if ((this.mUI城市Text == null))
                {
                    this.mUI城市Text = new UI城市Text1(this);
                }
                return this.mUI城市Text;
            }
        }
        
        public UI备注Text UI备注Text
        {
            get
            {
                if ((this.mUI备注Text == null))
                {
                    this.mUI备注Text = new UI备注Text(this);
                }
                return this.mUI备注Text;
            }
        }
        
        public UI地址Text UI地址Text
        {
            get
            {
                if ((this.mUI地址Text == null))
                {
                    this.mUI地址Text = new UI地址Text(this);
                }
                return this.mUI地址Text;
            }
        }
        
        public UI联系人Text UI联系人Text
        {
            get
            {
                if ((this.mUI联系人Text == null))
                {
                    this.mUI联系人Text = new UI联系人Text(this);
                }
                return this.mUI联系人Text;
            }
        }
        
        public UI联系电话Text UI联系电话Text
        {
            get
            {
                if ((this.mUI联系电话Text == null))
                {
                    this.mUI联系电话Text = new UI联系电话Text(this);
                }
                return this.mUI联系电话Text;
            }
        }
        #endregion
        
        #region Fields
        private UI安装点Text mUI安装点Text;
        
        private UI省份Text1 mUI省份Text;
        
        private UI城市Text1 mUI城市Text;
        
        private UI备注Text mUI备注Text;
        
        private UI地址Text mUI地址Text;
        
        private UI联系人Text mUI联系人Text;
        
        private UI联系电话Text mUI联系电话Text;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI安装点Text : SilverlightText
    {
        
        public UI安装点Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "安装点";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new SilverlightEdit(this);
                    #region 搜索条件
                    this.mUIItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemEdit.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI省份Text1 : SilverlightText
    {
        
        public UI省份Text1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "省份";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightComboBox UIGsafetyPTMSServiceReComboBox
        {
            get
            {
                if ((this.mUIGsafetyPTMSServiceReComboBox == null))
                {
                    this.mUIGsafetyPTMSServiceReComboBox = new SilverlightComboBox(this);
                    #region 搜索条件
                    this.mUIGsafetyPTMSServiceReComboBox.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIGsafetyPTMSServiceReComboBox.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIGsafetyPTMSServiceReComboBox;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightComboBox mUIGsafetyPTMSServiceReComboBox;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI城市Text1 : SilverlightText
    {
        
        public UI城市Text1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "城市";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightComboBox UIGsafetyPTMSServiceReComboBox
        {
            get
            {
                if ((this.mUIGsafetyPTMSServiceReComboBox == null))
                {
                    this.mUIGsafetyPTMSServiceReComboBox = new SilverlightComboBox(this);
                    #region 搜索条件
                    this.mUIGsafetyPTMSServiceReComboBox.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIGsafetyPTMSServiceReComboBox.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIGsafetyPTMSServiceReComboBox;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightComboBox mUIGsafetyPTMSServiceReComboBox;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI备注Text : SilverlightText
    {
        
        public UI备注Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "备注";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new SilverlightButton(this);
                    #region 搜索条件
                    this.mUIItemButton.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemButton.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI地址Text : SilverlightText
    {
        
        public UI地址Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "地址";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new SilverlightEdit(this);
                    #region 搜索条件
                    this.mUIItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemEdit.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI联系人Text : SilverlightText
    {
        
        public UI联系人Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "联系人";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new SilverlightEdit(this);
                    #region 搜索条件
                    this.mUIItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemEdit.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI联系电话Text : SilverlightText
    {
        
        public UI联系电话Text(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "联系电话";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new SilverlightEdit(this);
                    #region 搜索条件
                    this.mUIItemEdit.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemEdit.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UIItemPage18 : SilverlightPage
    {
        
        public UIItemPage18(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightPage.PropertyNames.Title] = "公共交通整体安全系统";
            this.SearchProperties[SilverlightPage.PropertyNames.Source] = "/SetupStation";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public UI省份Text2 UI省份Text
        {
            get
            {
                if ((this.mUI省份Text == null))
                {
                    this.mUI省份Text = new UI省份Text2(this);
                }
                return this.mUI省份Text;
            }
        }
        #endregion
        
        #region Fields
        private UI省份Text2 mUI省份Text;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI省份Text2 : SilverlightText
    {
        
        public UI省份Text2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "省份";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightComboBox UIGsafetyPTMSServiceReComboBox
        {
            get
            {
                if ((this.mUIGsafetyPTMSServiceReComboBox == null))
                {
                    this.mUIGsafetyPTMSServiceReComboBox = new SilverlightComboBox(this);
                    #region 搜索条件
                    this.mUIGsafetyPTMSServiceReComboBox.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIGsafetyPTMSServiceReComboBox.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIGsafetyPTMSServiceReComboBox;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightComboBox mUIGsafetyPTMSServiceReComboBox;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UIItemPage19 : SilverlightPage
    {
        
        public UIItemPage19(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightPage.PropertyNames.Title] = "公共交通整体安全系统";
            this.SearchProperties[SilverlightPage.PropertyNames.Source] = "/SetupStation";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public UI城市Text2 UI城市Text
        {
            get
            {
                if ((this.mUI城市Text == null))
                {
                    this.mUI城市Text = new UI城市Text2(this);
                }
                return this.mUI城市Text;
            }
        }
        #endregion
        
        #region Fields
        private UI城市Text2 mUI城市Text;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI城市Text2 : SilverlightText
    {
        
        public UI城市Text2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "城市";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightComboBox UIGsafetyPTMSServiceReComboBox
        {
            get
            {
                if ((this.mUIGsafetyPTMSServiceReComboBox == null))
                {
                    this.mUIGsafetyPTMSServiceReComboBox = new SilverlightComboBox(this);
                    #region 搜索条件
                    this.mUIGsafetyPTMSServiceReComboBox.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIGsafetyPTMSServiceReComboBox.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIGsafetyPTMSServiceReComboBox;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightComboBox mUIGsafetyPTMSServiceReComboBox;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UIItemPage110 : SilverlightPage
    {
        
        public UIItemPage110(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightPage.PropertyNames.Title] = "公共交通整体安全系统";
            this.SearchProperties[SilverlightPage.PropertyNames.Source] = "/SetupStation";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightControl UIItemSetupStationManage
        {
            get
            {
                if ((this.mUIItemSetupStationManage == null))
                {
                    this.mUIItemSetupStationManage = new SilverlightControl(this);
                    #region 搜索条件
                    this.mUIItemSetupStationManage.SearchProperties[UITestControl.PropertyNames.ControlType] = "SetupStationManage";
                    this.mUIItemSetupStationManage.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemSetupStationManage;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightControl mUIItemSetupStationManage;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UIItemPage111 : SilverlightPage
    {
        
        public UIItemPage111(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightPage.PropertyNames.Title] = "公共交通整体安全系统";
            this.SearchProperties[SilverlightPage.PropertyNames.Source] = "/SetupStation";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public UI备注Text1 UI备注Text
        {
            get
            {
                if ((this.mUI备注Text == null))
                {
                    this.mUI备注Text = new UI备注Text1(this);
                }
                return this.mUI备注Text;
            }
        }
        #endregion
        
        #region Fields
        private UI备注Text1 mUI备注Text;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI备注Text1 : SilverlightText
    {
        
        public UI备注Text1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[SilverlightText.PropertyNames.Name] = "备注";
            this.WindowTitles.Add("PTMS");
            #endregion
        }
        
        #region Properties
        public SilverlightButton UIItemButton
        {
            get
            {
                if ((this.mUIItemButton == null))
                {
                    this.mUIItemButton = new SilverlightButton(this);
                    #region 搜索条件
                    this.mUIItemButton.SearchConfigurations.Add(SearchConfiguration.NextSibling);
                    this.mUIItemButton.WindowTitles.Add("PTMS");
                    #endregion
                }
                return this.mUIItemButton;
            }
        }
        #endregion
        
        #region Fields
        private SilverlightButton mUIItemButton;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI提示Window : WinWindow
    {
        
        public UI提示Window()
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.Name] = "提示";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("提示");
            #endregion
        }
        
        #region Properties
        public UI确定Window UI确定Window
        {
            get
            {
                if ((this.mUI确定Window == null))
                {
                    this.mUI确定Window = new UI确定Window(this);
                }
                return this.mUI确定Window;
            }
        }
        
        public UI确定Window1 UI确定Window1
        {
            get
            {
                if ((this.mUI确定Window1 == null))
                {
                    this.mUI确定Window1 = new UI确定Window1(this);
                }
                return this.mUI确定Window1;
            }
        }
        #endregion
        
        #region Fields
        private UI确定Window mUI确定Window;
        
        private UI确定Window1 mUI确定Window1;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI确定Window : WinWindow
    {
        
        public UI确定Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("提示");
            #endregion
        }
        
        #region Properties
        public WinButton UI确定Button
        {
            get
            {
                if ((this.mUI确定Button == null))
                {
                    this.mUI确定Button = new WinButton(this);
                    #region 搜索条件
                    this.mUI确定Button.SearchProperties[WinButton.PropertyNames.Name] = "确定";
                    this.mUI确定Button.WindowTitles.Add("提示");
                    #endregion
                }
                return this.mUI确定Button;
            }
        }
        
        public WinButton UI取消Button
        {
            get
            {
                if ((this.mUI取消Button == null))
                {
                    this.mUI取消Button = new WinButton(this);
                    #region 搜索条件
                    this.mUI取消Button.SearchProperties[WinButton.PropertyNames.Name] = "取消";
                    this.mUI取消Button.WindowTitles.Add("提示");
                    #endregion
                }
                return this.mUI取消Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUI确定Button;
        
        private WinButton mUI取消Button;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI确定Window1 : WinWindow
    {
        
        public UI确定Window1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("提示");
            #endregion
        }
        
        #region Properties
        public WinButton UI确定Button
        {
            get
            {
                if ((this.mUI确定Button == null))
                {
                    this.mUI确定Button = new WinButton(this);
                    #region 搜索条件
                    this.mUI确定Button.SearchProperties[WinButton.PropertyNames.Name] = "确定";
                    this.mUI确定Button.WindowTitles.Add("提示");
                    #endregion
                }
                return this.mUI确定Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUI确定Button;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI另存为Window : WinWindow
    {
        
        public UI另存为Window()
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.Name] = "另存为";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("另存为");
            #endregion
        }
        
        #region Properties
        public UI细节窗格Pane UI细节窗格Pane
        {
            get
            {
                if ((this.mUI细节窗格Pane == null))
                {
                    this.mUI细节窗格Pane = new UI细节窗格Pane(this);
                }
                return this.mUI细节窗格Pane;
            }
        }
        
        public UI保存SWindow UI保存SWindow
        {
            get
            {
                if ((this.mUI保存SWindow == null))
                {
                    this.mUI保存SWindow = new UI保存SWindow(this);
                }
                return this.mUI保存SWindow;
            }
        }
        #endregion
        
        #region Fields
        private UI细节窗格Pane mUI细节窗格Pane;
        
        private UI保存SWindow mUI保存SWindow;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI细节窗格Pane : WinPane
    {
        
        public UI细节窗格Pane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinControl.PropertyNames.Name] = "细节窗格";
            this.WindowTitles.Add("另存为");
            #endregion
        }
        
        #region Properties
        public WinComboBox UI文件名ComboBox
        {
            get
            {
                if ((this.mUI文件名ComboBox == null))
                {
                    this.mUI文件名ComboBox = new WinComboBox(this);
                    #region 搜索条件
                    this.mUI文件名ComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "文件名:";
                    this.mUI文件名ComboBox.WindowTitles.Add("另存为");
                    #endregion
                }
                return this.mUI文件名ComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUI文件名ComboBox;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI保存SWindow : WinWindow
    {
        
        public UI保存SWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("另存为");
            #endregion
        }
        
        #region Properties
        public WinButton UI保存SButton
        {
            get
            {
                if ((this.mUI保存SButton == null))
                {
                    this.mUI保存SButton = new WinButton(this);
                    #region 搜索条件
                    this.mUI保存SButton.SearchProperties[WinButton.PropertyNames.Name] = "保存(S)";
                    this.mUI保存SButton.WindowTitles.Add("另存为");
                    #endregion
                }
                return this.mUI保存SButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUI保存SButton;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI文件下载Window : WinWindow
    {
        
        public UI文件下载Window()
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.Name] = "文件下载";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("文件下载");
            #endregion
        }
        
        #region Properties
        public UI保存SWindow1 UI保存SWindow
        {
            get
            {
                if ((this.mUI保存SWindow == null))
                {
                    this.mUI保存SWindow = new UI保存SWindow1(this);
                }
                return this.mUI保存SWindow;
            }
        }
        #endregion
        
        #region Fields
        private UI保存SWindow1 mUI保存SWindow;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI保存SWindow1 : WinWindow
    {
        
        public UI保存SWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "4427";
            this.WindowTitles.Add("文件下载");
            #endregion
        }
        
        #region Properties
        public WinButton UI保存SButton
        {
            get
            {
                if ((this.mUI保存SButton == null))
                {
                    this.mUI保存SButton = new WinButton(this);
                    #region 搜索条件
                    this.mUI保存SButton.SearchProperties[WinButton.PropertyNames.Name] = "保存(S)";
                    this.mUI保存SButton.WindowTitles.Add("文件下载");
                    #endregion
                }
                return this.mUI保存SButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUI保存SButton;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI打开Window : WinWindow
    {
        
        public UI打开Window()
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.Name] = "打开";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("打开");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UI打开OWindow UI打开OWindow
        {
            get
            {
                if ((this.mUI打开OWindow == null))
                {
                    this.mUI打开OWindow = new UI打开OWindow(this);
                }
                return this.mUI打开OWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private UI打开OWindow mUI打开OWindow;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "项目视图";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("打开");
            #endregion
        }
        
        #region Properties
        public UI车辆ListItem UI车辆ListItem
        {
            get
            {
                if ((this.mUI车辆ListItem == null))
                {
                    this.mUI车辆ListItem = new UI车辆ListItem(this);
                }
                return this.mUI车辆ListItem;
            }
        }
        #endregion
        
        #region Fields
        private UI车辆ListItem mUI车辆ListItem;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI车辆ListItem : WinListItem
    {
        
        public UI车辆ListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinListItem.PropertyNames.Name] = "车辆";
            this.WindowTitles.Add("打开");
            #endregion
        }
        
        #region Properties
        public WinEdit UI类型Edit
        {
            get
            {
                if ((this.mUI类型Edit == null))
                {
                    this.mUI类型Edit = new WinEdit(this);
                    #region 搜索条件
                    this.mUI类型Edit.SearchProperties[WinEdit.PropertyNames.Name] = "类型";
                    this.mUI类型Edit.WindowTitles.Add("打开");
                    #endregion
                }
                return this.mUI类型Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUI类型Edit;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UI打开OWindow : WinWindow
    {
        
        public UI打开OWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("打开");
            #endregion
        }
        
        #region Properties
        public WinSplitButton UI打开OSplitButton
        {
            get
            {
                if ((this.mUI打开OSplitButton == null))
                {
                    this.mUI打开OSplitButton = new WinSplitButton(this);
                    #region 搜索条件
                    this.mUI打开OSplitButton.SearchProperties[WinButton.PropertyNames.Name] = "打开(O)";
                    this.mUI打开OSplitButton.WindowTitles.Add("打开");
                    #endregion
                }
                return this.mUI打开OSplitButton;
            }
        }
        #endregion
        
        #region Fields
        private WinSplitButton mUI打开OSplitButton;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UISIMA07群3180665009Window : WinWindow
    {
        
        public UISIMA07群3180665009Window()
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.Name] = "SIMA-07 - 群(3180665009)";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("SIMA-07 - 群(3180665009)");
            #endregion
        }
        
        #region Properties
        public WinControl UISIMA07群3180665009Dialog
        {
            get
            {
                if ((this.mUISIMA07群3180665009Dialog == null))
                {
                    this.mUISIMA07群3180665009Dialog = new WinControl(this);
                    #region 搜索条件
                    this.mUISIMA07群3180665009Dialog.SearchProperties[UITestControl.PropertyNames.Name] = "SIMA-07 - 群(3180665009)";
                    this.mUISIMA07群3180665009Dialog.SearchProperties[UITestControl.PropertyNames.ControlType] = "Dialog";
                    this.mUISIMA07群3180665009Dialog.WindowTitles.Add("SIMA-07 - 群(3180665009)");
                    #endregion
                }
                return this.mUISIMA07群3180665009Dialog;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUISIMA07群3180665009Dialog;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UIPTMS开发人员工具Window : WinWindow
    {
        
        public UIPTMS开发人员工具Window()
        {
            #region 搜索条件
            this.SearchProperties[WinWindow.PropertyNames.Name] = "PTMS - 开发人员工具";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "IEDEVTOOLS";
            this.WindowTitles.Add("PTMS - 开发人员工具");
            #endregion
        }
        
        #region Properties
        public UIPTMS开发人员工具TitleBar UIPTMS开发人员工具TitleBar
        {
            get
            {
                if ((this.mUIPTMS开发人员工具TitleBar == null))
                {
                    this.mUIPTMS开发人员工具TitleBar = new UIPTMS开发人员工具TitleBar(this);
                }
                return this.mUIPTMS开发人员工具TitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIPTMS开发人员工具TitleBar mUIPTMS开发人员工具TitleBar;
        #endregion
    }
    
    [GeneratedCode("编码的 UI 测试生成器", "11.0.60315.1")]
    public class UIPTMS开发人员工具TitleBar : WinTitleBar
    {
        
        public UIPTMS开发人员工具TitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region 搜索条件
            this.WindowTitles.Add("PTMS - 开发人员工具");
            #endregion
        }
        
        #region Properties
        public WinButton UI关闭Button
        {
            get
            {
                if ((this.mUI关闭Button == null))
                {
                    this.mUI关闭Button = new WinButton(this);
                    #region 搜索条件
                    this.mUI关闭Button.SearchProperties[WinButton.PropertyNames.Name] = "关闭";
                    this.mUI关闭Button.WindowTitles.Add("PTMS - 开发人员工具");
                    #endregion
                }
                return this.mUI关闭Button;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUI关闭Button;
        #endregion
    }
}
