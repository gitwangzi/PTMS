//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace Gsafety.PTMS.ServiceReference.OrganizationService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Organization", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.BaseInformation.Contract")]
    public partial class Organization : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ClientIDField;
        
        private string ContactField;
        
        private System.DateTime CreateTimeField;
        
        private string CreatorField;
        
        private string EmailField;
        
        private string IDField;
        
        private bool IsCheckedField;
        
        private string NameField;
        
        private string ParentIDField;
        
        private string PhoneField;
        
        private decimal ValidField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIDField, value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contact {
            get {
                return this.ContactField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactField, value) != true)) {
                    this.ContactField = value;
                    this.RaisePropertyChanged("Contact");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsChecked {
            get {
                return this.IsCheckedField;
            }
            set {
                if ((this.IsCheckedField.Equals(value) != true)) {
                    this.IsCheckedField = value;
                    this.RaisePropertyChanged("IsChecked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentID {
            get {
                return this.ParentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentIDField, value) != true)) {
                    this.ParentIDField = value;
                    this.RaisePropertyChanged("ParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Valid {
            get {
                return this.ValidField;
            }
            set {
                if ((this.ValidField.Equals(value) != true)) {
                    this.ValidField = value;
                    this.RaisePropertyChanged("Valid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleMessageOfboolean", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class SingleMessageOfboolean : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private bool ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfOrganizationkkxVxFex", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfOrganizationkkxVxFex : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.OrganizationService.Organization> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.OrganizationService.Organization> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OrganizationService.IOrganization")]
    public interface IOrganization {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IOrganization/InsertOrganization", ReplyAction="http://tempuri.org/IOrganization/InsertOrganizationResponse")]
        System.IAsyncResult BeginInsertOrganization(Gsafety.PTMS.ServiceReference.OrganizationService.Organization model, string userID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.OrganizationService.SingleMessageOfboolean EndInsertOrganization(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IOrganization/UpdateOrganization", ReplyAction="http://tempuri.org/IOrganization/UpdateOrganizationResponse")]
        System.IAsyncResult BeginUpdateOrganization(Gsafety.PTMS.ServiceReference.OrganizationService.Organization model, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.OrganizationService.SingleMessageOfboolean EndUpdateOrganization(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IOrganization/DeleteOrganization", ReplyAction="http://tempuri.org/IOrganization/DeleteOrganizationResponse")]
        System.IAsyncResult BeginDeleteOrganization(string Id, string userid, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.OrganizationService.SingleMessageOfboolean EndDeleteOrganization(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IOrganization/GetOrganizationByUser", ReplyAction="http://tempuri.org/IOrganization/GetOrganizationByUserResponse")]
        System.IAsyncResult BeginGetOrganizationByUser(string userid, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.OrganizationService.MultiMessageOfOrganizationkkxVxFex EndGetOrganizationByUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IOrganization/GetAllOrganization", ReplyAction="http://tempuri.org/IOrganization/GetAllOrganizationResponse")]
        System.IAsyncResult BeginGetAllOrganization(string clientID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.OrganizationService.MultiMessageOfOrganizationkkxVxFex EndGetAllOrganization(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrganizationChannel : Gsafety.PTMS.ServiceReference.OrganizationService.IOrganization, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertOrganizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertOrganizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.OrganizationService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.OrganizationService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateOrganizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateOrganizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.OrganizationService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.OrganizationService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteOrganizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteOrganizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.OrganizationService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.OrganizationService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOrganizationByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOrganizationByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.OrganizationService.MultiMessageOfOrganizationkkxVxFex Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.OrganizationService.MultiMessageOfOrganizationkkxVxFex)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllOrganizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllOrganizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.OrganizationService.MultiMessageOfOrganizationkkxVxFex Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.OrganizationService.MultiMessageOfOrganizationkkxVxFex)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrganizationClient : System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.OrganizationService.IOrganization>, Gsafety.PTMS.ServiceReference.OrganizationService.IOrganization {
        
        private BeginOperationDelegate onBeginInsertOrganizationDelegate;
        
        private EndOperationDelegate onEndInsertOrganizationDelegate;
        
        private System.Threading.SendOrPostCallback onInsertOrganizationCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateOrganizationDelegate;
        
        private EndOperationDelegate onEndUpdateOrganizationDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateOrganizationCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteOrganizationDelegate;
        
        private EndOperationDelegate onEndDeleteOrganizationDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteOrganizationCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOrganizationByUserDelegate;
        
        private EndOperationDelegate onEndGetOrganizationByUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetOrganizationByUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllOrganizationDelegate;
        
        private EndOperationDelegate onEndGetAllOrganizationDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllOrganizationCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public OrganizationClient() {
        }
        
        public OrganizationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrganizationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrganizationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrganizationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<InsertOrganizationCompletedEventArgs> InsertOrganizationCompleted;
        
        public event System.EventHandler<UpdateOrganizationCompletedEventArgs> UpdateOrganizationCompleted;
        
        public event System.EventHandler<DeleteOrganizationCompletedEventArgs> DeleteOrganizationCompleted;
        
        public event System.EventHandler<GetOrganizationByUserCompletedEventArgs> GetOrganizationByUserCompleted;
        
        public event System.EventHandler<GetAllOrganizationCompletedEventArgs> GetAllOrganizationCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.OrganizationService.IOrganization.BeginInsertOrganization(Gsafety.PTMS.ServiceReference.OrganizationService.Organization model, string userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertOrganization(model, userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.OrganizationService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.OrganizationService.IOrganization.EndInsertOrganization(System.IAsyncResult result) {
            return base.Channel.EndInsertOrganization(result);
        }
        
        private System.IAsyncResult OnBeginInsertOrganization(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.OrganizationService.Organization model = ((Gsafety.PTMS.ServiceReference.OrganizationService.Organization)(inValues[0]));
            string userID = ((string)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.OrganizationService.IOrganization)(this)).BeginInsertOrganization(model, userID, callback, asyncState);
        }
        
        private object[] OnEndInsertOrganization(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.OrganizationService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.OrganizationService.IOrganization)(this)).EndInsertOrganization(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertOrganizationCompleted(object state) {
            if ((this.InsertOrganizationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertOrganizationCompleted(this, new InsertOrganizationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertOrganizationAsync(Gsafety.PTMS.ServiceReference.OrganizationService.Organization model, string userID) {
            this.InsertOrganizationAsync(model, userID, null);
        }
        
        public void InsertOrganizationAsync(Gsafety.PTMS.ServiceReference.OrganizationService.Organization model, string userID, object userState) {
            if ((this.onBeginInsertOrganizationDelegate == null)) {
                this.onBeginInsertOrganizationDelegate = new BeginOperationDelegate(this.OnBeginInsertOrganization);
            }
            if ((this.onEndInsertOrganizationDelegate == null)) {
                this.onEndInsertOrganizationDelegate = new EndOperationDelegate(this.OnEndInsertOrganization);
            }
            if ((this.onInsertOrganizationCompletedDelegate == null)) {
                this.onInsertOrganizationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertOrganizationCompleted);
            }
            base.InvokeAsync(this.onBeginInsertOrganizationDelegate, new object[] {
                        model,
                        userID}, this.onEndInsertOrganizationDelegate, this.onInsertOrganizationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.OrganizationService.IOrganization.BeginUpdateOrganization(Gsafety.PTMS.ServiceReference.OrganizationService.Organization model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateOrganization(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.OrganizationService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.OrganizationService.IOrganization.EndUpdateOrganization(System.IAsyncResult result) {
            return base.Channel.EndUpdateOrganization(result);
        }
        
        private System.IAsyncResult OnBeginUpdateOrganization(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.OrganizationService.Organization model = ((Gsafety.PTMS.ServiceReference.OrganizationService.Organization)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.OrganizationService.IOrganization)(this)).BeginUpdateOrganization(model, callback, asyncState);
        }
        
        private object[] OnEndUpdateOrganization(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.OrganizationService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.OrganizationService.IOrganization)(this)).EndUpdateOrganization(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateOrganizationCompleted(object state) {
            if ((this.UpdateOrganizationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateOrganizationCompleted(this, new UpdateOrganizationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateOrganizationAsync(Gsafety.PTMS.ServiceReference.OrganizationService.Organization model) {
            this.UpdateOrganizationAsync(model, null);
        }
        
        public void UpdateOrganizationAsync(Gsafety.PTMS.ServiceReference.OrganizationService.Organization model, object userState) {
            if ((this.onBeginUpdateOrganizationDelegate == null)) {
                this.onBeginUpdateOrganizationDelegate = new BeginOperationDelegate(this.OnBeginUpdateOrganization);
            }
            if ((this.onEndUpdateOrganizationDelegate == null)) {
                this.onEndUpdateOrganizationDelegate = new EndOperationDelegate(this.OnEndUpdateOrganization);
            }
            if ((this.onUpdateOrganizationCompletedDelegate == null)) {
                this.onUpdateOrganizationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateOrganizationCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateOrganizationDelegate, new object[] {
                        model}, this.onEndUpdateOrganizationDelegate, this.onUpdateOrganizationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.OrganizationService.IOrganization.BeginDeleteOrganization(string Id, string userid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteOrganization(Id, userid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.OrganizationService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.OrganizationService.IOrganization.EndDeleteOrganization(System.IAsyncResult result) {
            return base.Channel.EndDeleteOrganization(result);
        }
        
        private System.IAsyncResult OnBeginDeleteOrganization(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Id = ((string)(inValues[0]));
            string userid = ((string)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.OrganizationService.IOrganization)(this)).BeginDeleteOrganization(Id, userid, callback, asyncState);
        }
        
        private object[] OnEndDeleteOrganization(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.OrganizationService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.OrganizationService.IOrganization)(this)).EndDeleteOrganization(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteOrganizationCompleted(object state) {
            if ((this.DeleteOrganizationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteOrganizationCompleted(this, new DeleteOrganizationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteOrganizationAsync(string Id, string userid) {
            this.DeleteOrganizationAsync(Id, userid, null);
        }
        
        public void DeleteOrganizationAsync(string Id, string userid, object userState) {
            if ((this.onBeginDeleteOrganizationDelegate == null)) {
                this.onBeginDeleteOrganizationDelegate = new BeginOperationDelegate(this.OnBeginDeleteOrganization);
            }
            if ((this.onEndDeleteOrganizationDelegate == null)) {
                this.onEndDeleteOrganizationDelegate = new EndOperationDelegate(this.OnEndDeleteOrganization);
            }
            if ((this.onDeleteOrganizationCompletedDelegate == null)) {
                this.onDeleteOrganizationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteOrganizationCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteOrganizationDelegate, new object[] {
                        Id,
                        userid}, this.onEndDeleteOrganizationDelegate, this.onDeleteOrganizationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.OrganizationService.IOrganization.BeginGetOrganizationByUser(string userid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOrganizationByUser(userid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.OrganizationService.MultiMessageOfOrganizationkkxVxFex Gsafety.PTMS.ServiceReference.OrganizationService.IOrganization.EndGetOrganizationByUser(System.IAsyncResult result) {
            return base.Channel.EndGetOrganizationByUser(result);
        }
        
        private System.IAsyncResult OnBeginGetOrganizationByUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userid = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.OrganizationService.IOrganization)(this)).BeginGetOrganizationByUser(userid, callback, asyncState);
        }
        
        private object[] OnEndGetOrganizationByUser(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.OrganizationService.MultiMessageOfOrganizationkkxVxFex retVal = ((Gsafety.PTMS.ServiceReference.OrganizationService.IOrganization)(this)).EndGetOrganizationByUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOrganizationByUserCompleted(object state) {
            if ((this.GetOrganizationByUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOrganizationByUserCompleted(this, new GetOrganizationByUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOrganizationByUserAsync(string userid) {
            this.GetOrganizationByUserAsync(userid, null);
        }
        
        public void GetOrganizationByUserAsync(string userid, object userState) {
            if ((this.onBeginGetOrganizationByUserDelegate == null)) {
                this.onBeginGetOrganizationByUserDelegate = new BeginOperationDelegate(this.OnBeginGetOrganizationByUser);
            }
            if ((this.onEndGetOrganizationByUserDelegate == null)) {
                this.onEndGetOrganizationByUserDelegate = new EndOperationDelegate(this.OnEndGetOrganizationByUser);
            }
            if ((this.onGetOrganizationByUserCompletedDelegate == null)) {
                this.onGetOrganizationByUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOrganizationByUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetOrganizationByUserDelegate, new object[] {
                        userid}, this.onEndGetOrganizationByUserDelegate, this.onGetOrganizationByUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.OrganizationService.IOrganization.BeginGetAllOrganization(string clientID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllOrganization(clientID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.OrganizationService.MultiMessageOfOrganizationkkxVxFex Gsafety.PTMS.ServiceReference.OrganizationService.IOrganization.EndGetAllOrganization(System.IAsyncResult result) {
            return base.Channel.EndGetAllOrganization(result);
        }
        
        private System.IAsyncResult OnBeginGetAllOrganization(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.OrganizationService.IOrganization)(this)).BeginGetAllOrganization(clientID, callback, asyncState);
        }
        
        private object[] OnEndGetAllOrganization(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.OrganizationService.MultiMessageOfOrganizationkkxVxFex retVal = ((Gsafety.PTMS.ServiceReference.OrganizationService.IOrganization)(this)).EndGetAllOrganization(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllOrganizationCompleted(object state) {
            if ((this.GetAllOrganizationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllOrganizationCompleted(this, new GetAllOrganizationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllOrganizationAsync(string clientID) {
            this.GetAllOrganizationAsync(clientID, null);
        }
        
        public void GetAllOrganizationAsync(string clientID, object userState) {
            if ((this.onBeginGetAllOrganizationDelegate == null)) {
                this.onBeginGetAllOrganizationDelegate = new BeginOperationDelegate(this.OnBeginGetAllOrganization);
            }
            if ((this.onEndGetAllOrganizationDelegate == null)) {
                this.onEndGetAllOrganizationDelegate = new EndOperationDelegate(this.OnEndGetAllOrganization);
            }
            if ((this.onGetAllOrganizationCompletedDelegate == null)) {
                this.onGetAllOrganizationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllOrganizationCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllOrganizationDelegate, new object[] {
                        clientID}, this.onEndGetAllOrganizationDelegate, this.onGetAllOrganizationCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Gsafety.PTMS.ServiceReference.OrganizationService.IOrganization CreateChannel() {
            return new OrganizationClientChannel(this);
        }
        
        private class OrganizationClientChannel : ChannelBase<Gsafety.PTMS.ServiceReference.OrganizationService.IOrganization>, Gsafety.PTMS.ServiceReference.OrganizationService.IOrganization {
            
            public OrganizationClientChannel(System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.OrganizationService.IOrganization> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginInsertOrganization(Gsafety.PTMS.ServiceReference.OrganizationService.Organization model, string userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = model;
                _args[1] = userID;
                System.IAsyncResult _result = base.BeginInvoke("InsertOrganization", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.OrganizationService.SingleMessageOfboolean EndInsertOrganization(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.OrganizationService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.OrganizationService.SingleMessageOfboolean)(base.EndInvoke("InsertOrganization", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateOrganization(Gsafety.PTMS.ServiceReference.OrganizationService.Organization model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("UpdateOrganization", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.OrganizationService.SingleMessageOfboolean EndUpdateOrganization(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.OrganizationService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.OrganizationService.SingleMessageOfboolean)(base.EndInvoke("UpdateOrganization", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteOrganization(string Id, string userid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = Id;
                _args[1] = userid;
                System.IAsyncResult _result = base.BeginInvoke("DeleteOrganization", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.OrganizationService.SingleMessageOfboolean EndDeleteOrganization(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.OrganizationService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.OrganizationService.SingleMessageOfboolean)(base.EndInvoke("DeleteOrganization", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetOrganizationByUser(string userid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userid;
                System.IAsyncResult _result = base.BeginInvoke("GetOrganizationByUser", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.OrganizationService.MultiMessageOfOrganizationkkxVxFex EndGetOrganizationByUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.OrganizationService.MultiMessageOfOrganizationkkxVxFex _result = ((Gsafety.PTMS.ServiceReference.OrganizationService.MultiMessageOfOrganizationkkxVxFex)(base.EndInvoke("GetOrganizationByUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllOrganization(string clientID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = clientID;
                System.IAsyncResult _result = base.BeginInvoke("GetAllOrganization", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.OrganizationService.MultiMessageOfOrganizationkkxVxFex EndGetAllOrganization(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.OrganizationService.MultiMessageOfOrganizationkkxVxFex _result = ((Gsafety.PTMS.ServiceReference.OrganizationService.MultiMessageOfOrganizationkkxVxFex)(base.EndInvoke("GetAllOrganization", _args, result)));
                return _result;
            }
        }
    }
}
