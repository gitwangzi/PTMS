//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace Gsafety.PTMS.ServiceReference.ADUserInfoService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ADAccountInfo", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Manager.Contract.Data")]
    public partial class ADAccountInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AddressField;
        
        private string CityCodeField;
        
        private string CityNameField;
        
        private string CompanyField;
        
        private string DescriptionField;
        
        private string DisplayNameField;
        
        private string EmailField;
        
        private string FaxField;
        
        private int LevelField;
        
        private string ManagedRegionCodeField;
        
        private string OrgCodeField;
        
        private string OrgNameField;
        
        private string PhoneField;
        
        private string PostalCodeField;
        
        private string ProvinceCodeField;
        
        private string ProvinceNameField;
        
        private string SecurityGroupField;
        
        private Gsafety.PTMS.ServiceReference.ADUserInfoService.UserInfoMessageHeader UserInfoField;
        
        private string UserLoginNameField;
        
        private string UserNameField;
        
        private string UserPasswordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityCode {
            get {
                return this.CityCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CityCodeField, value) != true)) {
                    this.CityCodeField = value;
                    this.RaisePropertyChanged("CityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CityName {
            get {
                return this.CityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CityNameField, value) != true)) {
                    this.CityNameField = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayName {
            get {
                return this.DisplayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayNameField, value) != true)) {
                    this.DisplayNameField = value;
                    this.RaisePropertyChanged("DisplayName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Level {
            get {
                return this.LevelField;
            }
            set {
                if ((this.LevelField.Equals(value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManagedRegionCode {
            get {
                return this.ManagedRegionCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagedRegionCodeField, value) != true)) {
                    this.ManagedRegionCodeField = value;
                    this.RaisePropertyChanged("ManagedRegionCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrgCode {
            get {
                return this.OrgCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrgCodeField, value) != true)) {
                    this.OrgCodeField = value;
                    this.RaisePropertyChanged("OrgCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrgName {
            get {
                return this.OrgNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OrgNameField, value) != true)) {
                    this.OrgNameField = value;
                    this.RaisePropertyChanged("OrgName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProvinceCode {
            get {
                return this.ProvinceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceCodeField, value) != true)) {
                    this.ProvinceCodeField = value;
                    this.RaisePropertyChanged("ProvinceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProvinceName {
            get {
                return this.ProvinceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceNameField, value) != true)) {
                    this.ProvinceNameField = value;
                    this.RaisePropertyChanged("ProvinceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityGroup {
            get {
                return this.SecurityGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityGroupField, value) != true)) {
                    this.SecurityGroupField = value;
                    this.RaisePropertyChanged("SecurityGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.ADUserInfoService.UserInfoMessageHeader UserInfo {
            get {
                return this.UserInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.UserInfoField, value) != true)) {
                    this.UserInfoField = value;
                    this.RaisePropertyChanged("UserInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserLoginName {
            get {
                return this.UserLoginNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserLoginNameField, value) != true)) {
                    this.UserLoginNameField = value;
                    this.RaisePropertyChanged("UserLoginName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserPassword {
            get {
                return this.UserPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.UserPasswordField, value) != true)) {
                    this.UserPasswordField = value;
                    this.RaisePropertyChanged("UserPassword");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfoMessageHeader", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class UserInfoMessageHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CityField;
        
        private string CompanyIdField;
        
        private string CompanyNameField;
        
        private string GroupField;
        
        private int LevelField;
        
        private string PasswordField;
        
        private string ProvinceField;
        
        private string RegionField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyId {
            get {
                return this.CompanyIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyIdField, value) != true)) {
                    this.CompanyIdField = value;
                    this.RaisePropertyChanged("CompanyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Group {
            get {
                return this.GroupField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupField, value) != true)) {
                    this.GroupField = value;
                    this.RaisePropertyChanged("Group");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Level {
            get {
                return this.LevelField;
            }
            set {
                if ((this.LevelField.Equals(value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Province {
            get {
                return this.ProvinceField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceField, value) != true)) {
                    this.ProvinceField = value;
                    this.RaisePropertyChanged("Province");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleMessageOfboolean", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class SingleMessageOfboolean : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private bool ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleMessageOfADAccountInfo7ZhGgAvu", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class SingleMessageOfADAccountInfo7ZhGgAvu : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private Gsafety.PTMS.ServiceReference.ADUserInfoService.ADAccountInfo ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.ADUserInfoService.ADAccountInfo Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ADUserInfoService.IADAccountService")]
    public interface IADAccountService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IADAccountService/AddAccount", ReplyAction="http://tempuri.org/IADAccountService/AddAccountResponse")]
        System.IAsyncResult BeginAddAccount(Gsafety.PTMS.ServiceReference.ADUserInfoService.ADAccountInfo account, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean EndAddAccount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IADAccountService/UpdateAccount", ReplyAction="http://tempuri.org/IADAccountService/UpdateAccountResponse")]
        System.IAsyncResult BeginUpdateAccount(Gsafety.PTMS.ServiceReference.ADUserInfoService.ADAccountInfo account, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean EndUpdateAccount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IADAccountService/DeleteAccount", ReplyAction="http://tempuri.org/IADAccountService/DeleteAccountResponse")]
        System.IAsyncResult BeginDeleteAccount(string accountName, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean EndDeleteAccount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IADAccountService/GetAccount", ReplyAction="http://tempuri.org/IADAccountService/GetAccountResponse")]
        System.IAsyncResult BeginGetAccount(string accountName, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfADAccountInfo7ZhGgAvu EndGetAccount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IADAccountService/ValidateUser", ReplyAction="http://tempuri.org/IADAccountService/ValidateUserResponse")]
        System.IAsyncResult BeginValidateUser(string accountName, string password, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfADAccountInfo7ZhGgAvu EndValidateUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IADAccountService/IsUserExits", ReplyAction="http://tempuri.org/IADAccountService/IsUserExitsResponse")]
        System.IAsyncResult BeginIsUserExits(string accountName, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean EndIsUserExits(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IADAccountService/EnableAccount", ReplyAction="http://tempuri.org/IADAccountService/EnableAccountResponse")]
        System.IAsyncResult BeginEnableAccount(string accountName, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean EndEnableAccount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IADAccountService/DisableAccount", ReplyAction="http://tempuri.org/IADAccountService/DisableAccountResponse")]
        System.IAsyncResult BeginDisableAccount(string accountName, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean EndDisableAccount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IADAccountService/ResetPassword", ReplyAction="http://tempuri.org/IADAccountService/ResetPasswordResponse")]
        System.IAsyncResult BeginResetPassword(string accountName, string password, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean EndResetPassword(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IADAccountServiceChannel : Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfADAccountInfo7ZhGgAvu Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfADAccountInfo7ZhGgAvu)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValidateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ValidateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfADAccountInfo7ZhGgAvu Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfADAccountInfo7ZhGgAvu)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class IsUserExitsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public IsUserExitsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnableAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EnableAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DisableAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DisableAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ResetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ResetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ADAccountServiceClient : System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService>, Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService {
        
        private BeginOperationDelegate onBeginAddAccountDelegate;
        
        private EndOperationDelegate onEndAddAccountDelegate;
        
        private System.Threading.SendOrPostCallback onAddAccountCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateAccountDelegate;
        
        private EndOperationDelegate onEndUpdateAccountDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateAccountCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteAccountDelegate;
        
        private EndOperationDelegate onEndDeleteAccountDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteAccountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAccountDelegate;
        
        private EndOperationDelegate onEndGetAccountDelegate;
        
        private System.Threading.SendOrPostCallback onGetAccountCompletedDelegate;
        
        private BeginOperationDelegate onBeginValidateUserDelegate;
        
        private EndOperationDelegate onEndValidateUserDelegate;
        
        private System.Threading.SendOrPostCallback onValidateUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsUserExitsDelegate;
        
        private EndOperationDelegate onEndIsUserExitsDelegate;
        
        private System.Threading.SendOrPostCallback onIsUserExitsCompletedDelegate;
        
        private BeginOperationDelegate onBeginEnableAccountDelegate;
        
        private EndOperationDelegate onEndEnableAccountDelegate;
        
        private System.Threading.SendOrPostCallback onEnableAccountCompletedDelegate;
        
        private BeginOperationDelegate onBeginDisableAccountDelegate;
        
        private EndOperationDelegate onEndDisableAccountDelegate;
        
        private System.Threading.SendOrPostCallback onDisableAccountCompletedDelegate;
        
        private BeginOperationDelegate onBeginResetPasswordDelegate;
        
        private EndOperationDelegate onEndResetPasswordDelegate;
        
        private System.Threading.SendOrPostCallback onResetPasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ADAccountServiceClient() {
        }
        
        public ADAccountServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ADAccountServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ADAccountServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ADAccountServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<AddAccountCompletedEventArgs> AddAccountCompleted;
        
        public event System.EventHandler<UpdateAccountCompletedEventArgs> UpdateAccountCompleted;
        
        public event System.EventHandler<DeleteAccountCompletedEventArgs> DeleteAccountCompleted;
        
        public event System.EventHandler<GetAccountCompletedEventArgs> GetAccountCompleted;
        
        public event System.EventHandler<ValidateUserCompletedEventArgs> ValidateUserCompleted;
        
        public event System.EventHandler<IsUserExitsCompletedEventArgs> IsUserExitsCompleted;
        
        public event System.EventHandler<EnableAccountCompletedEventArgs> EnableAccountCompleted;
        
        public event System.EventHandler<DisableAccountCompletedEventArgs> DisableAccountCompleted;
        
        public event System.EventHandler<ResetPasswordCompletedEventArgs> ResetPasswordCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService.BeginAddAccount(Gsafety.PTMS.ServiceReference.ADUserInfoService.ADAccountInfo account, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddAccount(account, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService.EndAddAccount(System.IAsyncResult result) {
            return base.Channel.EndAddAccount(result);
        }
        
        private System.IAsyncResult OnBeginAddAccount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.ADUserInfoService.ADAccountInfo account = ((Gsafety.PTMS.ServiceReference.ADUserInfoService.ADAccountInfo)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService)(this)).BeginAddAccount(account, callback, asyncState);
        }
        
        private object[] OnEndAddAccount(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService)(this)).EndAddAccount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddAccountCompleted(object state) {
            if ((this.AddAccountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddAccountCompleted(this, new AddAccountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddAccountAsync(Gsafety.PTMS.ServiceReference.ADUserInfoService.ADAccountInfo account) {
            this.AddAccountAsync(account, null);
        }
        
        public void AddAccountAsync(Gsafety.PTMS.ServiceReference.ADUserInfoService.ADAccountInfo account, object userState) {
            if ((this.onBeginAddAccountDelegate == null)) {
                this.onBeginAddAccountDelegate = new BeginOperationDelegate(this.OnBeginAddAccount);
            }
            if ((this.onEndAddAccountDelegate == null)) {
                this.onEndAddAccountDelegate = new EndOperationDelegate(this.OnEndAddAccount);
            }
            if ((this.onAddAccountCompletedDelegate == null)) {
                this.onAddAccountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddAccountCompleted);
            }
            base.InvokeAsync(this.onBeginAddAccountDelegate, new object[] {
                        account}, this.onEndAddAccountDelegate, this.onAddAccountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService.BeginUpdateAccount(Gsafety.PTMS.ServiceReference.ADUserInfoService.ADAccountInfo account, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateAccount(account, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService.EndUpdateAccount(System.IAsyncResult result) {
            return base.Channel.EndUpdateAccount(result);
        }
        
        private System.IAsyncResult OnBeginUpdateAccount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.ADUserInfoService.ADAccountInfo account = ((Gsafety.PTMS.ServiceReference.ADUserInfoService.ADAccountInfo)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService)(this)).BeginUpdateAccount(account, callback, asyncState);
        }
        
        private object[] OnEndUpdateAccount(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService)(this)).EndUpdateAccount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateAccountCompleted(object state) {
            if ((this.UpdateAccountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateAccountCompleted(this, new UpdateAccountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateAccountAsync(Gsafety.PTMS.ServiceReference.ADUserInfoService.ADAccountInfo account) {
            this.UpdateAccountAsync(account, null);
        }
        
        public void UpdateAccountAsync(Gsafety.PTMS.ServiceReference.ADUserInfoService.ADAccountInfo account, object userState) {
            if ((this.onBeginUpdateAccountDelegate == null)) {
                this.onBeginUpdateAccountDelegate = new BeginOperationDelegate(this.OnBeginUpdateAccount);
            }
            if ((this.onEndUpdateAccountDelegate == null)) {
                this.onEndUpdateAccountDelegate = new EndOperationDelegate(this.OnEndUpdateAccount);
            }
            if ((this.onUpdateAccountCompletedDelegate == null)) {
                this.onUpdateAccountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateAccountCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateAccountDelegate, new object[] {
                        account}, this.onEndUpdateAccountDelegate, this.onUpdateAccountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService.BeginDeleteAccount(string accountName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteAccount(accountName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService.EndDeleteAccount(System.IAsyncResult result) {
            return base.Channel.EndDeleteAccount(result);
        }
        
        private System.IAsyncResult OnBeginDeleteAccount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string accountName = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService)(this)).BeginDeleteAccount(accountName, callback, asyncState);
        }
        
        private object[] OnEndDeleteAccount(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService)(this)).EndDeleteAccount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteAccountCompleted(object state) {
            if ((this.DeleteAccountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteAccountCompleted(this, new DeleteAccountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAccountAsync(string accountName) {
            this.DeleteAccountAsync(accountName, null);
        }
        
        public void DeleteAccountAsync(string accountName, object userState) {
            if ((this.onBeginDeleteAccountDelegate == null)) {
                this.onBeginDeleteAccountDelegate = new BeginOperationDelegate(this.OnBeginDeleteAccount);
            }
            if ((this.onEndDeleteAccountDelegate == null)) {
                this.onEndDeleteAccountDelegate = new EndOperationDelegate(this.OnEndDeleteAccount);
            }
            if ((this.onDeleteAccountCompletedDelegate == null)) {
                this.onDeleteAccountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteAccountCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteAccountDelegate, new object[] {
                        accountName}, this.onEndDeleteAccountDelegate, this.onDeleteAccountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService.BeginGetAccount(string accountName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAccount(accountName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfADAccountInfo7ZhGgAvu Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService.EndGetAccount(System.IAsyncResult result) {
            return base.Channel.EndGetAccount(result);
        }
        
        private System.IAsyncResult OnBeginGetAccount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string accountName = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService)(this)).BeginGetAccount(accountName, callback, asyncState);
        }
        
        private object[] OnEndGetAccount(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfADAccountInfo7ZhGgAvu retVal = ((Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService)(this)).EndGetAccount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAccountCompleted(object state) {
            if ((this.GetAccountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAccountCompleted(this, new GetAccountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAccountAsync(string accountName) {
            this.GetAccountAsync(accountName, null);
        }
        
        public void GetAccountAsync(string accountName, object userState) {
            if ((this.onBeginGetAccountDelegate == null)) {
                this.onBeginGetAccountDelegate = new BeginOperationDelegate(this.OnBeginGetAccount);
            }
            if ((this.onEndGetAccountDelegate == null)) {
                this.onEndGetAccountDelegate = new EndOperationDelegate(this.OnEndGetAccount);
            }
            if ((this.onGetAccountCompletedDelegate == null)) {
                this.onGetAccountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAccountCompleted);
            }
            base.InvokeAsync(this.onBeginGetAccountDelegate, new object[] {
                        accountName}, this.onEndGetAccountDelegate, this.onGetAccountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService.BeginValidateUser(string accountName, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValidateUser(accountName, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfADAccountInfo7ZhGgAvu Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService.EndValidateUser(System.IAsyncResult result) {
            return base.Channel.EndValidateUser(result);
        }
        
        private System.IAsyncResult OnBeginValidateUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string accountName = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService)(this)).BeginValidateUser(accountName, password, callback, asyncState);
        }
        
        private object[] OnEndValidateUser(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfADAccountInfo7ZhGgAvu retVal = ((Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService)(this)).EndValidateUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnValidateUserCompleted(object state) {
            if ((this.ValidateUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateUserCompleted(this, new ValidateUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValidateUserAsync(string accountName, string password) {
            this.ValidateUserAsync(accountName, password, null);
        }
        
        public void ValidateUserAsync(string accountName, string password, object userState) {
            if ((this.onBeginValidateUserDelegate == null)) {
                this.onBeginValidateUserDelegate = new BeginOperationDelegate(this.OnBeginValidateUser);
            }
            if ((this.onEndValidateUserDelegate == null)) {
                this.onEndValidateUserDelegate = new EndOperationDelegate(this.OnEndValidateUser);
            }
            if ((this.onValidateUserCompletedDelegate == null)) {
                this.onValidateUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateUserCompleted);
            }
            base.InvokeAsync(this.onBeginValidateUserDelegate, new object[] {
                        accountName,
                        password}, this.onEndValidateUserDelegate, this.onValidateUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService.BeginIsUserExits(string accountName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsUserExits(accountName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService.EndIsUserExits(System.IAsyncResult result) {
            return base.Channel.EndIsUserExits(result);
        }
        
        private System.IAsyncResult OnBeginIsUserExits(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string accountName = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService)(this)).BeginIsUserExits(accountName, callback, asyncState);
        }
        
        private object[] OnEndIsUserExits(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService)(this)).EndIsUserExits(result);
            return new object[] {
                    retVal};
        }
        
        private void OnIsUserExitsCompleted(object state) {
            if ((this.IsUserExitsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsUserExitsCompleted(this, new IsUserExitsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsUserExitsAsync(string accountName) {
            this.IsUserExitsAsync(accountName, null);
        }
        
        public void IsUserExitsAsync(string accountName, object userState) {
            if ((this.onBeginIsUserExitsDelegate == null)) {
                this.onBeginIsUserExitsDelegate = new BeginOperationDelegate(this.OnBeginIsUserExits);
            }
            if ((this.onEndIsUserExitsDelegate == null)) {
                this.onEndIsUserExitsDelegate = new EndOperationDelegate(this.OnEndIsUserExits);
            }
            if ((this.onIsUserExitsCompletedDelegate == null)) {
                this.onIsUserExitsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsUserExitsCompleted);
            }
            base.InvokeAsync(this.onBeginIsUserExitsDelegate, new object[] {
                        accountName}, this.onEndIsUserExitsDelegate, this.onIsUserExitsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService.BeginEnableAccount(string accountName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEnableAccount(accountName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService.EndEnableAccount(System.IAsyncResult result) {
            return base.Channel.EndEnableAccount(result);
        }
        
        private System.IAsyncResult OnBeginEnableAccount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string accountName = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService)(this)).BeginEnableAccount(accountName, callback, asyncState);
        }
        
        private object[] OnEndEnableAccount(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService)(this)).EndEnableAccount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEnableAccountCompleted(object state) {
            if ((this.EnableAccountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EnableAccountCompleted(this, new EnableAccountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EnableAccountAsync(string accountName) {
            this.EnableAccountAsync(accountName, null);
        }
        
        public void EnableAccountAsync(string accountName, object userState) {
            if ((this.onBeginEnableAccountDelegate == null)) {
                this.onBeginEnableAccountDelegate = new BeginOperationDelegate(this.OnBeginEnableAccount);
            }
            if ((this.onEndEnableAccountDelegate == null)) {
                this.onEndEnableAccountDelegate = new EndOperationDelegate(this.OnEndEnableAccount);
            }
            if ((this.onEnableAccountCompletedDelegate == null)) {
                this.onEnableAccountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEnableAccountCompleted);
            }
            base.InvokeAsync(this.onBeginEnableAccountDelegate, new object[] {
                        accountName}, this.onEndEnableAccountDelegate, this.onEnableAccountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService.BeginDisableAccount(string accountName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDisableAccount(accountName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService.EndDisableAccount(System.IAsyncResult result) {
            return base.Channel.EndDisableAccount(result);
        }
        
        private System.IAsyncResult OnBeginDisableAccount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string accountName = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService)(this)).BeginDisableAccount(accountName, callback, asyncState);
        }
        
        private object[] OnEndDisableAccount(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService)(this)).EndDisableAccount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDisableAccountCompleted(object state) {
            if ((this.DisableAccountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DisableAccountCompleted(this, new DisableAccountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DisableAccountAsync(string accountName) {
            this.DisableAccountAsync(accountName, null);
        }
        
        public void DisableAccountAsync(string accountName, object userState) {
            if ((this.onBeginDisableAccountDelegate == null)) {
                this.onBeginDisableAccountDelegate = new BeginOperationDelegate(this.OnBeginDisableAccount);
            }
            if ((this.onEndDisableAccountDelegate == null)) {
                this.onEndDisableAccountDelegate = new EndOperationDelegate(this.OnEndDisableAccount);
            }
            if ((this.onDisableAccountCompletedDelegate == null)) {
                this.onDisableAccountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDisableAccountCompleted);
            }
            base.InvokeAsync(this.onBeginDisableAccountDelegate, new object[] {
                        accountName}, this.onEndDisableAccountDelegate, this.onDisableAccountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService.BeginResetPassword(string accountName, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginResetPassword(accountName, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService.EndResetPassword(System.IAsyncResult result) {
            return base.Channel.EndResetPassword(result);
        }
        
        private System.IAsyncResult OnBeginResetPassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string accountName = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService)(this)).BeginResetPassword(accountName, password, callback, asyncState);
        }
        
        private object[] OnEndResetPassword(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService)(this)).EndResetPassword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnResetPasswordCompleted(object state) {
            if ((this.ResetPasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ResetPasswordCompleted(this, new ResetPasswordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ResetPasswordAsync(string accountName, string password) {
            this.ResetPasswordAsync(accountName, password, null);
        }
        
        public void ResetPasswordAsync(string accountName, string password, object userState) {
            if ((this.onBeginResetPasswordDelegate == null)) {
                this.onBeginResetPasswordDelegate = new BeginOperationDelegate(this.OnBeginResetPassword);
            }
            if ((this.onEndResetPasswordDelegate == null)) {
                this.onEndResetPasswordDelegate = new EndOperationDelegate(this.OnEndResetPassword);
            }
            if ((this.onResetPasswordCompletedDelegate == null)) {
                this.onResetPasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnResetPasswordCompleted);
            }
            base.InvokeAsync(this.onBeginResetPasswordDelegate, new object[] {
                        accountName,
                        password}, this.onEndResetPasswordDelegate, this.onResetPasswordCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService CreateChannel() {
            return new ADAccountServiceClientChannel(this);
        }
        
        private class ADAccountServiceClientChannel : ChannelBase<Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService>, Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService {
            
            public ADAccountServiceClientChannel(System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.ADUserInfoService.IADAccountService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginAddAccount(Gsafety.PTMS.ServiceReference.ADUserInfoService.ADAccountInfo account, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = account;
                System.IAsyncResult _result = base.BeginInvoke("AddAccount", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean EndAddAccount(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean)(base.EndInvoke("AddAccount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateAccount(Gsafety.PTMS.ServiceReference.ADUserInfoService.ADAccountInfo account, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = account;
                System.IAsyncResult _result = base.BeginInvoke("UpdateAccount", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean EndUpdateAccount(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean)(base.EndInvoke("UpdateAccount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteAccount(string accountName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = accountName;
                System.IAsyncResult _result = base.BeginInvoke("DeleteAccount", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean EndDeleteAccount(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean)(base.EndInvoke("DeleteAccount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAccount(string accountName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = accountName;
                System.IAsyncResult _result = base.BeginInvoke("GetAccount", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfADAccountInfo7ZhGgAvu EndGetAccount(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfADAccountInfo7ZhGgAvu _result = ((Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfADAccountInfo7ZhGgAvu)(base.EndInvoke("GetAccount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginValidateUser(string accountName, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = accountName;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("ValidateUser", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfADAccountInfo7ZhGgAvu EndValidateUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfADAccountInfo7ZhGgAvu _result = ((Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfADAccountInfo7ZhGgAvu)(base.EndInvoke("ValidateUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginIsUserExits(string accountName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = accountName;
                System.IAsyncResult _result = base.BeginInvoke("IsUserExits", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean EndIsUserExits(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean)(base.EndInvoke("IsUserExits", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEnableAccount(string accountName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = accountName;
                System.IAsyncResult _result = base.BeginInvoke("EnableAccount", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean EndEnableAccount(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean)(base.EndInvoke("EnableAccount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDisableAccount(string accountName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = accountName;
                System.IAsyncResult _result = base.BeginInvoke("DisableAccount", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean EndDisableAccount(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean)(base.EndInvoke("DisableAccount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginResetPassword(string accountName, string password, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = accountName;
                _args[1] = password;
                System.IAsyncResult _result = base.BeginInvoke("ResetPassword", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean EndResetPassword(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.ADUserInfoService.SingleMessageOfboolean)(base.EndInvoke("ResetPassword", _args, result)));
                return _result;
            }
        }
    }
}
