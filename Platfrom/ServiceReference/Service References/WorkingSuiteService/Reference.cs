//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace Gsafety.PTMS.ServiceReference.WorkingSuiteService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkingSuite", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.SecuritySuite.Contract")]
    public partial class WorkingSuite : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AbnormalCauseField;
        
        private System.Nullable<System.DateTime> FaultTimeField;
        
        private string IdField;
        
        private string MdvrCoreIdField;
        
        private System.Nullable<int> OnlineFlagField;
        
        private System.Nullable<int> StatusField;
        
        private string SuiteIdField;
        
        private System.Nullable<System.DateTime> SwitchTimeField;
        
        private string VehicleIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AbnormalCause {
            get {
                return this.AbnormalCauseField;
            }
            set {
                if ((object.ReferenceEquals(this.AbnormalCauseField, value) != true)) {
                    this.AbnormalCauseField = value;
                    this.RaisePropertyChanged("AbnormalCause");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FaultTime {
            get {
                return this.FaultTimeField;
            }
            set {
                if ((this.FaultTimeField.Equals(value) != true)) {
                    this.FaultTimeField = value;
                    this.RaisePropertyChanged("FaultTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrCoreId {
            get {
                return this.MdvrCoreIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrCoreIdField, value) != true)) {
                    this.MdvrCoreIdField = value;
                    this.RaisePropertyChanged("MdvrCoreId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> OnlineFlag {
            get {
                return this.OnlineFlagField;
            }
            set {
                if ((this.OnlineFlagField.Equals(value) != true)) {
                    this.OnlineFlagField = value;
                    this.RaisePropertyChanged("OnlineFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuiteId {
            get {
                return this.SuiteIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SuiteIdField, value) != true)) {
                    this.SuiteIdField = value;
                    this.RaisePropertyChanged("SuiteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SwitchTime {
            get {
                return this.SwitchTimeField;
            }
            set {
                if ((this.SwitchTimeField.Equals(value) != true)) {
                    this.SwitchTimeField = value;
                    this.RaisePropertyChanged("SwitchTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleId {
            get {
                return this.VehicleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleIdField, value) != true)) {
                    this.VehicleIdField = value;
                    this.RaisePropertyChanged("VehicleId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleMessageOfint", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class SingleMessageOfint : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private int ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleMessageOfboolean", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class SingleMessageOfboolean : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private bool ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WorkingSuiteService.IWorkingSuiteService")]
    public interface IWorkingSuiteService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWorkingSuiteService/AddWorkingSuite", ReplyAction="http://tempuri.org/IWorkingSuiteService/AddWorkingSuiteResponse")]
        System.IAsyncResult BeginAddWorkingSuite(Gsafety.PTMS.ServiceReference.WorkingSuiteService.WorkingSuite workingSuite, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.WorkingSuiteService.SingleMessageOfint EndAddWorkingSuite(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWorkingSuiteService/UpdateWorkingSuite", ReplyAction="http://tempuri.org/IWorkingSuiteService/UpdateWorkingSuiteResponse")]
        System.IAsyncResult BeginUpdateWorkingSuite(Gsafety.PTMS.ServiceReference.WorkingSuiteService.WorkingSuite workingSuite, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.WorkingSuiteService.SingleMessageOfboolean EndUpdateWorkingSuite(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IWorkingSuiteService/DeleteWorkingSuite", ReplyAction="http://tempuri.org/IWorkingSuiteService/DeleteWorkingSuiteResponse")]
        System.IAsyncResult BeginDeleteWorkingSuite(string id, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.WorkingSuiteService.SingleMessageOfboolean EndDeleteWorkingSuite(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWorkingSuiteServiceChannel : Gsafety.PTMS.ServiceReference.WorkingSuiteService.IWorkingSuiteService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddWorkingSuiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddWorkingSuiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.WorkingSuiteService.SingleMessageOfint Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.WorkingSuiteService.SingleMessageOfint)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateWorkingSuiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateWorkingSuiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.WorkingSuiteService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.WorkingSuiteService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteWorkingSuiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteWorkingSuiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.WorkingSuiteService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.WorkingSuiteService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WorkingSuiteServiceClient : System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.WorkingSuiteService.IWorkingSuiteService>, Gsafety.PTMS.ServiceReference.WorkingSuiteService.IWorkingSuiteService {
        
        private BeginOperationDelegate onBeginAddWorkingSuiteDelegate;
        
        private EndOperationDelegate onEndAddWorkingSuiteDelegate;
        
        private System.Threading.SendOrPostCallback onAddWorkingSuiteCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateWorkingSuiteDelegate;
        
        private EndOperationDelegate onEndUpdateWorkingSuiteDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateWorkingSuiteCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteWorkingSuiteDelegate;
        
        private EndOperationDelegate onEndDeleteWorkingSuiteDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteWorkingSuiteCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public WorkingSuiteServiceClient() {
        }
        
        public WorkingSuiteServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WorkingSuiteServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WorkingSuiteServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WorkingSuiteServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<AddWorkingSuiteCompletedEventArgs> AddWorkingSuiteCompleted;
        
        public event System.EventHandler<UpdateWorkingSuiteCompletedEventArgs> UpdateWorkingSuiteCompleted;
        
        public event System.EventHandler<DeleteWorkingSuiteCompletedEventArgs> DeleteWorkingSuiteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.WorkingSuiteService.IWorkingSuiteService.BeginAddWorkingSuite(Gsafety.PTMS.ServiceReference.WorkingSuiteService.WorkingSuite workingSuite, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddWorkingSuite(workingSuite, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.WorkingSuiteService.SingleMessageOfint Gsafety.PTMS.ServiceReference.WorkingSuiteService.IWorkingSuiteService.EndAddWorkingSuite(System.IAsyncResult result) {
            return base.Channel.EndAddWorkingSuite(result);
        }
        
        private System.IAsyncResult OnBeginAddWorkingSuite(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.WorkingSuiteService.WorkingSuite workingSuite = ((Gsafety.PTMS.ServiceReference.WorkingSuiteService.WorkingSuite)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.WorkingSuiteService.IWorkingSuiteService)(this)).BeginAddWorkingSuite(workingSuite, callback, asyncState);
        }
        
        private object[] OnEndAddWorkingSuite(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.WorkingSuiteService.SingleMessageOfint retVal = ((Gsafety.PTMS.ServiceReference.WorkingSuiteService.IWorkingSuiteService)(this)).EndAddWorkingSuite(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddWorkingSuiteCompleted(object state) {
            if ((this.AddWorkingSuiteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddWorkingSuiteCompleted(this, new AddWorkingSuiteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddWorkingSuiteAsync(Gsafety.PTMS.ServiceReference.WorkingSuiteService.WorkingSuite workingSuite) {
            this.AddWorkingSuiteAsync(workingSuite, null);
        }
        
        public void AddWorkingSuiteAsync(Gsafety.PTMS.ServiceReference.WorkingSuiteService.WorkingSuite workingSuite, object userState) {
            if ((this.onBeginAddWorkingSuiteDelegate == null)) {
                this.onBeginAddWorkingSuiteDelegate = new BeginOperationDelegate(this.OnBeginAddWorkingSuite);
            }
            if ((this.onEndAddWorkingSuiteDelegate == null)) {
                this.onEndAddWorkingSuiteDelegate = new EndOperationDelegate(this.OnEndAddWorkingSuite);
            }
            if ((this.onAddWorkingSuiteCompletedDelegate == null)) {
                this.onAddWorkingSuiteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddWorkingSuiteCompleted);
            }
            base.InvokeAsync(this.onBeginAddWorkingSuiteDelegate, new object[] {
                        workingSuite}, this.onEndAddWorkingSuiteDelegate, this.onAddWorkingSuiteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.WorkingSuiteService.IWorkingSuiteService.BeginUpdateWorkingSuite(Gsafety.PTMS.ServiceReference.WorkingSuiteService.WorkingSuite workingSuite, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateWorkingSuite(workingSuite, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.WorkingSuiteService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.WorkingSuiteService.IWorkingSuiteService.EndUpdateWorkingSuite(System.IAsyncResult result) {
            return base.Channel.EndUpdateWorkingSuite(result);
        }
        
        private System.IAsyncResult OnBeginUpdateWorkingSuite(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.WorkingSuiteService.WorkingSuite workingSuite = ((Gsafety.PTMS.ServiceReference.WorkingSuiteService.WorkingSuite)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.WorkingSuiteService.IWorkingSuiteService)(this)).BeginUpdateWorkingSuite(workingSuite, callback, asyncState);
        }
        
        private object[] OnEndUpdateWorkingSuite(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.WorkingSuiteService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.WorkingSuiteService.IWorkingSuiteService)(this)).EndUpdateWorkingSuite(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateWorkingSuiteCompleted(object state) {
            if ((this.UpdateWorkingSuiteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateWorkingSuiteCompleted(this, new UpdateWorkingSuiteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateWorkingSuiteAsync(Gsafety.PTMS.ServiceReference.WorkingSuiteService.WorkingSuite workingSuite) {
            this.UpdateWorkingSuiteAsync(workingSuite, null);
        }
        
        public void UpdateWorkingSuiteAsync(Gsafety.PTMS.ServiceReference.WorkingSuiteService.WorkingSuite workingSuite, object userState) {
            if ((this.onBeginUpdateWorkingSuiteDelegate == null)) {
                this.onBeginUpdateWorkingSuiteDelegate = new BeginOperationDelegate(this.OnBeginUpdateWorkingSuite);
            }
            if ((this.onEndUpdateWorkingSuiteDelegate == null)) {
                this.onEndUpdateWorkingSuiteDelegate = new EndOperationDelegate(this.OnEndUpdateWorkingSuite);
            }
            if ((this.onUpdateWorkingSuiteCompletedDelegate == null)) {
                this.onUpdateWorkingSuiteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateWorkingSuiteCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateWorkingSuiteDelegate, new object[] {
                        workingSuite}, this.onEndUpdateWorkingSuiteDelegate, this.onUpdateWorkingSuiteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.WorkingSuiteService.IWorkingSuiteService.BeginDeleteWorkingSuite(string id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteWorkingSuite(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.WorkingSuiteService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.WorkingSuiteService.IWorkingSuiteService.EndDeleteWorkingSuite(System.IAsyncResult result) {
            return base.Channel.EndDeleteWorkingSuite(result);
        }
        
        private System.IAsyncResult OnBeginDeleteWorkingSuite(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string id = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.WorkingSuiteService.IWorkingSuiteService)(this)).BeginDeleteWorkingSuite(id, callback, asyncState);
        }
        
        private object[] OnEndDeleteWorkingSuite(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.WorkingSuiteService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.WorkingSuiteService.IWorkingSuiteService)(this)).EndDeleteWorkingSuite(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteWorkingSuiteCompleted(object state) {
            if ((this.DeleteWorkingSuiteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteWorkingSuiteCompleted(this, new DeleteWorkingSuiteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteWorkingSuiteAsync(string id) {
            this.DeleteWorkingSuiteAsync(id, null);
        }
        
        public void DeleteWorkingSuiteAsync(string id, object userState) {
            if ((this.onBeginDeleteWorkingSuiteDelegate == null)) {
                this.onBeginDeleteWorkingSuiteDelegate = new BeginOperationDelegate(this.OnBeginDeleteWorkingSuite);
            }
            if ((this.onEndDeleteWorkingSuiteDelegate == null)) {
                this.onEndDeleteWorkingSuiteDelegate = new EndOperationDelegate(this.OnEndDeleteWorkingSuite);
            }
            if ((this.onDeleteWorkingSuiteCompletedDelegate == null)) {
                this.onDeleteWorkingSuiteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteWorkingSuiteCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteWorkingSuiteDelegate, new object[] {
                        id}, this.onEndDeleteWorkingSuiteDelegate, this.onDeleteWorkingSuiteCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Gsafety.PTMS.ServiceReference.WorkingSuiteService.IWorkingSuiteService CreateChannel() {
            return new WorkingSuiteServiceClientChannel(this);
        }
        
        private class WorkingSuiteServiceClientChannel : ChannelBase<Gsafety.PTMS.ServiceReference.WorkingSuiteService.IWorkingSuiteService>, Gsafety.PTMS.ServiceReference.WorkingSuiteService.IWorkingSuiteService {
            
            public WorkingSuiteServiceClientChannel(System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.WorkingSuiteService.IWorkingSuiteService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginAddWorkingSuite(Gsafety.PTMS.ServiceReference.WorkingSuiteService.WorkingSuite workingSuite, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = workingSuite;
                System.IAsyncResult _result = base.BeginInvoke("AddWorkingSuite", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.WorkingSuiteService.SingleMessageOfint EndAddWorkingSuite(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.WorkingSuiteService.SingleMessageOfint _result = ((Gsafety.PTMS.ServiceReference.WorkingSuiteService.SingleMessageOfint)(base.EndInvoke("AddWorkingSuite", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateWorkingSuite(Gsafety.PTMS.ServiceReference.WorkingSuiteService.WorkingSuite workingSuite, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = workingSuite;
                System.IAsyncResult _result = base.BeginInvoke("UpdateWorkingSuite", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.WorkingSuiteService.SingleMessageOfboolean EndUpdateWorkingSuite(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.WorkingSuiteService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.WorkingSuiteService.SingleMessageOfboolean)(base.EndInvoke("UpdateWorkingSuite", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteWorkingSuite(string id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("DeleteWorkingSuite", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.WorkingSuiteService.SingleMessageOfboolean EndDeleteWorkingSuite(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.WorkingSuiteService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.WorkingSuiteService.SingleMessageOfboolean)(base.EndInvoke("DeleteWorkingSuite", _args, result)));
                return _result;
            }
        }
    }
}
