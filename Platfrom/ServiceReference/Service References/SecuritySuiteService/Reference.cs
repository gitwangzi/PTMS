//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace Gsafety.PTMS.ServiceReference.SecuritySuiteService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceSuite", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.BaseInformation.Contract.Dat" +
        "a")]
    public partial class DeviceSuite : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AlarmButton1IdField;
        
        private string AlarmButton2IdField;
        
        private string AlarmButton3IdField;
        
        private string Camera1IdField;
        
        private string Camera2IdField;
        
        private string Camera3IdField;
        
        private string Camera4IdField;
        
        private Gsafety.PTMS.ServiceReference.SecuritySuiteService.VehicleTypeEnum DeviceTypeField;
        
        private string DoorSensorIdField;
        
        private string IdField;
        
        private string InstallStaffField;
        
        private Gsafety.PTMS.ServiceReference.SecuritySuiteService.InstallStatusType InstallStatusField;
        
        private string MdvrCoreIdField;
        
        private string MdvrIdField;
        
        private string MdvrSimIdField;
        
        private string MdvrSimPhoneNumberField;
        
        private string NoteField;
        
        private string SdCardIdField;
        
        private string SoftwareVersionField;
        
        private string SuiteIdField;
        
        private bool UpdateFlagField;
        
        private string UpsIdField;
        
        private string VehicleIdField;
        
        private Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuiteStatus statusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlarmButton1Id {
            get {
                return this.AlarmButton1IdField;
            }
            set {
                if ((object.ReferenceEquals(this.AlarmButton1IdField, value) != true)) {
                    this.AlarmButton1IdField = value;
                    this.RaisePropertyChanged("AlarmButton1Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlarmButton2Id {
            get {
                return this.AlarmButton2IdField;
            }
            set {
                if ((object.ReferenceEquals(this.AlarmButton2IdField, value) != true)) {
                    this.AlarmButton2IdField = value;
                    this.RaisePropertyChanged("AlarmButton2Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AlarmButton3Id {
            get {
                return this.AlarmButton3IdField;
            }
            set {
                if ((object.ReferenceEquals(this.AlarmButton3IdField, value) != true)) {
                    this.AlarmButton3IdField = value;
                    this.RaisePropertyChanged("AlarmButton3Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Camera1Id {
            get {
                return this.Camera1IdField;
            }
            set {
                if ((object.ReferenceEquals(this.Camera1IdField, value) != true)) {
                    this.Camera1IdField = value;
                    this.RaisePropertyChanged("Camera1Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Camera2Id {
            get {
                return this.Camera2IdField;
            }
            set {
                if ((object.ReferenceEquals(this.Camera2IdField, value) != true)) {
                    this.Camera2IdField = value;
                    this.RaisePropertyChanged("Camera2Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Camera3Id {
            get {
                return this.Camera3IdField;
            }
            set {
                if ((object.ReferenceEquals(this.Camera3IdField, value) != true)) {
                    this.Camera3IdField = value;
                    this.RaisePropertyChanged("Camera3Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Camera4Id {
            get {
                return this.Camera4IdField;
            }
            set {
                if ((object.ReferenceEquals(this.Camera4IdField, value) != true)) {
                    this.Camera4IdField = value;
                    this.RaisePropertyChanged("Camera4Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.SecuritySuiteService.VehicleTypeEnum DeviceType {
            get {
                return this.DeviceTypeField;
            }
            set {
                if ((this.DeviceTypeField.Equals(value) != true)) {
                    this.DeviceTypeField = value;
                    this.RaisePropertyChanged("DeviceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DoorSensorId {
            get {
                return this.DoorSensorIdField;
            }
            set {
                if ((object.ReferenceEquals(this.DoorSensorIdField, value) != true)) {
                    this.DoorSensorIdField = value;
                    this.RaisePropertyChanged("DoorSensorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InstallStaff {
            get {
                return this.InstallStaffField;
            }
            set {
                if ((object.ReferenceEquals(this.InstallStaffField, value) != true)) {
                    this.InstallStaffField = value;
                    this.RaisePropertyChanged("InstallStaff");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.SecuritySuiteService.InstallStatusType InstallStatus {
            get {
                return this.InstallStatusField;
            }
            set {
                if ((this.InstallStatusField.Equals(value) != true)) {
                    this.InstallStatusField = value;
                    this.RaisePropertyChanged("InstallStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrCoreId {
            get {
                return this.MdvrCoreIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrCoreIdField, value) != true)) {
                    this.MdvrCoreIdField = value;
                    this.RaisePropertyChanged("MdvrCoreId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrId {
            get {
                return this.MdvrIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrIdField, value) != true)) {
                    this.MdvrIdField = value;
                    this.RaisePropertyChanged("MdvrId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrSimId {
            get {
                return this.MdvrSimIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrSimIdField, value) != true)) {
                    this.MdvrSimIdField = value;
                    this.RaisePropertyChanged("MdvrSimId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrSimPhoneNumber {
            get {
                return this.MdvrSimPhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrSimPhoneNumberField, value) != true)) {
                    this.MdvrSimPhoneNumberField = value;
                    this.RaisePropertyChanged("MdvrSimPhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SdCardId {
            get {
                return this.SdCardIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SdCardIdField, value) != true)) {
                    this.SdCardIdField = value;
                    this.RaisePropertyChanged("SdCardId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SoftwareVersion {
            get {
                return this.SoftwareVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.SoftwareVersionField, value) != true)) {
                    this.SoftwareVersionField = value;
                    this.RaisePropertyChanged("SoftwareVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuiteId {
            get {
                return this.SuiteIdField;
            }
            set {
                if ((object.ReferenceEquals(this.SuiteIdField, value) != true)) {
                    this.SuiteIdField = value;
                    this.RaisePropertyChanged("SuiteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpdateFlag {
            get {
                return this.UpdateFlagField;
            }
            set {
                if ((this.UpdateFlagField.Equals(value) != true)) {
                    this.UpdateFlagField = value;
                    this.RaisePropertyChanged("UpdateFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpsId {
            get {
                return this.UpsIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UpsIdField, value) != true)) {
                    this.UpsIdField = value;
                    this.RaisePropertyChanged("UpsId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleId {
            get {
                return this.VehicleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleIdField, value) != true)) {
                    this.VehicleIdField = value;
                    this.RaisePropertyChanged("VehicleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuiteStatus status {
            get {
                return this.statusField;
            }
            set {
                if ((this.statusField.Equals(value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VehicleTypeEnum", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.BaseInformation.Contract.Dat" +
        "a")]
    public enum VehicleTypeEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Bus = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Taxi = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Flota = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InstallStatusType", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.BaseInformation.Contract.Dat" +
        "a")]
    public enum InstallStatusType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnInstall = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Installing = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Installed = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceSuiteStatus", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.BaseInformation.Contract.Dat" +
        "a")]
    public enum DeviceSuiteStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Initial = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Working = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Testing = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Running = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Abnormal = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WaitingMaintenance = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Maintenance = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Scrap = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        History = 99,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleMessageOfboolean", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class SingleMessageOfboolean : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private bool ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleMessageOfDeviceSuiteh_PhsrrDr", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class SingleMessageOfDeviceSuiteh_PhsrrDr : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagingInfo", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class PagingInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfDeviceSuiteh_PhsrrDr", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfDeviceSuiteh_PhsrrDr : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SecuritySuiteService.ISecuritySuiteService")]
    public interface ISecuritySuiteService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecuritySuiteService/AddSecuritySuite", ReplyAction="http://tempuri.org/ISecuritySuiteService/AddSecuritySuiteResponse")]
        System.IAsyncResult BeginAddSecuritySuite(Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite securitySuite, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean EndAddSecuritySuite(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecuritySuiteService/UpdateSecuritySuite", ReplyAction="http://tempuri.org/ISecuritySuiteService/UpdateSecuritySuiteResponse")]
        System.IAsyncResult BeginUpdateSecuritySuite(Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite securitySuite, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean EndUpdateSecuritySuite(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecuritySuiteService/GetSecuritySuiteBySuiteId", ReplyAction="http://tempuri.org/ISecuritySuiteService/GetSecuritySuiteBySuiteIdResponse")]
        System.IAsyncResult BeginGetSecuritySuiteBySuiteId(string suiteId, string mdvrid, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfDeviceSuiteh_PhsrrDr EndGetSecuritySuiteBySuiteId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecuritySuiteService/GetSecuritySuitesFuzzy", ReplyAction="http://tempuri.org/ISecuritySuiteService/GetSecuritySuitesFuzzyResponse")]
        System.IAsyncResult BeginGetSecuritySuitesFuzzy(string vehicleId, string suiteId, string mdvrId, string mdvrCoreId, System.Nullable<Gsafety.PTMS.ServiceReference.SecuritySuiteService.InstallStatusType> status, Gsafety.PTMS.ServiceReference.SecuritySuiteService.PagingInfo page, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.SecuritySuiteService.MultiMessageOfDeviceSuiteh_PhsrrDr EndGetSecuritySuitesFuzzy(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecuritySuiteService/UpdateSecuritySuiteStatusByID", ReplyAction="http://tempuri.org/ISecuritySuiteService/UpdateSecuritySuiteStatusByIDResponse")]
        System.IAsyncResult BeginUpdateSecuritySuiteStatusByID(string Id, Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuiteStatus status, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean EndUpdateSecuritySuiteStatusByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecuritySuiteService/CheckSecuritySuiteExistBySuiteID", ReplyAction="http://tempuri.org/ISecuritySuiteService/CheckSecuritySuiteExistBySuiteIDResponse" +
            "")]
        System.IAsyncResult BeginCheckSecuritySuiteExistBySuiteID(string suiteID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean EndCheckSecuritySuiteExistBySuiteID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecuritySuiteService/CheckSecuritySuiteExistByMdvrCoreId", ReplyAction="http://tempuri.org/ISecuritySuiteService/CheckSecuritySuiteExistByMdvrCoreIdRespo" +
            "nse")]
        System.IAsyncResult BeginCheckSecuritySuiteExistByMdvrCoreId(string mdvrCoreId, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean EndCheckSecuritySuiteExistByMdvrCoreId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecuritySuiteService/CheckSecuritySuiteExistByMdvrId", ReplyAction="http://tempuri.org/ISecuritySuiteService/CheckSecuritySuiteExistByMdvrIdResponse")]
        System.IAsyncResult BeginCheckSecuritySuiteExistByMdvrId(string mdvrId, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean EndCheckSecuritySuiteExistByMdvrId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecuritySuiteService/CheckInstallDetailById", ReplyAction="http://tempuri.org/ISecuritySuiteService/CheckInstallDetailByIdResponse")]
        System.IAsyncResult BeginCheckInstallDetailById(string Id, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean EndCheckInstallDetailById(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecuritySuiteService/BatchAdd", ReplyAction="http://tempuri.org/ISecuritySuiteService/BatchAddResponse")]
        System.IAsyncResult BeginBatchAdd(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite> suiteList, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean EndBatchAdd(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecuritySuiteService/DeleteSecuritySuite", ReplyAction="http://tempuri.org/ISecuritySuiteService/DeleteSecuritySuiteResponse")]
        System.IAsyncResult BeginDeleteSecuritySuite(Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite SecuritySuite, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean EndDeleteSecuritySuite(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ISecuritySuiteService/CheckSecuritySuiteExist", ReplyAction="http://tempuri.org/ISecuritySuiteService/CheckSecuritySuiteExistResponse")]
        System.IAsyncResult BeginCheckSecuritySuiteExist(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite> deviceSuiteList, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean EndCheckSecuritySuiteExist(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISecuritySuiteServiceChannel : Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddSecuritySuiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddSecuritySuiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateSecuritySuiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateSecuritySuiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSecuritySuiteBySuiteIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSecuritySuiteBySuiteIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfDeviceSuiteh_PhsrrDr Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfDeviceSuiteh_PhsrrDr)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSecuritySuitesFuzzyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSecuritySuitesFuzzyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.SecuritySuiteService.MultiMessageOfDeviceSuiteh_PhsrrDr Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.MultiMessageOfDeviceSuiteh_PhsrrDr)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateSecuritySuiteStatusByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateSecuritySuiteStatusByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckSecuritySuiteExistBySuiteIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckSecuritySuiteExistBySuiteIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckSecuritySuiteExistByMdvrCoreIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckSecuritySuiteExistByMdvrCoreIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckSecuritySuiteExistByMdvrIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckSecuritySuiteExistByMdvrIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckInstallDetailByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckInstallDetailByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BatchAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BatchAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteSecuritySuiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteSecuritySuiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckSecuritySuiteExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckSecuritySuiteExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SecuritySuiteServiceClient : System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService>, Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService {
        
        private BeginOperationDelegate onBeginAddSecuritySuiteDelegate;
        
        private EndOperationDelegate onEndAddSecuritySuiteDelegate;
        
        private System.Threading.SendOrPostCallback onAddSecuritySuiteCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateSecuritySuiteDelegate;
        
        private EndOperationDelegate onEndUpdateSecuritySuiteDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateSecuritySuiteCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSecuritySuiteBySuiteIdDelegate;
        
        private EndOperationDelegate onEndGetSecuritySuiteBySuiteIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetSecuritySuiteBySuiteIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSecuritySuitesFuzzyDelegate;
        
        private EndOperationDelegate onEndGetSecuritySuitesFuzzyDelegate;
        
        private System.Threading.SendOrPostCallback onGetSecuritySuitesFuzzyCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateSecuritySuiteStatusByIDDelegate;
        
        private EndOperationDelegate onEndUpdateSecuritySuiteStatusByIDDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateSecuritySuiteStatusByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckSecuritySuiteExistBySuiteIDDelegate;
        
        private EndOperationDelegate onEndCheckSecuritySuiteExistBySuiteIDDelegate;
        
        private System.Threading.SendOrPostCallback onCheckSecuritySuiteExistBySuiteIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckSecuritySuiteExistByMdvrCoreIdDelegate;
        
        private EndOperationDelegate onEndCheckSecuritySuiteExistByMdvrCoreIdDelegate;
        
        private System.Threading.SendOrPostCallback onCheckSecuritySuiteExistByMdvrCoreIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckSecuritySuiteExistByMdvrIdDelegate;
        
        private EndOperationDelegate onEndCheckSecuritySuiteExistByMdvrIdDelegate;
        
        private System.Threading.SendOrPostCallback onCheckSecuritySuiteExistByMdvrIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckInstallDetailByIdDelegate;
        
        private EndOperationDelegate onEndCheckInstallDetailByIdDelegate;
        
        private System.Threading.SendOrPostCallback onCheckInstallDetailByIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginBatchAddDelegate;
        
        private EndOperationDelegate onEndBatchAddDelegate;
        
        private System.Threading.SendOrPostCallback onBatchAddCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteSecuritySuiteDelegate;
        
        private EndOperationDelegate onEndDeleteSecuritySuiteDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteSecuritySuiteCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckSecuritySuiteExistDelegate;
        
        private EndOperationDelegate onEndCheckSecuritySuiteExistDelegate;
        
        private System.Threading.SendOrPostCallback onCheckSecuritySuiteExistCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public SecuritySuiteServiceClient() {
        }
        
        public SecuritySuiteServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SecuritySuiteServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SecuritySuiteServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SecuritySuiteServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<AddSecuritySuiteCompletedEventArgs> AddSecuritySuiteCompleted;
        
        public event System.EventHandler<UpdateSecuritySuiteCompletedEventArgs> UpdateSecuritySuiteCompleted;
        
        public event System.EventHandler<GetSecuritySuiteBySuiteIdCompletedEventArgs> GetSecuritySuiteBySuiteIdCompleted;
        
        public event System.EventHandler<GetSecuritySuitesFuzzyCompletedEventArgs> GetSecuritySuitesFuzzyCompleted;
        
        public event System.EventHandler<UpdateSecuritySuiteStatusByIDCompletedEventArgs> UpdateSecuritySuiteStatusByIDCompleted;
        
        public event System.EventHandler<CheckSecuritySuiteExistBySuiteIDCompletedEventArgs> CheckSecuritySuiteExistBySuiteIDCompleted;
        
        public event System.EventHandler<CheckSecuritySuiteExistByMdvrCoreIdCompletedEventArgs> CheckSecuritySuiteExistByMdvrCoreIdCompleted;
        
        public event System.EventHandler<CheckSecuritySuiteExistByMdvrIdCompletedEventArgs> CheckSecuritySuiteExistByMdvrIdCompleted;
        
        public event System.EventHandler<CheckInstallDetailByIdCompletedEventArgs> CheckInstallDetailByIdCompleted;
        
        public event System.EventHandler<BatchAddCompletedEventArgs> BatchAddCompleted;
        
        public event System.EventHandler<DeleteSecuritySuiteCompletedEventArgs> DeleteSecuritySuiteCompleted;
        
        public event System.EventHandler<CheckSecuritySuiteExistCompletedEventArgs> CheckSecuritySuiteExistCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService.BeginAddSecuritySuite(Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite securitySuite, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddSecuritySuite(securitySuite, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService.EndAddSecuritySuite(System.IAsyncResult result) {
            return base.Channel.EndAddSecuritySuite(result);
        }
        
        private System.IAsyncResult OnBeginAddSecuritySuite(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite securitySuite = ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService)(this)).BeginAddSecuritySuite(securitySuite, callback, asyncState);
        }
        
        private object[] OnEndAddSecuritySuite(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService)(this)).EndAddSecuritySuite(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddSecuritySuiteCompleted(object state) {
            if ((this.AddSecuritySuiteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddSecuritySuiteCompleted(this, new AddSecuritySuiteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddSecuritySuiteAsync(Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite securitySuite) {
            this.AddSecuritySuiteAsync(securitySuite, null);
        }
        
        public void AddSecuritySuiteAsync(Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite securitySuite, object userState) {
            if ((this.onBeginAddSecuritySuiteDelegate == null)) {
                this.onBeginAddSecuritySuiteDelegate = new BeginOperationDelegate(this.OnBeginAddSecuritySuite);
            }
            if ((this.onEndAddSecuritySuiteDelegate == null)) {
                this.onEndAddSecuritySuiteDelegate = new EndOperationDelegate(this.OnEndAddSecuritySuite);
            }
            if ((this.onAddSecuritySuiteCompletedDelegate == null)) {
                this.onAddSecuritySuiteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddSecuritySuiteCompleted);
            }
            base.InvokeAsync(this.onBeginAddSecuritySuiteDelegate, new object[] {
                        securitySuite}, this.onEndAddSecuritySuiteDelegate, this.onAddSecuritySuiteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService.BeginUpdateSecuritySuite(Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite securitySuite, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateSecuritySuite(securitySuite, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService.EndUpdateSecuritySuite(System.IAsyncResult result) {
            return base.Channel.EndUpdateSecuritySuite(result);
        }
        
        private System.IAsyncResult OnBeginUpdateSecuritySuite(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite securitySuite = ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService)(this)).BeginUpdateSecuritySuite(securitySuite, callback, asyncState);
        }
        
        private object[] OnEndUpdateSecuritySuite(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService)(this)).EndUpdateSecuritySuite(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateSecuritySuiteCompleted(object state) {
            if ((this.UpdateSecuritySuiteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateSecuritySuiteCompleted(this, new UpdateSecuritySuiteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateSecuritySuiteAsync(Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite securitySuite) {
            this.UpdateSecuritySuiteAsync(securitySuite, null);
        }
        
        public void UpdateSecuritySuiteAsync(Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite securitySuite, object userState) {
            if ((this.onBeginUpdateSecuritySuiteDelegate == null)) {
                this.onBeginUpdateSecuritySuiteDelegate = new BeginOperationDelegate(this.OnBeginUpdateSecuritySuite);
            }
            if ((this.onEndUpdateSecuritySuiteDelegate == null)) {
                this.onEndUpdateSecuritySuiteDelegate = new EndOperationDelegate(this.OnEndUpdateSecuritySuite);
            }
            if ((this.onUpdateSecuritySuiteCompletedDelegate == null)) {
                this.onUpdateSecuritySuiteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateSecuritySuiteCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateSecuritySuiteDelegate, new object[] {
                        securitySuite}, this.onEndUpdateSecuritySuiteDelegate, this.onUpdateSecuritySuiteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService.BeginGetSecuritySuiteBySuiteId(string suiteId, string mdvrid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSecuritySuiteBySuiteId(suiteId, mdvrid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfDeviceSuiteh_PhsrrDr Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService.EndGetSecuritySuiteBySuiteId(System.IAsyncResult result) {
            return base.Channel.EndGetSecuritySuiteBySuiteId(result);
        }
        
        private System.IAsyncResult OnBeginGetSecuritySuiteBySuiteId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string suiteId = ((string)(inValues[0]));
            string mdvrid = ((string)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService)(this)).BeginGetSecuritySuiteBySuiteId(suiteId, mdvrid, callback, asyncState);
        }
        
        private object[] OnEndGetSecuritySuiteBySuiteId(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfDeviceSuiteh_PhsrrDr retVal = ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService)(this)).EndGetSecuritySuiteBySuiteId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSecuritySuiteBySuiteIdCompleted(object state) {
            if ((this.GetSecuritySuiteBySuiteIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSecuritySuiteBySuiteIdCompleted(this, new GetSecuritySuiteBySuiteIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSecuritySuiteBySuiteIdAsync(string suiteId, string mdvrid) {
            this.GetSecuritySuiteBySuiteIdAsync(suiteId, mdvrid, null);
        }
        
        public void GetSecuritySuiteBySuiteIdAsync(string suiteId, string mdvrid, object userState) {
            if ((this.onBeginGetSecuritySuiteBySuiteIdDelegate == null)) {
                this.onBeginGetSecuritySuiteBySuiteIdDelegate = new BeginOperationDelegate(this.OnBeginGetSecuritySuiteBySuiteId);
            }
            if ((this.onEndGetSecuritySuiteBySuiteIdDelegate == null)) {
                this.onEndGetSecuritySuiteBySuiteIdDelegate = new EndOperationDelegate(this.OnEndGetSecuritySuiteBySuiteId);
            }
            if ((this.onGetSecuritySuiteBySuiteIdCompletedDelegate == null)) {
                this.onGetSecuritySuiteBySuiteIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSecuritySuiteBySuiteIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetSecuritySuiteBySuiteIdDelegate, new object[] {
                        suiteId,
                        mdvrid}, this.onEndGetSecuritySuiteBySuiteIdDelegate, this.onGetSecuritySuiteBySuiteIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService.BeginGetSecuritySuitesFuzzy(string vehicleId, string suiteId, string mdvrId, string mdvrCoreId, System.Nullable<Gsafety.PTMS.ServiceReference.SecuritySuiteService.InstallStatusType> status, Gsafety.PTMS.ServiceReference.SecuritySuiteService.PagingInfo page, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSecuritySuitesFuzzy(vehicleId, suiteId, mdvrId, mdvrCoreId, status, page, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.SecuritySuiteService.MultiMessageOfDeviceSuiteh_PhsrrDr Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService.EndGetSecuritySuitesFuzzy(System.IAsyncResult result) {
            return base.Channel.EndGetSecuritySuitesFuzzy(result);
        }
        
        private System.IAsyncResult OnBeginGetSecuritySuitesFuzzy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string vehicleId = ((string)(inValues[0]));
            string suiteId = ((string)(inValues[1]));
            string mdvrId = ((string)(inValues[2]));
            string mdvrCoreId = ((string)(inValues[3]));
            System.Nullable<Gsafety.PTMS.ServiceReference.SecuritySuiteService.InstallStatusType> status = ((System.Nullable<Gsafety.PTMS.ServiceReference.SecuritySuiteService.InstallStatusType>)(inValues[4]));
            Gsafety.PTMS.ServiceReference.SecuritySuiteService.PagingInfo page = ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.PagingInfo)(inValues[5]));
            return ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService)(this)).BeginGetSecuritySuitesFuzzy(vehicleId, suiteId, mdvrId, mdvrCoreId, status, page, callback, asyncState);
        }
        
        private object[] OnEndGetSecuritySuitesFuzzy(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.SecuritySuiteService.MultiMessageOfDeviceSuiteh_PhsrrDr retVal = ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService)(this)).EndGetSecuritySuitesFuzzy(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSecuritySuitesFuzzyCompleted(object state) {
            if ((this.GetSecuritySuitesFuzzyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSecuritySuitesFuzzyCompleted(this, new GetSecuritySuitesFuzzyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSecuritySuitesFuzzyAsync(string vehicleId, string suiteId, string mdvrId, string mdvrCoreId, System.Nullable<Gsafety.PTMS.ServiceReference.SecuritySuiteService.InstallStatusType> status, Gsafety.PTMS.ServiceReference.SecuritySuiteService.PagingInfo page) {
            this.GetSecuritySuitesFuzzyAsync(vehicleId, suiteId, mdvrId, mdvrCoreId, status, page, null);
        }
        
        public void GetSecuritySuitesFuzzyAsync(string vehicleId, string suiteId, string mdvrId, string mdvrCoreId, System.Nullable<Gsafety.PTMS.ServiceReference.SecuritySuiteService.InstallStatusType> status, Gsafety.PTMS.ServiceReference.SecuritySuiteService.PagingInfo page, object userState) {
            if ((this.onBeginGetSecuritySuitesFuzzyDelegate == null)) {
                this.onBeginGetSecuritySuitesFuzzyDelegate = new BeginOperationDelegate(this.OnBeginGetSecuritySuitesFuzzy);
            }
            if ((this.onEndGetSecuritySuitesFuzzyDelegate == null)) {
                this.onEndGetSecuritySuitesFuzzyDelegate = new EndOperationDelegate(this.OnEndGetSecuritySuitesFuzzy);
            }
            if ((this.onGetSecuritySuitesFuzzyCompletedDelegate == null)) {
                this.onGetSecuritySuitesFuzzyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSecuritySuitesFuzzyCompleted);
            }
            base.InvokeAsync(this.onBeginGetSecuritySuitesFuzzyDelegate, new object[] {
                        vehicleId,
                        suiteId,
                        mdvrId,
                        mdvrCoreId,
                        status,
                        page}, this.onEndGetSecuritySuitesFuzzyDelegate, this.onGetSecuritySuitesFuzzyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService.BeginUpdateSecuritySuiteStatusByID(string Id, Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuiteStatus status, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateSecuritySuiteStatusByID(Id, status, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService.EndUpdateSecuritySuiteStatusByID(System.IAsyncResult result) {
            return base.Channel.EndUpdateSecuritySuiteStatusByID(result);
        }
        
        private System.IAsyncResult OnBeginUpdateSecuritySuiteStatusByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Id = ((string)(inValues[0]));
            Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuiteStatus status = ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuiteStatus)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService)(this)).BeginUpdateSecuritySuiteStatusByID(Id, status, callback, asyncState);
        }
        
        private object[] OnEndUpdateSecuritySuiteStatusByID(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService)(this)).EndUpdateSecuritySuiteStatusByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateSecuritySuiteStatusByIDCompleted(object state) {
            if ((this.UpdateSecuritySuiteStatusByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateSecuritySuiteStatusByIDCompleted(this, new UpdateSecuritySuiteStatusByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateSecuritySuiteStatusByIDAsync(string Id, Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuiteStatus status) {
            this.UpdateSecuritySuiteStatusByIDAsync(Id, status, null);
        }
        
        public void UpdateSecuritySuiteStatusByIDAsync(string Id, Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuiteStatus status, object userState) {
            if ((this.onBeginUpdateSecuritySuiteStatusByIDDelegate == null)) {
                this.onBeginUpdateSecuritySuiteStatusByIDDelegate = new BeginOperationDelegate(this.OnBeginUpdateSecuritySuiteStatusByID);
            }
            if ((this.onEndUpdateSecuritySuiteStatusByIDDelegate == null)) {
                this.onEndUpdateSecuritySuiteStatusByIDDelegate = new EndOperationDelegate(this.OnEndUpdateSecuritySuiteStatusByID);
            }
            if ((this.onUpdateSecuritySuiteStatusByIDCompletedDelegate == null)) {
                this.onUpdateSecuritySuiteStatusByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateSecuritySuiteStatusByIDCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateSecuritySuiteStatusByIDDelegate, new object[] {
                        Id,
                        status}, this.onEndUpdateSecuritySuiteStatusByIDDelegate, this.onUpdateSecuritySuiteStatusByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService.BeginCheckSecuritySuiteExistBySuiteID(string suiteID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckSecuritySuiteExistBySuiteID(suiteID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService.EndCheckSecuritySuiteExistBySuiteID(System.IAsyncResult result) {
            return base.Channel.EndCheckSecuritySuiteExistBySuiteID(result);
        }
        
        private System.IAsyncResult OnBeginCheckSecuritySuiteExistBySuiteID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string suiteID = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService)(this)).BeginCheckSecuritySuiteExistBySuiteID(suiteID, callback, asyncState);
        }
        
        private object[] OnEndCheckSecuritySuiteExistBySuiteID(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService)(this)).EndCheckSecuritySuiteExistBySuiteID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckSecuritySuiteExistBySuiteIDCompleted(object state) {
            if ((this.CheckSecuritySuiteExistBySuiteIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckSecuritySuiteExistBySuiteIDCompleted(this, new CheckSecuritySuiteExistBySuiteIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckSecuritySuiteExistBySuiteIDAsync(string suiteID) {
            this.CheckSecuritySuiteExistBySuiteIDAsync(suiteID, null);
        }
        
        public void CheckSecuritySuiteExistBySuiteIDAsync(string suiteID, object userState) {
            if ((this.onBeginCheckSecuritySuiteExistBySuiteIDDelegate == null)) {
                this.onBeginCheckSecuritySuiteExistBySuiteIDDelegate = new BeginOperationDelegate(this.OnBeginCheckSecuritySuiteExistBySuiteID);
            }
            if ((this.onEndCheckSecuritySuiteExistBySuiteIDDelegate == null)) {
                this.onEndCheckSecuritySuiteExistBySuiteIDDelegate = new EndOperationDelegate(this.OnEndCheckSecuritySuiteExistBySuiteID);
            }
            if ((this.onCheckSecuritySuiteExistBySuiteIDCompletedDelegate == null)) {
                this.onCheckSecuritySuiteExistBySuiteIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckSecuritySuiteExistBySuiteIDCompleted);
            }
            base.InvokeAsync(this.onBeginCheckSecuritySuiteExistBySuiteIDDelegate, new object[] {
                        suiteID}, this.onEndCheckSecuritySuiteExistBySuiteIDDelegate, this.onCheckSecuritySuiteExistBySuiteIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService.BeginCheckSecuritySuiteExistByMdvrCoreId(string mdvrCoreId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckSecuritySuiteExistByMdvrCoreId(mdvrCoreId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService.EndCheckSecuritySuiteExistByMdvrCoreId(System.IAsyncResult result) {
            return base.Channel.EndCheckSecuritySuiteExistByMdvrCoreId(result);
        }
        
        private System.IAsyncResult OnBeginCheckSecuritySuiteExistByMdvrCoreId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string mdvrCoreId = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService)(this)).BeginCheckSecuritySuiteExistByMdvrCoreId(mdvrCoreId, callback, asyncState);
        }
        
        private object[] OnEndCheckSecuritySuiteExistByMdvrCoreId(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService)(this)).EndCheckSecuritySuiteExistByMdvrCoreId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckSecuritySuiteExistByMdvrCoreIdCompleted(object state) {
            if ((this.CheckSecuritySuiteExistByMdvrCoreIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckSecuritySuiteExistByMdvrCoreIdCompleted(this, new CheckSecuritySuiteExistByMdvrCoreIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckSecuritySuiteExistByMdvrCoreIdAsync(string mdvrCoreId) {
            this.CheckSecuritySuiteExistByMdvrCoreIdAsync(mdvrCoreId, null);
        }
        
        public void CheckSecuritySuiteExistByMdvrCoreIdAsync(string mdvrCoreId, object userState) {
            if ((this.onBeginCheckSecuritySuiteExistByMdvrCoreIdDelegate == null)) {
                this.onBeginCheckSecuritySuiteExistByMdvrCoreIdDelegate = new BeginOperationDelegate(this.OnBeginCheckSecuritySuiteExistByMdvrCoreId);
            }
            if ((this.onEndCheckSecuritySuiteExistByMdvrCoreIdDelegate == null)) {
                this.onEndCheckSecuritySuiteExistByMdvrCoreIdDelegate = new EndOperationDelegate(this.OnEndCheckSecuritySuiteExistByMdvrCoreId);
            }
            if ((this.onCheckSecuritySuiteExistByMdvrCoreIdCompletedDelegate == null)) {
                this.onCheckSecuritySuiteExistByMdvrCoreIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckSecuritySuiteExistByMdvrCoreIdCompleted);
            }
            base.InvokeAsync(this.onBeginCheckSecuritySuiteExistByMdvrCoreIdDelegate, new object[] {
                        mdvrCoreId}, this.onEndCheckSecuritySuiteExistByMdvrCoreIdDelegate, this.onCheckSecuritySuiteExistByMdvrCoreIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService.BeginCheckSecuritySuiteExistByMdvrId(string mdvrId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckSecuritySuiteExistByMdvrId(mdvrId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService.EndCheckSecuritySuiteExistByMdvrId(System.IAsyncResult result) {
            return base.Channel.EndCheckSecuritySuiteExistByMdvrId(result);
        }
        
        private System.IAsyncResult OnBeginCheckSecuritySuiteExistByMdvrId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string mdvrId = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService)(this)).BeginCheckSecuritySuiteExistByMdvrId(mdvrId, callback, asyncState);
        }
        
        private object[] OnEndCheckSecuritySuiteExistByMdvrId(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService)(this)).EndCheckSecuritySuiteExistByMdvrId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckSecuritySuiteExistByMdvrIdCompleted(object state) {
            if ((this.CheckSecuritySuiteExistByMdvrIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckSecuritySuiteExistByMdvrIdCompleted(this, new CheckSecuritySuiteExistByMdvrIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckSecuritySuiteExistByMdvrIdAsync(string mdvrId) {
            this.CheckSecuritySuiteExistByMdvrIdAsync(mdvrId, null);
        }
        
        public void CheckSecuritySuiteExistByMdvrIdAsync(string mdvrId, object userState) {
            if ((this.onBeginCheckSecuritySuiteExistByMdvrIdDelegate == null)) {
                this.onBeginCheckSecuritySuiteExistByMdvrIdDelegate = new BeginOperationDelegate(this.OnBeginCheckSecuritySuiteExistByMdvrId);
            }
            if ((this.onEndCheckSecuritySuiteExistByMdvrIdDelegate == null)) {
                this.onEndCheckSecuritySuiteExistByMdvrIdDelegate = new EndOperationDelegate(this.OnEndCheckSecuritySuiteExistByMdvrId);
            }
            if ((this.onCheckSecuritySuiteExistByMdvrIdCompletedDelegate == null)) {
                this.onCheckSecuritySuiteExistByMdvrIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckSecuritySuiteExistByMdvrIdCompleted);
            }
            base.InvokeAsync(this.onBeginCheckSecuritySuiteExistByMdvrIdDelegate, new object[] {
                        mdvrId}, this.onEndCheckSecuritySuiteExistByMdvrIdDelegate, this.onCheckSecuritySuiteExistByMdvrIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService.BeginCheckInstallDetailById(string Id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckInstallDetailById(Id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService.EndCheckInstallDetailById(System.IAsyncResult result) {
            return base.Channel.EndCheckInstallDetailById(result);
        }
        
        private System.IAsyncResult OnBeginCheckInstallDetailById(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string Id = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService)(this)).BeginCheckInstallDetailById(Id, callback, asyncState);
        }
        
        private object[] OnEndCheckInstallDetailById(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService)(this)).EndCheckInstallDetailById(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckInstallDetailByIdCompleted(object state) {
            if ((this.CheckInstallDetailByIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckInstallDetailByIdCompleted(this, new CheckInstallDetailByIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckInstallDetailByIdAsync(string Id) {
            this.CheckInstallDetailByIdAsync(Id, null);
        }
        
        public void CheckInstallDetailByIdAsync(string Id, object userState) {
            if ((this.onBeginCheckInstallDetailByIdDelegate == null)) {
                this.onBeginCheckInstallDetailByIdDelegate = new BeginOperationDelegate(this.OnBeginCheckInstallDetailById);
            }
            if ((this.onEndCheckInstallDetailByIdDelegate == null)) {
                this.onEndCheckInstallDetailByIdDelegate = new EndOperationDelegate(this.OnEndCheckInstallDetailById);
            }
            if ((this.onCheckInstallDetailByIdCompletedDelegate == null)) {
                this.onCheckInstallDetailByIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckInstallDetailByIdCompleted);
            }
            base.InvokeAsync(this.onBeginCheckInstallDetailByIdDelegate, new object[] {
                        Id}, this.onEndCheckInstallDetailByIdDelegate, this.onCheckInstallDetailByIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService.BeginBatchAdd(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite> suiteList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBatchAdd(suiteList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService.EndBatchAdd(System.IAsyncResult result) {
            return base.Channel.EndBatchAdd(result);
        }
        
        private System.IAsyncResult OnBeginBatchAdd(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite> suiteList = ((System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite>)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService)(this)).BeginBatchAdd(suiteList, callback, asyncState);
        }
        
        private object[] OnEndBatchAdd(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService)(this)).EndBatchAdd(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBatchAddCompleted(object state) {
            if ((this.BatchAddCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BatchAddCompleted(this, new BatchAddCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BatchAddAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite> suiteList) {
            this.BatchAddAsync(suiteList, null);
        }
        
        public void BatchAddAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite> suiteList, object userState) {
            if ((this.onBeginBatchAddDelegate == null)) {
                this.onBeginBatchAddDelegate = new BeginOperationDelegate(this.OnBeginBatchAdd);
            }
            if ((this.onEndBatchAddDelegate == null)) {
                this.onEndBatchAddDelegate = new EndOperationDelegate(this.OnEndBatchAdd);
            }
            if ((this.onBatchAddCompletedDelegate == null)) {
                this.onBatchAddCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBatchAddCompleted);
            }
            base.InvokeAsync(this.onBeginBatchAddDelegate, new object[] {
                        suiteList}, this.onEndBatchAddDelegate, this.onBatchAddCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService.BeginDeleteSecuritySuite(Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite SecuritySuite, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteSecuritySuite(SecuritySuite, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService.EndDeleteSecuritySuite(System.IAsyncResult result) {
            return base.Channel.EndDeleteSecuritySuite(result);
        }
        
        private System.IAsyncResult OnBeginDeleteSecuritySuite(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite SecuritySuite = ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService)(this)).BeginDeleteSecuritySuite(SecuritySuite, callback, asyncState);
        }
        
        private object[] OnEndDeleteSecuritySuite(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService)(this)).EndDeleteSecuritySuite(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteSecuritySuiteCompleted(object state) {
            if ((this.DeleteSecuritySuiteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteSecuritySuiteCompleted(this, new DeleteSecuritySuiteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteSecuritySuiteAsync(Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite SecuritySuite) {
            this.DeleteSecuritySuiteAsync(SecuritySuite, null);
        }
        
        public void DeleteSecuritySuiteAsync(Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite SecuritySuite, object userState) {
            if ((this.onBeginDeleteSecuritySuiteDelegate == null)) {
                this.onBeginDeleteSecuritySuiteDelegate = new BeginOperationDelegate(this.OnBeginDeleteSecuritySuite);
            }
            if ((this.onEndDeleteSecuritySuiteDelegate == null)) {
                this.onEndDeleteSecuritySuiteDelegate = new EndOperationDelegate(this.OnEndDeleteSecuritySuite);
            }
            if ((this.onDeleteSecuritySuiteCompletedDelegate == null)) {
                this.onDeleteSecuritySuiteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteSecuritySuiteCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteSecuritySuiteDelegate, new object[] {
                        SecuritySuite}, this.onEndDeleteSecuritySuiteDelegate, this.onDeleteSecuritySuiteCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService.BeginCheckSecuritySuiteExist(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite> deviceSuiteList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckSecuritySuiteExist(deviceSuiteList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService.EndCheckSecuritySuiteExist(System.IAsyncResult result) {
            return base.Channel.EndCheckSecuritySuiteExist(result);
        }
        
        private System.IAsyncResult OnBeginCheckSecuritySuiteExist(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite> deviceSuiteList = ((System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite>)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService)(this)).BeginCheckSecuritySuiteExist(deviceSuiteList, callback, asyncState);
        }
        
        private object[] OnEndCheckSecuritySuiteExist(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService)(this)).EndCheckSecuritySuiteExist(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckSecuritySuiteExistCompleted(object state) {
            if ((this.CheckSecuritySuiteExistCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckSecuritySuiteExistCompleted(this, new CheckSecuritySuiteExistCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckSecuritySuiteExistAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite> deviceSuiteList) {
            this.CheckSecuritySuiteExistAsync(deviceSuiteList, null);
        }
        
        public void CheckSecuritySuiteExistAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite> deviceSuiteList, object userState) {
            if ((this.onBeginCheckSecuritySuiteExistDelegate == null)) {
                this.onBeginCheckSecuritySuiteExistDelegate = new BeginOperationDelegate(this.OnBeginCheckSecuritySuiteExist);
            }
            if ((this.onEndCheckSecuritySuiteExistDelegate == null)) {
                this.onEndCheckSecuritySuiteExistDelegate = new EndOperationDelegate(this.OnEndCheckSecuritySuiteExist);
            }
            if ((this.onCheckSecuritySuiteExistCompletedDelegate == null)) {
                this.onCheckSecuritySuiteExistCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckSecuritySuiteExistCompleted);
            }
            base.InvokeAsync(this.onBeginCheckSecuritySuiteExistDelegate, new object[] {
                        deviceSuiteList}, this.onEndCheckSecuritySuiteExistDelegate, this.onCheckSecuritySuiteExistCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService CreateChannel() {
            return new SecuritySuiteServiceClientChannel(this);
        }
        
        private class SecuritySuiteServiceClientChannel : ChannelBase<Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService>, Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService {
            
            public SecuritySuiteServiceClientChannel(System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.SecuritySuiteService.ISecuritySuiteService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginAddSecuritySuite(Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite securitySuite, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = securitySuite;
                System.IAsyncResult _result = base.BeginInvoke("AddSecuritySuite", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean EndAddSecuritySuite(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean)(base.EndInvoke("AddSecuritySuite", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateSecuritySuite(Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite securitySuite, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = securitySuite;
                System.IAsyncResult _result = base.BeginInvoke("UpdateSecuritySuite", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean EndUpdateSecuritySuite(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean)(base.EndInvoke("UpdateSecuritySuite", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSecuritySuiteBySuiteId(string suiteId, string mdvrid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = suiteId;
                _args[1] = mdvrid;
                System.IAsyncResult _result = base.BeginInvoke("GetSecuritySuiteBySuiteId", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfDeviceSuiteh_PhsrrDr EndGetSecuritySuiteBySuiteId(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfDeviceSuiteh_PhsrrDr _result = ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfDeviceSuiteh_PhsrrDr)(base.EndInvoke("GetSecuritySuiteBySuiteId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSecuritySuitesFuzzy(string vehicleId, string suiteId, string mdvrId, string mdvrCoreId, System.Nullable<Gsafety.PTMS.ServiceReference.SecuritySuiteService.InstallStatusType> status, Gsafety.PTMS.ServiceReference.SecuritySuiteService.PagingInfo page, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = vehicleId;
                _args[1] = suiteId;
                _args[2] = mdvrId;
                _args[3] = mdvrCoreId;
                _args[4] = status;
                _args[5] = page;
                System.IAsyncResult _result = base.BeginInvoke("GetSecuritySuitesFuzzy", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.SecuritySuiteService.MultiMessageOfDeviceSuiteh_PhsrrDr EndGetSecuritySuitesFuzzy(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.SecuritySuiteService.MultiMessageOfDeviceSuiteh_PhsrrDr _result = ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.MultiMessageOfDeviceSuiteh_PhsrrDr)(base.EndInvoke("GetSecuritySuitesFuzzy", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateSecuritySuiteStatusByID(string Id, Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuiteStatus status, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = Id;
                _args[1] = status;
                System.IAsyncResult _result = base.BeginInvoke("UpdateSecuritySuiteStatusByID", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean EndUpdateSecuritySuiteStatusByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean)(base.EndInvoke("UpdateSecuritySuiteStatusByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckSecuritySuiteExistBySuiteID(string suiteID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = suiteID;
                System.IAsyncResult _result = base.BeginInvoke("CheckSecuritySuiteExistBySuiteID", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean EndCheckSecuritySuiteExistBySuiteID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean)(base.EndInvoke("CheckSecuritySuiteExistBySuiteID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckSecuritySuiteExistByMdvrCoreId(string mdvrCoreId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = mdvrCoreId;
                System.IAsyncResult _result = base.BeginInvoke("CheckSecuritySuiteExistByMdvrCoreId", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean EndCheckSecuritySuiteExistByMdvrCoreId(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean)(base.EndInvoke("CheckSecuritySuiteExistByMdvrCoreId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckSecuritySuiteExistByMdvrId(string mdvrId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = mdvrId;
                System.IAsyncResult _result = base.BeginInvoke("CheckSecuritySuiteExistByMdvrId", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean EndCheckSecuritySuiteExistByMdvrId(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean)(base.EndInvoke("CheckSecuritySuiteExistByMdvrId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckInstallDetailById(string Id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = Id;
                System.IAsyncResult _result = base.BeginInvoke("CheckInstallDetailById", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean EndCheckInstallDetailById(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean)(base.EndInvoke("CheckInstallDetailById", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginBatchAdd(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite> suiteList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = suiteList;
                System.IAsyncResult _result = base.BeginInvoke("BatchAdd", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean EndBatchAdd(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean)(base.EndInvoke("BatchAdd", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteSecuritySuite(Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite SecuritySuite, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = SecuritySuite;
                System.IAsyncResult _result = base.BeginInvoke("DeleteSecuritySuite", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean EndDeleteSecuritySuite(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean)(base.EndInvoke("DeleteSecuritySuite", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckSecuritySuiteExist(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.SecuritySuiteService.DeviceSuite> deviceSuiteList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = deviceSuiteList;
                System.IAsyncResult _result = base.BeginInvoke("CheckSecuritySuiteExist", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean EndCheckSecuritySuiteExist(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.SecuritySuiteService.SingleMessageOfboolean)(base.EndInvoke("CheckSecuritySuiteExist", _args, result)));
                return _result;
            }
        }
    }
}
