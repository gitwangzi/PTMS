//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace Gsafety.PTMS.ServiceReference.PublicService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LostRegistry", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.PublicService.Contract")]
    public partial class LostRegistry : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AddressField;
        
        private string ClientIDField;
        
        private string ContentField;
        
        private System.DateTime CreateTimeField;
        
        private string IDField;
        
        private string KeywordField;
        
        private string LostIdcardField;
        
        private string LostNameField;
        
        private string LostPhoneField;
        
        private System.DateTime LostTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIDField, value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Keyword {
            get {
                return this.KeywordField;
            }
            set {
                if ((object.ReferenceEquals(this.KeywordField, value) != true)) {
                    this.KeywordField = value;
                    this.RaisePropertyChanged("Keyword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LostIdcard {
            get {
                return this.LostIdcardField;
            }
            set {
                if ((object.ReferenceEquals(this.LostIdcardField, value) != true)) {
                    this.LostIdcardField = value;
                    this.RaisePropertyChanged("LostIdcard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LostName {
            get {
                return this.LostNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LostNameField, value) != true)) {
                    this.LostNameField = value;
                    this.RaisePropertyChanged("LostName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LostPhone {
            get {
                return this.LostPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.LostPhoneField, value) != true)) {
                    this.LostPhoneField = value;
                    this.RaisePropertyChanged("LostPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LostTime {
            get {
                return this.LostTimeField;
            }
            set {
                if ((this.LostTimeField.Equals(value) != true)) {
                    this.LostTimeField = value;
                    this.RaisePropertyChanged("LostTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleMessageOfboolean", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class SingleMessageOfboolean : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private bool ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleMessageOfLostRegistryHP9hECy1", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class SingleMessageOfLostRegistryHP9hECy1 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private Gsafety.PTMS.ServiceReference.PublicService.LostRegistry ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.PublicService.LostRegistry Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagingInfo", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class PagingInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfLostRegistryHP9hECy1", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfLostRegistryHP9hECy1 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.LostRegistry> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.LostRegistry> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FoundRegistry", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Common.Data")]
    public partial class FoundRegistry : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AddressField;
        
        private System.Nullable<System.DateTime> ClaimTimeField;
        
        private string ClientIDField;
        
        private string ContentField;
        
        private System.DateTime CreateTimeField;
        
        private string FoundPhoneField;
        
        private System.DateTime FoundTimeField;
        
        private string FounderField;
        
        private string FounderIDCardField;
        
        private string IDField;
        
        private string KeywordField;
        
        private string LostNameField;
        
        private string LostPhoneField;
        
        private decimal StatusField;
        
        private string VehicleIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ClaimTime {
            get {
                return this.ClaimTimeField;
            }
            set {
                if ((this.ClaimTimeField.Equals(value) != true)) {
                    this.ClaimTimeField = value;
                    this.RaisePropertyChanged("ClaimTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIDField, value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FoundPhone {
            get {
                return this.FoundPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.FoundPhoneField, value) != true)) {
                    this.FoundPhoneField = value;
                    this.RaisePropertyChanged("FoundPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FoundTime {
            get {
                return this.FoundTimeField;
            }
            set {
                if ((this.FoundTimeField.Equals(value) != true)) {
                    this.FoundTimeField = value;
                    this.RaisePropertyChanged("FoundTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Founder {
            get {
                return this.FounderField;
            }
            set {
                if ((object.ReferenceEquals(this.FounderField, value) != true)) {
                    this.FounderField = value;
                    this.RaisePropertyChanged("Founder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FounderIDCard {
            get {
                return this.FounderIDCardField;
            }
            set {
                if ((object.ReferenceEquals(this.FounderIDCardField, value) != true)) {
                    this.FounderIDCardField = value;
                    this.RaisePropertyChanged("FounderIDCard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Keyword {
            get {
                return this.KeywordField;
            }
            set {
                if ((object.ReferenceEquals(this.KeywordField, value) != true)) {
                    this.KeywordField = value;
                    this.RaisePropertyChanged("Keyword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LostName {
            get {
                return this.LostNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LostNameField, value) != true)) {
                    this.LostNameField = value;
                    this.RaisePropertyChanged("LostName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LostPhone {
            get {
                return this.LostPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.LostPhoneField, value) != true)) {
                    this.LostPhoneField = value;
                    this.RaisePropertyChanged("LostPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleID {
            get {
                return this.VehicleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleIDField, value) != true)) {
                    this.VehicleIDField = value;
                    this.RaisePropertyChanged("VehicleID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleMessageOfFoundRegistryi7Zg_POJ5", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class SingleMessageOfFoundRegistryi7Zg_POJ5 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private Gsafety.PTMS.ServiceReference.PublicService.FoundRegistry ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.PublicService.FoundRegistry Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfFoundRegistryi7Zg_POJ5", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfFoundRegistryi7Zg_POJ5 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.FoundRegistry> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.FoundRegistry> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RunMdvrMessage", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.PublicService.Contract")]
    public partial class RunMdvrMessage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ClientIdField;
        
        private string ContentField;
        
        private System.DateTime CreateTimeField;
        
        private string CreatorField;
        
        private string IDField;
        
        private bool IsVisibleField;
        
        private string MessageTitleField;
        
        private short MessageTypeField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientId {
            get {
                return this.ClientIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIdField, value) != true)) {
                    this.ClientIdField = value;
                    this.RaisePropertyChanged("ClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsVisible {
            get {
                return this.IsVisibleField;
            }
            set {
                if ((this.IsVisibleField.Equals(value) != true)) {
                    this.IsVisibleField = value;
                    this.RaisePropertyChanged("IsVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageTitle {
            get {
                return this.MessageTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageTitleField, value) != true)) {
                    this.MessageTitleField = value;
                    this.RaisePropertyChanged("MessageTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short MessageType {
            get {
                return this.MessageTypeField;
            }
            set {
                if ((this.MessageTypeField.Equals(value) != true)) {
                    this.MessageTypeField = value;
                    this.RaisePropertyChanged("MessageType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleMessageOfRunMdvrMessageHP9hECy1", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class SingleMessageOfRunMdvrMessageHP9hECy1 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private Gsafety.PTMS.ServiceReference.PublicService.RunMdvrMessage ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.PublicService.RunMdvrMessage Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfRunMdvrMessageHP9hECy1", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfRunMdvrMessageHP9hECy1 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.RunMdvrMessage> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.RunMdvrMessage> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RunAppMessage", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.PublicService.Contract")]
    public partial class RunAppMessage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool CanDeleteField;
        
        private string ClientIdField;
        
        private System.DateTime CreateTimeField;
        
        private string CreatorField;
        
        private string IDField;
        
        private string MessageField;
        
        private string MessageTitleField;
        
        private short MessageTypeField;
        
        private string ShowMsgTypeField;
        
        private string VehicleIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanDelete {
            get {
                return this.CanDeleteField;
            }
            set {
                if ((this.CanDeleteField.Equals(value) != true)) {
                    this.CanDeleteField = value;
                    this.RaisePropertyChanged("CanDelete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientId {
            get {
                return this.ClientIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIdField, value) != true)) {
                    this.ClientIdField = value;
                    this.RaisePropertyChanged("ClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageTitle {
            get {
                return this.MessageTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageTitleField, value) != true)) {
                    this.MessageTitleField = value;
                    this.RaisePropertyChanged("MessageTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short MessageType {
            get {
                return this.MessageTypeField;
            }
            set {
                if ((this.MessageTypeField.Equals(value) != true)) {
                    this.MessageTypeField = value;
                    this.RaisePropertyChanged("MessageType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShowMsgType {
            get {
                return this.ShowMsgTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ShowMsgTypeField, value) != true)) {
                    this.ShowMsgTypeField = value;
                    this.RaisePropertyChanged("ShowMsgType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleId {
            get {
                return this.VehicleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleIdField, value) != true)) {
                    this.VehicleIdField = value;
                    this.RaisePropertyChanged("VehicleId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleMessageOfRunAppMessageHP9hECy1", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class SingleMessageOfRunAppMessageHP9hECy1 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private Gsafety.PTMS.ServiceReference.PublicService.RunAppMessage ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Gsafety.PTMS.ServiceReference.PublicService.RunAppMessage Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfRunAppMessageHP9hECy1", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfRunAppMessageHP9hECy1 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.RunAppMessage> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.RunAppMessage> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MdvrMessageVehicle", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Common.Data")]
    public partial class MdvrMessageVehicle : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ContentField;
        
        private System.DateTime CreateTimeField;
        
        private string IDField;
        
        private bool IsCheckedField;
        
        private string MdvrCoreSnField;
        
        private string MessageIdField;
        
        private short MessageTypeField;
        
        private string OrganizationField;
        
        private System.DateTime SendTimeField;
        
        private string ShowStateField;
        
        private short StatusField;
        
        private string VehicleIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsChecked {
            get {
                return this.IsCheckedField;
            }
            set {
                if ((this.IsCheckedField.Equals(value) != true)) {
                    this.IsCheckedField = value;
                    this.RaisePropertyChanged("IsChecked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrCoreSn {
            get {
                return this.MdvrCoreSnField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrCoreSnField, value) != true)) {
                    this.MdvrCoreSnField = value;
                    this.RaisePropertyChanged("MdvrCoreSn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageId {
            get {
                return this.MessageIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageIdField, value) != true)) {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short MessageType {
            get {
                return this.MessageTypeField;
            }
            set {
                if ((this.MessageTypeField.Equals(value) != true)) {
                    this.MessageTypeField = value;
                    this.RaisePropertyChanged("MessageType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Organization {
            get {
                return this.OrganizationField;
            }
            set {
                if ((object.ReferenceEquals(this.OrganizationField, value) != true)) {
                    this.OrganizationField = value;
                    this.RaisePropertyChanged("Organization");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SendTime {
            get {
                return this.SendTimeField;
            }
            set {
                if ((this.SendTimeField.Equals(value) != true)) {
                    this.SendTimeField = value;
                    this.RaisePropertyChanged("SendTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShowState {
            get {
                return this.ShowStateField;
            }
            set {
                if ((object.ReferenceEquals(this.ShowStateField, value) != true)) {
                    this.ShowStateField = value;
                    this.RaisePropertyChanged("ShowState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleId {
            get {
                return this.VehicleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleIdField, value) != true)) {
                    this.VehicleIdField = value;
                    this.RaisePropertyChanged("VehicleId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfMdvrMessageVehiclei7Zg_POJ5", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfMdvrMessageVehiclei7Zg_POJ5 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.MdvrMessageVehicle> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.MdvrMessageVehicle> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppMessageVehicle", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Common.Data")]
    public partial class AppMessageVehicle : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ChauffeurIDField;
        
        private string ChauffeurNameField;
        
        private string ClientIDField;
        
        private System.DateTime CreateTimeField;
        
        private string IDField;
        
        private string MessageField;
        
        private string MessageIDField;
        
        private string MessageTitleField;
        
        private short MessageTypeField;
        
        private System.Nullable<System.DateTime> SendTimeField;
        
        private string ShowStateField;
        
        private short StatusField;
        
        private string VehicleIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChauffeurID {
            get {
                return this.ChauffeurIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ChauffeurIDField, value) != true)) {
                    this.ChauffeurIDField = value;
                    this.RaisePropertyChanged("ChauffeurID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChauffeurName {
            get {
                return this.ChauffeurNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ChauffeurNameField, value) != true)) {
                    this.ChauffeurNameField = value;
                    this.RaisePropertyChanged("ChauffeurName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIDField, value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageID {
            get {
                return this.MessageIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageIDField, value) != true)) {
                    this.MessageIDField = value;
                    this.RaisePropertyChanged("MessageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageTitle {
            get {
                return this.MessageTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageTitleField, value) != true)) {
                    this.MessageTitleField = value;
                    this.RaisePropertyChanged("MessageTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short MessageType {
            get {
                return this.MessageTypeField;
            }
            set {
                if ((this.MessageTypeField.Equals(value) != true)) {
                    this.MessageTypeField = value;
                    this.RaisePropertyChanged("MessageType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SendTime {
            get {
                return this.SendTimeField;
            }
            set {
                if ((this.SendTimeField.Equals(value) != true)) {
                    this.SendTimeField = value;
                    this.RaisePropertyChanged("SendTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShowState {
            get {
                return this.ShowStateField;
            }
            set {
                if ((object.ReferenceEquals(this.ShowStateField, value) != true)) {
                    this.ShowStateField = value;
                    this.RaisePropertyChanged("ShowState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleID {
            get {
                return this.VehicleIDField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleIDField, value) != true)) {
                    this.VehicleIDField = value;
                    this.RaisePropertyChanged("VehicleID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfAppMessageVehiclei7Zg_POJ5", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfAppMessageVehiclei7Zg_POJ5 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.AppMessageVehicle> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.AppMessageVehicle> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PublicService.ILostRegistry")]
    public interface ILostRegistry {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILostRegistry/InsertLostRegistry", ReplyAction="http://tempuri.org/ILostRegistry/InsertLostRegistryResponse")]
        System.IAsyncResult BeginInsertLostRegistry(Gsafety.PTMS.ServiceReference.PublicService.LostRegistry model, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndInsertLostRegistry(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILostRegistry/UpdateLostRegistry", ReplyAction="http://tempuri.org/ILostRegistry/UpdateLostRegistryResponse")]
        System.IAsyncResult BeginUpdateLostRegistry(Gsafety.PTMS.ServiceReference.PublicService.LostRegistry model, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndUpdateLostRegistry(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILostRegistry/DeleteLostRegistryByID", ReplyAction="http://tempuri.org/ILostRegistry/DeleteLostRegistryByIDResponse")]
        System.IAsyncResult BeginDeleteLostRegistryByID(string ID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndDeleteLostRegistryByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILostRegistry/GetLostRegistry", ReplyAction="http://tempuri.org/ILostRegistry/GetLostRegistryResponse")]
        System.IAsyncResult BeginGetLostRegistry(string ID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfLostRegistryHP9hECy1 EndGetLostRegistry(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILostRegistry/GetLostRegistryList", ReplyAction="http://tempuri.org/ILostRegistry/GetLostRegistryListResponse")]
        System.IAsyncResult BeginGetLostRegistryList(Gsafety.PTMS.ServiceReference.PublicService.PagingInfo page, string clientID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfLostRegistryHP9hECy1 EndGetLostRegistryList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILostRegistry/GetLostRegistryByConditionList", ReplyAction="http://tempuri.org/ILostRegistry/GetLostRegistryByConditionListResponse")]
        System.IAsyncResult BeginGetLostRegistryByConditionList(Gsafety.PTMS.ServiceReference.PublicService.PagingInfo page, string clientID, string LostIDCard, string Keyword, string LostName, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfLostRegistryHP9hECy1 EndGetLostRegistryByConditionList(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILostRegistryChannel : Gsafety.PTMS.ServiceReference.PublicService.ILostRegistry, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertLostRegistryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertLostRegistryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateLostRegistryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateLostRegistryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteLostRegistryByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteLostRegistryByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLostRegistryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLostRegistryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfLostRegistryHP9hECy1 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfLostRegistryHP9hECy1)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLostRegistryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLostRegistryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfLostRegistryHP9hECy1 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfLostRegistryHP9hECy1)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLostRegistryByConditionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLostRegistryByConditionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfLostRegistryHP9hECy1 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfLostRegistryHP9hECy1)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LostRegistryClient : System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.PublicService.ILostRegistry>, Gsafety.PTMS.ServiceReference.PublicService.ILostRegistry {
        
        private BeginOperationDelegate onBeginInsertLostRegistryDelegate;
        
        private EndOperationDelegate onEndInsertLostRegistryDelegate;
        
        private System.Threading.SendOrPostCallback onInsertLostRegistryCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateLostRegistryDelegate;
        
        private EndOperationDelegate onEndUpdateLostRegistryDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateLostRegistryCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteLostRegistryByIDDelegate;
        
        private EndOperationDelegate onEndDeleteLostRegistryByIDDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteLostRegistryByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLostRegistryDelegate;
        
        private EndOperationDelegate onEndGetLostRegistryDelegate;
        
        private System.Threading.SendOrPostCallback onGetLostRegistryCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLostRegistryListDelegate;
        
        private EndOperationDelegate onEndGetLostRegistryListDelegate;
        
        private System.Threading.SendOrPostCallback onGetLostRegistryListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLostRegistryByConditionListDelegate;
        
        private EndOperationDelegate onEndGetLostRegistryByConditionListDelegate;
        
        private System.Threading.SendOrPostCallback onGetLostRegistryByConditionListCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public LostRegistryClient() {
        }
        
        public LostRegistryClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LostRegistryClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LostRegistryClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LostRegistryClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<InsertLostRegistryCompletedEventArgs> InsertLostRegistryCompleted;
        
        public event System.EventHandler<UpdateLostRegistryCompletedEventArgs> UpdateLostRegistryCompleted;
        
        public event System.EventHandler<DeleteLostRegistryByIDCompletedEventArgs> DeleteLostRegistryByIDCompleted;
        
        public event System.EventHandler<GetLostRegistryCompletedEventArgs> GetLostRegistryCompleted;
        
        public event System.EventHandler<GetLostRegistryListCompletedEventArgs> GetLostRegistryListCompleted;
        
        public event System.EventHandler<GetLostRegistryByConditionListCompletedEventArgs> GetLostRegistryByConditionListCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PublicService.ILostRegistry.BeginInsertLostRegistry(Gsafety.PTMS.ServiceReference.PublicService.LostRegistry model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertLostRegistry(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.PublicService.ILostRegistry.EndInsertLostRegistry(System.IAsyncResult result) {
            return base.Channel.EndInsertLostRegistry(result);
        }
        
        private System.IAsyncResult OnBeginInsertLostRegistry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.PublicService.LostRegistry model = ((Gsafety.PTMS.ServiceReference.PublicService.LostRegistry)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.PublicService.ILostRegistry)(this)).BeginInsertLostRegistry(model, callback, asyncState);
        }
        
        private object[] OnEndInsertLostRegistry(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.PublicService.ILostRegistry)(this)).EndInsertLostRegistry(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertLostRegistryCompleted(object state) {
            if ((this.InsertLostRegistryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertLostRegistryCompleted(this, new InsertLostRegistryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertLostRegistryAsync(Gsafety.PTMS.ServiceReference.PublicService.LostRegistry model) {
            this.InsertLostRegistryAsync(model, null);
        }
        
        public void InsertLostRegistryAsync(Gsafety.PTMS.ServiceReference.PublicService.LostRegistry model, object userState) {
            if ((this.onBeginInsertLostRegistryDelegate == null)) {
                this.onBeginInsertLostRegistryDelegate = new BeginOperationDelegate(this.OnBeginInsertLostRegistry);
            }
            if ((this.onEndInsertLostRegistryDelegate == null)) {
                this.onEndInsertLostRegistryDelegate = new EndOperationDelegate(this.OnEndInsertLostRegistry);
            }
            if ((this.onInsertLostRegistryCompletedDelegate == null)) {
                this.onInsertLostRegistryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertLostRegistryCompleted);
            }
            base.InvokeAsync(this.onBeginInsertLostRegistryDelegate, new object[] {
                        model}, this.onEndInsertLostRegistryDelegate, this.onInsertLostRegistryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PublicService.ILostRegistry.BeginUpdateLostRegistry(Gsafety.PTMS.ServiceReference.PublicService.LostRegistry model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateLostRegistry(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.PublicService.ILostRegistry.EndUpdateLostRegistry(System.IAsyncResult result) {
            return base.Channel.EndUpdateLostRegistry(result);
        }
        
        private System.IAsyncResult OnBeginUpdateLostRegistry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.PublicService.LostRegistry model = ((Gsafety.PTMS.ServiceReference.PublicService.LostRegistry)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.PublicService.ILostRegistry)(this)).BeginUpdateLostRegistry(model, callback, asyncState);
        }
        
        private object[] OnEndUpdateLostRegistry(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.PublicService.ILostRegistry)(this)).EndUpdateLostRegistry(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateLostRegistryCompleted(object state) {
            if ((this.UpdateLostRegistryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateLostRegistryCompleted(this, new UpdateLostRegistryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateLostRegistryAsync(Gsafety.PTMS.ServiceReference.PublicService.LostRegistry model) {
            this.UpdateLostRegistryAsync(model, null);
        }
        
        public void UpdateLostRegistryAsync(Gsafety.PTMS.ServiceReference.PublicService.LostRegistry model, object userState) {
            if ((this.onBeginUpdateLostRegistryDelegate == null)) {
                this.onBeginUpdateLostRegistryDelegate = new BeginOperationDelegate(this.OnBeginUpdateLostRegistry);
            }
            if ((this.onEndUpdateLostRegistryDelegate == null)) {
                this.onEndUpdateLostRegistryDelegate = new EndOperationDelegate(this.OnEndUpdateLostRegistry);
            }
            if ((this.onUpdateLostRegistryCompletedDelegate == null)) {
                this.onUpdateLostRegistryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateLostRegistryCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateLostRegistryDelegate, new object[] {
                        model}, this.onEndUpdateLostRegistryDelegate, this.onUpdateLostRegistryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PublicService.ILostRegistry.BeginDeleteLostRegistryByID(string ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteLostRegistryByID(ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.PublicService.ILostRegistry.EndDeleteLostRegistryByID(System.IAsyncResult result) {
            return base.Channel.EndDeleteLostRegistryByID(result);
        }
        
        private System.IAsyncResult OnBeginDeleteLostRegistryByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ID = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.PublicService.ILostRegistry)(this)).BeginDeleteLostRegistryByID(ID, callback, asyncState);
        }
        
        private object[] OnEndDeleteLostRegistryByID(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.PublicService.ILostRegistry)(this)).EndDeleteLostRegistryByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteLostRegistryByIDCompleted(object state) {
            if ((this.DeleteLostRegistryByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteLostRegistryByIDCompleted(this, new DeleteLostRegistryByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteLostRegistryByIDAsync(string ID) {
            this.DeleteLostRegistryByIDAsync(ID, null);
        }
        
        public void DeleteLostRegistryByIDAsync(string ID, object userState) {
            if ((this.onBeginDeleteLostRegistryByIDDelegate == null)) {
                this.onBeginDeleteLostRegistryByIDDelegate = new BeginOperationDelegate(this.OnBeginDeleteLostRegistryByID);
            }
            if ((this.onEndDeleteLostRegistryByIDDelegate == null)) {
                this.onEndDeleteLostRegistryByIDDelegate = new EndOperationDelegate(this.OnEndDeleteLostRegistryByID);
            }
            if ((this.onDeleteLostRegistryByIDCompletedDelegate == null)) {
                this.onDeleteLostRegistryByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteLostRegistryByIDCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteLostRegistryByIDDelegate, new object[] {
                        ID}, this.onEndDeleteLostRegistryByIDDelegate, this.onDeleteLostRegistryByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PublicService.ILostRegistry.BeginGetLostRegistry(string ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLostRegistry(ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfLostRegistryHP9hECy1 Gsafety.PTMS.ServiceReference.PublicService.ILostRegistry.EndGetLostRegistry(System.IAsyncResult result) {
            return base.Channel.EndGetLostRegistry(result);
        }
        
        private System.IAsyncResult OnBeginGetLostRegistry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ID = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.PublicService.ILostRegistry)(this)).BeginGetLostRegistry(ID, callback, asyncState);
        }
        
        private object[] OnEndGetLostRegistry(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfLostRegistryHP9hECy1 retVal = ((Gsafety.PTMS.ServiceReference.PublicService.ILostRegistry)(this)).EndGetLostRegistry(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLostRegistryCompleted(object state) {
            if ((this.GetLostRegistryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLostRegistryCompleted(this, new GetLostRegistryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLostRegistryAsync(string ID) {
            this.GetLostRegistryAsync(ID, null);
        }
        
        public void GetLostRegistryAsync(string ID, object userState) {
            if ((this.onBeginGetLostRegistryDelegate == null)) {
                this.onBeginGetLostRegistryDelegate = new BeginOperationDelegate(this.OnBeginGetLostRegistry);
            }
            if ((this.onEndGetLostRegistryDelegate == null)) {
                this.onEndGetLostRegistryDelegate = new EndOperationDelegate(this.OnEndGetLostRegistry);
            }
            if ((this.onGetLostRegistryCompletedDelegate == null)) {
                this.onGetLostRegistryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLostRegistryCompleted);
            }
            base.InvokeAsync(this.onBeginGetLostRegistryDelegate, new object[] {
                        ID}, this.onEndGetLostRegistryDelegate, this.onGetLostRegistryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PublicService.ILostRegistry.BeginGetLostRegistryList(Gsafety.PTMS.ServiceReference.PublicService.PagingInfo page, string clientID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLostRegistryList(page, clientID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfLostRegistryHP9hECy1 Gsafety.PTMS.ServiceReference.PublicService.ILostRegistry.EndGetLostRegistryList(System.IAsyncResult result) {
            return base.Channel.EndGetLostRegistryList(result);
        }
        
        private System.IAsyncResult OnBeginGetLostRegistryList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.PublicService.PagingInfo page = ((Gsafety.PTMS.ServiceReference.PublicService.PagingInfo)(inValues[0]));
            string clientID = ((string)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.PublicService.ILostRegistry)(this)).BeginGetLostRegistryList(page, clientID, callback, asyncState);
        }
        
        private object[] OnEndGetLostRegistryList(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfLostRegistryHP9hECy1 retVal = ((Gsafety.PTMS.ServiceReference.PublicService.ILostRegistry)(this)).EndGetLostRegistryList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLostRegistryListCompleted(object state) {
            if ((this.GetLostRegistryListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLostRegistryListCompleted(this, new GetLostRegistryListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLostRegistryListAsync(Gsafety.PTMS.ServiceReference.PublicService.PagingInfo page, string clientID) {
            this.GetLostRegistryListAsync(page, clientID, null);
        }
        
        public void GetLostRegistryListAsync(Gsafety.PTMS.ServiceReference.PublicService.PagingInfo page, string clientID, object userState) {
            if ((this.onBeginGetLostRegistryListDelegate == null)) {
                this.onBeginGetLostRegistryListDelegate = new BeginOperationDelegate(this.OnBeginGetLostRegistryList);
            }
            if ((this.onEndGetLostRegistryListDelegate == null)) {
                this.onEndGetLostRegistryListDelegate = new EndOperationDelegate(this.OnEndGetLostRegistryList);
            }
            if ((this.onGetLostRegistryListCompletedDelegate == null)) {
                this.onGetLostRegistryListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLostRegistryListCompleted);
            }
            base.InvokeAsync(this.onBeginGetLostRegistryListDelegate, new object[] {
                        page,
                        clientID}, this.onEndGetLostRegistryListDelegate, this.onGetLostRegistryListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PublicService.ILostRegistry.BeginGetLostRegistryByConditionList(Gsafety.PTMS.ServiceReference.PublicService.PagingInfo page, string clientID, string LostIDCard, string Keyword, string LostName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLostRegistryByConditionList(page, clientID, LostIDCard, Keyword, LostName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfLostRegistryHP9hECy1 Gsafety.PTMS.ServiceReference.PublicService.ILostRegistry.EndGetLostRegistryByConditionList(System.IAsyncResult result) {
            return base.Channel.EndGetLostRegistryByConditionList(result);
        }
        
        private System.IAsyncResult OnBeginGetLostRegistryByConditionList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.PublicService.PagingInfo page = ((Gsafety.PTMS.ServiceReference.PublicService.PagingInfo)(inValues[0]));
            string clientID = ((string)(inValues[1]));
            string LostIDCard = ((string)(inValues[2]));
            string Keyword = ((string)(inValues[3]));
            string LostName = ((string)(inValues[4]));
            return ((Gsafety.PTMS.ServiceReference.PublicService.ILostRegistry)(this)).BeginGetLostRegistryByConditionList(page, clientID, LostIDCard, Keyword, LostName, callback, asyncState);
        }
        
        private object[] OnEndGetLostRegistryByConditionList(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfLostRegistryHP9hECy1 retVal = ((Gsafety.PTMS.ServiceReference.PublicService.ILostRegistry)(this)).EndGetLostRegistryByConditionList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLostRegistryByConditionListCompleted(object state) {
            if ((this.GetLostRegistryByConditionListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLostRegistryByConditionListCompleted(this, new GetLostRegistryByConditionListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLostRegistryByConditionListAsync(Gsafety.PTMS.ServiceReference.PublicService.PagingInfo page, string clientID, string LostIDCard, string Keyword, string LostName) {
            this.GetLostRegistryByConditionListAsync(page, clientID, LostIDCard, Keyword, LostName, null);
        }
        
        public void GetLostRegistryByConditionListAsync(Gsafety.PTMS.ServiceReference.PublicService.PagingInfo page, string clientID, string LostIDCard, string Keyword, string LostName, object userState) {
            if ((this.onBeginGetLostRegistryByConditionListDelegate == null)) {
                this.onBeginGetLostRegistryByConditionListDelegate = new BeginOperationDelegate(this.OnBeginGetLostRegistryByConditionList);
            }
            if ((this.onEndGetLostRegistryByConditionListDelegate == null)) {
                this.onEndGetLostRegistryByConditionListDelegate = new EndOperationDelegate(this.OnEndGetLostRegistryByConditionList);
            }
            if ((this.onGetLostRegistryByConditionListCompletedDelegate == null)) {
                this.onGetLostRegistryByConditionListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLostRegistryByConditionListCompleted);
            }
            base.InvokeAsync(this.onBeginGetLostRegistryByConditionListDelegate, new object[] {
                        page,
                        clientID,
                        LostIDCard,
                        Keyword,
                        LostName}, this.onEndGetLostRegistryByConditionListDelegate, this.onGetLostRegistryByConditionListCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Gsafety.PTMS.ServiceReference.PublicService.ILostRegistry CreateChannel() {
            return new LostRegistryClientChannel(this);
        }
        
        private class LostRegistryClientChannel : ChannelBase<Gsafety.PTMS.ServiceReference.PublicService.ILostRegistry>, Gsafety.PTMS.ServiceReference.PublicService.ILostRegistry {
            
            public LostRegistryClientChannel(System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.PublicService.ILostRegistry> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginInsertLostRegistry(Gsafety.PTMS.ServiceReference.PublicService.LostRegistry model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("InsertLostRegistry", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndInsertLostRegistry(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(base.EndInvoke("InsertLostRegistry", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateLostRegistry(Gsafety.PTMS.ServiceReference.PublicService.LostRegistry model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("UpdateLostRegistry", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndUpdateLostRegistry(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(base.EndInvoke("UpdateLostRegistry", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteLostRegistryByID(string ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ID;
                System.IAsyncResult _result = base.BeginInvoke("DeleteLostRegistryByID", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndDeleteLostRegistryByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(base.EndInvoke("DeleteLostRegistryByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLostRegistry(string ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ID;
                System.IAsyncResult _result = base.BeginInvoke("GetLostRegistry", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfLostRegistryHP9hECy1 EndGetLostRegistry(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfLostRegistryHP9hECy1 _result = ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfLostRegistryHP9hECy1)(base.EndInvoke("GetLostRegistry", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLostRegistryList(Gsafety.PTMS.ServiceReference.PublicService.PagingInfo page, string clientID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = page;
                _args[1] = clientID;
                System.IAsyncResult _result = base.BeginInvoke("GetLostRegistryList", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfLostRegistryHP9hECy1 EndGetLostRegistryList(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfLostRegistryHP9hECy1 _result = ((Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfLostRegistryHP9hECy1)(base.EndInvoke("GetLostRegistryList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLostRegistryByConditionList(Gsafety.PTMS.ServiceReference.PublicService.PagingInfo page, string clientID, string LostIDCard, string Keyword, string LostName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = page;
                _args[1] = clientID;
                _args[2] = LostIDCard;
                _args[3] = Keyword;
                _args[4] = LostName;
                System.IAsyncResult _result = base.BeginInvoke("GetLostRegistryByConditionList", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfLostRegistryHP9hECy1 EndGetLostRegistryByConditionList(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfLostRegistryHP9hECy1 _result = ((Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfLostRegistryHP9hECy1)(base.EndInvoke("GetLostRegistryByConditionList", _args, result)));
                return _result;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PublicService.IFoundRegistry")]
    public interface IFoundRegistry {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFoundRegistry/InsertFoundRegistry", ReplyAction="http://tempuri.org/IFoundRegistry/InsertFoundRegistryResponse")]
        System.IAsyncResult BeginInsertFoundRegistry(Gsafety.PTMS.ServiceReference.PublicService.FoundRegistry model, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndInsertFoundRegistry(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFoundRegistry/UpdateFoundRegistry", ReplyAction="http://tempuri.org/IFoundRegistry/UpdateFoundRegistryResponse")]
        System.IAsyncResult BeginUpdateFoundRegistry(Gsafety.PTMS.ServiceReference.PublicService.FoundRegistry model, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndUpdateFoundRegistry(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFoundRegistry/DeleteFoundRegistryByID", ReplyAction="http://tempuri.org/IFoundRegistry/DeleteFoundRegistryByIDResponse")]
        System.IAsyncResult BeginDeleteFoundRegistryByID(string ID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndDeleteFoundRegistryByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFoundRegistry/GetFoundRegistry", ReplyAction="http://tempuri.org/IFoundRegistry/GetFoundRegistryResponse")]
        System.IAsyncResult BeginGetFoundRegistry(string ID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfFoundRegistryi7Zg_POJ5 EndGetFoundRegistry(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFoundRegistry/GetFoundRegistryList", ReplyAction="http://tempuri.org/IFoundRegistry/GetFoundRegistryListResponse")]
        System.IAsyncResult BeginGetFoundRegistryList(Gsafety.PTMS.ServiceReference.PublicService.PagingInfo page, string clientID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfFoundRegistryi7Zg_POJ5 EndGetFoundRegistryList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IFoundRegistry/GetFoundRegistryByConditionList", ReplyAction="http://tempuri.org/IFoundRegistry/GetFoundRegistryByConditionListResponse")]
        System.IAsyncResult BeginGetFoundRegistryByConditionList(Gsafety.PTMS.ServiceReference.PublicService.PagingInfo page, string clientID, string Founder, string Keyword, string LostName, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfFoundRegistryi7Zg_POJ5 EndGetFoundRegistryByConditionList(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFoundRegistryChannel : Gsafety.PTMS.ServiceReference.PublicService.IFoundRegistry, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertFoundRegistryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertFoundRegistryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateFoundRegistryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateFoundRegistryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteFoundRegistryByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteFoundRegistryByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFoundRegistryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFoundRegistryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfFoundRegistryi7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfFoundRegistryi7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFoundRegistryListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFoundRegistryListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfFoundRegistryi7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfFoundRegistryi7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFoundRegistryByConditionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFoundRegistryByConditionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfFoundRegistryi7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfFoundRegistryi7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FoundRegistryClient : System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.PublicService.IFoundRegistry>, Gsafety.PTMS.ServiceReference.PublicService.IFoundRegistry {
        
        private BeginOperationDelegate onBeginInsertFoundRegistryDelegate;
        
        private EndOperationDelegate onEndInsertFoundRegistryDelegate;
        
        private System.Threading.SendOrPostCallback onInsertFoundRegistryCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateFoundRegistryDelegate;
        
        private EndOperationDelegate onEndUpdateFoundRegistryDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateFoundRegistryCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteFoundRegistryByIDDelegate;
        
        private EndOperationDelegate onEndDeleteFoundRegistryByIDDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteFoundRegistryByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFoundRegistryDelegate;
        
        private EndOperationDelegate onEndGetFoundRegistryDelegate;
        
        private System.Threading.SendOrPostCallback onGetFoundRegistryCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFoundRegistryListDelegate;
        
        private EndOperationDelegate onEndGetFoundRegistryListDelegate;
        
        private System.Threading.SendOrPostCallback onGetFoundRegistryListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFoundRegistryByConditionListDelegate;
        
        private EndOperationDelegate onEndGetFoundRegistryByConditionListDelegate;
        
        private System.Threading.SendOrPostCallback onGetFoundRegistryByConditionListCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public FoundRegistryClient() {
        }
        
        public FoundRegistryClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FoundRegistryClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FoundRegistryClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FoundRegistryClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<InsertFoundRegistryCompletedEventArgs> InsertFoundRegistryCompleted;
        
        public event System.EventHandler<UpdateFoundRegistryCompletedEventArgs> UpdateFoundRegistryCompleted;
        
        public event System.EventHandler<DeleteFoundRegistryByIDCompletedEventArgs> DeleteFoundRegistryByIDCompleted;
        
        public event System.EventHandler<GetFoundRegistryCompletedEventArgs> GetFoundRegistryCompleted;
        
        public event System.EventHandler<GetFoundRegistryListCompletedEventArgs> GetFoundRegistryListCompleted;
        
        public event System.EventHandler<GetFoundRegistryByConditionListCompletedEventArgs> GetFoundRegistryByConditionListCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PublicService.IFoundRegistry.BeginInsertFoundRegistry(Gsafety.PTMS.ServiceReference.PublicService.FoundRegistry model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertFoundRegistry(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.PublicService.IFoundRegistry.EndInsertFoundRegistry(System.IAsyncResult result) {
            return base.Channel.EndInsertFoundRegistry(result);
        }
        
        private System.IAsyncResult OnBeginInsertFoundRegistry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.PublicService.FoundRegistry model = ((Gsafety.PTMS.ServiceReference.PublicService.FoundRegistry)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.PublicService.IFoundRegistry)(this)).BeginInsertFoundRegistry(model, callback, asyncState);
        }
        
        private object[] OnEndInsertFoundRegistry(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.PublicService.IFoundRegistry)(this)).EndInsertFoundRegistry(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertFoundRegistryCompleted(object state) {
            if ((this.InsertFoundRegistryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertFoundRegistryCompleted(this, new InsertFoundRegistryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertFoundRegistryAsync(Gsafety.PTMS.ServiceReference.PublicService.FoundRegistry model) {
            this.InsertFoundRegistryAsync(model, null);
        }
        
        public void InsertFoundRegistryAsync(Gsafety.PTMS.ServiceReference.PublicService.FoundRegistry model, object userState) {
            if ((this.onBeginInsertFoundRegistryDelegate == null)) {
                this.onBeginInsertFoundRegistryDelegate = new BeginOperationDelegate(this.OnBeginInsertFoundRegistry);
            }
            if ((this.onEndInsertFoundRegistryDelegate == null)) {
                this.onEndInsertFoundRegistryDelegate = new EndOperationDelegate(this.OnEndInsertFoundRegistry);
            }
            if ((this.onInsertFoundRegistryCompletedDelegate == null)) {
                this.onInsertFoundRegistryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertFoundRegistryCompleted);
            }
            base.InvokeAsync(this.onBeginInsertFoundRegistryDelegate, new object[] {
                        model}, this.onEndInsertFoundRegistryDelegate, this.onInsertFoundRegistryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PublicService.IFoundRegistry.BeginUpdateFoundRegistry(Gsafety.PTMS.ServiceReference.PublicService.FoundRegistry model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateFoundRegistry(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.PublicService.IFoundRegistry.EndUpdateFoundRegistry(System.IAsyncResult result) {
            return base.Channel.EndUpdateFoundRegistry(result);
        }
        
        private System.IAsyncResult OnBeginUpdateFoundRegistry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.PublicService.FoundRegistry model = ((Gsafety.PTMS.ServiceReference.PublicService.FoundRegistry)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.PublicService.IFoundRegistry)(this)).BeginUpdateFoundRegistry(model, callback, asyncState);
        }
        
        private object[] OnEndUpdateFoundRegistry(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.PublicService.IFoundRegistry)(this)).EndUpdateFoundRegistry(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateFoundRegistryCompleted(object state) {
            if ((this.UpdateFoundRegistryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateFoundRegistryCompleted(this, new UpdateFoundRegistryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateFoundRegistryAsync(Gsafety.PTMS.ServiceReference.PublicService.FoundRegistry model) {
            this.UpdateFoundRegistryAsync(model, null);
        }
        
        public void UpdateFoundRegistryAsync(Gsafety.PTMS.ServiceReference.PublicService.FoundRegistry model, object userState) {
            if ((this.onBeginUpdateFoundRegistryDelegate == null)) {
                this.onBeginUpdateFoundRegistryDelegate = new BeginOperationDelegate(this.OnBeginUpdateFoundRegistry);
            }
            if ((this.onEndUpdateFoundRegistryDelegate == null)) {
                this.onEndUpdateFoundRegistryDelegate = new EndOperationDelegate(this.OnEndUpdateFoundRegistry);
            }
            if ((this.onUpdateFoundRegistryCompletedDelegate == null)) {
                this.onUpdateFoundRegistryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateFoundRegistryCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateFoundRegistryDelegate, new object[] {
                        model}, this.onEndUpdateFoundRegistryDelegate, this.onUpdateFoundRegistryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PublicService.IFoundRegistry.BeginDeleteFoundRegistryByID(string ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteFoundRegistryByID(ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.PublicService.IFoundRegistry.EndDeleteFoundRegistryByID(System.IAsyncResult result) {
            return base.Channel.EndDeleteFoundRegistryByID(result);
        }
        
        private System.IAsyncResult OnBeginDeleteFoundRegistryByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ID = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.PublicService.IFoundRegistry)(this)).BeginDeleteFoundRegistryByID(ID, callback, asyncState);
        }
        
        private object[] OnEndDeleteFoundRegistryByID(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.PublicService.IFoundRegistry)(this)).EndDeleteFoundRegistryByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteFoundRegistryByIDCompleted(object state) {
            if ((this.DeleteFoundRegistryByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteFoundRegistryByIDCompleted(this, new DeleteFoundRegistryByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteFoundRegistryByIDAsync(string ID) {
            this.DeleteFoundRegistryByIDAsync(ID, null);
        }
        
        public void DeleteFoundRegistryByIDAsync(string ID, object userState) {
            if ((this.onBeginDeleteFoundRegistryByIDDelegate == null)) {
                this.onBeginDeleteFoundRegistryByIDDelegate = new BeginOperationDelegate(this.OnBeginDeleteFoundRegistryByID);
            }
            if ((this.onEndDeleteFoundRegistryByIDDelegate == null)) {
                this.onEndDeleteFoundRegistryByIDDelegate = new EndOperationDelegate(this.OnEndDeleteFoundRegistryByID);
            }
            if ((this.onDeleteFoundRegistryByIDCompletedDelegate == null)) {
                this.onDeleteFoundRegistryByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteFoundRegistryByIDCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteFoundRegistryByIDDelegate, new object[] {
                        ID}, this.onEndDeleteFoundRegistryByIDDelegate, this.onDeleteFoundRegistryByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PublicService.IFoundRegistry.BeginGetFoundRegistry(string ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFoundRegistry(ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfFoundRegistryi7Zg_POJ5 Gsafety.PTMS.ServiceReference.PublicService.IFoundRegistry.EndGetFoundRegistry(System.IAsyncResult result) {
            return base.Channel.EndGetFoundRegistry(result);
        }
        
        private System.IAsyncResult OnBeginGetFoundRegistry(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ID = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.PublicService.IFoundRegistry)(this)).BeginGetFoundRegistry(ID, callback, asyncState);
        }
        
        private object[] OnEndGetFoundRegistry(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfFoundRegistryi7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.PublicService.IFoundRegistry)(this)).EndGetFoundRegistry(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFoundRegistryCompleted(object state) {
            if ((this.GetFoundRegistryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFoundRegistryCompleted(this, new GetFoundRegistryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFoundRegistryAsync(string ID) {
            this.GetFoundRegistryAsync(ID, null);
        }
        
        public void GetFoundRegistryAsync(string ID, object userState) {
            if ((this.onBeginGetFoundRegistryDelegate == null)) {
                this.onBeginGetFoundRegistryDelegate = new BeginOperationDelegate(this.OnBeginGetFoundRegistry);
            }
            if ((this.onEndGetFoundRegistryDelegate == null)) {
                this.onEndGetFoundRegistryDelegate = new EndOperationDelegate(this.OnEndGetFoundRegistry);
            }
            if ((this.onGetFoundRegistryCompletedDelegate == null)) {
                this.onGetFoundRegistryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFoundRegistryCompleted);
            }
            base.InvokeAsync(this.onBeginGetFoundRegistryDelegate, new object[] {
                        ID}, this.onEndGetFoundRegistryDelegate, this.onGetFoundRegistryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PublicService.IFoundRegistry.BeginGetFoundRegistryList(Gsafety.PTMS.ServiceReference.PublicService.PagingInfo page, string clientID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFoundRegistryList(page, clientID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfFoundRegistryi7Zg_POJ5 Gsafety.PTMS.ServiceReference.PublicService.IFoundRegistry.EndGetFoundRegistryList(System.IAsyncResult result) {
            return base.Channel.EndGetFoundRegistryList(result);
        }
        
        private System.IAsyncResult OnBeginGetFoundRegistryList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.PublicService.PagingInfo page = ((Gsafety.PTMS.ServiceReference.PublicService.PagingInfo)(inValues[0]));
            string clientID = ((string)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.PublicService.IFoundRegistry)(this)).BeginGetFoundRegistryList(page, clientID, callback, asyncState);
        }
        
        private object[] OnEndGetFoundRegistryList(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfFoundRegistryi7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.PublicService.IFoundRegistry)(this)).EndGetFoundRegistryList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFoundRegistryListCompleted(object state) {
            if ((this.GetFoundRegistryListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFoundRegistryListCompleted(this, new GetFoundRegistryListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFoundRegistryListAsync(Gsafety.PTMS.ServiceReference.PublicService.PagingInfo page, string clientID) {
            this.GetFoundRegistryListAsync(page, clientID, null);
        }
        
        public void GetFoundRegistryListAsync(Gsafety.PTMS.ServiceReference.PublicService.PagingInfo page, string clientID, object userState) {
            if ((this.onBeginGetFoundRegistryListDelegate == null)) {
                this.onBeginGetFoundRegistryListDelegate = new BeginOperationDelegate(this.OnBeginGetFoundRegistryList);
            }
            if ((this.onEndGetFoundRegistryListDelegate == null)) {
                this.onEndGetFoundRegistryListDelegate = new EndOperationDelegate(this.OnEndGetFoundRegistryList);
            }
            if ((this.onGetFoundRegistryListCompletedDelegate == null)) {
                this.onGetFoundRegistryListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFoundRegistryListCompleted);
            }
            base.InvokeAsync(this.onBeginGetFoundRegistryListDelegate, new object[] {
                        page,
                        clientID}, this.onEndGetFoundRegistryListDelegate, this.onGetFoundRegistryListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PublicService.IFoundRegistry.BeginGetFoundRegistryByConditionList(Gsafety.PTMS.ServiceReference.PublicService.PagingInfo page, string clientID, string Founder, string Keyword, string LostName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFoundRegistryByConditionList(page, clientID, Founder, Keyword, LostName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfFoundRegistryi7Zg_POJ5 Gsafety.PTMS.ServiceReference.PublicService.IFoundRegistry.EndGetFoundRegistryByConditionList(System.IAsyncResult result) {
            return base.Channel.EndGetFoundRegistryByConditionList(result);
        }
        
        private System.IAsyncResult OnBeginGetFoundRegistryByConditionList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.PublicService.PagingInfo page = ((Gsafety.PTMS.ServiceReference.PublicService.PagingInfo)(inValues[0]));
            string clientID = ((string)(inValues[1]));
            string Founder = ((string)(inValues[2]));
            string Keyword = ((string)(inValues[3]));
            string LostName = ((string)(inValues[4]));
            return ((Gsafety.PTMS.ServiceReference.PublicService.IFoundRegistry)(this)).BeginGetFoundRegistryByConditionList(page, clientID, Founder, Keyword, LostName, callback, asyncState);
        }
        
        private object[] OnEndGetFoundRegistryByConditionList(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfFoundRegistryi7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.PublicService.IFoundRegistry)(this)).EndGetFoundRegistryByConditionList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFoundRegistryByConditionListCompleted(object state) {
            if ((this.GetFoundRegistryByConditionListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFoundRegistryByConditionListCompleted(this, new GetFoundRegistryByConditionListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFoundRegistryByConditionListAsync(Gsafety.PTMS.ServiceReference.PublicService.PagingInfo page, string clientID, string Founder, string Keyword, string LostName) {
            this.GetFoundRegistryByConditionListAsync(page, clientID, Founder, Keyword, LostName, null);
        }
        
        public void GetFoundRegistryByConditionListAsync(Gsafety.PTMS.ServiceReference.PublicService.PagingInfo page, string clientID, string Founder, string Keyword, string LostName, object userState) {
            if ((this.onBeginGetFoundRegistryByConditionListDelegate == null)) {
                this.onBeginGetFoundRegistryByConditionListDelegate = new BeginOperationDelegate(this.OnBeginGetFoundRegistryByConditionList);
            }
            if ((this.onEndGetFoundRegistryByConditionListDelegate == null)) {
                this.onEndGetFoundRegistryByConditionListDelegate = new EndOperationDelegate(this.OnEndGetFoundRegistryByConditionList);
            }
            if ((this.onGetFoundRegistryByConditionListCompletedDelegate == null)) {
                this.onGetFoundRegistryByConditionListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFoundRegistryByConditionListCompleted);
            }
            base.InvokeAsync(this.onBeginGetFoundRegistryByConditionListDelegate, new object[] {
                        page,
                        clientID,
                        Founder,
                        Keyword,
                        LostName}, this.onEndGetFoundRegistryByConditionListDelegate, this.onGetFoundRegistryByConditionListCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Gsafety.PTMS.ServiceReference.PublicService.IFoundRegistry CreateChannel() {
            return new FoundRegistryClientChannel(this);
        }
        
        private class FoundRegistryClientChannel : ChannelBase<Gsafety.PTMS.ServiceReference.PublicService.IFoundRegistry>, Gsafety.PTMS.ServiceReference.PublicService.IFoundRegistry {
            
            public FoundRegistryClientChannel(System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.PublicService.IFoundRegistry> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginInsertFoundRegistry(Gsafety.PTMS.ServiceReference.PublicService.FoundRegistry model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("InsertFoundRegistry", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndInsertFoundRegistry(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(base.EndInvoke("InsertFoundRegistry", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateFoundRegistry(Gsafety.PTMS.ServiceReference.PublicService.FoundRegistry model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("UpdateFoundRegistry", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndUpdateFoundRegistry(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(base.EndInvoke("UpdateFoundRegistry", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteFoundRegistryByID(string ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ID;
                System.IAsyncResult _result = base.BeginInvoke("DeleteFoundRegistryByID", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndDeleteFoundRegistryByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(base.EndInvoke("DeleteFoundRegistryByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetFoundRegistry(string ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ID;
                System.IAsyncResult _result = base.BeginInvoke("GetFoundRegistry", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfFoundRegistryi7Zg_POJ5 EndGetFoundRegistry(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfFoundRegistryi7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfFoundRegistryi7Zg_POJ5)(base.EndInvoke("GetFoundRegistry", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetFoundRegistryList(Gsafety.PTMS.ServiceReference.PublicService.PagingInfo page, string clientID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = page;
                _args[1] = clientID;
                System.IAsyncResult _result = base.BeginInvoke("GetFoundRegistryList", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfFoundRegistryi7Zg_POJ5 EndGetFoundRegistryList(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfFoundRegistryi7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfFoundRegistryi7Zg_POJ5)(base.EndInvoke("GetFoundRegistryList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetFoundRegistryByConditionList(Gsafety.PTMS.ServiceReference.PublicService.PagingInfo page, string clientID, string Founder, string Keyword, string LostName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = page;
                _args[1] = clientID;
                _args[2] = Founder;
                _args[3] = Keyword;
                _args[4] = LostName;
                System.IAsyncResult _result = base.BeginInvoke("GetFoundRegistryByConditionList", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfFoundRegistryi7Zg_POJ5 EndGetFoundRegistryByConditionList(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfFoundRegistryi7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfFoundRegistryi7Zg_POJ5)(base.EndInvoke("GetFoundRegistryByConditionList", _args, result)));
                return _result;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PublicService.IRunMdvrMessage")]
    public interface IRunMdvrMessage {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRunMdvrMessage/InsertRunMdvrMessage", ReplyAction="http://tempuri.org/IRunMdvrMessage/InsertRunMdvrMessageResponse")]
        System.IAsyncResult BeginInsertRunMdvrMessage(Gsafety.PTMS.ServiceReference.PublicService.RunMdvrMessage model, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndInsertRunMdvrMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRunMdvrMessage/UpdateRunMdvrMessage", ReplyAction="http://tempuri.org/IRunMdvrMessage/UpdateRunMdvrMessageResponse")]
        System.IAsyncResult BeginUpdateRunMdvrMessage(Gsafety.PTMS.ServiceReference.PublicService.RunMdvrMessage model, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndUpdateRunMdvrMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRunMdvrMessage/DeleteRunMdvrMessageByID", ReplyAction="http://tempuri.org/IRunMdvrMessage/DeleteRunMdvrMessageByIDResponse")]
        System.IAsyncResult BeginDeleteRunMdvrMessageByID(string ID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndDeleteRunMdvrMessageByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRunMdvrMessage/GetRunMdvrMessage", ReplyAction="http://tempuri.org/IRunMdvrMessage/GetRunMdvrMessageResponse")]
        System.IAsyncResult BeginGetRunMdvrMessage(string ID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfRunMdvrMessageHP9hECy1 EndGetRunMdvrMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRunMdvrMessage/GetRunMdvrMessageList", ReplyAction="http://tempuri.org/IRunMdvrMessage/GetRunMdvrMessageListResponse")]
        System.IAsyncResult BeginGetRunMdvrMessageList(string clientID, string title, int type, string name, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfRunMdvrMessageHP9hECy1 EndGetRunMdvrMessageList(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRunMdvrMessageChannel : Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrMessage, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertRunMdvrMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertRunMdvrMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateRunMdvrMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateRunMdvrMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteRunMdvrMessageByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteRunMdvrMessageByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRunMdvrMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRunMdvrMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfRunMdvrMessageHP9hECy1 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfRunMdvrMessageHP9hECy1)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRunMdvrMessageListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRunMdvrMessageListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfRunMdvrMessageHP9hECy1 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfRunMdvrMessageHP9hECy1)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunMdvrMessageClient : System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrMessage>, Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrMessage {
        
        private BeginOperationDelegate onBeginInsertRunMdvrMessageDelegate;
        
        private EndOperationDelegate onEndInsertRunMdvrMessageDelegate;
        
        private System.Threading.SendOrPostCallback onInsertRunMdvrMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateRunMdvrMessageDelegate;
        
        private EndOperationDelegate onEndUpdateRunMdvrMessageDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateRunMdvrMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteRunMdvrMessageByIDDelegate;
        
        private EndOperationDelegate onEndDeleteRunMdvrMessageByIDDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteRunMdvrMessageByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRunMdvrMessageDelegate;
        
        private EndOperationDelegate onEndGetRunMdvrMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetRunMdvrMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRunMdvrMessageListDelegate;
        
        private EndOperationDelegate onEndGetRunMdvrMessageListDelegate;
        
        private System.Threading.SendOrPostCallback onGetRunMdvrMessageListCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public RunMdvrMessageClient() {
        }
        
        public RunMdvrMessageClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RunMdvrMessageClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RunMdvrMessageClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RunMdvrMessageClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<InsertRunMdvrMessageCompletedEventArgs> InsertRunMdvrMessageCompleted;
        
        public event System.EventHandler<UpdateRunMdvrMessageCompletedEventArgs> UpdateRunMdvrMessageCompleted;
        
        public event System.EventHandler<DeleteRunMdvrMessageByIDCompletedEventArgs> DeleteRunMdvrMessageByIDCompleted;
        
        public event System.EventHandler<GetRunMdvrMessageCompletedEventArgs> GetRunMdvrMessageCompleted;
        
        public event System.EventHandler<GetRunMdvrMessageListCompletedEventArgs> GetRunMdvrMessageListCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrMessage.BeginInsertRunMdvrMessage(Gsafety.PTMS.ServiceReference.PublicService.RunMdvrMessage model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertRunMdvrMessage(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrMessage.EndInsertRunMdvrMessage(System.IAsyncResult result) {
            return base.Channel.EndInsertRunMdvrMessage(result);
        }
        
        private System.IAsyncResult OnBeginInsertRunMdvrMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.PublicService.RunMdvrMessage model = ((Gsafety.PTMS.ServiceReference.PublicService.RunMdvrMessage)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrMessage)(this)).BeginInsertRunMdvrMessage(model, callback, asyncState);
        }
        
        private object[] OnEndInsertRunMdvrMessage(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrMessage)(this)).EndInsertRunMdvrMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertRunMdvrMessageCompleted(object state) {
            if ((this.InsertRunMdvrMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertRunMdvrMessageCompleted(this, new InsertRunMdvrMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertRunMdvrMessageAsync(Gsafety.PTMS.ServiceReference.PublicService.RunMdvrMessage model) {
            this.InsertRunMdvrMessageAsync(model, null);
        }
        
        public void InsertRunMdvrMessageAsync(Gsafety.PTMS.ServiceReference.PublicService.RunMdvrMessage model, object userState) {
            if ((this.onBeginInsertRunMdvrMessageDelegate == null)) {
                this.onBeginInsertRunMdvrMessageDelegate = new BeginOperationDelegate(this.OnBeginInsertRunMdvrMessage);
            }
            if ((this.onEndInsertRunMdvrMessageDelegate == null)) {
                this.onEndInsertRunMdvrMessageDelegate = new EndOperationDelegate(this.OnEndInsertRunMdvrMessage);
            }
            if ((this.onInsertRunMdvrMessageCompletedDelegate == null)) {
                this.onInsertRunMdvrMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertRunMdvrMessageCompleted);
            }
            base.InvokeAsync(this.onBeginInsertRunMdvrMessageDelegate, new object[] {
                        model}, this.onEndInsertRunMdvrMessageDelegate, this.onInsertRunMdvrMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrMessage.BeginUpdateRunMdvrMessage(Gsafety.PTMS.ServiceReference.PublicService.RunMdvrMessage model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateRunMdvrMessage(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrMessage.EndUpdateRunMdvrMessage(System.IAsyncResult result) {
            return base.Channel.EndUpdateRunMdvrMessage(result);
        }
        
        private System.IAsyncResult OnBeginUpdateRunMdvrMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.PublicService.RunMdvrMessage model = ((Gsafety.PTMS.ServiceReference.PublicService.RunMdvrMessage)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrMessage)(this)).BeginUpdateRunMdvrMessage(model, callback, asyncState);
        }
        
        private object[] OnEndUpdateRunMdvrMessage(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrMessage)(this)).EndUpdateRunMdvrMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateRunMdvrMessageCompleted(object state) {
            if ((this.UpdateRunMdvrMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateRunMdvrMessageCompleted(this, new UpdateRunMdvrMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateRunMdvrMessageAsync(Gsafety.PTMS.ServiceReference.PublicService.RunMdvrMessage model) {
            this.UpdateRunMdvrMessageAsync(model, null);
        }
        
        public void UpdateRunMdvrMessageAsync(Gsafety.PTMS.ServiceReference.PublicService.RunMdvrMessage model, object userState) {
            if ((this.onBeginUpdateRunMdvrMessageDelegate == null)) {
                this.onBeginUpdateRunMdvrMessageDelegate = new BeginOperationDelegate(this.OnBeginUpdateRunMdvrMessage);
            }
            if ((this.onEndUpdateRunMdvrMessageDelegate == null)) {
                this.onEndUpdateRunMdvrMessageDelegate = new EndOperationDelegate(this.OnEndUpdateRunMdvrMessage);
            }
            if ((this.onUpdateRunMdvrMessageCompletedDelegate == null)) {
                this.onUpdateRunMdvrMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateRunMdvrMessageCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateRunMdvrMessageDelegate, new object[] {
                        model}, this.onEndUpdateRunMdvrMessageDelegate, this.onUpdateRunMdvrMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrMessage.BeginDeleteRunMdvrMessageByID(string ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteRunMdvrMessageByID(ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrMessage.EndDeleteRunMdvrMessageByID(System.IAsyncResult result) {
            return base.Channel.EndDeleteRunMdvrMessageByID(result);
        }
        
        private System.IAsyncResult OnBeginDeleteRunMdvrMessageByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ID = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrMessage)(this)).BeginDeleteRunMdvrMessageByID(ID, callback, asyncState);
        }
        
        private object[] OnEndDeleteRunMdvrMessageByID(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrMessage)(this)).EndDeleteRunMdvrMessageByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteRunMdvrMessageByIDCompleted(object state) {
            if ((this.DeleteRunMdvrMessageByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteRunMdvrMessageByIDCompleted(this, new DeleteRunMdvrMessageByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteRunMdvrMessageByIDAsync(string ID) {
            this.DeleteRunMdvrMessageByIDAsync(ID, null);
        }
        
        public void DeleteRunMdvrMessageByIDAsync(string ID, object userState) {
            if ((this.onBeginDeleteRunMdvrMessageByIDDelegate == null)) {
                this.onBeginDeleteRunMdvrMessageByIDDelegate = new BeginOperationDelegate(this.OnBeginDeleteRunMdvrMessageByID);
            }
            if ((this.onEndDeleteRunMdvrMessageByIDDelegate == null)) {
                this.onEndDeleteRunMdvrMessageByIDDelegate = new EndOperationDelegate(this.OnEndDeleteRunMdvrMessageByID);
            }
            if ((this.onDeleteRunMdvrMessageByIDCompletedDelegate == null)) {
                this.onDeleteRunMdvrMessageByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteRunMdvrMessageByIDCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteRunMdvrMessageByIDDelegate, new object[] {
                        ID}, this.onEndDeleteRunMdvrMessageByIDDelegate, this.onDeleteRunMdvrMessageByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrMessage.BeginGetRunMdvrMessage(string ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRunMdvrMessage(ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfRunMdvrMessageHP9hECy1 Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrMessage.EndGetRunMdvrMessage(System.IAsyncResult result) {
            return base.Channel.EndGetRunMdvrMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetRunMdvrMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ID = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrMessage)(this)).BeginGetRunMdvrMessage(ID, callback, asyncState);
        }
        
        private object[] OnEndGetRunMdvrMessage(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfRunMdvrMessageHP9hECy1 retVal = ((Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrMessage)(this)).EndGetRunMdvrMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRunMdvrMessageCompleted(object state) {
            if ((this.GetRunMdvrMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRunMdvrMessageCompleted(this, new GetRunMdvrMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRunMdvrMessageAsync(string ID) {
            this.GetRunMdvrMessageAsync(ID, null);
        }
        
        public void GetRunMdvrMessageAsync(string ID, object userState) {
            if ((this.onBeginGetRunMdvrMessageDelegate == null)) {
                this.onBeginGetRunMdvrMessageDelegate = new BeginOperationDelegate(this.OnBeginGetRunMdvrMessage);
            }
            if ((this.onEndGetRunMdvrMessageDelegate == null)) {
                this.onEndGetRunMdvrMessageDelegate = new EndOperationDelegate(this.OnEndGetRunMdvrMessage);
            }
            if ((this.onGetRunMdvrMessageCompletedDelegate == null)) {
                this.onGetRunMdvrMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRunMdvrMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetRunMdvrMessageDelegate, new object[] {
                        ID}, this.onEndGetRunMdvrMessageDelegate, this.onGetRunMdvrMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrMessage.BeginGetRunMdvrMessageList(string clientID, string title, int type, string name, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRunMdvrMessageList(clientID, title, type, name, pageIndex, pageSize, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfRunMdvrMessageHP9hECy1 Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrMessage.EndGetRunMdvrMessageList(System.IAsyncResult result) {
            return base.Channel.EndGetRunMdvrMessageList(result);
        }
        
        private System.IAsyncResult OnBeginGetRunMdvrMessageList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            string title = ((string)(inValues[1]));
            int type = ((int)(inValues[2]));
            string name = ((string)(inValues[3]));
            int pageIndex = ((int)(inValues[4]));
            int pageSize = ((int)(inValues[5]));
            return ((Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrMessage)(this)).BeginGetRunMdvrMessageList(clientID, title, type, name, pageIndex, pageSize, callback, asyncState);
        }
        
        private object[] OnEndGetRunMdvrMessageList(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfRunMdvrMessageHP9hECy1 retVal = ((Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrMessage)(this)).EndGetRunMdvrMessageList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRunMdvrMessageListCompleted(object state) {
            if ((this.GetRunMdvrMessageListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRunMdvrMessageListCompleted(this, new GetRunMdvrMessageListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRunMdvrMessageListAsync(string clientID, string title, int type, string name, int pageIndex, int pageSize) {
            this.GetRunMdvrMessageListAsync(clientID, title, type, name, pageIndex, pageSize, null);
        }
        
        public void GetRunMdvrMessageListAsync(string clientID, string title, int type, string name, int pageIndex, int pageSize, object userState) {
            if ((this.onBeginGetRunMdvrMessageListDelegate == null)) {
                this.onBeginGetRunMdvrMessageListDelegate = new BeginOperationDelegate(this.OnBeginGetRunMdvrMessageList);
            }
            if ((this.onEndGetRunMdvrMessageListDelegate == null)) {
                this.onEndGetRunMdvrMessageListDelegate = new EndOperationDelegate(this.OnEndGetRunMdvrMessageList);
            }
            if ((this.onGetRunMdvrMessageListCompletedDelegate == null)) {
                this.onGetRunMdvrMessageListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRunMdvrMessageListCompleted);
            }
            base.InvokeAsync(this.onBeginGetRunMdvrMessageListDelegate, new object[] {
                        clientID,
                        title,
                        type,
                        name,
                        pageIndex,
                        pageSize}, this.onEndGetRunMdvrMessageListDelegate, this.onGetRunMdvrMessageListCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrMessage CreateChannel() {
            return new RunMdvrMessageClientChannel(this);
        }
        
        private class RunMdvrMessageClientChannel : ChannelBase<Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrMessage>, Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrMessage {
            
            public RunMdvrMessageClientChannel(System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrMessage> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginInsertRunMdvrMessage(Gsafety.PTMS.ServiceReference.PublicService.RunMdvrMessage model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("InsertRunMdvrMessage", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndInsertRunMdvrMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(base.EndInvoke("InsertRunMdvrMessage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateRunMdvrMessage(Gsafety.PTMS.ServiceReference.PublicService.RunMdvrMessage model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("UpdateRunMdvrMessage", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndUpdateRunMdvrMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(base.EndInvoke("UpdateRunMdvrMessage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteRunMdvrMessageByID(string ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ID;
                System.IAsyncResult _result = base.BeginInvoke("DeleteRunMdvrMessageByID", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndDeleteRunMdvrMessageByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(base.EndInvoke("DeleteRunMdvrMessageByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRunMdvrMessage(string ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ID;
                System.IAsyncResult _result = base.BeginInvoke("GetRunMdvrMessage", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfRunMdvrMessageHP9hECy1 EndGetRunMdvrMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfRunMdvrMessageHP9hECy1 _result = ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfRunMdvrMessageHP9hECy1)(base.EndInvoke("GetRunMdvrMessage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRunMdvrMessageList(string clientID, string title, int type, string name, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = clientID;
                _args[1] = title;
                _args[2] = type;
                _args[3] = name;
                _args[4] = pageIndex;
                _args[5] = pageSize;
                System.IAsyncResult _result = base.BeginInvoke("GetRunMdvrMessageList", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfRunMdvrMessageHP9hECy1 EndGetRunMdvrMessageList(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfRunMdvrMessageHP9hECy1 _result = ((Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfRunMdvrMessageHP9hECy1)(base.EndInvoke("GetRunMdvrMessageList", _args, result)));
                return _result;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PublicService.IRunAppMessage")]
    public interface IRunAppMessage {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRunAppMessage/InsertRunAppMessage", ReplyAction="http://tempuri.org/IRunAppMessage/InsertRunAppMessageResponse")]
        System.IAsyncResult BeginInsertRunAppMessage(Gsafety.PTMS.ServiceReference.PublicService.RunAppMessage model, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndInsertRunAppMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRunAppMessage/UpdateRunAppMessage", ReplyAction="http://tempuri.org/IRunAppMessage/UpdateRunAppMessageResponse")]
        System.IAsyncResult BeginUpdateRunAppMessage(Gsafety.PTMS.ServiceReference.PublicService.RunAppMessage model, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndUpdateRunAppMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRunAppMessage/DeleteRunAppMessageByID", ReplyAction="http://tempuri.org/IRunAppMessage/DeleteRunAppMessageByIDResponse")]
        System.IAsyncResult BeginDeleteRunAppMessageByID(string ID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndDeleteRunAppMessageByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRunAppMessage/GetRunAppMessage", ReplyAction="http://tempuri.org/IRunAppMessage/GetRunAppMessageResponse")]
        System.IAsyncResult BeginGetRunAppMessage(string ID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfRunAppMessageHP9hECy1 EndGetRunAppMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRunAppMessage/GetRunAppMessageList", ReplyAction="http://tempuri.org/IRunAppMessage/GetRunAppMessageListResponse")]
        System.IAsyncResult BeginGetRunAppMessageList(string clientID, string title, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfRunAppMessageHP9hECy1 EndGetRunAppMessageList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRunAppMessage/SendRunAppMessage", ReplyAction="http://tempuri.org/IRunAppMessage/SendRunAppMessageResponse")]
        System.IAsyncResult BeginSendRunAppMessage(Gsafety.PTMS.ServiceReference.PublicService.RunAppMessage model, string vehicleId, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndSendRunAppMessage(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRunAppMessageChannel : Gsafety.PTMS.ServiceReference.PublicService.IRunAppMessage, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertRunAppMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertRunAppMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateRunAppMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateRunAppMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteRunAppMessageByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteRunAppMessageByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRunAppMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRunAppMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfRunAppMessageHP9hECy1 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfRunAppMessageHP9hECy1)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRunAppMessageListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRunAppMessageListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfRunAppMessageHP9hECy1 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfRunAppMessageHP9hECy1)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendRunAppMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SendRunAppMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunAppMessageClient : System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.PublicService.IRunAppMessage>, Gsafety.PTMS.ServiceReference.PublicService.IRunAppMessage {
        
        private BeginOperationDelegate onBeginInsertRunAppMessageDelegate;
        
        private EndOperationDelegate onEndInsertRunAppMessageDelegate;
        
        private System.Threading.SendOrPostCallback onInsertRunAppMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateRunAppMessageDelegate;
        
        private EndOperationDelegate onEndUpdateRunAppMessageDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateRunAppMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteRunAppMessageByIDDelegate;
        
        private EndOperationDelegate onEndDeleteRunAppMessageByIDDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteRunAppMessageByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRunAppMessageDelegate;
        
        private EndOperationDelegate onEndGetRunAppMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetRunAppMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRunAppMessageListDelegate;
        
        private EndOperationDelegate onEndGetRunAppMessageListDelegate;
        
        private System.Threading.SendOrPostCallback onGetRunAppMessageListCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendRunAppMessageDelegate;
        
        private EndOperationDelegate onEndSendRunAppMessageDelegate;
        
        private System.Threading.SendOrPostCallback onSendRunAppMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public RunAppMessageClient() {
        }
        
        public RunAppMessageClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RunAppMessageClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RunAppMessageClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RunAppMessageClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<InsertRunAppMessageCompletedEventArgs> InsertRunAppMessageCompleted;
        
        public event System.EventHandler<UpdateRunAppMessageCompletedEventArgs> UpdateRunAppMessageCompleted;
        
        public event System.EventHandler<DeleteRunAppMessageByIDCompletedEventArgs> DeleteRunAppMessageByIDCompleted;
        
        public event System.EventHandler<GetRunAppMessageCompletedEventArgs> GetRunAppMessageCompleted;
        
        public event System.EventHandler<GetRunAppMessageListCompletedEventArgs> GetRunAppMessageListCompleted;
        
        public event System.EventHandler<SendRunAppMessageCompletedEventArgs> SendRunAppMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PublicService.IRunAppMessage.BeginInsertRunAppMessage(Gsafety.PTMS.ServiceReference.PublicService.RunAppMessage model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertRunAppMessage(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.PublicService.IRunAppMessage.EndInsertRunAppMessage(System.IAsyncResult result) {
            return base.Channel.EndInsertRunAppMessage(result);
        }
        
        private System.IAsyncResult OnBeginInsertRunAppMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.PublicService.RunAppMessage model = ((Gsafety.PTMS.ServiceReference.PublicService.RunAppMessage)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.PublicService.IRunAppMessage)(this)).BeginInsertRunAppMessage(model, callback, asyncState);
        }
        
        private object[] OnEndInsertRunAppMessage(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.PublicService.IRunAppMessage)(this)).EndInsertRunAppMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertRunAppMessageCompleted(object state) {
            if ((this.InsertRunAppMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertRunAppMessageCompleted(this, new InsertRunAppMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertRunAppMessageAsync(Gsafety.PTMS.ServiceReference.PublicService.RunAppMessage model) {
            this.InsertRunAppMessageAsync(model, null);
        }
        
        public void InsertRunAppMessageAsync(Gsafety.PTMS.ServiceReference.PublicService.RunAppMessage model, object userState) {
            if ((this.onBeginInsertRunAppMessageDelegate == null)) {
                this.onBeginInsertRunAppMessageDelegate = new BeginOperationDelegate(this.OnBeginInsertRunAppMessage);
            }
            if ((this.onEndInsertRunAppMessageDelegate == null)) {
                this.onEndInsertRunAppMessageDelegate = new EndOperationDelegate(this.OnEndInsertRunAppMessage);
            }
            if ((this.onInsertRunAppMessageCompletedDelegate == null)) {
                this.onInsertRunAppMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertRunAppMessageCompleted);
            }
            base.InvokeAsync(this.onBeginInsertRunAppMessageDelegate, new object[] {
                        model}, this.onEndInsertRunAppMessageDelegate, this.onInsertRunAppMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PublicService.IRunAppMessage.BeginUpdateRunAppMessage(Gsafety.PTMS.ServiceReference.PublicService.RunAppMessage model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateRunAppMessage(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.PublicService.IRunAppMessage.EndUpdateRunAppMessage(System.IAsyncResult result) {
            return base.Channel.EndUpdateRunAppMessage(result);
        }
        
        private System.IAsyncResult OnBeginUpdateRunAppMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.PublicService.RunAppMessage model = ((Gsafety.PTMS.ServiceReference.PublicService.RunAppMessage)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.PublicService.IRunAppMessage)(this)).BeginUpdateRunAppMessage(model, callback, asyncState);
        }
        
        private object[] OnEndUpdateRunAppMessage(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.PublicService.IRunAppMessage)(this)).EndUpdateRunAppMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateRunAppMessageCompleted(object state) {
            if ((this.UpdateRunAppMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateRunAppMessageCompleted(this, new UpdateRunAppMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateRunAppMessageAsync(Gsafety.PTMS.ServiceReference.PublicService.RunAppMessage model) {
            this.UpdateRunAppMessageAsync(model, null);
        }
        
        public void UpdateRunAppMessageAsync(Gsafety.PTMS.ServiceReference.PublicService.RunAppMessage model, object userState) {
            if ((this.onBeginUpdateRunAppMessageDelegate == null)) {
                this.onBeginUpdateRunAppMessageDelegate = new BeginOperationDelegate(this.OnBeginUpdateRunAppMessage);
            }
            if ((this.onEndUpdateRunAppMessageDelegate == null)) {
                this.onEndUpdateRunAppMessageDelegate = new EndOperationDelegate(this.OnEndUpdateRunAppMessage);
            }
            if ((this.onUpdateRunAppMessageCompletedDelegate == null)) {
                this.onUpdateRunAppMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateRunAppMessageCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateRunAppMessageDelegate, new object[] {
                        model}, this.onEndUpdateRunAppMessageDelegate, this.onUpdateRunAppMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PublicService.IRunAppMessage.BeginDeleteRunAppMessageByID(string ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteRunAppMessageByID(ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.PublicService.IRunAppMessage.EndDeleteRunAppMessageByID(System.IAsyncResult result) {
            return base.Channel.EndDeleteRunAppMessageByID(result);
        }
        
        private System.IAsyncResult OnBeginDeleteRunAppMessageByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ID = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.PublicService.IRunAppMessage)(this)).BeginDeleteRunAppMessageByID(ID, callback, asyncState);
        }
        
        private object[] OnEndDeleteRunAppMessageByID(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.PublicService.IRunAppMessage)(this)).EndDeleteRunAppMessageByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteRunAppMessageByIDCompleted(object state) {
            if ((this.DeleteRunAppMessageByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteRunAppMessageByIDCompleted(this, new DeleteRunAppMessageByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteRunAppMessageByIDAsync(string ID) {
            this.DeleteRunAppMessageByIDAsync(ID, null);
        }
        
        public void DeleteRunAppMessageByIDAsync(string ID, object userState) {
            if ((this.onBeginDeleteRunAppMessageByIDDelegate == null)) {
                this.onBeginDeleteRunAppMessageByIDDelegate = new BeginOperationDelegate(this.OnBeginDeleteRunAppMessageByID);
            }
            if ((this.onEndDeleteRunAppMessageByIDDelegate == null)) {
                this.onEndDeleteRunAppMessageByIDDelegate = new EndOperationDelegate(this.OnEndDeleteRunAppMessageByID);
            }
            if ((this.onDeleteRunAppMessageByIDCompletedDelegate == null)) {
                this.onDeleteRunAppMessageByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteRunAppMessageByIDCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteRunAppMessageByIDDelegate, new object[] {
                        ID}, this.onEndDeleteRunAppMessageByIDDelegate, this.onDeleteRunAppMessageByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PublicService.IRunAppMessage.BeginGetRunAppMessage(string ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRunAppMessage(ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfRunAppMessageHP9hECy1 Gsafety.PTMS.ServiceReference.PublicService.IRunAppMessage.EndGetRunAppMessage(System.IAsyncResult result) {
            return base.Channel.EndGetRunAppMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetRunAppMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ID = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.PublicService.IRunAppMessage)(this)).BeginGetRunAppMessage(ID, callback, asyncState);
        }
        
        private object[] OnEndGetRunAppMessage(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfRunAppMessageHP9hECy1 retVal = ((Gsafety.PTMS.ServiceReference.PublicService.IRunAppMessage)(this)).EndGetRunAppMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRunAppMessageCompleted(object state) {
            if ((this.GetRunAppMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRunAppMessageCompleted(this, new GetRunAppMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRunAppMessageAsync(string ID) {
            this.GetRunAppMessageAsync(ID, null);
        }
        
        public void GetRunAppMessageAsync(string ID, object userState) {
            if ((this.onBeginGetRunAppMessageDelegate == null)) {
                this.onBeginGetRunAppMessageDelegate = new BeginOperationDelegate(this.OnBeginGetRunAppMessage);
            }
            if ((this.onEndGetRunAppMessageDelegate == null)) {
                this.onEndGetRunAppMessageDelegate = new EndOperationDelegate(this.OnEndGetRunAppMessage);
            }
            if ((this.onGetRunAppMessageCompletedDelegate == null)) {
                this.onGetRunAppMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRunAppMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetRunAppMessageDelegate, new object[] {
                        ID}, this.onEndGetRunAppMessageDelegate, this.onGetRunAppMessageCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PublicService.IRunAppMessage.BeginGetRunAppMessageList(string clientID, string title, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRunAppMessageList(clientID, title, pageIndex, pageSize, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfRunAppMessageHP9hECy1 Gsafety.PTMS.ServiceReference.PublicService.IRunAppMessage.EndGetRunAppMessageList(System.IAsyncResult result) {
            return base.Channel.EndGetRunAppMessageList(result);
        }
        
        private System.IAsyncResult OnBeginGetRunAppMessageList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            string title = ((string)(inValues[1]));
            int pageIndex = ((int)(inValues[2]));
            int pageSize = ((int)(inValues[3]));
            return ((Gsafety.PTMS.ServiceReference.PublicService.IRunAppMessage)(this)).BeginGetRunAppMessageList(clientID, title, pageIndex, pageSize, callback, asyncState);
        }
        
        private object[] OnEndGetRunAppMessageList(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfRunAppMessageHP9hECy1 retVal = ((Gsafety.PTMS.ServiceReference.PublicService.IRunAppMessage)(this)).EndGetRunAppMessageList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRunAppMessageListCompleted(object state) {
            if ((this.GetRunAppMessageListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRunAppMessageListCompleted(this, new GetRunAppMessageListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRunAppMessageListAsync(string clientID, string title, int pageIndex, int pageSize) {
            this.GetRunAppMessageListAsync(clientID, title, pageIndex, pageSize, null);
        }
        
        public void GetRunAppMessageListAsync(string clientID, string title, int pageIndex, int pageSize, object userState) {
            if ((this.onBeginGetRunAppMessageListDelegate == null)) {
                this.onBeginGetRunAppMessageListDelegate = new BeginOperationDelegate(this.OnBeginGetRunAppMessageList);
            }
            if ((this.onEndGetRunAppMessageListDelegate == null)) {
                this.onEndGetRunAppMessageListDelegate = new EndOperationDelegate(this.OnEndGetRunAppMessageList);
            }
            if ((this.onGetRunAppMessageListCompletedDelegate == null)) {
                this.onGetRunAppMessageListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRunAppMessageListCompleted);
            }
            base.InvokeAsync(this.onBeginGetRunAppMessageListDelegate, new object[] {
                        clientID,
                        title,
                        pageIndex,
                        pageSize}, this.onEndGetRunAppMessageListDelegate, this.onGetRunAppMessageListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PublicService.IRunAppMessage.BeginSendRunAppMessage(Gsafety.PTMS.ServiceReference.PublicService.RunAppMessage model, string vehicleId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendRunAppMessage(model, vehicleId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.PublicService.IRunAppMessage.EndSendRunAppMessage(System.IAsyncResult result) {
            return base.Channel.EndSendRunAppMessage(result);
        }
        
        private System.IAsyncResult OnBeginSendRunAppMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.PublicService.RunAppMessage model = ((Gsafety.PTMS.ServiceReference.PublicService.RunAppMessage)(inValues[0]));
            string vehicleId = ((string)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.PublicService.IRunAppMessage)(this)).BeginSendRunAppMessage(model, vehicleId, callback, asyncState);
        }
        
        private object[] OnEndSendRunAppMessage(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.PublicService.IRunAppMessage)(this)).EndSendRunAppMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSendRunAppMessageCompleted(object state) {
            if ((this.SendRunAppMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendRunAppMessageCompleted(this, new SendRunAppMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendRunAppMessageAsync(Gsafety.PTMS.ServiceReference.PublicService.RunAppMessage model, string vehicleId) {
            this.SendRunAppMessageAsync(model, vehicleId, null);
        }
        
        public void SendRunAppMessageAsync(Gsafety.PTMS.ServiceReference.PublicService.RunAppMessage model, string vehicleId, object userState) {
            if ((this.onBeginSendRunAppMessageDelegate == null)) {
                this.onBeginSendRunAppMessageDelegate = new BeginOperationDelegate(this.OnBeginSendRunAppMessage);
            }
            if ((this.onEndSendRunAppMessageDelegate == null)) {
                this.onEndSendRunAppMessageDelegate = new EndOperationDelegate(this.OnEndSendRunAppMessage);
            }
            if ((this.onSendRunAppMessageCompletedDelegate == null)) {
                this.onSendRunAppMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendRunAppMessageCompleted);
            }
            base.InvokeAsync(this.onBeginSendRunAppMessageDelegate, new object[] {
                        model,
                        vehicleId}, this.onEndSendRunAppMessageDelegate, this.onSendRunAppMessageCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Gsafety.PTMS.ServiceReference.PublicService.IRunAppMessage CreateChannel() {
            return new RunAppMessageClientChannel(this);
        }
        
        private class RunAppMessageClientChannel : ChannelBase<Gsafety.PTMS.ServiceReference.PublicService.IRunAppMessage>, Gsafety.PTMS.ServiceReference.PublicService.IRunAppMessage {
            
            public RunAppMessageClientChannel(System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.PublicService.IRunAppMessage> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginInsertRunAppMessage(Gsafety.PTMS.ServiceReference.PublicService.RunAppMessage model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("InsertRunAppMessage", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndInsertRunAppMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(base.EndInvoke("InsertRunAppMessage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateRunAppMessage(Gsafety.PTMS.ServiceReference.PublicService.RunAppMessage model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("UpdateRunAppMessage", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndUpdateRunAppMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(base.EndInvoke("UpdateRunAppMessage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteRunAppMessageByID(string ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ID;
                System.IAsyncResult _result = base.BeginInvoke("DeleteRunAppMessageByID", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndDeleteRunAppMessageByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(base.EndInvoke("DeleteRunAppMessageByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRunAppMessage(string ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ID;
                System.IAsyncResult _result = base.BeginInvoke("GetRunAppMessage", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfRunAppMessageHP9hECy1 EndGetRunAppMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfRunAppMessageHP9hECy1 _result = ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfRunAppMessageHP9hECy1)(base.EndInvoke("GetRunAppMessage", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRunAppMessageList(string clientID, string title, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = clientID;
                _args[1] = title;
                _args[2] = pageIndex;
                _args[3] = pageSize;
                System.IAsyncResult _result = base.BeginInvoke("GetRunAppMessageList", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfRunAppMessageHP9hECy1 EndGetRunAppMessageList(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfRunAppMessageHP9hECy1 _result = ((Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfRunAppMessageHP9hECy1)(base.EndInvoke("GetRunAppMessageList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSendRunAppMessage(Gsafety.PTMS.ServiceReference.PublicService.RunAppMessage model, string vehicleId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = model;
                _args[1] = vehicleId;
                System.IAsyncResult _result = base.BeginInvoke("SendRunAppMessage", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndSendRunAppMessage(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(base.EndInvoke("SendRunAppMessage", _args, result)));
                return _result;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PublicService.IRunMdvrmessageVehicle")]
    public interface IRunMdvrmessageVehicle {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRunMdvrmessageVehicle/InsertRunMdvrmessageVehicle", ReplyAction="http://tempuri.org/IRunMdvrmessageVehicle/InsertRunMdvrmessageVehicleResponse")]
        System.IAsyncResult BeginInsertRunMdvrmessageVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.MdvrMessageVehicle> model, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndInsertRunMdvrmessageVehicle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRunMdvrmessageVehicle/DeleteRunMdvrmessageVehicleByID", ReplyAction="http://tempuri.org/IRunMdvrmessageVehicle/DeleteRunMdvrmessageVehicleByIDResponse" +
            "")]
        System.IAsyncResult BeginDeleteRunMdvrmessageVehicleByID(string ID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndDeleteRunMdvrmessageVehicleByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRunMdvrmessageVehicle/GetRunMdvrmessageVehicleList", ReplyAction="http://tempuri.org/IRunMdvrmessageVehicle/GetRunMdvrmessageVehicleListResponse")]
        System.IAsyncResult BeginGetRunMdvrmessageVehicleList(string messageID, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfMdvrMessageVehiclei7Zg_POJ5 EndGetRunMdvrmessageVehicleList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRunMdvrmessageVehicle/DeliverRunMdvrmessageToVehicle", ReplyAction="http://tempuri.org/IRunMdvrmessageVehicle/DeliverRunMdvrmessageToVehicleResponse")]
        System.IAsyncResult BeginDeliverRunMdvrmessageToVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.MdvrMessageVehicle> vehicles, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndDeliverRunMdvrmessageToVehicle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRunMdvrmessageVehicle/GetAllRunMdvrmessageVehicleListBySpeedI" +
            "D", ReplyAction="http://tempuri.org/IRunMdvrmessageVehicle/GetAllRunMdvrmessageVehicleListBySpeedI" +
            "DResponse")]
        System.IAsyncResult BeginGetAllRunMdvrmessageVehicleListBySpeedID(string clientID, string messageId, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfMdvrMessageVehiclei7Zg_POJ5 EndGetAllRunMdvrmessageVehicleListBySpeedID(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRunMdvrmessageVehicleChannel : Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrmessageVehicle, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertRunMdvrmessageVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertRunMdvrmessageVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteRunMdvrmessageVehicleByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteRunMdvrmessageVehicleByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRunMdvrmessageVehicleListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRunMdvrmessageVehicleListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfMdvrMessageVehiclei7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfMdvrMessageVehiclei7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeliverRunMdvrmessageToVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeliverRunMdvrmessageToVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllRunMdvrmessageVehicleListBySpeedIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllRunMdvrmessageVehicleListBySpeedIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfMdvrMessageVehiclei7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfMdvrMessageVehiclei7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RunMdvrmessageVehicleClient : System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrmessageVehicle>, Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrmessageVehicle {
        
        private BeginOperationDelegate onBeginInsertRunMdvrmessageVehicleDelegate;
        
        private EndOperationDelegate onEndInsertRunMdvrmessageVehicleDelegate;
        
        private System.Threading.SendOrPostCallback onInsertRunMdvrmessageVehicleCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteRunMdvrmessageVehicleByIDDelegate;
        
        private EndOperationDelegate onEndDeleteRunMdvrmessageVehicleByIDDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteRunMdvrmessageVehicleByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRunMdvrmessageVehicleListDelegate;
        
        private EndOperationDelegate onEndGetRunMdvrmessageVehicleListDelegate;
        
        private System.Threading.SendOrPostCallback onGetRunMdvrmessageVehicleListCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeliverRunMdvrmessageToVehicleDelegate;
        
        private EndOperationDelegate onEndDeliverRunMdvrmessageToVehicleDelegate;
        
        private System.Threading.SendOrPostCallback onDeliverRunMdvrmessageToVehicleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllRunMdvrmessageVehicleListBySpeedIDDelegate;
        
        private EndOperationDelegate onEndGetAllRunMdvrmessageVehicleListBySpeedIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllRunMdvrmessageVehicleListBySpeedIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public RunMdvrmessageVehicleClient() {
        }
        
        public RunMdvrmessageVehicleClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RunMdvrmessageVehicleClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RunMdvrmessageVehicleClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RunMdvrmessageVehicleClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<InsertRunMdvrmessageVehicleCompletedEventArgs> InsertRunMdvrmessageVehicleCompleted;
        
        public event System.EventHandler<DeleteRunMdvrmessageVehicleByIDCompletedEventArgs> DeleteRunMdvrmessageVehicleByIDCompleted;
        
        public event System.EventHandler<GetRunMdvrmessageVehicleListCompletedEventArgs> GetRunMdvrmessageVehicleListCompleted;
        
        public event System.EventHandler<DeliverRunMdvrmessageToVehicleCompletedEventArgs> DeliverRunMdvrmessageToVehicleCompleted;
        
        public event System.EventHandler<GetAllRunMdvrmessageVehicleListBySpeedIDCompletedEventArgs> GetAllRunMdvrmessageVehicleListBySpeedIDCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrmessageVehicle.BeginInsertRunMdvrmessageVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.MdvrMessageVehicle> model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertRunMdvrmessageVehicle(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrmessageVehicle.EndInsertRunMdvrmessageVehicle(System.IAsyncResult result) {
            return base.Channel.EndInsertRunMdvrmessageVehicle(result);
        }
        
        private System.IAsyncResult OnBeginInsertRunMdvrmessageVehicle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.MdvrMessageVehicle> model = ((System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.MdvrMessageVehicle>)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrmessageVehicle)(this)).BeginInsertRunMdvrmessageVehicle(model, callback, asyncState);
        }
        
        private object[] OnEndInsertRunMdvrmessageVehicle(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrmessageVehicle)(this)).EndInsertRunMdvrmessageVehicle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertRunMdvrmessageVehicleCompleted(object state) {
            if ((this.InsertRunMdvrmessageVehicleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertRunMdvrmessageVehicleCompleted(this, new InsertRunMdvrmessageVehicleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertRunMdvrmessageVehicleAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.MdvrMessageVehicle> model) {
            this.InsertRunMdvrmessageVehicleAsync(model, null);
        }
        
        public void InsertRunMdvrmessageVehicleAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.MdvrMessageVehicle> model, object userState) {
            if ((this.onBeginInsertRunMdvrmessageVehicleDelegate == null)) {
                this.onBeginInsertRunMdvrmessageVehicleDelegate = new BeginOperationDelegate(this.OnBeginInsertRunMdvrmessageVehicle);
            }
            if ((this.onEndInsertRunMdvrmessageVehicleDelegate == null)) {
                this.onEndInsertRunMdvrmessageVehicleDelegate = new EndOperationDelegate(this.OnEndInsertRunMdvrmessageVehicle);
            }
            if ((this.onInsertRunMdvrmessageVehicleCompletedDelegate == null)) {
                this.onInsertRunMdvrmessageVehicleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertRunMdvrmessageVehicleCompleted);
            }
            base.InvokeAsync(this.onBeginInsertRunMdvrmessageVehicleDelegate, new object[] {
                        model}, this.onEndInsertRunMdvrmessageVehicleDelegate, this.onInsertRunMdvrmessageVehicleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrmessageVehicle.BeginDeleteRunMdvrmessageVehicleByID(string ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteRunMdvrmessageVehicleByID(ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrmessageVehicle.EndDeleteRunMdvrmessageVehicleByID(System.IAsyncResult result) {
            return base.Channel.EndDeleteRunMdvrmessageVehicleByID(result);
        }
        
        private System.IAsyncResult OnBeginDeleteRunMdvrmessageVehicleByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ID = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrmessageVehicle)(this)).BeginDeleteRunMdvrmessageVehicleByID(ID, callback, asyncState);
        }
        
        private object[] OnEndDeleteRunMdvrmessageVehicleByID(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrmessageVehicle)(this)).EndDeleteRunMdvrmessageVehicleByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteRunMdvrmessageVehicleByIDCompleted(object state) {
            if ((this.DeleteRunMdvrmessageVehicleByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteRunMdvrmessageVehicleByIDCompleted(this, new DeleteRunMdvrmessageVehicleByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteRunMdvrmessageVehicleByIDAsync(string ID) {
            this.DeleteRunMdvrmessageVehicleByIDAsync(ID, null);
        }
        
        public void DeleteRunMdvrmessageVehicleByIDAsync(string ID, object userState) {
            if ((this.onBeginDeleteRunMdvrmessageVehicleByIDDelegate == null)) {
                this.onBeginDeleteRunMdvrmessageVehicleByIDDelegate = new BeginOperationDelegate(this.OnBeginDeleteRunMdvrmessageVehicleByID);
            }
            if ((this.onEndDeleteRunMdvrmessageVehicleByIDDelegate == null)) {
                this.onEndDeleteRunMdvrmessageVehicleByIDDelegate = new EndOperationDelegate(this.OnEndDeleteRunMdvrmessageVehicleByID);
            }
            if ((this.onDeleteRunMdvrmessageVehicleByIDCompletedDelegate == null)) {
                this.onDeleteRunMdvrmessageVehicleByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteRunMdvrmessageVehicleByIDCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteRunMdvrmessageVehicleByIDDelegate, new object[] {
                        ID}, this.onEndDeleteRunMdvrmessageVehicleByIDDelegate, this.onDeleteRunMdvrmessageVehicleByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrmessageVehicle.BeginGetRunMdvrmessageVehicleList(string messageID, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRunMdvrmessageVehicleList(messageID, pageIndex, pageSize, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfMdvrMessageVehiclei7Zg_POJ5 Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrmessageVehicle.EndGetRunMdvrmessageVehicleList(System.IAsyncResult result) {
            return base.Channel.EndGetRunMdvrmessageVehicleList(result);
        }
        
        private System.IAsyncResult OnBeginGetRunMdvrmessageVehicleList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string messageID = ((string)(inValues[0]));
            int pageIndex = ((int)(inValues[1]));
            int pageSize = ((int)(inValues[2]));
            return ((Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrmessageVehicle)(this)).BeginGetRunMdvrmessageVehicleList(messageID, pageIndex, pageSize, callback, asyncState);
        }
        
        private object[] OnEndGetRunMdvrmessageVehicleList(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfMdvrMessageVehiclei7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrmessageVehicle)(this)).EndGetRunMdvrmessageVehicleList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRunMdvrmessageVehicleListCompleted(object state) {
            if ((this.GetRunMdvrmessageVehicleListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRunMdvrmessageVehicleListCompleted(this, new GetRunMdvrmessageVehicleListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRunMdvrmessageVehicleListAsync(string messageID, int pageIndex, int pageSize) {
            this.GetRunMdvrmessageVehicleListAsync(messageID, pageIndex, pageSize, null);
        }
        
        public void GetRunMdvrmessageVehicleListAsync(string messageID, int pageIndex, int pageSize, object userState) {
            if ((this.onBeginGetRunMdvrmessageVehicleListDelegate == null)) {
                this.onBeginGetRunMdvrmessageVehicleListDelegate = new BeginOperationDelegate(this.OnBeginGetRunMdvrmessageVehicleList);
            }
            if ((this.onEndGetRunMdvrmessageVehicleListDelegate == null)) {
                this.onEndGetRunMdvrmessageVehicleListDelegate = new EndOperationDelegate(this.OnEndGetRunMdvrmessageVehicleList);
            }
            if ((this.onGetRunMdvrmessageVehicleListCompletedDelegate == null)) {
                this.onGetRunMdvrmessageVehicleListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRunMdvrmessageVehicleListCompleted);
            }
            base.InvokeAsync(this.onBeginGetRunMdvrmessageVehicleListDelegate, new object[] {
                        messageID,
                        pageIndex,
                        pageSize}, this.onEndGetRunMdvrmessageVehicleListDelegate, this.onGetRunMdvrmessageVehicleListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrmessageVehicle.BeginDeliverRunMdvrmessageToVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.MdvrMessageVehicle> vehicles, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeliverRunMdvrmessageToVehicle(vehicles, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrmessageVehicle.EndDeliverRunMdvrmessageToVehicle(System.IAsyncResult result) {
            return base.Channel.EndDeliverRunMdvrmessageToVehicle(result);
        }
        
        private System.IAsyncResult OnBeginDeliverRunMdvrmessageToVehicle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.MdvrMessageVehicle> vehicles = ((System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.MdvrMessageVehicle>)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrmessageVehicle)(this)).BeginDeliverRunMdvrmessageToVehicle(vehicles, callback, asyncState);
        }
        
        private object[] OnEndDeliverRunMdvrmessageToVehicle(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrmessageVehicle)(this)).EndDeliverRunMdvrmessageToVehicle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeliverRunMdvrmessageToVehicleCompleted(object state) {
            if ((this.DeliverRunMdvrmessageToVehicleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeliverRunMdvrmessageToVehicleCompleted(this, new DeliverRunMdvrmessageToVehicleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeliverRunMdvrmessageToVehicleAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.MdvrMessageVehicle> vehicles) {
            this.DeliverRunMdvrmessageToVehicleAsync(vehicles, null);
        }
        
        public void DeliverRunMdvrmessageToVehicleAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.MdvrMessageVehicle> vehicles, object userState) {
            if ((this.onBeginDeliverRunMdvrmessageToVehicleDelegate == null)) {
                this.onBeginDeliverRunMdvrmessageToVehicleDelegate = new BeginOperationDelegate(this.OnBeginDeliverRunMdvrmessageToVehicle);
            }
            if ((this.onEndDeliverRunMdvrmessageToVehicleDelegate == null)) {
                this.onEndDeliverRunMdvrmessageToVehicleDelegate = new EndOperationDelegate(this.OnEndDeliverRunMdvrmessageToVehicle);
            }
            if ((this.onDeliverRunMdvrmessageToVehicleCompletedDelegate == null)) {
                this.onDeliverRunMdvrmessageToVehicleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeliverRunMdvrmessageToVehicleCompleted);
            }
            base.InvokeAsync(this.onBeginDeliverRunMdvrmessageToVehicleDelegate, new object[] {
                        vehicles}, this.onEndDeliverRunMdvrmessageToVehicleDelegate, this.onDeliverRunMdvrmessageToVehicleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrmessageVehicle.BeginGetAllRunMdvrmessageVehicleListBySpeedID(string clientID, string messageId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllRunMdvrmessageVehicleListBySpeedID(clientID, messageId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfMdvrMessageVehiclei7Zg_POJ5 Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrmessageVehicle.EndGetAllRunMdvrmessageVehicleListBySpeedID(System.IAsyncResult result) {
            return base.Channel.EndGetAllRunMdvrmessageVehicleListBySpeedID(result);
        }
        
        private System.IAsyncResult OnBeginGetAllRunMdvrmessageVehicleListBySpeedID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            string messageId = ((string)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrmessageVehicle)(this)).BeginGetAllRunMdvrmessageVehicleListBySpeedID(clientID, messageId, callback, asyncState);
        }
        
        private object[] OnEndGetAllRunMdvrmessageVehicleListBySpeedID(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfMdvrMessageVehiclei7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrmessageVehicle)(this)).EndGetAllRunMdvrmessageVehicleListBySpeedID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllRunMdvrmessageVehicleListBySpeedIDCompleted(object state) {
            if ((this.GetAllRunMdvrmessageVehicleListBySpeedIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllRunMdvrmessageVehicleListBySpeedIDCompleted(this, new GetAllRunMdvrmessageVehicleListBySpeedIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllRunMdvrmessageVehicleListBySpeedIDAsync(string clientID, string messageId) {
            this.GetAllRunMdvrmessageVehicleListBySpeedIDAsync(clientID, messageId, null);
        }
        
        public void GetAllRunMdvrmessageVehicleListBySpeedIDAsync(string clientID, string messageId, object userState) {
            if ((this.onBeginGetAllRunMdvrmessageVehicleListBySpeedIDDelegate == null)) {
                this.onBeginGetAllRunMdvrmessageVehicleListBySpeedIDDelegate = new BeginOperationDelegate(this.OnBeginGetAllRunMdvrmessageVehicleListBySpeedID);
            }
            if ((this.onEndGetAllRunMdvrmessageVehicleListBySpeedIDDelegate == null)) {
                this.onEndGetAllRunMdvrmessageVehicleListBySpeedIDDelegate = new EndOperationDelegate(this.OnEndGetAllRunMdvrmessageVehicleListBySpeedID);
            }
            if ((this.onGetAllRunMdvrmessageVehicleListBySpeedIDCompletedDelegate == null)) {
                this.onGetAllRunMdvrmessageVehicleListBySpeedIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllRunMdvrmessageVehicleListBySpeedIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllRunMdvrmessageVehicleListBySpeedIDDelegate, new object[] {
                        clientID,
                        messageId}, this.onEndGetAllRunMdvrmessageVehicleListBySpeedIDDelegate, this.onGetAllRunMdvrmessageVehicleListBySpeedIDCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrmessageVehicle CreateChannel() {
            return new RunMdvrmessageVehicleClientChannel(this);
        }
        
        private class RunMdvrmessageVehicleClientChannel : ChannelBase<Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrmessageVehicle>, Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrmessageVehicle {
            
            public RunMdvrmessageVehicleClientChannel(System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.PublicService.IRunMdvrmessageVehicle> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginInsertRunMdvrmessageVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.MdvrMessageVehicle> model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("InsertRunMdvrmessageVehicle", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndInsertRunMdvrmessageVehicle(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(base.EndInvoke("InsertRunMdvrmessageVehicle", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteRunMdvrmessageVehicleByID(string ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ID;
                System.IAsyncResult _result = base.BeginInvoke("DeleteRunMdvrmessageVehicleByID", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndDeleteRunMdvrmessageVehicleByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(base.EndInvoke("DeleteRunMdvrmessageVehicleByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRunMdvrmessageVehicleList(string messageID, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = messageID;
                _args[1] = pageIndex;
                _args[2] = pageSize;
                System.IAsyncResult _result = base.BeginInvoke("GetRunMdvrmessageVehicleList", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfMdvrMessageVehiclei7Zg_POJ5 EndGetRunMdvrmessageVehicleList(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfMdvrMessageVehiclei7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfMdvrMessageVehiclei7Zg_POJ5)(base.EndInvoke("GetRunMdvrmessageVehicleList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeliverRunMdvrmessageToVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.MdvrMessageVehicle> vehicles, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = vehicles;
                System.IAsyncResult _result = base.BeginInvoke("DeliverRunMdvrmessageToVehicle", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndDeliverRunMdvrmessageToVehicle(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(base.EndInvoke("DeliverRunMdvrmessageToVehicle", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllRunMdvrmessageVehicleListBySpeedID(string clientID, string messageId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = clientID;
                _args[1] = messageId;
                System.IAsyncResult _result = base.BeginInvoke("GetAllRunMdvrmessageVehicleListBySpeedID", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfMdvrMessageVehiclei7Zg_POJ5 EndGetAllRunMdvrmessageVehicleListBySpeedID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfMdvrMessageVehiclei7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfMdvrMessageVehiclei7Zg_POJ5)(base.EndInvoke("GetAllRunMdvrmessageVehicleListBySpeedID", _args, result)));
                return _result;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PublicService.IAppMessageVehicle")]
    public interface IAppMessageVehicle {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAppMessageVehicle/InsertAppMessageVehicle", ReplyAction="http://tempuri.org/IAppMessageVehicle/InsertAppMessageVehicleResponse")]
        System.IAsyncResult BeginInsertAppMessageVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.AppMessageVehicle> model, Gsafety.PTMS.ServiceReference.PublicService.RunAppMessage message, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndInsertAppMessageVehicle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAppMessageVehicle/DeleteAppMessageVehicleByID", ReplyAction="http://tempuri.org/IAppMessageVehicle/DeleteAppMessageVehicleByIDResponse")]
        System.IAsyncResult BeginDeleteAppMessageVehicleByID(string ID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndDeleteAppMessageVehicleByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAppMessageVehicle/GetAppMessageVehicleListByAppID", ReplyAction="http://tempuri.org/IAppMessageVehicle/GetAppMessageVehicleListByAppIDResponse")]
        System.IAsyncResult BeginGetAppMessageVehicleListByAppID(string clientID, string appID, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfAppMessageVehiclei7Zg_POJ5 EndGetAppMessageVehicleListByAppID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAppMessageVehicle/GetAllAppMessageVehicleListByAppID", ReplyAction="http://tempuri.org/IAppMessageVehicle/GetAllAppMessageVehicleListByAppIDResponse")]
        System.IAsyncResult BeginGetAllAppMessageVehicleListByAppID(string clientID, string appID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfAppMessageVehiclei7Zg_POJ5 EndGetAllAppMessageVehicleListByAppID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IAppMessageVehicle/DeliverAppMessageToVehicle", ReplyAction="http://tempuri.org/IAppMessageVehicle/DeliverAppMessageToVehicleResponse")]
        System.IAsyncResult BeginDeliverAppMessageToVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.AppMessageVehicle> vehicles, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndDeliverAppMessageToVehicle(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAppMessageVehicleChannel : Gsafety.PTMS.ServiceReference.PublicService.IAppMessageVehicle, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertAppMessageVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertAppMessageVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteAppMessageVehicleByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteAppMessageVehicleByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAppMessageVehicleListByAppIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAppMessageVehicleListByAppIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfAppMessageVehiclei7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfAppMessageVehiclei7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllAppMessageVehicleListByAppIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllAppMessageVehicleListByAppIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfAppMessageVehiclei7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfAppMessageVehiclei7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeliverAppMessageToVehicleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeliverAppMessageToVehicleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AppMessageVehicleClient : System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.PublicService.IAppMessageVehicle>, Gsafety.PTMS.ServiceReference.PublicService.IAppMessageVehicle {
        
        private BeginOperationDelegate onBeginInsertAppMessageVehicleDelegate;
        
        private EndOperationDelegate onEndInsertAppMessageVehicleDelegate;
        
        private System.Threading.SendOrPostCallback onInsertAppMessageVehicleCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteAppMessageVehicleByIDDelegate;
        
        private EndOperationDelegate onEndDeleteAppMessageVehicleByIDDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteAppMessageVehicleByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAppMessageVehicleListByAppIDDelegate;
        
        private EndOperationDelegate onEndGetAppMessageVehicleListByAppIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetAppMessageVehicleListByAppIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllAppMessageVehicleListByAppIDDelegate;
        
        private EndOperationDelegate onEndGetAllAppMessageVehicleListByAppIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllAppMessageVehicleListByAppIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeliverAppMessageToVehicleDelegate;
        
        private EndOperationDelegate onEndDeliverAppMessageToVehicleDelegate;
        
        private System.Threading.SendOrPostCallback onDeliverAppMessageToVehicleCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public AppMessageVehicleClient() {
        }
        
        public AppMessageVehicleClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AppMessageVehicleClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AppMessageVehicleClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AppMessageVehicleClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<InsertAppMessageVehicleCompletedEventArgs> InsertAppMessageVehicleCompleted;
        
        public event System.EventHandler<DeleteAppMessageVehicleByIDCompletedEventArgs> DeleteAppMessageVehicleByIDCompleted;
        
        public event System.EventHandler<GetAppMessageVehicleListByAppIDCompletedEventArgs> GetAppMessageVehicleListByAppIDCompleted;
        
        public event System.EventHandler<GetAllAppMessageVehicleListByAppIDCompletedEventArgs> GetAllAppMessageVehicleListByAppIDCompleted;
        
        public event System.EventHandler<DeliverAppMessageToVehicleCompletedEventArgs> DeliverAppMessageToVehicleCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PublicService.IAppMessageVehicle.BeginInsertAppMessageVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.AppMessageVehicle> model, Gsafety.PTMS.ServiceReference.PublicService.RunAppMessage message, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertAppMessageVehicle(model, message, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.PublicService.IAppMessageVehicle.EndInsertAppMessageVehicle(System.IAsyncResult result) {
            return base.Channel.EndInsertAppMessageVehicle(result);
        }
        
        private System.IAsyncResult OnBeginInsertAppMessageVehicle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.AppMessageVehicle> model = ((System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.AppMessageVehicle>)(inValues[0]));
            Gsafety.PTMS.ServiceReference.PublicService.RunAppMessage message = ((Gsafety.PTMS.ServiceReference.PublicService.RunAppMessage)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.PublicService.IAppMessageVehicle)(this)).BeginInsertAppMessageVehicle(model, message, callback, asyncState);
        }
        
        private object[] OnEndInsertAppMessageVehicle(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.PublicService.IAppMessageVehicle)(this)).EndInsertAppMessageVehicle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertAppMessageVehicleCompleted(object state) {
            if ((this.InsertAppMessageVehicleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertAppMessageVehicleCompleted(this, new InsertAppMessageVehicleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertAppMessageVehicleAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.AppMessageVehicle> model, Gsafety.PTMS.ServiceReference.PublicService.RunAppMessage message) {
            this.InsertAppMessageVehicleAsync(model, message, null);
        }
        
        public void InsertAppMessageVehicleAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.AppMessageVehicle> model, Gsafety.PTMS.ServiceReference.PublicService.RunAppMessage message, object userState) {
            if ((this.onBeginInsertAppMessageVehicleDelegate == null)) {
                this.onBeginInsertAppMessageVehicleDelegate = new BeginOperationDelegate(this.OnBeginInsertAppMessageVehicle);
            }
            if ((this.onEndInsertAppMessageVehicleDelegate == null)) {
                this.onEndInsertAppMessageVehicleDelegate = new EndOperationDelegate(this.OnEndInsertAppMessageVehicle);
            }
            if ((this.onInsertAppMessageVehicleCompletedDelegate == null)) {
                this.onInsertAppMessageVehicleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertAppMessageVehicleCompleted);
            }
            base.InvokeAsync(this.onBeginInsertAppMessageVehicleDelegate, new object[] {
                        model,
                        message}, this.onEndInsertAppMessageVehicleDelegate, this.onInsertAppMessageVehicleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PublicService.IAppMessageVehicle.BeginDeleteAppMessageVehicleByID(string ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteAppMessageVehicleByID(ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.PublicService.IAppMessageVehicle.EndDeleteAppMessageVehicleByID(System.IAsyncResult result) {
            return base.Channel.EndDeleteAppMessageVehicleByID(result);
        }
        
        private System.IAsyncResult OnBeginDeleteAppMessageVehicleByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ID = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.PublicService.IAppMessageVehicle)(this)).BeginDeleteAppMessageVehicleByID(ID, callback, asyncState);
        }
        
        private object[] OnEndDeleteAppMessageVehicleByID(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.PublicService.IAppMessageVehicle)(this)).EndDeleteAppMessageVehicleByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteAppMessageVehicleByIDCompleted(object state) {
            if ((this.DeleteAppMessageVehicleByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteAppMessageVehicleByIDCompleted(this, new DeleteAppMessageVehicleByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAppMessageVehicleByIDAsync(string ID) {
            this.DeleteAppMessageVehicleByIDAsync(ID, null);
        }
        
        public void DeleteAppMessageVehicleByIDAsync(string ID, object userState) {
            if ((this.onBeginDeleteAppMessageVehicleByIDDelegate == null)) {
                this.onBeginDeleteAppMessageVehicleByIDDelegate = new BeginOperationDelegate(this.OnBeginDeleteAppMessageVehicleByID);
            }
            if ((this.onEndDeleteAppMessageVehicleByIDDelegate == null)) {
                this.onEndDeleteAppMessageVehicleByIDDelegate = new EndOperationDelegate(this.OnEndDeleteAppMessageVehicleByID);
            }
            if ((this.onDeleteAppMessageVehicleByIDCompletedDelegate == null)) {
                this.onDeleteAppMessageVehicleByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteAppMessageVehicleByIDCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteAppMessageVehicleByIDDelegate, new object[] {
                        ID}, this.onEndDeleteAppMessageVehicleByIDDelegate, this.onDeleteAppMessageVehicleByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PublicService.IAppMessageVehicle.BeginGetAppMessageVehicleListByAppID(string clientID, string appID, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAppMessageVehicleListByAppID(clientID, appID, pageIndex, pageSize, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfAppMessageVehiclei7Zg_POJ5 Gsafety.PTMS.ServiceReference.PublicService.IAppMessageVehicle.EndGetAppMessageVehicleListByAppID(System.IAsyncResult result) {
            return base.Channel.EndGetAppMessageVehicleListByAppID(result);
        }
        
        private System.IAsyncResult OnBeginGetAppMessageVehicleListByAppID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            string appID = ((string)(inValues[1]));
            int pageIndex = ((int)(inValues[2]));
            int pageSize = ((int)(inValues[3]));
            return ((Gsafety.PTMS.ServiceReference.PublicService.IAppMessageVehicle)(this)).BeginGetAppMessageVehicleListByAppID(clientID, appID, pageIndex, pageSize, callback, asyncState);
        }
        
        private object[] OnEndGetAppMessageVehicleListByAppID(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfAppMessageVehiclei7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.PublicService.IAppMessageVehicle)(this)).EndGetAppMessageVehicleListByAppID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAppMessageVehicleListByAppIDCompleted(object state) {
            if ((this.GetAppMessageVehicleListByAppIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAppMessageVehicleListByAppIDCompleted(this, new GetAppMessageVehicleListByAppIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAppMessageVehicleListByAppIDAsync(string clientID, string appID, int pageIndex, int pageSize) {
            this.GetAppMessageVehicleListByAppIDAsync(clientID, appID, pageIndex, pageSize, null);
        }
        
        public void GetAppMessageVehicleListByAppIDAsync(string clientID, string appID, int pageIndex, int pageSize, object userState) {
            if ((this.onBeginGetAppMessageVehicleListByAppIDDelegate == null)) {
                this.onBeginGetAppMessageVehicleListByAppIDDelegate = new BeginOperationDelegate(this.OnBeginGetAppMessageVehicleListByAppID);
            }
            if ((this.onEndGetAppMessageVehicleListByAppIDDelegate == null)) {
                this.onEndGetAppMessageVehicleListByAppIDDelegate = new EndOperationDelegate(this.OnEndGetAppMessageVehicleListByAppID);
            }
            if ((this.onGetAppMessageVehicleListByAppIDCompletedDelegate == null)) {
                this.onGetAppMessageVehicleListByAppIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAppMessageVehicleListByAppIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetAppMessageVehicleListByAppIDDelegate, new object[] {
                        clientID,
                        appID,
                        pageIndex,
                        pageSize}, this.onEndGetAppMessageVehicleListByAppIDDelegate, this.onGetAppMessageVehicleListByAppIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PublicService.IAppMessageVehicle.BeginGetAllAppMessageVehicleListByAppID(string clientID, string appID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllAppMessageVehicleListByAppID(clientID, appID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfAppMessageVehiclei7Zg_POJ5 Gsafety.PTMS.ServiceReference.PublicService.IAppMessageVehicle.EndGetAllAppMessageVehicleListByAppID(System.IAsyncResult result) {
            return base.Channel.EndGetAllAppMessageVehicleListByAppID(result);
        }
        
        private System.IAsyncResult OnBeginGetAllAppMessageVehicleListByAppID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string clientID = ((string)(inValues[0]));
            string appID = ((string)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.PublicService.IAppMessageVehicle)(this)).BeginGetAllAppMessageVehicleListByAppID(clientID, appID, callback, asyncState);
        }
        
        private object[] OnEndGetAllAppMessageVehicleListByAppID(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfAppMessageVehiclei7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.PublicService.IAppMessageVehicle)(this)).EndGetAllAppMessageVehicleListByAppID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllAppMessageVehicleListByAppIDCompleted(object state) {
            if ((this.GetAllAppMessageVehicleListByAppIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllAppMessageVehicleListByAppIDCompleted(this, new GetAllAppMessageVehicleListByAppIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllAppMessageVehicleListByAppIDAsync(string clientID, string appID) {
            this.GetAllAppMessageVehicleListByAppIDAsync(clientID, appID, null);
        }
        
        public void GetAllAppMessageVehicleListByAppIDAsync(string clientID, string appID, object userState) {
            if ((this.onBeginGetAllAppMessageVehicleListByAppIDDelegate == null)) {
                this.onBeginGetAllAppMessageVehicleListByAppIDDelegate = new BeginOperationDelegate(this.OnBeginGetAllAppMessageVehicleListByAppID);
            }
            if ((this.onEndGetAllAppMessageVehicleListByAppIDDelegate == null)) {
                this.onEndGetAllAppMessageVehicleListByAppIDDelegate = new EndOperationDelegate(this.OnEndGetAllAppMessageVehicleListByAppID);
            }
            if ((this.onGetAllAppMessageVehicleListByAppIDCompletedDelegate == null)) {
                this.onGetAllAppMessageVehicleListByAppIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllAppMessageVehicleListByAppIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllAppMessageVehicleListByAppIDDelegate, new object[] {
                        clientID,
                        appID}, this.onEndGetAllAppMessageVehicleListByAppIDDelegate, this.onGetAllAppMessageVehicleListByAppIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.PublicService.IAppMessageVehicle.BeginDeliverAppMessageToVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.AppMessageVehicle> vehicles, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeliverAppMessageToVehicle(vehicles, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.PublicService.IAppMessageVehicle.EndDeliverAppMessageToVehicle(System.IAsyncResult result) {
            return base.Channel.EndDeliverAppMessageToVehicle(result);
        }
        
        private System.IAsyncResult OnBeginDeliverAppMessageToVehicle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.AppMessageVehicle> vehicles = ((System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.AppMessageVehicle>)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.PublicService.IAppMessageVehicle)(this)).BeginDeliverAppMessageToVehicle(vehicles, callback, asyncState);
        }
        
        private object[] OnEndDeliverAppMessageToVehicle(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.PublicService.IAppMessageVehicle)(this)).EndDeliverAppMessageToVehicle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeliverAppMessageToVehicleCompleted(object state) {
            if ((this.DeliverAppMessageToVehicleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeliverAppMessageToVehicleCompleted(this, new DeliverAppMessageToVehicleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeliverAppMessageToVehicleAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.AppMessageVehicle> vehicles) {
            this.DeliverAppMessageToVehicleAsync(vehicles, null);
        }
        
        public void DeliverAppMessageToVehicleAsync(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.AppMessageVehicle> vehicles, object userState) {
            if ((this.onBeginDeliverAppMessageToVehicleDelegate == null)) {
                this.onBeginDeliverAppMessageToVehicleDelegate = new BeginOperationDelegate(this.OnBeginDeliverAppMessageToVehicle);
            }
            if ((this.onEndDeliverAppMessageToVehicleDelegate == null)) {
                this.onEndDeliverAppMessageToVehicleDelegate = new EndOperationDelegate(this.OnEndDeliverAppMessageToVehicle);
            }
            if ((this.onDeliverAppMessageToVehicleCompletedDelegate == null)) {
                this.onDeliverAppMessageToVehicleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeliverAppMessageToVehicleCompleted);
            }
            base.InvokeAsync(this.onBeginDeliverAppMessageToVehicleDelegate, new object[] {
                        vehicles}, this.onEndDeliverAppMessageToVehicleDelegate, this.onDeliverAppMessageToVehicleCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Gsafety.PTMS.ServiceReference.PublicService.IAppMessageVehicle CreateChannel() {
            return new AppMessageVehicleClientChannel(this);
        }
        
        private class AppMessageVehicleClientChannel : ChannelBase<Gsafety.PTMS.ServiceReference.PublicService.IAppMessageVehicle>, Gsafety.PTMS.ServiceReference.PublicService.IAppMessageVehicle {
            
            public AppMessageVehicleClientChannel(System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.PublicService.IAppMessageVehicle> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginInsertAppMessageVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.AppMessageVehicle> model, Gsafety.PTMS.ServiceReference.PublicService.RunAppMessage message, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = model;
                _args[1] = message;
                System.IAsyncResult _result = base.BeginInvoke("InsertAppMessageVehicle", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndInsertAppMessageVehicle(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(base.EndInvoke("InsertAppMessageVehicle", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteAppMessageVehicleByID(string ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ID;
                System.IAsyncResult _result = base.BeginInvoke("DeleteAppMessageVehicleByID", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndDeleteAppMessageVehicleByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(base.EndInvoke("DeleteAppMessageVehicleByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAppMessageVehicleListByAppID(string clientID, string appID, int pageIndex, int pageSize, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = clientID;
                _args[1] = appID;
                _args[2] = pageIndex;
                _args[3] = pageSize;
                System.IAsyncResult _result = base.BeginInvoke("GetAppMessageVehicleListByAppID", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfAppMessageVehiclei7Zg_POJ5 EndGetAppMessageVehicleListByAppID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfAppMessageVehiclei7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfAppMessageVehiclei7Zg_POJ5)(base.EndInvoke("GetAppMessageVehicleListByAppID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllAppMessageVehicleListByAppID(string clientID, string appID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = clientID;
                _args[1] = appID;
                System.IAsyncResult _result = base.BeginInvoke("GetAllAppMessageVehicleListByAppID", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfAppMessageVehiclei7Zg_POJ5 EndGetAllAppMessageVehicleListByAppID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfAppMessageVehiclei7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.PublicService.MultiMessageOfAppMessageVehiclei7Zg_POJ5)(base.EndInvoke("GetAllAppMessageVehicleListByAppID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeliverAppMessageToVehicle(System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.PublicService.AppMessageVehicle> vehicles, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = vehicles;
                System.IAsyncResult _result = base.BeginInvoke("DeliverAppMessageToVehicle", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean EndDeliverAppMessageToVehicle(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.PublicService.SingleMessageOfboolean)(base.EndInvoke("DeliverAppMessageToVehicle", _args, result)));
                return _result;
            }
        }
    }
}
