//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace Gsafety.PTMS.ServiceReference.LogService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogData", Namespace="http://schemas.datacontract.org/2004/07/LogServiceContract.Data")]
    public partial class LogData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime AccessTimeField;
        
        private string ChannelField;
        
        private string ClientIDField;
        
        private decimal ContenttypeField;
        
        private System.DateTime CreateTimeField;
        
        private System.DateTime EndTimeField;
        
        private string Extened1Field;
        
        private string Extened2Field;
        
        private string Extened3Field;
        
        private string FileNameField;
        
        private string IDField;
        
        private string MdvrCoreSnField;
        
        private string MsgIDField;
        
        private string Organization_IDField;
        
        private System.DateTime StartTimeField;
        
        private string UserDeptField;
        
        private string UserNameField;
        
        private string UserTypeField;
        
        private string VehicleIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AccessTime {
            get {
                return this.AccessTimeField;
            }
            set {
                if ((this.AccessTimeField.Equals(value) != true)) {
                    this.AccessTimeField = value;
                    this.RaisePropertyChanged("AccessTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Channel {
            get {
                return this.ChannelField;
            }
            set {
                if ((object.ReferenceEquals(this.ChannelField, value) != true)) {
                    this.ChannelField = value;
                    this.RaisePropertyChanged("Channel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIDField, value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Contenttype {
            get {
                return this.ContenttypeField;
            }
            set {
                if ((this.ContenttypeField.Equals(value) != true)) {
                    this.ContenttypeField = value;
                    this.RaisePropertyChanged("Contenttype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Extened1 {
            get {
                return this.Extened1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Extened1Field, value) != true)) {
                    this.Extened1Field = value;
                    this.RaisePropertyChanged("Extened1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Extened2 {
            get {
                return this.Extened2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Extened2Field, value) != true)) {
                    this.Extened2Field = value;
                    this.RaisePropertyChanged("Extened2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Extened3 {
            get {
                return this.Extened3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Extened3Field, value) != true)) {
                    this.Extened3Field = value;
                    this.RaisePropertyChanged("Extened3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MdvrCoreSn {
            get {
                return this.MdvrCoreSnField;
            }
            set {
                if ((object.ReferenceEquals(this.MdvrCoreSnField, value) != true)) {
                    this.MdvrCoreSnField = value;
                    this.RaisePropertyChanged("MdvrCoreSn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MsgID {
            get {
                return this.MsgIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MsgIDField, value) != true)) {
                    this.MsgIDField = value;
                    this.RaisePropertyChanged("MsgID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Organization_ID {
            get {
                return this.Organization_IDField;
            }
            set {
                if ((object.ReferenceEquals(this.Organization_IDField, value) != true)) {
                    this.Organization_IDField = value;
                    this.RaisePropertyChanged("Organization_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserDept {
            get {
                return this.UserDeptField;
            }
            set {
                if ((object.ReferenceEquals(this.UserDeptField, value) != true)) {
                    this.UserDeptField = value;
                    this.RaisePropertyChanged("UserDept");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTypeField, value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleId {
            get {
                return this.VehicleIdField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleIdField, value) != true)) {
                    this.VehicleIdField = value;
                    this.RaisePropertyChanged("VehicleId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SingleMessageOfboolean", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class SingleMessageOfboolean : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private bool ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Result {
            get {
                return this.ResultField;
            }
            set {
                if ((this.ResultField.Equals(value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PagingInfo", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class PagingInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int PageIndexField;
        
        private int PageSizeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageIndex {
            get {
                return this.PageIndexField;
            }
            set {
                if ((this.PageIndexField.Equals(value) != true)) {
                    this.PageIndexField = value;
                    this.RaisePropertyChanged("PageIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PageSize {
            get {
                return this.PageSizeField;
            }
            set {
                if ((this.PageSizeField.Equals(value) != true)) {
                    this.PageSizeField = value;
                    this.RaisePropertyChanged("PageSize");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfLogDataDON8MPQy", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfLogDataDON8MPQy : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.LogService.LogData> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.LogService.LogData> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultiMessageOfLogManageri7Zg_POJ5", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Base.Contract.Data")]
    public partial class MultiMessageOfLogManageri7Zg_POJ5 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorDetailMsgField;
        
        private string ErrorMsgField;
        
        private System.Exception ExceptionMessageField;
        
        private bool IsSuccessField;
        
        private System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.LogService.LogManager> ResultField;
        
        private int TotalRecordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetailMsg {
            get {
                return this.ErrorDetailMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailMsgField, value) != true)) {
                    this.ErrorDetailMsgField = value;
                    this.RaisePropertyChanged("ErrorDetailMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMsg {
            get {
                return this.ErrorMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMsgField, value) != true)) {
                    this.ErrorMsgField = value;
                    this.RaisePropertyChanged("ErrorMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Exception ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Gsafety.PTMS.ServiceReference.LogService.LogManager> Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalRecord {
            get {
                return this.TotalRecordField;
            }
            set {
                if ((this.TotalRecordField.Equals(value) != true)) {
                    this.TotalRecordField = value;
                    this.RaisePropertyChanged("TotalRecord");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogManager", Namespace="http://schemas.datacontract.org/2004/07/Gsafety.PTMS.Common.Data")]
    public partial class LogManager : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ClientIDField;
        
        private string ClientNameField;
        
        private string ContentField;
        
        private System.DateTime CreateTimeField;
        
        private string IDField;
        
        private string ManagerField;
        
        private string ManagerIDField;
        
        private string UserDeptField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientIDField, value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateTime {
            get {
                return this.CreateTimeField;
            }
            set {
                if ((this.CreateTimeField.Equals(value) != true)) {
                    this.CreateTimeField = value;
                    this.RaisePropertyChanged("CreateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manager {
            get {
                return this.ManagerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagerField, value) != true)) {
                    this.ManagerField = value;
                    this.RaisePropertyChanged("Manager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManagerID {
            get {
                return this.ManagerIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagerIDField, value) != true)) {
                    this.ManagerIDField = value;
                    this.RaisePropertyChanged("ManagerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserDept {
            get {
                return this.UserDeptField;
            }
            set {
                if ((object.ReferenceEquals(this.UserDeptField, value) != true)) {
                    this.UserDeptField = value;
                    this.RaisePropertyChanged("UserDept");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LogService.ILogData")]
    public interface ILogData {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILogData/InsertLogData", ReplyAction="http://tempuri.org/ILogData/InsertLogDataResponse")]
        System.IAsyncResult BeginInsertLogData(Gsafety.PTMS.ServiceReference.LogService.LogData model, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.LogService.SingleMessageOfboolean EndInsertLogData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILogData/UpdateLogData", ReplyAction="http://tempuri.org/ILogData/UpdateLogDataResponse")]
        System.IAsyncResult BeginUpdateLogData(Gsafety.PTMS.ServiceReference.LogService.LogData model, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.LogService.SingleMessageOfboolean EndUpdateLogData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILogData/DeleteLogDataByID", ReplyAction="http://tempuri.org/ILogData/DeleteLogDataByIDResponse")]
        System.IAsyncResult BeginDeleteLogDataByID(string ID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.LogService.SingleMessageOfboolean EndDeleteLogDataByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILogData/GetLogDataList", ReplyAction="http://tempuri.org/ILogData/GetLogDataListResponse")]
        System.IAsyncResult BeginGetLogDataList(Gsafety.PTMS.ServiceReference.LogService.PagingInfo page, string clientID, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.LogService.MultiMessageOfLogDataDON8MPQy EndGetLogDataList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILogData/GetLogDataListByCondition", ReplyAction="http://tempuri.org/ILogData/GetLogDataListByConditionResponse")]
        System.IAsyncResult BeginGetLogDataListByCondition(Gsafety.PTMS.ServiceReference.LogService.PagingInfo page, string clientID, string logName, System.Nullable<System.DateTime> beginTime, System.Nullable<System.DateTime> endTime, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.LogService.MultiMessageOfLogDataDON8MPQy EndGetLogDataListByCondition(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILogDataChannel : Gsafety.PTMS.ServiceReference.LogService.ILogData, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertLogDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertLogDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.LogService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.LogService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateLogDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateLogDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.LogService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.LogService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteLogDataByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteLogDataByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.LogService.SingleMessageOfboolean Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.LogService.SingleMessageOfboolean)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLogDataListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLogDataListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.LogService.MultiMessageOfLogDataDON8MPQy Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.LogService.MultiMessageOfLogDataDON8MPQy)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLogDataListByConditionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLogDataListByConditionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.LogService.MultiMessageOfLogDataDON8MPQy Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.LogService.MultiMessageOfLogDataDON8MPQy)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LogDataClient : System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.LogService.ILogData>, Gsafety.PTMS.ServiceReference.LogService.ILogData {
        
        private BeginOperationDelegate onBeginInsertLogDataDelegate;
        
        private EndOperationDelegate onEndInsertLogDataDelegate;
        
        private System.Threading.SendOrPostCallback onInsertLogDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateLogDataDelegate;
        
        private EndOperationDelegate onEndUpdateLogDataDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateLogDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteLogDataByIDDelegate;
        
        private EndOperationDelegate onEndDeleteLogDataByIDDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteLogDataByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLogDataListDelegate;
        
        private EndOperationDelegate onEndGetLogDataListDelegate;
        
        private System.Threading.SendOrPostCallback onGetLogDataListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLogDataListByConditionDelegate;
        
        private EndOperationDelegate onEndGetLogDataListByConditionDelegate;
        
        private System.Threading.SendOrPostCallback onGetLogDataListByConditionCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public LogDataClient() {
        }
        
        public LogDataClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LogDataClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LogDataClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LogDataClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<InsertLogDataCompletedEventArgs> InsertLogDataCompleted;
        
        public event System.EventHandler<UpdateLogDataCompletedEventArgs> UpdateLogDataCompleted;
        
        public event System.EventHandler<DeleteLogDataByIDCompletedEventArgs> DeleteLogDataByIDCompleted;
        
        public event System.EventHandler<GetLogDataListCompletedEventArgs> GetLogDataListCompleted;
        
        public event System.EventHandler<GetLogDataListByConditionCompletedEventArgs> GetLogDataListByConditionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.LogService.ILogData.BeginInsertLogData(Gsafety.PTMS.ServiceReference.LogService.LogData model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertLogData(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.LogService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.LogService.ILogData.EndInsertLogData(System.IAsyncResult result) {
            return base.Channel.EndInsertLogData(result);
        }
        
        private System.IAsyncResult OnBeginInsertLogData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.LogService.LogData model = ((Gsafety.PTMS.ServiceReference.LogService.LogData)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.LogService.ILogData)(this)).BeginInsertLogData(model, callback, asyncState);
        }
        
        private object[] OnEndInsertLogData(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.LogService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.LogService.ILogData)(this)).EndInsertLogData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertLogDataCompleted(object state) {
            if ((this.InsertLogDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertLogDataCompleted(this, new InsertLogDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertLogDataAsync(Gsafety.PTMS.ServiceReference.LogService.LogData model) {
            this.InsertLogDataAsync(model, null);
        }
        
        public void InsertLogDataAsync(Gsafety.PTMS.ServiceReference.LogService.LogData model, object userState) {
            if ((this.onBeginInsertLogDataDelegate == null)) {
                this.onBeginInsertLogDataDelegate = new BeginOperationDelegate(this.OnBeginInsertLogData);
            }
            if ((this.onEndInsertLogDataDelegate == null)) {
                this.onEndInsertLogDataDelegate = new EndOperationDelegate(this.OnEndInsertLogData);
            }
            if ((this.onInsertLogDataCompletedDelegate == null)) {
                this.onInsertLogDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertLogDataCompleted);
            }
            base.InvokeAsync(this.onBeginInsertLogDataDelegate, new object[] {
                        model}, this.onEndInsertLogDataDelegate, this.onInsertLogDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.LogService.ILogData.BeginUpdateLogData(Gsafety.PTMS.ServiceReference.LogService.LogData model, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateLogData(model, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.LogService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.LogService.ILogData.EndUpdateLogData(System.IAsyncResult result) {
            return base.Channel.EndUpdateLogData(result);
        }
        
        private System.IAsyncResult OnBeginUpdateLogData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.LogService.LogData model = ((Gsafety.PTMS.ServiceReference.LogService.LogData)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.LogService.ILogData)(this)).BeginUpdateLogData(model, callback, asyncState);
        }
        
        private object[] OnEndUpdateLogData(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.LogService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.LogService.ILogData)(this)).EndUpdateLogData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateLogDataCompleted(object state) {
            if ((this.UpdateLogDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateLogDataCompleted(this, new UpdateLogDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateLogDataAsync(Gsafety.PTMS.ServiceReference.LogService.LogData model) {
            this.UpdateLogDataAsync(model, null);
        }
        
        public void UpdateLogDataAsync(Gsafety.PTMS.ServiceReference.LogService.LogData model, object userState) {
            if ((this.onBeginUpdateLogDataDelegate == null)) {
                this.onBeginUpdateLogDataDelegate = new BeginOperationDelegate(this.OnBeginUpdateLogData);
            }
            if ((this.onEndUpdateLogDataDelegate == null)) {
                this.onEndUpdateLogDataDelegate = new EndOperationDelegate(this.OnEndUpdateLogData);
            }
            if ((this.onUpdateLogDataCompletedDelegate == null)) {
                this.onUpdateLogDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateLogDataCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateLogDataDelegate, new object[] {
                        model}, this.onEndUpdateLogDataDelegate, this.onUpdateLogDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.LogService.ILogData.BeginDeleteLogDataByID(string ID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteLogDataByID(ID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.LogService.SingleMessageOfboolean Gsafety.PTMS.ServiceReference.LogService.ILogData.EndDeleteLogDataByID(System.IAsyncResult result) {
            return base.Channel.EndDeleteLogDataByID(result);
        }
        
        private System.IAsyncResult OnBeginDeleteLogDataByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ID = ((string)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.LogService.ILogData)(this)).BeginDeleteLogDataByID(ID, callback, asyncState);
        }
        
        private object[] OnEndDeleteLogDataByID(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.LogService.SingleMessageOfboolean retVal = ((Gsafety.PTMS.ServiceReference.LogService.ILogData)(this)).EndDeleteLogDataByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteLogDataByIDCompleted(object state) {
            if ((this.DeleteLogDataByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteLogDataByIDCompleted(this, new DeleteLogDataByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteLogDataByIDAsync(string ID) {
            this.DeleteLogDataByIDAsync(ID, null);
        }
        
        public void DeleteLogDataByIDAsync(string ID, object userState) {
            if ((this.onBeginDeleteLogDataByIDDelegate == null)) {
                this.onBeginDeleteLogDataByIDDelegate = new BeginOperationDelegate(this.OnBeginDeleteLogDataByID);
            }
            if ((this.onEndDeleteLogDataByIDDelegate == null)) {
                this.onEndDeleteLogDataByIDDelegate = new EndOperationDelegate(this.OnEndDeleteLogDataByID);
            }
            if ((this.onDeleteLogDataByIDCompletedDelegate == null)) {
                this.onDeleteLogDataByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteLogDataByIDCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteLogDataByIDDelegate, new object[] {
                        ID}, this.onEndDeleteLogDataByIDDelegate, this.onDeleteLogDataByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.LogService.ILogData.BeginGetLogDataList(Gsafety.PTMS.ServiceReference.LogService.PagingInfo page, string clientID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLogDataList(page, clientID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.LogService.MultiMessageOfLogDataDON8MPQy Gsafety.PTMS.ServiceReference.LogService.ILogData.EndGetLogDataList(System.IAsyncResult result) {
            return base.Channel.EndGetLogDataList(result);
        }
        
        private System.IAsyncResult OnBeginGetLogDataList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.LogService.PagingInfo page = ((Gsafety.PTMS.ServiceReference.LogService.PagingInfo)(inValues[0]));
            string clientID = ((string)(inValues[1]));
            return ((Gsafety.PTMS.ServiceReference.LogService.ILogData)(this)).BeginGetLogDataList(page, clientID, callback, asyncState);
        }
        
        private object[] OnEndGetLogDataList(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.LogService.MultiMessageOfLogDataDON8MPQy retVal = ((Gsafety.PTMS.ServiceReference.LogService.ILogData)(this)).EndGetLogDataList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLogDataListCompleted(object state) {
            if ((this.GetLogDataListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLogDataListCompleted(this, new GetLogDataListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLogDataListAsync(Gsafety.PTMS.ServiceReference.LogService.PagingInfo page, string clientID) {
            this.GetLogDataListAsync(page, clientID, null);
        }
        
        public void GetLogDataListAsync(Gsafety.PTMS.ServiceReference.LogService.PagingInfo page, string clientID, object userState) {
            if ((this.onBeginGetLogDataListDelegate == null)) {
                this.onBeginGetLogDataListDelegate = new BeginOperationDelegate(this.OnBeginGetLogDataList);
            }
            if ((this.onEndGetLogDataListDelegate == null)) {
                this.onEndGetLogDataListDelegate = new EndOperationDelegate(this.OnEndGetLogDataList);
            }
            if ((this.onGetLogDataListCompletedDelegate == null)) {
                this.onGetLogDataListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLogDataListCompleted);
            }
            base.InvokeAsync(this.onBeginGetLogDataListDelegate, new object[] {
                        page,
                        clientID}, this.onEndGetLogDataListDelegate, this.onGetLogDataListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.LogService.ILogData.BeginGetLogDataListByCondition(Gsafety.PTMS.ServiceReference.LogService.PagingInfo page, string clientID, string logName, System.Nullable<System.DateTime> beginTime, System.Nullable<System.DateTime> endTime, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLogDataListByCondition(page, clientID, logName, beginTime, endTime, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.LogService.MultiMessageOfLogDataDON8MPQy Gsafety.PTMS.ServiceReference.LogService.ILogData.EndGetLogDataListByCondition(System.IAsyncResult result) {
            return base.Channel.EndGetLogDataListByCondition(result);
        }
        
        private System.IAsyncResult OnBeginGetLogDataListByCondition(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.LogService.PagingInfo page = ((Gsafety.PTMS.ServiceReference.LogService.PagingInfo)(inValues[0]));
            string clientID = ((string)(inValues[1]));
            string logName = ((string)(inValues[2]));
            System.Nullable<System.DateTime> beginTime = ((System.Nullable<System.DateTime>)(inValues[3]));
            System.Nullable<System.DateTime> endTime = ((System.Nullable<System.DateTime>)(inValues[4]));
            return ((Gsafety.PTMS.ServiceReference.LogService.ILogData)(this)).BeginGetLogDataListByCondition(page, clientID, logName, beginTime, endTime, callback, asyncState);
        }
        
        private object[] OnEndGetLogDataListByCondition(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.LogService.MultiMessageOfLogDataDON8MPQy retVal = ((Gsafety.PTMS.ServiceReference.LogService.ILogData)(this)).EndGetLogDataListByCondition(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLogDataListByConditionCompleted(object state) {
            if ((this.GetLogDataListByConditionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLogDataListByConditionCompleted(this, new GetLogDataListByConditionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLogDataListByConditionAsync(Gsafety.PTMS.ServiceReference.LogService.PagingInfo page, string clientID, string logName, System.Nullable<System.DateTime> beginTime, System.Nullable<System.DateTime> endTime) {
            this.GetLogDataListByConditionAsync(page, clientID, logName, beginTime, endTime, null);
        }
        
        public void GetLogDataListByConditionAsync(Gsafety.PTMS.ServiceReference.LogService.PagingInfo page, string clientID, string logName, System.Nullable<System.DateTime> beginTime, System.Nullable<System.DateTime> endTime, object userState) {
            if ((this.onBeginGetLogDataListByConditionDelegate == null)) {
                this.onBeginGetLogDataListByConditionDelegate = new BeginOperationDelegate(this.OnBeginGetLogDataListByCondition);
            }
            if ((this.onEndGetLogDataListByConditionDelegate == null)) {
                this.onEndGetLogDataListByConditionDelegate = new EndOperationDelegate(this.OnEndGetLogDataListByCondition);
            }
            if ((this.onGetLogDataListByConditionCompletedDelegate == null)) {
                this.onGetLogDataListByConditionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLogDataListByConditionCompleted);
            }
            base.InvokeAsync(this.onBeginGetLogDataListByConditionDelegate, new object[] {
                        page,
                        clientID,
                        logName,
                        beginTime,
                        endTime}, this.onEndGetLogDataListByConditionDelegate, this.onGetLogDataListByConditionCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Gsafety.PTMS.ServiceReference.LogService.ILogData CreateChannel() {
            return new LogDataClientChannel(this);
        }
        
        private class LogDataClientChannel : ChannelBase<Gsafety.PTMS.ServiceReference.LogService.ILogData>, Gsafety.PTMS.ServiceReference.LogService.ILogData {
            
            public LogDataClientChannel(System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.LogService.ILogData> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginInsertLogData(Gsafety.PTMS.ServiceReference.LogService.LogData model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("InsertLogData", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.LogService.SingleMessageOfboolean EndInsertLogData(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.LogService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.LogService.SingleMessageOfboolean)(base.EndInvoke("InsertLogData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateLogData(Gsafety.PTMS.ServiceReference.LogService.LogData model, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = model;
                System.IAsyncResult _result = base.BeginInvoke("UpdateLogData", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.LogService.SingleMessageOfboolean EndUpdateLogData(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.LogService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.LogService.SingleMessageOfboolean)(base.EndInvoke("UpdateLogData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteLogDataByID(string ID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ID;
                System.IAsyncResult _result = base.BeginInvoke("DeleteLogDataByID", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.LogService.SingleMessageOfboolean EndDeleteLogDataByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.LogService.SingleMessageOfboolean _result = ((Gsafety.PTMS.ServiceReference.LogService.SingleMessageOfboolean)(base.EndInvoke("DeleteLogDataByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLogDataList(Gsafety.PTMS.ServiceReference.LogService.PagingInfo page, string clientID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = page;
                _args[1] = clientID;
                System.IAsyncResult _result = base.BeginInvoke("GetLogDataList", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.LogService.MultiMessageOfLogDataDON8MPQy EndGetLogDataList(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.LogService.MultiMessageOfLogDataDON8MPQy _result = ((Gsafety.PTMS.ServiceReference.LogService.MultiMessageOfLogDataDON8MPQy)(base.EndInvoke("GetLogDataList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLogDataListByCondition(Gsafety.PTMS.ServiceReference.LogService.PagingInfo page, string clientID, string logName, System.Nullable<System.DateTime> beginTime, System.Nullable<System.DateTime> endTime, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = page;
                _args[1] = clientID;
                _args[2] = logName;
                _args[3] = beginTime;
                _args[4] = endTime;
                System.IAsyncResult _result = base.BeginInvoke("GetLogDataListByCondition", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.LogService.MultiMessageOfLogDataDON8MPQy EndGetLogDataListByCondition(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.LogService.MultiMessageOfLogDataDON8MPQy _result = ((Gsafety.PTMS.ServiceReference.LogService.MultiMessageOfLogDataDON8MPQy)(base.EndInvoke("GetLogDataListByCondition", _args, result)));
                return _result;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LogService.ILogManager")]
    public interface ILogManager {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILogManager/GetLogManagerList", ReplyAction="http://tempuri.org/ILogManager/GetLogManagerListResponse")]
        System.IAsyncResult BeginGetLogManagerList(Gsafety.PTMS.ServiceReference.LogService.PagingInfo page, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.LogService.MultiMessageOfLogManageri7Zg_POJ5 EndGetLogManagerList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ILogManager/GetLogManagerListByCondition", ReplyAction="http://tempuri.org/ILogManager/GetLogManagerListByConditionResponse")]
        System.IAsyncResult BeginGetLogManagerListByCondition(Gsafety.PTMS.ServiceReference.LogService.PagingInfo page, string logName, System.Nullable<System.DateTime> beginTime, System.Nullable<System.DateTime> endTime, System.AsyncCallback callback, object asyncState);
        
        Gsafety.PTMS.ServiceReference.LogService.MultiMessageOfLogManageri7Zg_POJ5 EndGetLogManagerListByCondition(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILogManagerChannel : Gsafety.PTMS.ServiceReference.LogService.ILogManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLogManagerListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLogManagerListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.LogService.MultiMessageOfLogManageri7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.LogService.MultiMessageOfLogManageri7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLogManagerListByConditionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLogManagerListByConditionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Gsafety.PTMS.ServiceReference.LogService.MultiMessageOfLogManageri7Zg_POJ5 Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Gsafety.PTMS.ServiceReference.LogService.MultiMessageOfLogManageri7Zg_POJ5)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LogManagerClient : System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.LogService.ILogManager>, Gsafety.PTMS.ServiceReference.LogService.ILogManager {
        
        private BeginOperationDelegate onBeginGetLogManagerListDelegate;
        
        private EndOperationDelegate onEndGetLogManagerListDelegate;
        
        private System.Threading.SendOrPostCallback onGetLogManagerListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLogManagerListByConditionDelegate;
        
        private EndOperationDelegate onEndGetLogManagerListByConditionDelegate;
        
        private System.Threading.SendOrPostCallback onGetLogManagerListByConditionCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public LogManagerClient() {
        }
        
        public LogManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LogManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LogManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LogManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("无法设置 CookieContainer。请确保绑定包含 HttpCookieContainerBindingElement。");
                }
            }
        }
        
        public event System.EventHandler<GetLogManagerListCompletedEventArgs> GetLogManagerListCompleted;
        
        public event System.EventHandler<GetLogManagerListByConditionCompletedEventArgs> GetLogManagerListByConditionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.LogService.ILogManager.BeginGetLogManagerList(Gsafety.PTMS.ServiceReference.LogService.PagingInfo page, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLogManagerList(page, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.LogService.MultiMessageOfLogManageri7Zg_POJ5 Gsafety.PTMS.ServiceReference.LogService.ILogManager.EndGetLogManagerList(System.IAsyncResult result) {
            return base.Channel.EndGetLogManagerList(result);
        }
        
        private System.IAsyncResult OnBeginGetLogManagerList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.LogService.PagingInfo page = ((Gsafety.PTMS.ServiceReference.LogService.PagingInfo)(inValues[0]));
            return ((Gsafety.PTMS.ServiceReference.LogService.ILogManager)(this)).BeginGetLogManagerList(page, callback, asyncState);
        }
        
        private object[] OnEndGetLogManagerList(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.LogService.MultiMessageOfLogManageri7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.LogService.ILogManager)(this)).EndGetLogManagerList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLogManagerListCompleted(object state) {
            if ((this.GetLogManagerListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLogManagerListCompleted(this, new GetLogManagerListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLogManagerListAsync(Gsafety.PTMS.ServiceReference.LogService.PagingInfo page) {
            this.GetLogManagerListAsync(page, null);
        }
        
        public void GetLogManagerListAsync(Gsafety.PTMS.ServiceReference.LogService.PagingInfo page, object userState) {
            if ((this.onBeginGetLogManagerListDelegate == null)) {
                this.onBeginGetLogManagerListDelegate = new BeginOperationDelegate(this.OnBeginGetLogManagerList);
            }
            if ((this.onEndGetLogManagerListDelegate == null)) {
                this.onEndGetLogManagerListDelegate = new EndOperationDelegate(this.OnEndGetLogManagerList);
            }
            if ((this.onGetLogManagerListCompletedDelegate == null)) {
                this.onGetLogManagerListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLogManagerListCompleted);
            }
            base.InvokeAsync(this.onBeginGetLogManagerListDelegate, new object[] {
                        page}, this.onEndGetLogManagerListDelegate, this.onGetLogManagerListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Gsafety.PTMS.ServiceReference.LogService.ILogManager.BeginGetLogManagerListByCondition(Gsafety.PTMS.ServiceReference.LogService.PagingInfo page, string logName, System.Nullable<System.DateTime> beginTime, System.Nullable<System.DateTime> endTime, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLogManagerListByCondition(page, logName, beginTime, endTime, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Gsafety.PTMS.ServiceReference.LogService.MultiMessageOfLogManageri7Zg_POJ5 Gsafety.PTMS.ServiceReference.LogService.ILogManager.EndGetLogManagerListByCondition(System.IAsyncResult result) {
            return base.Channel.EndGetLogManagerListByCondition(result);
        }
        
        private System.IAsyncResult OnBeginGetLogManagerListByCondition(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Gsafety.PTMS.ServiceReference.LogService.PagingInfo page = ((Gsafety.PTMS.ServiceReference.LogService.PagingInfo)(inValues[0]));
            string logName = ((string)(inValues[1]));
            System.Nullable<System.DateTime> beginTime = ((System.Nullable<System.DateTime>)(inValues[2]));
            System.Nullable<System.DateTime> endTime = ((System.Nullable<System.DateTime>)(inValues[3]));
            return ((Gsafety.PTMS.ServiceReference.LogService.ILogManager)(this)).BeginGetLogManagerListByCondition(page, logName, beginTime, endTime, callback, asyncState);
        }
        
        private object[] OnEndGetLogManagerListByCondition(System.IAsyncResult result) {
            Gsafety.PTMS.ServiceReference.LogService.MultiMessageOfLogManageri7Zg_POJ5 retVal = ((Gsafety.PTMS.ServiceReference.LogService.ILogManager)(this)).EndGetLogManagerListByCondition(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLogManagerListByConditionCompleted(object state) {
            if ((this.GetLogManagerListByConditionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLogManagerListByConditionCompleted(this, new GetLogManagerListByConditionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLogManagerListByConditionAsync(Gsafety.PTMS.ServiceReference.LogService.PagingInfo page, string logName, System.Nullable<System.DateTime> beginTime, System.Nullable<System.DateTime> endTime) {
            this.GetLogManagerListByConditionAsync(page, logName, beginTime, endTime, null);
        }
        
        public void GetLogManagerListByConditionAsync(Gsafety.PTMS.ServiceReference.LogService.PagingInfo page, string logName, System.Nullable<System.DateTime> beginTime, System.Nullable<System.DateTime> endTime, object userState) {
            if ((this.onBeginGetLogManagerListByConditionDelegate == null)) {
                this.onBeginGetLogManagerListByConditionDelegate = new BeginOperationDelegate(this.OnBeginGetLogManagerListByCondition);
            }
            if ((this.onEndGetLogManagerListByConditionDelegate == null)) {
                this.onEndGetLogManagerListByConditionDelegate = new EndOperationDelegate(this.OnEndGetLogManagerListByCondition);
            }
            if ((this.onGetLogManagerListByConditionCompletedDelegate == null)) {
                this.onGetLogManagerListByConditionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLogManagerListByConditionCompleted);
            }
            base.InvokeAsync(this.onBeginGetLogManagerListByConditionDelegate, new object[] {
                        page,
                        logName,
                        beginTime,
                        endTime}, this.onEndGetLogManagerListByConditionDelegate, this.onGetLogManagerListByConditionCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Gsafety.PTMS.ServiceReference.LogService.ILogManager CreateChannel() {
            return new LogManagerClientChannel(this);
        }
        
        private class LogManagerClientChannel : ChannelBase<Gsafety.PTMS.ServiceReference.LogService.ILogManager>, Gsafety.PTMS.ServiceReference.LogService.ILogManager {
            
            public LogManagerClientChannel(System.ServiceModel.ClientBase<Gsafety.PTMS.ServiceReference.LogService.ILogManager> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetLogManagerList(Gsafety.PTMS.ServiceReference.LogService.PagingInfo page, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = page;
                System.IAsyncResult _result = base.BeginInvoke("GetLogManagerList", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.LogService.MultiMessageOfLogManageri7Zg_POJ5 EndGetLogManagerList(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.LogService.MultiMessageOfLogManageri7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.LogService.MultiMessageOfLogManageri7Zg_POJ5)(base.EndInvoke("GetLogManagerList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLogManagerListByCondition(Gsafety.PTMS.ServiceReference.LogService.PagingInfo page, string logName, System.Nullable<System.DateTime> beginTime, System.Nullable<System.DateTime> endTime, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = page;
                _args[1] = logName;
                _args[2] = beginTime;
                _args[3] = endTime;
                System.IAsyncResult _result = base.BeginInvoke("GetLogManagerListByCondition", _args, callback, asyncState);
                return _result;
            }
            
            public Gsafety.PTMS.ServiceReference.LogService.MultiMessageOfLogManageri7Zg_POJ5 EndGetLogManagerListByCondition(System.IAsyncResult result) {
                object[] _args = new object[0];
                Gsafety.PTMS.ServiceReference.LogService.MultiMessageOfLogManageri7Zg_POJ5 _result = ((Gsafety.PTMS.ServiceReference.LogService.MultiMessageOfLogManageri7Zg_POJ5)(base.EndInvoke("GetLogManagerListByCondition", _args, result)));
                return _result;
            }
        }
    }
}
